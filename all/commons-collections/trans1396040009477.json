[{"failures":[],"variableMapping":{"this":"this","key":"key"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().nextKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:78","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"object":"object"},"name":"add","transplant":{"sourceCode":"if (this == java.lang.Object) {\n    return true;\n} ","position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().remove(java.lang.Object, int)","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:77","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator()","position":"org.apache.commons.collections4.list.AbstractListDecorator:91","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(0))","position":"org.apache.commons.collections4.list.FixedSizeList:118","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"set":"sub"},"name":"replace","transplant":{"sourceCode":"return java.util.SortedSet<E>","position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:57","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:105","type":"CtReturnImpl"},"status":0},{"failures":[],"name":"inlineConstant","inlineConstant":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:86","type":"CtInvocationImpl"},"status":-2},{"failures":[0],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Enumeration<? extends E>.hasMoreElements()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:82","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1172","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:182","type":"CtLocalVariableImpl"},"status":-2},{"failures":[1,2,3,4],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:124","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().remove(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:169","type":"CtSynchronizedImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.bag.TreeBag:117","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>","position":"org.apache.commons.collections4.list.NodeCachingLinkedList:220","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().indexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.FixedSizeList:103","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:125","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1044","type":"CtInvocationImpl"},"status":-2},{"failures":[5,6,7,8,9,10,11],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.list.LazyList:123","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E)","position":"org.apache.commons.collections4.collection.TransformedCollection:125","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.util.EmptyStackException()","position":"org.apache.commons.collections4.ArrayStack:108","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.list.LazyList:123","type":"CtReturnImpl"},"status":-2},{"failures":[12,13,14,15,16,17,18,19],"binaryOperator":"int < int","name":"conditionalBoundary","position":"org.apache.commons.collections4.iterators.ArrayIterator:99","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()","position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.set(E)","position":"org.apache.commons.collections4.iterators.LoopingListIterator:231","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.Flat3Map.KeySet<K>(this)","position":"org.apache.commons.collections4.map.Flat3Map:952","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>.entrySet()","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:102","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Object java.lang.Object = null","position":"org.apache.commons.collections4.ListUtils:254","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.list.LazyList:132","type":"CtReturnImpl"},"status":0},{"failures":[20,21,22,23,24,25],"variableMapping":{"iterator":"iterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Collection<? extends E>.iterator()","position":"org.apache.commons.collections4.iterators.LoopingIterator:113","type":"CtAssignmentImpl"},"status":-1},{"failures":[26,27,28],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) == false) {\n    throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"));\n} ","position":"org.apache.commons.collections4.collection.PredicatedCollection:100","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterIterator:178","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.DefaultedMap<K, V>.this(org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(V))","position":"org.apache.commons.collections4.map.DefaultedMap:145","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:162","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"flag":"previousObjectSet","removed":"previousObjectSet"},"name":"add","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:244","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet(this)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2221","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().headMap(K)","position":"org.apache.commons.collections4.map.TransformedSortedMap:150","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * This is a entry set view of the {@link Trie} as returned by {@link Map#entrySet()}.\n */\nprivate class EntrySet extends java.util.AbstractSet<java.util.Map.Entry<K, V>> {\n    @java.lang.Override\n    public java.util.Iterator<java.util.Map.Entry<K, V>> iterator() {\n        return new EntryIterator();\n    }\n\n    @java.lang.Override\n    public boolean contains(final java.lang.Object o) {\n        if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n            return false;\n        } \n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getEntry(((java.util.Map.Entry<?, ?>)(java.lang.Object)).getKey());\n        return (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.equals(java.lang.Object));\n    }\n\n    @java.lang.Override\n    public boolean remove(final java.lang.Object obj) {\n        if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n            return false;\n        } \n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n            return false;\n        } \n        final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(java.lang.Object));\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.util.Map.Entry<?, ?>.getKey());\n        return true;\n    }\n\n    @java.lang.Override\n    public int size() {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size();\n    }\n\n    @java.lang.Override\n    public void clear() {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear();\n    }\n\n    /** \n     * An {@link Iterator} that returns {@link Entry} Objects.\n     */\nprivate class EntryIterator extends org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.TrieIterator<java.util.Map.Entry<K, V>> {\n        public java.util.Map.Entry<K, V> next() {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.TrieIterator<java.util.Map.Entry<K, V>>.nextEntry();\n        }\n    }\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1397","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.FilterListIterator:137","type":"CtReturnImpl"},"status":-2},{"failures":[29,30,31,32,33,34],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")","position":"org.apache.commons.collections4.functors.PredicateTransformer:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final V V = java.util.Map<K, V>.get(K)","position":"org.apache.commons.collections4.MapUtils:366","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.FilterListIterator:137","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.bitsPerElement()","position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:102","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasNext()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:62","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    org.apache.commons.collections4.MultiMap<K, V>.put(org.apache.commons.collections4.Transformer<E, K>.transform(E), org.apache.commons.collections4.Transformer<E, V>.transform(E));\n}","position":"org.apache.commons.collections4.MapUtils:1741","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:128","type":"CtReturnImpl"},"status":-2},{"failures":[35,36,37,38,39,40,41,42],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\")","position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:47","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:141","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"object":"key"},"name":"add","transplant":{"sourceCode":"if (null == java.lang.Object) {\n    return false;\n} ","position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().containsKey(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:64","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"predicate1":"predicate","predicate2":"predicate"},"name":"replace","transplant":{"sourceCode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} ","position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.BidiMapIterator<K, V>(this)","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:218","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(java.util.Map<K, V>.entrySet())","position":"org.apache.commons.collections4.map.AbstractIterableMap:34","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()","position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:124","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"hasNext":"hasNext"},"name":"add","transplant":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:210","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (boolean) == false","position":"org.apache.commons.collections4.map.SingletonMap:427","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Iterator<? extends E>.hasNext()","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:113","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AndPredicate.org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:258","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.CollatingIterator:258","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.FixedSizeList:148","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Iterator<? extends E>.hasNext()","position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:72","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().toString()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:140","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.iterators.PushbackIterator.org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.IteratorUtils:841","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.GrowthList:186","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>))","position":"org.apache.commons.collections4.map.AbstractLinkedMap:263","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.getValue()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:64","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.map.LinkedMap:254","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap()","position":"org.apache.commons.collections4.map.LazySortedMap:131","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E), null)","position":"org.apache.commons.collections4.list.TreeList:521","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:205","type":"CtReturnImpl"},"status":-2},{"failures":[43,44],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"add() is not supported by this iterator\")","position":"org.apache.commons.collections4.iterators.SingletonListIterator:147","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:141","type":"CtThrowImpl"},"status":-1},{"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.getKey()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:60","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return V","position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:93","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().iterator()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:153","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.List<java.util.Collection<E>>.isEmpty()) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} ","position":"org.apache.commons.collections4.collection.CompositeCollection:152","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractHashedMap.HashIterator<java.lang.Object, V>.nextEntry().getValue()","position":"org.apache.commons.collections4.map.AbstractHashedMap:1051","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * Internal sorted map view.\n */\nprotected static class ViewMap<K, V> extends org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V> {\n    /** \n     * Constructor.\n     * @param bidi  the parent bidi map\n     * @param sm  the subMap sorted map\n     */\nprotected ViewMap(final org.apache.commons.collections4.bidimap.DualTreeBidiMap<K, V> bidi ,final java.util.SortedMap<K, V> sm) {\n        org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.super(new org.apache.commons.collections4.bidimap.DualTreeBidiMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.bidimap.DualTreeBidiMap<K, V>.java.util.Map<V, K> , org.apache.commons.collections4.bidimap.DualTreeBidiMap<K, V>.org.apache.commons.collections4.BidiMap<V, K>));\n    }\n\n    @java.lang.Override\n    public boolean containsValue(final java.lang.Object value) {\n        return org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>.decorated().java.util.Map<K, V>.containsValue(java.lang.Object);\n    }\n\n    @java.lang.Override\n    public void clear() {\n        for (final java.util.Iterator<K> java.util.Iterator<K> = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.keySet().iterator() ; java.util.Iterator<K>.hasNext() ; ) {\n            java.util.Iterator<K>.next();\n            java.util.Iterator<K>.remove();\n        }\n    }\n\n    @java.lang.Override\n    public java.util.SortedMap<K, V> headMap(final K toKey) {\n        return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>.decorated() , org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.headMap(K));\n    }\n\n    @java.lang.Override\n    public java.util.SortedMap<K, V> tailMap(final K fromKey) {\n        return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>.decorated() , org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.tailMap(K));\n    }\n\n    @java.lang.Override\n    public java.util.SortedMap<K, V> subMap(final K fromKey, final K toKey) {\n        return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>.decorated() , org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.subMap(K, K));\n    }\n\n    @java.lang.Override\n    protected org.apache.commons.collections4.bidimap.DualTreeBidiMap<K, V> decorated() {\n        return ((org.apache.commons.collections4.bidimap.DualTreeBidiMap<K, V>)(org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated()));\n    }\n\n    @java.lang.Override\n    public K previousKey(final K key) {\n        return org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>.decorated().previousKey(K);\n    }\n\n    @java.lang.Override\n    public K nextKey(final K key) {\n        return org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>.decorated().nextKey(K);\n    }\n}","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:226","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:73","type":"CtThrowImpl"},"status":-2},{"failures":[250,251,252,253,254],"variableMapping":{"prototype":"constantToReturn"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T })","position":"org.apache.commons.collections4.functors.PrototypeFactory:69","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:84","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()","position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} ","position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"normalMap":"map"},"name":"add","transplant":{"sourceCode":"this.java.util.Map<K, V> = new java.util.LinkedHashMap<K, V>()","position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:95","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.map.DefaultedMap:194","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:55","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().setValue(V)","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:70","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.map.SingletonMap<K, V>.isEqualKey(java.lang.Object)) {\n    return V;\n} ","position":"org.apache.commons.collections4.map.SingletonMap:190","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.util.Iterator<T> != null) && (C != null)) {\n    while (java.util.Iterator<T>.hasNext()) {\n        C.execute(java.util.Iterator<T>.next());\n    }\n} ","position":"org.apache.commons.collections4.CollectionUtils:685","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:229","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (this.int) < (this.int)","position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:111","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.collection.CompositeCollection<E>.(contains(java.lang.Object)) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.collection.CompositeCollection:256","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:96","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new java.lang.StringBuilder().append(\"AVLNode(\").append(int).append(',')","position":"org.apache.commons.collections4.list.TreeList:969","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.Iterator<? extends E> = ((java.util.Iterator<? extends E>)(E))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:109","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"++(int)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2134","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.Class<?>[] == null) || ((java.lang.Class<?>[].int) == 0)) {\n    return new org.apache.commons.collections4.functors.InstantiateTransformer<T>();\n} ","position":"org.apache.commons.collections4.functors.InstantiateTransformer:73","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.FilterIterator:175","type":"CtLocalVariableImpl"},"status":-2},{"failures":[255,256,257],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:67","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.PeekingIterator:142","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:93","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , int)","position":"org.apache.commons.collections4.list.AbstractLinkedList:127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>>.remove()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:99","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size()","position":"org.apache.commons.collections4.map.Flat3Map:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null));\n} ","position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.NotNullPredicate.org.apache.commons.collections4.Predicate","position":"org.apache.commons.collections4.functors.NotNullPredicate:68","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:149","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"lastKey":"key"},"name":"add","transplant":{"sourceCode":"return K","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:461","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"o1":"object","o2":"object"},"name":"add","transplant":{"sourceCode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().equals(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:130","type":"CtReturnImpl"},"status":0},{"failures":[],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterIterator:182","type":"mutation","return":"return false","status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw java.lang.RuntimeException","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:62","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException((\"Cannot instantiate class: \" + (java.lang.Class<T>)) , java.lang.Exception)","position":"org.apache.commons.collections4.map.MultiValueMap:554","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Factory must not be null\")","position":"org.apache.commons.collections4.map.DefaultedMap:106","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E);\n} catch (final java.lang.RuntimeException java.lang.RuntimeException) {\n    throw java.lang.RuntimeException;\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable);\n}","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:59","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\")","position":"org.apache.commons.collections4.map.CompositeMap:138","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:129","type":"CtThrowImpl"},"status":-2},{"failures":[258,259,260,261,262,263],"variableMapping":{"hit":"callCounter"},"name":"add","transplant":{"sourceCode":"if ((this.int) != 1) {\n    throw new java.lang.IllegalStateException();\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl"},"status":-1},{"failures":[],"variableMapping":{"valuePredicate":"predicate"},"name":"add","transplant":{"sourceCode":"return (this.org.apache.commons.collections4.Predicate<? super E>) != null","position":"org.apache.commons.collections4.map.PredicatedMap:174","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl"},"status":-2},{"failures":[264,265],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:101","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.TransformerPredicate.org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean>)","position":"org.apache.commons.collections4.PredicateUtils:470","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.TransformedPredicate.org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(org.apache.commons.collections4.Transformer<? super T, ? extends T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:537","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E> == null) {\n    return 0;\n} ","position":"org.apache.commons.collections4.list.TreeList:700","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null))","position":"org.apache.commons.collections4.list.GrowthList:154","type":"CtInvocationImpl"},"status":-2},{"failures":[258,259,266,260,261,262,267,263],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int < 0) || (int > (java.util.List<K>.size()))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Size: \") + (java.util.List<K>.size())));\n} ","position":"org.apache.commons.collections4.map.ListOrderedMap:246","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:86","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.set.TransformedSortedSet<E>.decorated()","position":"org.apache.commons.collections4.set.TransformedSortedSet:85","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"The list must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:376","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.iterators.TransformIterator<I, O>.transform(java.util.Iterator<? extends I>.next())","position":"org.apache.commons.collections4.iterators.TransformIterator:86","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int[][int]) > int) {\n    int = int[][int];\n    int = int;\n} ","position":"org.apache.commons.collections4.iterators.PermutationIterator:118","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:119","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"nextObject":"item"},"name":"replace","transplant":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.ArrayStack<E>.push(E)","position":"org.apache.commons.collections4.iterators.PushbackIterator:88","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:79","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.UnmodifiableCollection.org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection<? extends C>)","position":"org.apache.commons.collections4.CollectionUtils:1732","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = null","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1882","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previousIndex()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:174","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"constantToReturn":"prototype"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.ConstantFactory<T>(T)","position":"org.apache.commons.collections4.functors.ConstantFactory:57","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.PrototypeFactory.org.apache.commons.collections4.functors.PrototypeFactory.<T>prototypeFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:106","type":"CtReturnImpl"},"status":-2},{"failures":[268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().lastKey()","position":"org.apache.commons.collections4.bag.TreeBag:100","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:93","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Factory<? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:77","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.apache.commons.collections4.functors.PrototypeFactory:73","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.bag.TreeBag:117","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.getLastNodeReturned());\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.getLastNodeReturned());\n    (int)--;\n}","position":"org.apache.commons.collections4.list.AbstractLinkedList:862","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:137","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.BoundedCollection<E>","position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:62","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:225","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":98,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":99,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":125,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":143,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":124,"org.apache.commons.collections4.FactoryUtilsTest.testConstantFactoryConstant":251,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":211,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":117,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":139,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":181,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":298,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":173,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":188,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":233,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":88,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":2,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":120,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":309,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":194,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":203,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testLastKey":265,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":86,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":195,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":196,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":263,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":220,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":219,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":218,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":277,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":280,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":123,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":234,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testFullIterator":257,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":239,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":241,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":240,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":258,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":100,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":130,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":1,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":101,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":174,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":131,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":0,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":6,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":109,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":160,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":97,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":212,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":140,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":155,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":278,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":110,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":246,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":268,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testReverse":255,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":148,"org.apache.commons.collections4.map.LazySortedMapTest.initializationError":254,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":89,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":293,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":94,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":186,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":163,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":128,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":207,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":291,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":112,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":217,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":216,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":215,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":146,"org.apache.commons.collections4.map.LazyMapTest.initializationError":253,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":49,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":122,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":209,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":222,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":103,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":52,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":50,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":158,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":229,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":40,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":201,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":228,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":13,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":3,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":41,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":243,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":111,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":136,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":273,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":213,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":15,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":64,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":10,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":30,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":65,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":236,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":180,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":200,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":132,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":226,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":292,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":275,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":77,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":76,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":274,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":75,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":178,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":190,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":53,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":266,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":202,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":294,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize":24,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":271,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":149,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":262,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":267,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":282,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":4,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":45,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":134,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":51,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":31,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping0":43,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":252,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":46,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":42,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":167,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":208,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":32,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":288,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":66,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":152,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":151,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":177,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":8,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":62,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":281,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":27,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":305,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":197,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":171,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":172,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":260,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testReset":23,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":283,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":71,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":145,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":79,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":90,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":91,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":157,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":279,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":12,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":39,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":93,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":247,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":182,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":244,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":199,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":206,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":300,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":38,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":187,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":224,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":72,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":73,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":74,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":28,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":144,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":301,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":183,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":121,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":14,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":69,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":37,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testWalkForwardAndBack":256,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetIteratorRemoveChangesMap":63,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":303,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":118,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":96,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":106,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":81,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":87,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":129,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":286,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":67,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":191,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":232,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":231,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":230,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":245,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":192,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":302,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":83,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":235,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":137,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":287,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":84,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":127,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":26,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":126,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":147,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":29,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":162,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":214,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":269,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":47,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":290,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":25,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":104,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":166,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":61,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":153,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":154,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":272,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":48,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":198,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":242,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":295,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":264,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":289,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":205,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":270,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":70,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":138,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":55,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":57,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":304,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":56,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":169,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":170,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":307,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":113,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":185,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":189,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":221,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":135,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":142,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":165,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":105,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":35,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":36,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":92,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":276,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":164,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":107,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":115,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":102,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":116,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":114,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":238,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":306,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":60,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":58,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":59,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":54,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":248,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":150,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":156,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":249,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":16,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":7,"org.apache.commons.collections4.FactoryUtilsTest.testConstantFactoryNull":250,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":33,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":161,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":80,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":285,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":223,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":179,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":184,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":82,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards":44,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":9,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":108,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":133,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":237,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":227,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":296,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":259,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":85,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":299,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":297,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1":20,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2":21,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3":22,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":168,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":159,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":261,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary":34,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":225,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":5,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":68,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":119,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":204,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":284,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":19,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":141,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":18,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":308,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":17,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":175}}]
