[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<I>.hasNext()","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:58","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (java.lang.Object == null ? 0 : java.lang.Object.hashCode()) ^ (java.lang.Object == null ? 0 : java.lang.Object.hashCode())","position":"org.apache.commons.collections4.map.Flat3Map:878","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:266","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int))","name":"removeConditional","position":"org.apache.commons.collections4.map.LRUMap:312","type":"mutation","status":0},{"failures":[227],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:253","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.list.CursorableLinkedList:514","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:110","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-2575833140344736876L","position":"org.apache.commons.collections4.bag.PredicatedBag:44","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.DefaultedMap<K, V>(java.util.Map<K, V> , org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(V))","position":"org.apache.commons.collections4.map.DefaultedMap:87","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Number == null) {\n    return null;\n} ","position":"org.apache.commons.collections4.MapUtils:299","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"))","position":"org.apache.commons.collections4.bag.TreeBag:87","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap()","position":"org.apache.commons.collections4.map.Flat3Map:345","type":"CtInvocationImpl"},"status":-2},{"failures":[228],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 0","position":"org.apache.commons.collections4.comparators.ComparatorChain:292","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().indexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.FixedSizeList:103","type":"CtReturnImpl"},"status":-1},{"failures":[229],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} ","position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:192","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"key"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"transformer must not be null\")","position":"org.apache.commons.collections4.map.DefaultedMap:167","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:138","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","object":"object"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().indexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.AbstractListDecorator:83","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().lastIndexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.FixedSizeList:113","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\")","name":"math","position":"org.apache.commons.collections4.list.AbstractLinkedList:539","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.bag.TreeBag:126","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.util.Iterator<? extends E> = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:182","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.Object == this) || (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().equals(java.lang.Object))","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:149","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()","position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K)","name":"math","position":"org.apache.commons.collections4.map.LRUMap:259","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.lowerEntry(K)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1908","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:111","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().comparator()","position":"org.apache.commons.collections4.map.LazySortedMap:139","type":"CtReturnImpl"},"status":-2},{"failures":[230,231,232,233,234,235,236,237,238,239],"variableMapping":{"added":"previousObjectSet","changed":"previousObjectSet"},"name":"replace","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterListIterator:267","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.util.SortedMap<K, V>","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:110","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.map.ListOrderedMap:729","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:69","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.map.MultiKeyMap:414","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().last()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.Set<java.util.Map.Entry<K, V>> java.util.Set<java.util.Map.Entry<K, V>> = java.util.Collections.java.util.Collections.emptySet()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2283","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:87","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:94","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:64","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().putAll(org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformMap(java.util.Map<? extends J, ? extends U>))","position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:211","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:110","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"tmpMap":"map"},"name":"add","transplant":{"sourceCode":"return java.util.SortedMap<K, V>","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:149","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:72","type":"CtReturnImpl"},"status":-2},{"failures":[240],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"keyTransformer cannot be null\")","position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:114","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:93","type":"CtThrowImpl"},"status":-1},{"failures":[241,242],"variableMapping":{"coll2":"coll","coll1":"coll"},"name":"add","transplant":{"sourceCode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}","position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:131","type":"CtReturnImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.FilterIterator:175","type":"CtLocalVariableImpl"},"status":-2},{"failures":[243,244,245,246,247,248,249,250,251,252,253,254,255],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:87","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"replace","transplant":{"sourceCode":"if ((this.java.util.Iterator<? extends I>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = this.java.util.Iterator<? extends I>;\n    return java.util.ListIterator<?>.hasPrevious();\n} ","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<? extends I>.hasNext()","position":"org.apache.commons.collections4.iterators.TransformIterator:74","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int) == (int)) {\n    --int;\n} ","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null));\n} ","position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"lastUsedIterator":"iterator"},"name":"replace","transplant":{"sourceCode":"java.util.Iterator<? extends E> = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:184","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Object[][int++] = E","position":"org.apache.commons.collections4.set.CompositeSet:192","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.FilterListIterator:137","type":"CtReturnImpl"},"status":-2},{"failures":[243,244,245,246,247,248,249,251,252,256,253,255],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (boolean) || org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())","position":"org.apache.commons.collections4.iterators.FilterIterator:86","type":"CtReturnImpl"},"status":-1},{"failures":[229],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.forAllButLastDo(java.lang.Iterable<T>.iterator(), C)","position":"org.apache.commons.collections4.CollectionUtils:707","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:182","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * Base Iterator\n */\nprotected abstract static class HashIterator<K, V> {\n    /** \n     * The parent map\n     */\nprivate final org.apache.commons.collections4.map.AbstractHashedMap<K, V> parent;\n\n    /** \n     * The current index into the array of buckets\n     */\nprivate int hashIndex;\n\n    /** \n     * The last returned entry\n     */\nprivate org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> last;\n\n    /** \n     * The next entry\n     */\nprivate org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next;\n\n    /** \n     * The modification count expected\n     */\nprivate int expectedModCount;\n\n    protected HashIterator(final org.apache.commons.collections4.map.AbstractHashedMap<K, V> parent) {\n        java.lang.Object.super();\n        this.org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>;\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n        int int = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n        while ((int > 0) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null)) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][--int];\n        }\n        this.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        this.int = int;\n        this.int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int;\n    }\n\n    public boolean hasNext() {\n        return (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) != null;\n    }\n\n    protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> nextEntry() {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int) != (int)) {\n            throw new java.util.ConcurrentModificationException();\n        } \n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n            throw new java.util.NoSuchElementException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n        } \n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n        int int = int;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) && (int > 0)) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][--int];\n        }\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        int = int;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n\n    protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> currentEntry() {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n\n    public void remove() {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) == null) {\n            throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n        } \n        if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int) != (int)) {\n            throw new java.util.ConcurrentModificationException();\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getKey());\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n        int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int;\n    }\n\n    @java.lang.Override\n    public java.lang.String toString() {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) != null) {\n            return (((\"Iterator[\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getKey())) + \"=\") + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) + \"]\";\n        } \n        return \"Iterator[]\";\n    }\n}","position":"org.apache.commons.collections4.map.AbstractHashedMap:1131","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.map.DefaultedMap:194","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>)","position":"org.apache.commons.collections4.set.CompositeSet:345","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:198","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"sub":"map"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:149","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.list.TransformedList<E>.listIterator(0)","position":"org.apache.commons.collections4.list.TransformedList:148","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated()","position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl"},"status":-2},{"failures":[257,258,259,260,261,262,263,264,265,266,267,268,269],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\")","position":"org.apache.commons.collections4.map.SingletonMap:276","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"No more elements in the iteration\")","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:222","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new org.apache.commons.collections4.functors.ConstantTransformer<java.lang.Object, java.lang.Object>(null)","position":"org.apache.commons.collections4.functors.ConstantTransformer:40","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.GrowthList<E>(java.util.List<E>)","position":"org.apache.commons.collections4.list.GrowthList:70","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()","position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:65","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.LazySortedMap:135","type":"CtReturnImpl"},"status":-2},{"failures":[270],"variableMapping":{"currentIndex":"index"},"name":"add","transplant":{"sourceCode":"if (int == 0) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null));\n} ","position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"nodeList must not be null!\")","position":"org.apache.commons.collections4.iterators.NodeListIterator:63","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:41","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>","position":"org.apache.commons.collections4.map.TransformedSortedMap:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()","position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previousIndex()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:174","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"object":"object"},"name":"add","transplant":{"sourceCode":"return ((java.util.Collection<?>)(java.lang.Object)).isEmpty()","position":"org.apache.commons.collections4.CollectionUtils:1386","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl"},"status":-2},{"failures":[271],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.LoopingListIterator:215","type":"CtInvocationImpl"},"status":-1},{"failures":[177],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:87","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:69","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException((\"toIndex = \" + int))","position":"org.apache.commons.collections4.list.AbstractLinkedList:953","type":"CtThrowImpl"},"status":0},{"failures":[177],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.util.ListIterator<E>.set(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:97","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.collections4.list.TreeList:715","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl"},"status":-2},{"failures":[272,273],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null))","position":"org.apache.commons.collections4.list.GrowthList:184","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.list.CursorableLinkedList:523","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.collections4.sequence.EditCommand:69","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:162","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K)","name":"math","position":"org.apache.commons.collections4.map.LRUMap:271","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return (boolean) || org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())","position":"org.apache.commons.collections4.iterators.FilterListIterator:125","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl"},"status":-2},{"failures":[274,275],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Collection<C>.clear()","position":"org.apache.commons.collections4.CollectionUtils:806","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.LoopingIterator:106","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"return this.java.util.ListIterator<E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:77","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasNext()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:62","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"node must not be null!\")","position":"org.apache.commons.collections4.iterators.NodeListIterator:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:143","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    java.lang.Object[][int] = new org.apache.commons.collections4.map.UnmodifiableEntrySet.UnmodifiableEntry(((java.util.Map.Entry<K, V>)(java.lang.Object[][int])));\n}","position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:129","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:92","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n} ","position":"org.apache.commons.collections4.map.Flat3Map:655","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"remove() method is not supported\")","position":"org.apache.commons.collections4.iterators.ArrayIterator:159","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>","position":"org.apache.commons.collections4.map.AbstractHashedMap:647","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:239","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E>.(heightRightMinusLeft()) > 0) {\n    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.min();\n    E = org.apache.commons.collections4.list.TreeList.AVLNode<E>.E;\n    if (boolean) {\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n    } \n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeMin();\n    if ((int) < 0) {\n        (int)++;\n    } \n} else {\n    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.max();\n    E = org.apache.commons.collections4.list.TreeList.AVLNode<E>.E;\n    if (boolean) {\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n    } \n    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeMax();\n    if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n        boolean = true;\n    } \n    if ((int) > 0) {\n        (int)--;\n    } \n}","position":"org.apache.commons.collections4.list.TreeList:637","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:143","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"~(int << 11)","position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)++","position":"org.apache.commons.collections4.iterators.FilterListIterator:134","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 0","position":"org.apache.commons.collections4.comparators.ComparatorChain:292","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:154","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return T[]","position":"org.apache.commons.collections4.bag.AbstractMapBag:479","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:132","type":"CtReturnImpl"},"status":-2},{"failures":[230,231,232,233,234,235,227,276,236,237,238,239],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"if (!(org.apache.commons.collections4.iterators.FilterListIterator<E>.setPreviousObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:146","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = (java.util.ArrayList<E>.(size()) - int) - 1","position":"org.apache.commons.collections4.ArrayStack:106","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>","position":"org.apache.commons.collections4.map.AbstractMapDecorator:73","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Object.toString()","position":"org.apache.commons.collections4.MapUtils:129","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList<E>(java.util.List<E>)","position":"org.apache.commons.collections4.list.FixedSizeList:56","type":"CtReturnImpl"},"status":-2},{"failures":[229],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"mutation","status":-1},{"failures":[277],"name":"returnValue","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"mutation","return":"return 0","status":-1},{"failures":[],"binaryOperator":"(((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V)","name":"math","position":"org.apache.commons.collections4.map.LRUMap:259","type":"mutation","status":-2},{"failures":[278,279,280,281,282,283],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int))","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:84","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"object":"lock"},"name":"replace","transplant":{"sourceCode":"if (this == java.lang.Object) {\n    return true;\n} ","position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:124","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()","position":"org.apache.commons.collections4.functors.ChainedClosure:50","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\")","name":"math","position":"org.apache.commons.collections4.map.LRUMap:271","type":"mutation","status":-2},{"failures":[257,258,259,284,261,262,285,264,286,267,268,269,287],"variableMapping":{"this":"this","currentIterator":"currentIterator"},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(this.java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:198","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:154","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.ListOrderedMap<K, V>.remove(java.lang.Object)","position":"org.apache.commons.collections4.map.ListOrderedMap:633","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (boolean) || org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())","position":"org.apache.commons.collections4.iterators.FilterIterator:86","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 1","position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) - 1","position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.list.UnmodifiableList.org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(java.util.List<E>)","position":"org.apache.commons.collections4.set.ListOrderedSet:177","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:76","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.set.CompositeSet:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap()","position":"org.apache.commons.collections4.map.TransformedSortedMap:133","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:159","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")","position":"org.apache.commons.collections4.functors.WhileClosure:59","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getValue().hashCode()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:88","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toString()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:159","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:60","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":97,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":211,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":216,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":227,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":43,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":104,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":87,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":85,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":111,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":16,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":229,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":70,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectHashCodeEqualsContract":226,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":90,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":113,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":128,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":180,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":273,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":272,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":190,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":268,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":179,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":67,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":185,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":283,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":260,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":243,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":127,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":166,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":38,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":251,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":278,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":74,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":17,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":102,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":204,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":230,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.initializationError":20,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":141,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":75,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":118,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":218,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":235,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":171,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":3,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":160,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":151,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":247,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":36,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":55,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":162,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":161,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":35,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":138,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":130,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":50,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":71,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":146,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":5,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":7,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":72,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":213,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":164,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":47,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":232,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":221,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":94,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":153,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":105,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":143,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":125,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":27,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":182,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":96,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":98,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":264,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":25,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":58,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":124,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":189,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":286,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":32,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":186,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":270,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":163,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":81,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":150,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":237,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":140,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":219,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":248,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":123,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":209,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":255,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":77,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":231,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":167,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":23,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":137,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":172,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":188,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":287,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":147,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":196,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":109,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":245,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":142,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":175,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize":274,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":136,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":51,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":132,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":282,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":79,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":39,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":234,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":267,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":12,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":206,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":114,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":19,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testEmptyIterator":256,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":26,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":210,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":280,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":177,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":76,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":121,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":233,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":46,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":59,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":107,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":29,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":269,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":37,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":145,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":285,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":242,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":33,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":68,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":101,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":14,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":106,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":131,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":112,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":261,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":176,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":40,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":21,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":135,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":254,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":9,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":53,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":91,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":45,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":277,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":28,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":215,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":170,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":236,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":117,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":202,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":246,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":240,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":284,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":168,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":174,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":214,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":86,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":183,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":201,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":88,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":95,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":149,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":157,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":61,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":69,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":73,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":199,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":129,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":192,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":115,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":133,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":134,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":34,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":64,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":83,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":212,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":205,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":65,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":252,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":103,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":49,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":271,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":6,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":276,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":217,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":11,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":154,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":275,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":263,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":249,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":62,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":184,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":223,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":31,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":99,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":244,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":119,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":48,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":220,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":224,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":84,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":82,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":195,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":165,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":1,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":42,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":80,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":10,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":155,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":257,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":258,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":194,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":259,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":203,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":44,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":144,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":8,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":250,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":198,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":158,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":152,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":100,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":15,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":178,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":222,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":200,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":239,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":52,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":56,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":4,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":60,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":208,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":238,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":187,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":30,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":63,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":193,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.initializationError":0,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":265,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":78,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":93,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":159,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":228,"org.apache.commons.collections4.map.TransformedSortedMapTest.initializationError":122,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":24,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":279,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":66,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":13,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":139,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":2,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":181,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":148,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":281,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":110,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":22,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":207,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":241,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":116,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":225,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":266,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":89,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":262,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":41,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":108,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":197,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":169,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":191,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":18,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":120}}]
