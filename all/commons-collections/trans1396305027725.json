[{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.set(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:145","type":"CtInvocationImpl"},"status":-2},{"failures":[0,1],"variableMapping":{"predicate":"predicate"},"name":"replace","transplant":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} ","position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (int) < (int)","position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.UniquePredicate.org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()","position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:86","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == this) {\n        return true;\n    } \n    return (java.lang.Object == this) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl"},"status":-2},{"failures":[2,3,4],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = (\"ConstantTransformer\".hashCode()) << 2","position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:182","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().getCount(java.lang.Object)","position":"org.apache.commons.collections4.bag.PredicatedBag:106","type":"CtReturnImpl"},"status":-2},{"failures":[5,6,7,8,9,10,11,12],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().first()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().last()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:85","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * EntrySet iterator.\n */\nprotected static class EntrySetIterator<K, V> extends org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator<K, V> implements org.apache.commons.collections4.OrderedIterator<java.util.Map.Entry<K, V>> , org.apache.commons.collections4.ResettableIterator<java.util.Map.Entry<K, V>> {\n    protected EntrySetIterator(final org.apache.commons.collections4.map.AbstractLinkedMap<K, V> parent) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator<K, V>.super(org.apache.commons.collections4.map.AbstractLinkedMap<K, V>);\n    }\n\n    public java.util.Map.Entry<K, V> next() {\n        return org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator<K, V>.nextEntry();\n    }\n\n    public java.util.Map.Entry<K, V> previous() {\n        return org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator<K, V>.previousEntry();\n    }\n}","position":"org.apache.commons.collections4.map.AbstractLinkedMap:407","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Inner class that provides the values iterator.\n */\nprivate class ValuesIterator implements java.util.Iterator<V> {\n    private final java.lang.Object key;\n\n    private final java.util.Collection<V> values;\n\n    private final java.util.Iterator<V> iterator;\n\n    public ValuesIterator(final java.lang.Object key) {\n        this.java.lang.Object = java.lang.Object;\n        this.java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.getCollection(java.lang.Object);\n        this.java.util.Iterator<V> = java.util.Collection<V>.iterator();\n    }\n\n    public void remove() {\n        java.util.Iterator<V>.remove();\n        if (java.util.Collection<V>.isEmpty()) {\n            org.apache.commons.collections4.map.MultiValueMap.this.remove(java.lang.Object);\n        } \n    }\n\n    public boolean hasNext() {\n        return java.util.Iterator<V>.hasNext();\n    }\n\n    public V next() {\n        return java.util.Iterator<V>.next();\n    }\n}","position":"org.apache.commons.collections4.map.MultiValueMap:509","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{"c":"coll"},"name":"replace","transplant":{"sourceCode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} ","position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:144","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Equator must not be null\")","position":"org.apache.commons.collections4.ListUtils:552","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:87","type":"CtThrowImpl"},"status":-2},{"failures":[13,14],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().element()","position":"org.apache.commons.collections4.queue.PredicatedQueue:111","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().poll()","position":"org.apache.commons.collections4.queue.PredicatedQueue:103","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1073","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:253","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:175","type":"CtSynchronizedImpl"},"status":-2},{"failures":[15],"binaryOperator":"(int <= 0)","name":"conditionalBoundary","position":"org.apache.commons.collections4.functors.ForClosure:52","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:266","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final E E = org.apache.commons.collections4.list.AbstractSerializableListDecorator<E>.remove(int)","position":"org.apache.commons.collections4.list.SetUniqueList:240","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:175","type":"CtSynchronizedImpl"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = java.util.Iterator<E>.hasNext()","position":"org.apache.commons.collections4.list.AbstractLinkedList:396","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().last()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:100","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().first()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtReturnImpl"},"status":-2},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:151","type":"CtLocalVariableImpl"},"status":-1},{"failures":[62,63],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:125","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.iterators.PeekingIterator:130","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:234","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","index":"index"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.AbstractListDecorator:103","type":"CtReturnImpl"},"status":-2},{"failures":[64,65,66,67],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Put must not be null\")","position":"org.apache.commons.collections4.SplitMapUtils:236","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"add() not supported for empty Iterator\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:61","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:72","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null;\n} else {\n    return null;\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:814","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((E) == null) {\n} else {\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n    } else {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n    E = null;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:141","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return boolean ? true : java.util.Iterator<? extends E>.hasNext()","position":"org.apache.commons.collections4.iterators.PeekingIterator:100","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:70","type":"CtInvocationImpl"},"status":-2},{"failures":[68,69],"variableMapping":{"key1":"value","key2":"value"},"name":"replace","transplant":{"sourceCode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object.equals(java.lang.Object))","position":"org.apache.commons.collections4.map.AbstractHashedMap:413","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().containsValue(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:68","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:110","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.set(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:145","type":"CtInvocationImpl"},"status":-2},{"failures":[70,71,72,73,74,75,76,77,78,79,80,81],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterIterator:179","type":"mutation","return":"return true","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-1","position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[]);\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: InstantiationException\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor must be public\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor threw an exception\" , java.lang.reflect.InvocationTargetException);\n}","position":"org.apache.commons.collections4.functors.InstantiateFactory:125","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"currentIterator"},"name":"add","transplant":{"sourceCode":"final E E = this.java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.FilterIterator:175","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E E = java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:188","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:125","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Set<T>.add(T)","position":"org.apache.commons.collections4.functors.UniquePredicate:67","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:261","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.LazySortedMap:135","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.LazySortedMap:131","type":"CtReturnImpl"},"status":-2},{"failures":[82,83,84],"binaryOperator":"(org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null","name":"removeConditional","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.SingletonListIterator:161","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super T>.execute(T)","position":"org.apache.commons.collections4.functors.ClosureTransformer:72","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:192","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}","position":"org.apache.commons.collections4.list.NodeCachingLinkedList:219","type":"CtForImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int))","name":"math","position":"org.apache.commons.collections4.map.LRUMap:312","type":"mutation","status":-2},{"failures":[85],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:138","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \")","position":"org.apache.commons.collections4.functors.InstantiateTransformer:118","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterIterator:182","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[int]","position":"org.apache.commons.collections4.ClosureUtils:361","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().addAll(java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:100","type":"CtReturnImpl"},"status":-2},{"failures":[0,1],"variableMapping":{"predicate":"predicate"},"name":"add","transplant":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} ","position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.Collection<O> java.util.Collection<O> = java.lang.Iterable<? extends O> instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(java.lang.Iterable<? extends O>)).size()) : new java.util.ArrayList<O>()","position":"org.apache.commons.collections4.CollectionUtils:900","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"V = null","position":"org.apache.commons.collections4.map.Flat3Map:504","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.list.LazyList:132","type":"CtReturnImpl"},"status":-2},{"failures":[86],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:162","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.set(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:97","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int >= (int)) {\n    int = 0;\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(int, E)","position":"org.apache.commons.collections4.list.GrowthList:126","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)) | boolean","name":"math","position":"org.apache.commons.collections4.list.GrowthList:157","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.map.StaticBucketMap:513","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:224","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((org.apache.commons.collections4.SortedBidiMap<K, V>)(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated()))","position":"org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator:59","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} ","position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl"},"status":-2},{"failures":[87],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The list of items must not be null\")","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:95","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:73","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{"this":"this","object":"lock"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:125","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:106","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>","position":"org.apache.commons.collections4.list.AbstractLinkedList:829","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:118","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bag.TransformedSortedBag<E>.getSortedBag()","position":"org.apache.commons.collections4.bag.TransformedSortedBag:117","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Map<K, V>.containsKey(java.lang.Object)) == false) {\n    return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)));\n} ","position":"org.apache.commons.collections4.map.DefaultedMap:202","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} ","position":"org.apache.commons.collections4.map.Flat3Map:152","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.iterators.ArrayIterator:148","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","index":"index"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.NullPointerException java.lang.NullPointerException","position":"org.apache.commons.collections4.map.LRUMap:323","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.collections4.sequence.EditCommand:69","type":"CtReturnImpl"},"status":0},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"mutation","return":"return true","status":-1},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:266","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(':')","position":"org.apache.commons.collections4.bag.AbstractMapBag:594","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"key1":"object","key2":"object"},"name":"add","transplant":{"sourceCode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object.equals(java.lang.Object))","position":"org.apache.commons.collections4.map.AbstractHashedMap:413","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"value2":"object","value1":"object"},"name":"add","transplant":{"sourceCode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object == null ? false : java.lang.Object.equals(java.lang.Object))","position":"org.apache.commons.collections4.list.AbstractLinkedList:416","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().remove(java.lang.Object, int)","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:77","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.StaticBucketMap.Values()","position":"org.apache.commons.collections4.map.StaticBucketMap:360","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.keyvalue.DefaultMapEntry<K, V>(this)","position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:112","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:54","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.map.Flat3Map:213","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.IdentityPredicate.org.apache.commons.collections4.functors.IdentityPredicate.<T>identityPredicate(T)","position":"org.apache.commons.collections4.PredicateUtils:161","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty()","position":"org.apache.commons.collections4.CollectionUtils:1388","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.map.DefaultedMap:180","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (java.lang.Object == null ? (java.util.Map.Entry<?, ?>.getKey()) == null : java.lang.Object.equals(java.util.Map.Entry<?, ?>.getKey())) && (java.lang.Object == null ? (java.util.Map.Entry<?, ?>.getValue()) == null : java.lang.Object.equals(java.util.Map.Entry<?, ?>.getValue()))","position":"org.apache.commons.collections4.map.Flat3Map:867","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().last()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:85","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: InstantiationException\" , java.lang.InstantiationException)","position":"org.apache.commons.collections4.functors.InstantiateFactory:128","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:135","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * An iterator for the entries.\n */\nabstract class TrieIterator<E> implements java.util.Iterator<E> {\n    /** \n     * For fast-fail.\n     */\nprotected int expectedModCount = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int;\n\n    protected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> next;\n\n    protected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> current;\n\n    /** \n     * Starts iteration from the root.\n     */\nprotected TrieIterator() {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntry(null);\n    }\n\n    /** \n     * Starts iteration at the given entry.\n     */\nprotected TrieIterator(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> firstEntry) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n\n    /** \n     * Returns the next {@link TrieEntry}.\n     */\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry() {\n        if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n            throw new java.util.ConcurrentModificationException();\n        } \n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n            throw new java.util.NoSuchElementException();\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.TrieIterator<E>.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n\n    /** \n     * @see PatriciaTrie#nextEntry(TrieEntry)\n     */\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> findNext(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> prior) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n\n    public boolean hasNext() {\n        return (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null;\n    }\n\n    public void remove() {\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n            throw new java.lang.IllegalStateException();\n        } \n        if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n            throw new java.util.ConcurrentModificationException();\n        } \n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        int = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int;\n    }\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1539","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object,java.lang.Boolean>invokerTransformer(java.lang.String, java.lang.Class<?>[], java.lang.Object[]))","position":"org.apache.commons.collections4.PredicateUtils:239","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((org.apache.commons.collections4.OrderedMap<K, ?>)(java.util.Map<K, V>)).nextKey(K)","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:152","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:144","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"list1":"coll","list2":"coll"},"name":"add","transplant":{"sourceCode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} ","position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:131","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"add() is not supported by this iterator\")","position":"org.apache.commons.collections4.iterators.SingletonListIterator:147","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:109","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[])","position":"org.apache.commons.collections4.functors.InstantiateFactory:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[]);\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: InstantiationException\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor must be public\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor threw an exception\" , java.lang.reflect.InvocationTargetException);\n}","position":"org.apache.commons.collections4.functors.InstantiateFactory:125","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.collections4.map.Flat3Map:406","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl"},"status":-2},{"failures":[64,65,88,89,90,91,92,93,94,95,96,97,98,99,100,66,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,67,129,130,131,132,133,134,135,136,137,138,139,140],"binaryOperator":"int > int","name":"conditionalBoundary","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"mutation","status":-1},{"failures":[141,142,143],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(java.util.List<E>.isEmpty())","position":"org.apache.commons.collections4.iterators.LoopingListIterator:74","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:120","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().nextKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:78","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"preds":"predicates"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.functors.OnePredicate:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:322","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Iterator<I>.hasNext()","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:58","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl"},"status":-2},{"failures":[144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl"},"status":-1},{"failures":[292,293],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:80","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Integer.compareTo(java.lang.Integer)","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:246","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl"},"status":-2},{"failures":[294,295,296,297],"variableMapping":{"o":"object"},"name":"replace","transplant":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} ","position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> = new org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>()","position":"org.apache.commons.collections4.list.TreeList:877","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl"},"status":-2},{"failures":[2,3,298,4],"binaryOperator":"int >= int","name":"negateConditional","position":"org.apache.commons.collections4.list.GrowthList:183","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (boolean) && (!(boolean))","position":"org.apache.commons.collections4.iterators.SingletonListIterator:55","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:69","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.io.PrintStream.print(org.apache.commons.collections4.MapUtils.java.lang.String);\n}","position":"org.apache.commons.collections4.MapUtils:1038","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.SortedMap<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>);\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} ","position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null))","position":"org.apache.commons.collections4.list.GrowthList:124","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null);\n}","position":"org.apache.commons.collections4.list.LazyList:126","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getValue()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:63","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().setValue(V)","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:135","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"negative size: \" + int))","position":"org.apache.commons.collections4.ListUtils:681","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().indexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.AbstractListDecorator:83","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<java.util.Map.Entry<java.lang.Object, V>, V>(org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.entrySet().iterator()) {\n    public V next() {\n        return org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<java.util.Map.Entry<java.lang.Object, V>, V>.getIterator().next().getValue();\n    }\n}","position":"org.apache.commons.collections4.map.ListOrderedMap:529","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:374","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(java.util.List<E>.isEmpty())","position":"org.apache.commons.collections4.iterators.LoopingListIterator:74","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount()","position":"org.apache.commons.collections4.list.AbstractLinkedList:1038","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:136","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"coll":"coll"},"name":"replace","transplant":{"sourceCode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} ","position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:181","type":"CtSynchronizedImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":56,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":282,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":192,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":250,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":271,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":209,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":269,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":15,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":101,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":273,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":17,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":254,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":86,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":3,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":279,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":2,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":172,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":180,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":49,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":276,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":118,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":202,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":75,"org.apache.commons.collections4.queue.PredicatedQueueTest.testRemove":13,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":156,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":24,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":95,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":27,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":235,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":70,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":170,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":37,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":148,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":174,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":20,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":213,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":38,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":207,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":217,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":28,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":219,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":97,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":55,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":149,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":42,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":79,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":93,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":243,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":152,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":163,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":260,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":210,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":267,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":203,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":223,"org.apache.commons.collections4.TransformerUtilsTest.testInstantiateTransformerNull":85,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":125,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":29,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":242,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":107,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":25,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":190,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":220,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":52,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":151,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":159,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":166,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":272,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":96,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":226,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":16,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":122,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":144,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":244,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":291,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":103,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":65,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":182,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":136,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":237,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":245,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":195,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":158,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":230,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":59,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":31,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":102,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":128,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":236,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":298,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":12,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":115,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":22,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":74,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":211,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":255,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":6,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":206,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":47,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":11,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":191,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":216,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":140,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":169,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":108,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":113,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":288,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":77,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":293,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":139,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":280,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":263,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":123,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":63,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":176,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":228,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":187,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":289,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":142,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":221,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":54,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":218,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":143,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":111,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":147,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":30,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":201,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":232,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":197,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":177,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":134,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":10,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":157,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":165,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":168,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":72,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":285,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":34,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":233,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":247,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":53,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":238,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":239,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":188,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":283,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":290,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":252,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":178,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":43,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":225,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":185,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":296,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":253,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":208,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":106,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":126,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":261,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":32,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":131,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":35,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":73,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":199,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":183,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":66,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":58,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":109,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":135,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":281,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":78,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":132,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":259,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":246,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":266,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":45,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":153,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":297,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":48,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":88,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":222,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":71,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":224,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":23,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":162,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":39,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":57,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":268,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":46,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":138,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":80,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":4,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":167,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":124,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":155,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":258,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":26,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":154,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":94,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":33,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":240,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":292,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":198,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":251,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":277,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":146,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":82,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":83,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":84,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":229,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingForward":141,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":264,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":68,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":200,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":14,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":295,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":44,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":241,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":227,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":1,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":100,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":61,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":67,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":105,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":60,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":173,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":194,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":215,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":179,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":171,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":120,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":112,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":287,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":99,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":21,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":91,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":189,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":262,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":278,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":121,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":284,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":294,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":129,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":62,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":137,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":214,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":257,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":8,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":89,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":90,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":212,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":116,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":275,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":117,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":9,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":130,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":175,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":274,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":164}}]
