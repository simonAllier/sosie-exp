[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return R","position":"org.apache.commons.collections4.CollectionUtils:1042","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:73","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSet<E>(java.util.Set<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSet:60","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = java.io.ObjectInputStream.readInt()","position":"org.apache.commons.collections4.bag.AbstractMapBag:519","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"int < int","name":"conditionalBoundary","position":"org.apache.commons.collections4.list.LazyList:113","type":"mutation","status":0},{"failures":[0,1,2,3,4,5],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().putAll(java.util.Map<? extends K, ? extends V>)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:110","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:112","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:91","type":"CtInvocationImpl"},"status":0},{"failures":[6,7,8,9,10,11,12,13],"binaryOperator":"int < int","name":"conditionalBoundary","position":"org.apache.commons.collections4.iterators.ArrayIterator:99","type":"mutation","status":-1},{"failures":[14,15,16,17,18,19,20,21,22],"variableMapping":{"lastItemIndex":"nextIndex"},"name":"replace","transplant":{"sourceCode":"this.int = -1","position":"org.apache.commons.collections4.iterators.ArrayListIterator:201","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)++","position":"org.apache.commons.collections4.iterators.FilterListIterator:134","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.NullPointerException()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:798","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().isEmpty()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:98","type":"CtReturnImpl"},"status":-2},{"failures":[23],"binaryOperator":"(java.util.Iterator<? extends E>) == null","name":"negateConditional","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:144","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.util.Map.Entry<K, V> == null) || (!(org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.getKeyAnalyzer().isPrefix(K, int, int, K)))) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2180","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:212","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.Collection<E> = java.util.Collection<E>","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:90","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:865","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:67","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().comparator()","position":"org.apache.commons.collections4.bag.TreeBag:104","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"new org.apache.commons.collections4.ArrayStack<E>()","position":"org.apache.commons.collections4.iterators.PushbackIterator:43","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ArrayList<java.util.Iterator<? extends E>>.get(int).remove()","position":"org.apache.commons.collections4.iterators.CollatingIterator:272","type":"CtInvocationImpl"},"status":0},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterIterator:179","type":"mutation","return":"return true","status":-1},{"failures":[],"variableMapping":{"predicate1":"predicate1","predicate2":"predicate2","this":"this"},"name":"add","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:405","type":"CtLocalVariableImpl"},"status":-2},{"failures":[36],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:83","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\")","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:738","type":"CtThrowImpl"},"status":-1},{"failures":[37],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = org.apache.commons.collections4.Factory<? extends E>.create()","position":"org.apache.commons.collections4.list.LazyList:130","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = int","position":"org.apache.commons.collections4.list.CursorableLinkedList:483","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:169","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:104","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(int, E)","position":"org.apache.commons.collections4.list.AbstractListDecorator:71","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object,java.lang.Boolean>invokerTransformer(java.lang.String, java.lang.Class<?>[], java.lang.Object[]))","position":"org.apache.commons.collections4.PredicateUtils:239","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasNext()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:62","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.map.AbstractMapDecorator:128","type":"CtReturnImpl"},"status":-2},{"failures":[38],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} ","position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends I>.remove()","position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"iClosure":"closure"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.Closure<? super E>","position":"org.apache.commons.collections4.functors.ForClosure:92","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.ForClosure<E>(int , org.apache.commons.collections4.Closure<? super E>)","position":"org.apache.commons.collections4.functors.ForClosure:58","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} ","position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"(\"Attempting to compare unknown object \" + java.lang.Object)","name":"math","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:239","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<E>.previous()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:77","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:120","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}","position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"V = null","position":"org.apache.commons.collections4.map.AbstractReferenceMap:844","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().add(E)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.LazySortedMap:135","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.LazySortedMap:131","type":"CtReturnImpl"},"status":-2},{"failures":[39,40,41],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 1","position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.nextIndex()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:118","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * A range view of the {@link Trie}.\n */\nprivate abstract class RangeMap extends java.util.AbstractMap<K, V> implements java.util.SortedMap<K, V> {\n    /** \n     * The {@link #entrySet()} view.\n     */\nprivate transient volatile java.util.Set<java.util.Map.Entry<K, V>> entrySet;\n\n    /** \n     * Creates and returns an {@link #entrySet()} view of the {@link RangeMap}.\n     */\nprotected abstract java.util.Set<java.util.Map.Entry<K, V>> createEntrySet();\n\n    /** \n     * Returns the FROM Key.\n     */\nprotected abstract K getFromKey();\n\n    /** \n     * Whether or not the {@link #getFromKey()} is in the range.\n     */\nprotected abstract boolean isFromInclusive();\n\n    /** \n     * Returns the TO Key.\n     */\nprotected abstract K getToKey();\n\n    /** \n     * Whether or not the {@link #getToKey()} is in the range.\n     */\nprotected abstract boolean isToInclusive();\n\n    public java.util.Comparator<? super K> comparator() {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator();\n    }\n\n    @java.lang.Override\n    public boolean containsKey(final java.lang.Object key) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange(org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.castKey(java.lang.Object)))) {\n            return false;\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(java.lang.Object);\n    }\n\n    @java.lang.Override\n    public V remove(final java.lang.Object key) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange(org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.castKey(java.lang.Object)))) {\n            return null;\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object);\n    }\n\n    @java.lang.Override\n    public V get(final java.lang.Object key) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange(org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.castKey(java.lang.Object)))) {\n            return null;\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(java.lang.Object);\n    }\n\n    @java.lang.Override\n    public V put(final K key, final V value) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange(K))) {\n            throw new java.lang.IllegalArgumentException((\"Key is out of range: \" + K));\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.put(K, V);\n    }\n\n    @java.lang.Override\n    public java.util.Set<java.util.Map.Entry<K, V>> entrySet() {\n        if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n            java.util.Set<java.util.Map.Entry<K, V>> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.createEntrySet();\n        } \n        return java.util.Set<java.util.Map.Entry<K, V>>;\n    }\n\n    public java.util.SortedMap<K, V> subMap(final K fromKey, final K toKey) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange2(K))) {\n            throw new java.lang.IllegalArgumentException((\"FromKey is out of range: \" + K));\n        } \n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange2(K))) {\n            throw new java.lang.IllegalArgumentException((\"ToKey is out of range: \" + K));\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.createRangeMap(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isFromInclusive(), K, org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isToInclusive());\n    }\n\n    public java.util.SortedMap<K, V> headMap(final K toKey) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange2(K))) {\n            throw new java.lang.IllegalArgumentException((\"ToKey is out of range: \" + K));\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.createRangeMap(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getFromKey(), org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isFromInclusive(), K, org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isToInclusive());\n    }\n\n    public java.util.SortedMap<K, V> tailMap(final K fromKey) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange2(K))) {\n            throw new java.lang.IllegalArgumentException((\"FromKey is out of range: \" + K));\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.createRangeMap(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isFromInclusive(), org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getToKey(), org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isToInclusive());\n    }\n\n    /** \n     * Returns true if the provided key is greater than TO and less than FROM.\n     */\nprotected boolean inRange(final K key) {\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getFromKey();\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getToKey();\n        return ((K == null) || org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inFromRange(K, false))) && ((K == null) || org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inToRange(K, false)));\n    }\n\n    /** \n     * This form allows the high endpoint (as well as all legit keys).\n     */\nprotected boolean inRange2(final K key) {\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getFromKey();\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getToKey();\n        return ((K == null) || org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inFromRange(K, false))) && ((K == null) || org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inToRange(K, true)));\n    }\n\n    /** \n     * Returns true if the provided key is in the FROM range of the {@link RangeMap}.\n     */\nprotected boolean inFromRange(final K key, final boolean forceInclusive) {\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getFromKey();\n        final boolean boolean = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isFromInclusive();\n        final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.getKeyAnalyzer().compare(K, K);\n        if (boolean || boolean) {\n            return int >= 0;\n        } else {\n            return int > 0;\n        }\n    }\n\n    /** \n     * Returns true if the provided key is in the TO range of the {@link RangeMap}.\n     */\nprotected boolean inToRange(final K key, final boolean forceInclusive) {\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getToKey();\n        final boolean boolean = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isToInclusive();\n        final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.getKeyAnalyzer().compare(K, K);\n        if (boolean || boolean) {\n            return int <= 0;\n        } else {\n            return int < 0;\n        }\n    }\n\n    /** \n     * Creates and returns a sub-range view of the current {@link RangeMap}.\n     */\nprotected abstract java.util.SortedMap<K, V> createRangeMap(K fromKey, boolean fromInclusive, K toKey, boolean toInclusive);\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1675","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.DefaultedMap<K, V>(java.util.Map<K, V> , org.apache.commons.collections4.functors.FactoryTransformer.org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(org.apache.commons.collections4.Factory<? extends V>))","position":"org.apache.commons.collections4.map.DefaultedMap:108","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} ","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:923","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:221","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:70","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.LazySortedMap:131","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Enumeration must not be null\")","position":"org.apache.commons.collections4.IteratorUtils:855","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"End index must not be less than start index.\")","position":"org.apache.commons.collections4.iterators.ArrayIterator:100","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return !(java.util.List<E>.isEmpty())","position":"org.apache.commons.collections4.iterators.LoopingListIterator:127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<T>.isEmpty()","position":"org.apache.commons.collections4.ListUtils:702","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:106","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtIfImpl"},"status":-2},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,0,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,1,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,2,167,168,169,170,171,172,173,174,3,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,4,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,5,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241],"variableMapping":{"this":"this","value":"object"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsValue(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:86","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().equals(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:130","type":"CtReturnImpl"},"status":-1},{"failures":[242,243,244,245,246,247],"binaryOperator":"(int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))","name":"removeConditional","position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.select(K)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:339","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")","position":"org.apache.commons.collections4.functors.WhileClosure:56","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.TrieIterator<java.util.Map.Entry<K, V>>.nextEntry()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1442","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().putAll(java.util.Map<? extends K, ? extends V>)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:110","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.map.Flat3Map:640","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:244","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((org.apache.commons.collections4.bag.TreeBag<E>.(comparator()) == null) && (!(E instanceof java.lang.Comparable))) {\n    throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"));\n} ","position":"org.apache.commons.collections4.bag.TreeBag:86","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    int = ((java.util.Map<?, ?>)(java.lang.Object)).size();\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    int = ((java.util.Collection<?>)(java.lang.Object)).size();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    int = ((java.lang.Object[])(java.lang.Object)).int;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}","position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.map.AbstractHashedMap:871","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:131","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate()","position":"org.apache.commons.collections4.functors.IdentityPredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (T == null) {\n    return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate();\n} ","position":"org.apache.commons.collections4.functors.IdentityPredicate:47","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.PrintStream.print(java.lang.Object)","position":"org.apache.commons.collections4.MapUtils:974","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl"},"status":-2},{"failures":[248,249,250,251,252,253,254,255,256,257],"binaryOperator":"(java.util.Iterator<? extends E>) == null","name":"removeConditional","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"mutation","status":-1},{"failures":[],"variableMapping":{"nCopies":"count"},"name":"add","transplant":{"sourceCode":"if (int <= 0) {\n    return false;\n} ","position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().add(E, int)","position":"org.apache.commons.collections4.bag.PredicatedBag:94","type":"CtReturnImpl"},"status":0},{"failures":[258,259,260,220],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.map.DefaultedMap:193","type":"CtInvocationImpl"},"status":-1},{"failures":[261,262],"variableMapping":{"it":"iterator"},"name":"replace","transplant":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>>.next()","position":"org.apache.commons.collections4.map.AbstractHashedMap:1353","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<K, V> = java.util.Iterator<java.util.Map.Entry<K, V>>.next()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:84","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 1 :\n    if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n        return false;\n    } \n    java.lang.Object = java.util.Map<?, ?>.get(K);\n    if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n        return false;\n    } ","position":"org.apache.commons.collections4.map.Flat3Map:1171","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"~(int << 9)","position":"org.apache.commons.collections4.map.MultiKeyMap:368","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:182","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>","position":"org.apache.commons.collections4.list.TreeList:653","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:225","type":"CtLocalVariableImpl"},"status":-2},{"failures":[263],"binaryOperator":"(T) == T","name":"negateConditional","position":"org.apache.commons.collections4.functors.IdentityPredicate:72","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int <= 0) {\n    return org.apache.commons.collections4.list.TreeList.AVLNode<E>.insertOnLeft(int, E);\n} ","position":"org.apache.commons.collections4.list.TreeList:496","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>.entrySet()","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:102","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:60","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:253","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new java.lang.StringBuilder().append(\"AVLNode(\").append(int).append(',').append(((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null)).append(',').append(E).append(',').append((org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getRightSubTree()) != null))","position":"org.apache.commons.collections4.list.TreeList:969","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl"},"status":-2},{"failures":[264,265],"variableMapping":{"predicate":"predicate","falseClosure":"closure","trueClosure":"closure"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.IfClosure<E>(org.apache.commons.collections4.Predicate<? super E> , org.apache.commons.collections4.Closure<? super E> , org.apache.commons.collections4.Closure<? super E>)","position":"org.apache.commons.collections4.functors.IfClosure:79","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.WhileClosure<E>(org.apache.commons.collections4.Predicate<? super E> , org.apache.commons.collections4.Closure<? super E> , boolean)","position":"org.apache.commons.collections4.functors.WhileClosure:61","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.list.AbstractLinkedList:368","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.LazyList<E>(java.util.List<E> , org.apache.commons.collections4.Factory<? extends E>)","position":"org.apache.commons.collections4.list.LazyList:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (int) >= (int)","position":"org.apache.commons.collections4.map.LRUMap:377","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.Collection<? extends E>.size()) > 0","position":"org.apache.commons.collections4.iterators.LoopingIterator:71","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"set":"sub"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(java.util.SortedSet<E>)","position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:59","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:110","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.map.AbstractHashedMap:1314","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<? extends I>.hasNext()","position":"org.apache.commons.collections4.iterators.TransformIterator:74","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.MapTransformer<I, O>(java.util.Map<? super I, ? extends O>)","position":"org.apache.commons.collections4.functors.MapTransformer:53","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.MapTransformer.org.apache.commons.collections4.functors.MapTransformer.mapTransformer(java.util.Map<? super I, ? extends O>)","position":"org.apache.commons.collections4.TransformerUtils:380","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"type":"type"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstanceofPredicate(java.lang.Class<?>)","position":"org.apache.commons.collections4.functors.InstanceofPredicate:49","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.InstanceofPredicate.org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(java.lang.Class<?>)","position":"org.apache.commons.collections4.PredicateUtils:175","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int) >= 0) {\n    (int)++;\n} ","position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl"},"status":-2},{"failures":[24,25,26,27,28,29,30,31,32,33,266,34,35],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Factory must not be null\")","position":"org.apache.commons.collections4.functors.FactoryTransformer:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:154","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (org.apache.commons.collections4.map.SingletonMap<K, V>.(getKey()) == null ? 0 : org.apache.commons.collections4.map.SingletonMap<K, V>.getKey().hashCode()) ^ (org.apache.commons.collections4.map.SingletonMap<K, V>.(getValue()) == null ? 0 : org.apache.commons.collections4.map.SingletonMap<K, V>.getValue().hashCode())","position":"org.apache.commons.collections4.map.SingletonMap:556","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.set.UnmodifiableSet.org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<E>)","position":"org.apache.commons.collections4.list.SetUniqueList:110","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:107","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:244","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.HashSet<E> java.util.HashSet<E> = new java.util.HashSet<E>(java.util.List<? extends E>)","position":"org.apache.commons.collections4.ListUtils:99","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.map.AbstractHashedMap:1104","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().indexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.AbstractListDecorator:83","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}","position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:182","type":"CtInvocationImpl"},"status":-2},{"failures":[42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,267,67,68,69,70,71,72,73,74,77,268,269,270,79,80,81,82,83,84,86,88,89,90,91,92,93,94,271,272,96,97,98,99,100,273,101,102,104,105,107,108,109,110,111,112,113,114,117,274,275,276,277,278,279,280,119,120,121,122,123,281,124,126,128,129,282,283,131,132,133,134,135,284,136,137,139,140,142,143,144,145,146,147,148,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,167,285,286,287,288,289,169,170,171,172,173,290,174,176,177,291,181,182,183,184,185,186,187,188,191,292,293,294,295,296,193,194,195,196,197,297,198,200,201,203,204,205,206,207,208,209,298,299,211,212,213,214,215,300,216,218,219,221,222,223,224,225,226,227,230,231,232,233,234,235,236,237,240,301,302,303,304,305],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().isEmpty()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:98","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().first()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().last()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = int","position":"org.apache.commons.collections4.iterators.CollatingIterator:361","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.Queue<E>)(org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated()))","position":"org.apache.commons.collections4.queue.AbstractQueueDecorator:62","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.ReverseListIterator:109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((int + (int)), E)","position":"org.apache.commons.collections4.list.AbstractLinkedList:1023","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return T","position":"org.apache.commons.collections4.functors.EqualPredicate:123","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < int) {\n    E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int);\n    if (E == null) {\n        E = org.apache.commons.collections4.Factory<? extends E>.create();\n        org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E);\n        return E;\n    } \n    return E;\n} ","position":"org.apache.commons.collections4.list.LazyList:113","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return -1","position":"org.apache.commons.collections4.map.LinkedMap:172","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().lastIndexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.FixedSizeList:113","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterIterator:179","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getConstructor(java.lang.Class<?>[])","position":"org.apache.commons.collections4.functors.InstantiateFactory:108","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Node must not be null\")","position":"org.apache.commons.collections4.IteratorUtils:807","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingIterator:85","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"normalMap":"map"},"name":"add","transplant":{"sourceCode":"this.java.util.Map<K, V> = new java.util.LinkedHashMap<K, V>()","position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:95","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.map.DefaultedMap:194","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Comparator<E> == null) {\n    java.util.Comparator<E> = org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n} ","position":"org.apache.commons.collections4.ComparatorUtils:153","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().containsKey(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange(org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.castKey(java.lang.Object)))) {\n    return false;\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1712","type":"CtIfImpl"},"status":-2},{"failures":[306,307,308,309,310,311],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:91","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl"},"status":-1},{"failures":[37],"binaryOperator":"int < int","name":"conditionalBoundary","position":"org.apache.commons.collections4.list.LazyList:126","type":"mutation","status":-1},{"failures":[],"variableMapping":{"iPredicate":"predicate"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.Predicate<? super T>","position":"org.apache.commons.collections4.functors.PredicateTransformer:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.TransformedPredicate.org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(org.apache.commons.collections4.Transformer<? super T, ? extends T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:537","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(java.util.Iterator<? extends E>));\n    return org.apache.commons.collections4.iterators.PushbackIterator<E>;\n} ","position":"org.apache.commons.collections4.iterators.PushbackIterator:60","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")","position":"org.apache.commons.collections4.functors.WhileClosure:59","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    throw new java.util.NoSuchElementException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n} ","position":"org.apache.commons.collections4.map.AbstractHashedMap:1167","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator();\n} ","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:144","type":"CtIfImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":109,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":18,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":212,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":180,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":116,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":203,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":264,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":129,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":216,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":278,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":42,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":139,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":247,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":282,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":246,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":160,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":206,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":233,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":183,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":1,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":79,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":199,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":170,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":29,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":67,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":142,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":232,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":288,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":72,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":43,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":118,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":210,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":28,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":38,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":229,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":119,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":176,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":285,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":5,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":78,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":114,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":14,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":305,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":120,"org.apache.commons.collections4.ListUtilsTest.testLazyList":37,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":147,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":267,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":101,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":94,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":33,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":56,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":106,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":102,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":0,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":165,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":303,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testReverse":40,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":235,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":140,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":69,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":90,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":83,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":271,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":280,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":104,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":289,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":3,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":185,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":65,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":209,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":218,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":117,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":189,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":169,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":186,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":196,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":230,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":64,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":80,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":108,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":110,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":193,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":62,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":283,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":86,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":259,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":7,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":71,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":260,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":254,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":52,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":103,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":223,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":93,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":125,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":130,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":228,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":20,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":304,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":13,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":266,"org.apache.commons.collections4.map.TransformedSortedMapTest.testSerializeDeserializeThenCompare":192,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":307,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":24,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":161,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":122,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":60,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":302,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":148,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":200,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":215,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":257,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":198,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":91,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":190,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":31,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":47,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":261,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":241,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":301,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":187,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":237,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":281,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":188,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":308,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":181,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":17,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":255,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":309,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":150,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":149,"org.apache.commons.collections4.PredicateUtilsTest.testIdentityPredicate":263,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":226,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":217,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":294,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":26,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":225,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":63,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":245,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":16,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":50,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":121,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":156,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":275,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":6,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":68,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":290,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":211,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":256,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":2,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":269,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":57,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":89,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":95,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":252,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":158,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":173,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":292,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":53,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":137,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":287,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":220,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":159,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":141,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":236,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":274,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":251,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":262,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":167,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":58,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":240,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":297,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":27,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":85,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":179,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":207,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":12,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":19,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":146,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":201,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":49,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":153,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":32,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":74,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":250,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":144,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testWalkForwardAndBack":41,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":244,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":204,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":107,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testEmptyMapIterator":36,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":99,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":132,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":138,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":234,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":70,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":151,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":238,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":239,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":222,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":54,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":44,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":135,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":81,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":127,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":195,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":284,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":296,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":300,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":25,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":115,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":306,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":182,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":227,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":76,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":96,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":77,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":279,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":293,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":34,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":133,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":84,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":184,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":175,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":268,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":51,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":111,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":178,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":258,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":164,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":30,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":157,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":154,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":224,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":214,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":128,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":219,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":126,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":105,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":4,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":124,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":177,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":97,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":213,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":248,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":249,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":87,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":88,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":35,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":82,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":100,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":66,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":272,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":112,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":48,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":75,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":298,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":191,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":265,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":22,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":9,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":310,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":21,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":166,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":291,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":134,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":243,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testEmptyListIteratorIsIndeedEmpty":39,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":194,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":123,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":208,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":273,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":46,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":61,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":136,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":242,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":299,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":221,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":168,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":295,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":23,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":73,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":277,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary":311,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":172,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":174,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":163,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":152,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":205,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":8,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":270,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":171,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":11,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":276,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":10,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":145,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":286,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":155}}]
