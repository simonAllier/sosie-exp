[{"failures":[],"variableMapping":{"start":"len","maxElements":"len"},"name":"add","transplant":{"sourceCode":"if (int >= int) {\n    int = 0;\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<E, E>.getIterator()","position":"org.apache.commons.collections4.iterators.AbstractIteratorDecorator:44","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null))","position":"org.apache.commons.collections4.list.GrowthList:184","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) == (-1)) {\n        java.lang.StringBuilder.append(\"predecessor=\").append(\"ROOT\");\n    } else {\n        java.lang.StringBuilder.append(\"predecessor=\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()).append(\" [\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int).append(\"]\");\n    }\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1379","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:74","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ","position":"org.apache.commons.collections4.map.Flat3Map:381","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)--","position":"org.apache.commons.collections4.iterators.FilterListIterator:150","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"variableMapping":{"flag":"hasNext","removed":"hasNext"},"name":"replace","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:169","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"E E = java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:188","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.SingletonIterator:109","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:226","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.toArray(new java.lang.Object[int])","position":"org.apache.commons.collections4.list.AbstractLinkedList:170","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:129","type":"CtThrowImpl"},"status":-2},{"failures":[1,2,3,4,6,7,8,9],"variableMapping":{"iterator":"currentIterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:182","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")","position":"org.apache.commons.collections4.map.FixedSizeSortedMap:140","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int))","position":"org.apache.commons.collections4.list.FixedSizeList:123","type":"CtReturnImpl"},"status":-2},{"failures":[12,13],"binaryOperator":"org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, int, int)) != org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, int, org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.lengthInBits(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)))","name":"negateConditional","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1133","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new java.lang.StringBuilder().append(\"AVLNode(\").append(int).append(',').append(((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null)).append(',').append(E).append(',').append((org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getRightSubTree()) != null)).append(\", faedelung \").append(boolean)","position":"org.apache.commons.collections4.list.TreeList:969","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}","position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.((java.util.SortedSet<E>)(decorated()))","position":"org.apache.commons.collections4.set.TransformedSortedSet:112","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.MapTransformer<I, O>(java.util.Map<? super I, ? extends O>)","position":"org.apache.commons.collections4.functors.MapTransformer:53","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>","position":"org.apache.commons.collections4.list.CursorableLinkedList:536","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} ","position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\")","name":"math","position":"org.apache.commons.collections4.map.LRUMap:259","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1339","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null)","position":"org.apache.commons.collections4.list.LazyList:127","type":"CtInvocationImpl"},"status":-2},{"failures":[14],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"delegate\")","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1967","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")","position":"org.apache.commons.collections4.functors.WhileClosure:59","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.iterators.NodeListIterator(org.w3c.dom.Node)","position":"org.apache.commons.collections4.IteratorUtils:809","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:119","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"V = V","position":"org.apache.commons.collections4.map.Flat3Map:491","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toString()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:159","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1664","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"if ((this.java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    return this.java.util.Iterator<? extends E>.next();\n} ","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(org.apache.commons.collections4.ArrayStack<E>.isEmpty()) ? org.apache.commons.collections4.ArrayStack<E>.pop() : java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.PushbackIterator:96","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:107","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1146","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))","position":"org.apache.commons.collections4.map.PredicatedSortedMap:92","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * An iterator for the entries.\n */\nabstract class TrieIterator<E> implements java.util.Iterator<E> {\n    /** \n     * For fast-fail.\n     */\nprotected int expectedModCount = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int;\n\n    protected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> next;\n\n    protected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> current;\n\n    /** \n     * Starts iteration from the root.\n     */\nprotected TrieIterator() {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntry(null);\n    }\n\n    /** \n     * Starts iteration at the given entry.\n     */\nprotected TrieIterator(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> firstEntry) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n\n    /** \n     * Returns the next {@link TrieEntry}.\n     */\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry() {\n        if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n            throw new java.util.ConcurrentModificationException();\n        } \n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n            throw new java.util.NoSuchElementException();\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.TrieIterator<E>.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n\n    /** \n     * @see PatriciaTrie#nextEntry(TrieEntry)\n     */\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> findNext(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> prior) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n\n    public boolean hasNext() {\n        return (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null;\n    }\n\n    public void remove() {\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n            throw new java.lang.IllegalStateException();\n        } \n        if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n            throw new java.util.ConcurrentModificationException();\n        } \n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        int = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int;\n    }\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1539","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(org.apache.commons.collections4.ArrayStack<E>.isEmpty()) ? org.apache.commons.collections4.ArrayStack<E>.pop() : java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.PushbackIterator:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return 0L","position":"org.apache.commons.collections4.MapUtils:662","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previous()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.bitIndex(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:907","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:60","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:158","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:157","type":"CtSynchronizedImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate()","position":"org.apache.commons.collections4.functors.IdentityPredicate:48","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().size();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:187","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:129","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\")","position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:129","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:171","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.iterators.PushbackIterator<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.PushbackIterator:65","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.BidiMapIterator<K, V>(this)","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:218","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(java.util.Map<K, V>.entrySet())","position":"org.apache.commons.collections4.map.AbstractIterableMap:34","type":"CtReturnImpl"},"status":-2},{"failures":[15,16,17,18],"binaryOperator":"java.lang.Object == this","name":"removeConditional","position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"mutation","status":-1},{"failures":[],"variableMapping":{"root":"nextObject"},"name":"replace","transplant":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.collections4.map.CompositeMap:483","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:119","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (int) < (org.apache.commons.collections4.list.TreeList<E>.size())","position":"org.apache.commons.collections4.list.TreeList:1045","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterListIterator:211","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()","position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    return (java.util.List<E>.size()) - 1;\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:171","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.IteratorUtils.org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(java.util.Enumeration<? extends E>))","position":"org.apache.commons.collections4.EnumerationUtils:51","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:54","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:881","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))","position":"org.apache.commons.collections4.map.LazySortedMap:126","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getNearestEntryForKey(K, int)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:147","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasNext()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:62","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.map.AbstractMapDecorator:128","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","position":"org.apache.commons.collections4.ListUtils:261","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterListIterator:243","type":"CtAssignmentImpl"},"status":-2},{"failures":[19],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ExceptionPredicate.org.apache.commons.collections4.functors.ExceptionPredicate.<T>exceptionPredicate()","position":"org.apache.commons.collections4.PredicateUtils:91","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) != (org.apache.commons.collections4.list.AbstractLinkedList<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)","position":"org.apache.commons.collections4.list.AbstractLinkedList:820","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<K, V> = java.util.Iterator<java.util.Map.Entry<K, V>>.next()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:84","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:209","type":"CtInvocationImpl"},"status":-2},{"failures":[20,21,22,23],"binaryOperator":"(java.util.Map<K, V>.containsKey(java.lang.Object)) == false","name":"negateConditional","position":"org.apache.commons.collections4.map.DefaultedMap:202","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2125","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:89","type":"CtInvocationImpl"},"status":-2},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.CollectionUtils:649","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().iterator()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:116","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int--;\n}","position":"org.apache.commons.collections4.list.AbstractLinkedList:145","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>","position":"org.apache.commons.collections4.map.TransformedSortedMap:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:104","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.SortedBag<E>)(org.apache.commons.collections4.bag.PredicatedBag<E>.decorated()))","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:86","type":"CtReturnImpl"},"status":-2},{"failures":[458,459],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.util.Iterator<? extends E> = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:86","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"binaryOperator":"((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\")","name":"math","position":"org.apache.commons.collections4.map.LRUMap:259","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , 0)","position":"org.apache.commons.collections4.list.AbstractLinkedList:123","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:55","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iArgs":"iArgs","iConstructor":"iConstructor"},"name":"replace","transplant":{"sourceCode":"return this.java.lang.reflect.Constructor<T>.newInstance(this.java.lang.Object[])","position":"org.apache.commons.collections4.functors.InstantiateFactory:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[]);\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: InstantiationException\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor must be public\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor threw an exception\" , java.lang.reflect.InvocationTargetException);\n}","position":"org.apache.commons.collections4.functors.InstantiateFactory:125","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    return 0;\n} ","position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().lastIndexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.AbstractListDecorator:87","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"key"},"name":"replace","transplant":{"sourceCode":"return java.lang.Object","position":"org.apache.commons.collections4.map.AbstractHashedMap:1092","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:114","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int = 0","position":"org.apache.commons.collections4.map.AbstractHashedMap:1293","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bag.AbstractMapBag<E>.doReadObject(new java.util.TreeMap<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>(java.util.Comparator<? super E>), java.io.ObjectInputStream)","position":"org.apache.commons.collections4.bag.TreeBag:129","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Map<K, V>","position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().addAll(java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:60","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>)","position":"org.apache.commons.collections4.map.CompositeMap:140","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtInvocationImpl"},"status":-2},{"failures":[460,461],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:125","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.collections4.iterators.PermutationIterator:89","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:242","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().last()","position":"org.apache.commons.collections4.bag.AbstractSortedBagDecorator:72","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>","position":"org.apache.commons.collections4.map.AbstractMapDecorator:73","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"key":"object"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(java.lang.Object)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1716","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().remove(java.lang.Object, int)","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:77","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(java.lang.Object))","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1589","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl"},"status":-2},{"failures":[462,463,464,465,466,467],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.OnePredicate.org.apache.commons.collections4.functors.OnePredicate.onePredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:372","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"DefaultKeyValue may not contain itself as a key.\")","position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:83","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.IdentityPredicate.org.apache.commons.collections4.functors.IdentityPredicate.<T>identityPredicate(T)","position":"org.apache.commons.collections4.PredicateUtils:161","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((java.util.Map<K, V>)(java.util.Map<? extends J, ? extends U>))","position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:185","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.DefaultedMap<K, V>(java.util.Map<K, V> , org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(V))","position":"org.apache.commons.collections4.map.DefaultedMap:87","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.FilterIterator:175","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = java.lang.ref.Reference<?>.hashCode()","position":"org.apache.commons.collections4.map.AbstractReferenceMap:395","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super T>.execute(T)","position":"org.apache.commons.collections4.functors.ClosureTransformer:72","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:93","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Factory<? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:77","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1385","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:76","type":"CtReturnImpl"},"status":-2},{"failures":[468,469,470,471,472,473,474,475,476,477,478,479],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:266","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().hashCode()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:135","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().iterator()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:116","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().headMap(K)","position":"org.apache.commons.collections4.map.TransformedSortedMap:150","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.decorated().subMap(K, K)","position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:142","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.list.CursorableLinkedList:376","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previousIndex()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:87","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getLeftSubTree()) == null) {\n    return org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeSelf();\n} ","position":"org.apache.commons.collections4.list.TreeList:604","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.nextIndex()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:115","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:94","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    return (java.util.List<E>.size()) - 1;\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:171","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Time unit must not be null\")","position":"org.apache.commons.collections4.map.PassiveExpiringMap:197","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:133","type":"CtThrowImpl"},"status":-2},{"failures":[335,336,337,338,339,340,341,480,383,384,386,387,388,389,390,391,392,393,394,417,418,420,421,422,423,424,425,426,427,428,481,434,435,437,438,439,440,441,442,443,444,445],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().lastKey()","position":"org.apache.commons.collections4.bag.TreeBag:100","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"element":"next"},"name":"add","transplant":{"sourceCode":"if (null == E) {\n    throw new java.lang.NullPointerException(\"Attempted to add null object to queue\");\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:226","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl"},"status":0},{"failures":[482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497],"variableMapping":{"currentIndex":"index"},"name":"replace","transplant":{"sourceCode":"return (this.int) > 0","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:128","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) < (int)","position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1025","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().last()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}","position":"org.apache.commons.collections4.map.Flat3Map:384","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.SynchronizedCollection:73","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:192","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:143","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:67","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.map.Flat3Map:222","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasNext()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:97","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:266","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"input":"input","this":"this"},"name":"add","transplant":{"sourceCode":"try {\n    org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E);\n} catch (final java.lang.RuntimeException java.lang.RuntimeException) {\n    throw java.lang.RuntimeException;\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable);\n}","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:59","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:60","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"keyAnalyzer\")","position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:50","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Factory must not be null\")","position":"org.apache.commons.collections4.functors.FactoryTransformer:49","type":"CtThrowImpl"},"status":-2},{"failures":[22],"variableMapping":{"map":"map"},"name":"replace","transplant":{"sourceCode":"return java.util.Map<K, V>","position":"org.apache.commons.collections4.map.AbstractMapDecorator:73","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.DefaultedMap<K, V>(java.util.Map<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.DefaultedMap:131","type":"CtReturnImpl"},"status":-1},{"failures":[498,499,500,501,11],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"ListIterator does not support set\")","position":"org.apache.commons.collections4.list.SetUniqueList:419","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\")","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:246","type":"CtThrowImpl"},"status":-1},{"failureDictionary":{"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":58,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":410,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":474,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":274,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":225,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":15,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":264,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":463,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":464,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":465,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":157,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":322,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":103,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIsEmpty":51,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":33,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":494,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":101,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueRemove":41,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":395,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueRemove":24,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":77,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":311,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":118,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":78,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":244,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":183,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":139,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":208,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":148,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":468,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.initializationError":296,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionClear":126,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":79,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":444,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":87,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":105,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":71,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":302,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":481,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":349,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":456,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray2":30,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":57,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":228,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":281,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":384,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":143,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":209,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":353,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":433,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":249,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":325,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":328,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":278,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIteratorRemove":131,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":470,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":142,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":214,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":352,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":419,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":361,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":159,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":123,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":184,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":412,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":7,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":36,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":206,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":97,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIsEmpty":115,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":121,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":8,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIteratorRemove":48,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":215,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":363,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":175,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":316,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":462,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":119,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":196,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":21,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":22,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIsEmpty":63,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":345,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":383,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":447,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":20,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":441,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":46,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":11,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":147,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":165,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":490,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":386,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIsEmpty":129,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":202,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":152,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":324,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":437,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":368,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":310,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":366,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":355,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":420,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":218,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":331,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":408,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":254,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":110,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":426,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":49,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray2":84,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":134,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":174,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":259,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":260,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":261,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":381,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":186,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":154,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":421,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":226,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":471,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":321,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":367,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":379,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":429,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":294,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":445,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":304,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":332,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":382,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":300,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":45,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":392,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":4,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":219,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":342,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":237,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":497,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":65,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":251,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":290,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":93,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":393,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":320,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":102,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":53,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":356,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":271,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":68,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":413,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":72,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":234,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":335,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":333,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":457,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":424,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":86,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":28,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionClear":64,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":431,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":73,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":66,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":248,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":25,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":195,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":475,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":253,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":287,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":288,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":161,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":289,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":438,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":146,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":313,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":173,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":387,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":372,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":427,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":435,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":407,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":336,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":256,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":257,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":455,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":258,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":451,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":240,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":273,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":330,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":442,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray2":59,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":250,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":365,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":454,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":235,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":351,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":210,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":452,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":17,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":43,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":377,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":177,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":201,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":263,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":400,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":364,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":398,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIteratorRemove":60,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":223,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":283,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_remove":499,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":246,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":170,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":70,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.initializationError":314,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":500,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":107,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":128,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":346,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":391,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":90,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":486,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":56,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":158,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionClear":116,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":16,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":350,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":178,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":485,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":498,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":493,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":192,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":168,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":266,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":149,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":14,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":150,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":242,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":390,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":488,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":432,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":113,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":23,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":140,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":341,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":181,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":167,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":156,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":199,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIteratorRemove":31,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":360,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":344,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":236,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":162,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":315,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":106,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":443,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":76,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":108,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":376,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":417,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray2":47,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":55,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":67,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":211,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":409,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":233,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":358,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":230,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":221,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":265,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":378,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":197,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":473,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":245,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":347,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":267,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":415,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":303,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":292,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":374,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":81,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":54,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":403,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":200,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":203,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":247,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":480,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":232,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":39,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":370,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":309,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":96,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":385,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":239,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":74,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":198,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":489,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":483,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":166,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":299,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":163,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":354,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":439,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":477,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":32,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":401,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":492,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":319,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":132,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":189,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":343,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":469,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":380,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":216,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":440,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":188,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":69,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":458,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":238,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":362,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":405,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionClear":89,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":104,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":94,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":282,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":446,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":449,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":453,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":416,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":461,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":459,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":312,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":83,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":404,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":9,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":472,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":217,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":285,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":286,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":295,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":348,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":80,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":127,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":284,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":52,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":176,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":82,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":222,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":418,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":337,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":194,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionClear":35,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":414,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":98,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":212,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":144,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":277,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":13,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":50,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":482,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":10,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":305,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":6,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIteratorRemove":85,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":402,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":448,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":137,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":397,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":262,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":153,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":12,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray2":111,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":268,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":135,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":276,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":114,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIsEmpty":34,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":450,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":487,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":476,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":3,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":151,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":130,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":185,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":375,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":160,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":38,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":124,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":42,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":243,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":169,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":92,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":138,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":301,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":120,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":394,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":484,"org.apache.commons.collections4.PredicateUtilsTest.testExceptionPredicate":19,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":318,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":425,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":204,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":280,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":180,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":357,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":317,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":434,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":37,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":428,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":191,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":5,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":99,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":467,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":18,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":187,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":109,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":122,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":179,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":371,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":125,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":133,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":298,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":27,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":100,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":75,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":279,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":270,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":399,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":334,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":373,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":29,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":190,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":172,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":339,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":252,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":0,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":1,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":2,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":171,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":275,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":224,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":145,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":406,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":491,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":117,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":95,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":207,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":338,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":369,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":155,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":227,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":44,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":205,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":306,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":479,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":91,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":293,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":307,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":495,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":308,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":478,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":164,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":323,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":423,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":297,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIsEmpty":88,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":396,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":411,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":430,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":388,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":466,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":231,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":389,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":193,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":255,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":241,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":229,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":182,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":496,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":460,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":327,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":291,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":326,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":141,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIteratorRemove":112,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":40,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":501,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":62,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":359,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":422,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":213,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":61,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePoll":26,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":269,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":436,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":220,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":272,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":329,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":340,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":136}}]
