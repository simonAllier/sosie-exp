[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:93","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:82","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractHashedMap.ValuesIterator<V>(this)","position":"org.apache.commons.collections4.map.AbstractHashedMap:1004","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<I>","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:54","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().comparator()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[132,133,134,135,136,137,138,139,140],"variableMapping":{"this":"this","index":"index"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.AbstractListDecorator:103","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = java.lang.Object.toString().toCharArray()","position":"org.apache.commons.collections4.map.CaseInsensitiveMap:125","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Byte.byteValue()","position":"org.apache.commons.collections4.MapUtils:610","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.DefaultedMap:181","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.util.ConcurrentModificationException()","position":"org.apache.commons.collections4.bag.AbstractMapBag:203","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:405","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap<K, V>.atomic(java.lang.Runnable, 0)","position":"org.apache.commons.collections4.map.StaticBucketMap:705","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.list.AbstractListDecorator:75","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)","position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().subList(int, int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:107","type":"CtReturnImpl"},"status":-2},{"failures":[141,142,143],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.GrowthList:186","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:135","type":"CtLocalVariableImpl"},"status":-2},{"failures":[144,145,146,147,148,149,150,151,152,153,154,155],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}","position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.set.UnmodifiableSet.org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<java.util.Map.Entry<K, V>>)","position":"org.apache.commons.collections4.map.FixedSizeMap:147","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Set<T>.add(T)","position":"org.apache.commons.collections4.functors.UniquePredicate:67","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1587","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().clear()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:78","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>(this)","position":"org.apache.commons.collections4.map.Flat3Map:616","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.entrySet())","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:104","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().keySet()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:102","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSet.org.apache.commons.collections4.set.PredicatedSet.predicatedSet(java.util.Set<E>, org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.SetUtils:211","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"fromIndex":"index"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , int)","position":"org.apache.commons.collections4.list.AbstractLinkedList:127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:95","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:512","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:133","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return (java.util.Collection<?> == null) || (java.util.Collection<?>.isEmpty())","position":"org.apache.commons.collections4.CollectionUtils:1415","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:113","type":"CtReturnImpl"},"status":-2},{"failures":[144,145,146,147,148,149,152,153,154,155],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterListIterator:267","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:50","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsFalsePredicate.org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:503","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> , org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1990","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I)","position":"org.apache.commons.collections4.iterators.TransformIterator:142","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:109","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().putAll(java.util.Map<? extends K, ? extends V>)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:110","type":"CtInvocationImpl"},"status":-2},{"failures":[156],"variableMapping":{"object":"object"},"name":"add","transplant":{"sourceCode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>.isInstance(java.lang.Object)","position":"org.apache.commons.collections4.functors.InstanceofPredicate:70","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"added":"result","changed":"result"},"name":"add","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.list.GrowthList:155","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.MapTransformer<I, O>(java.util.Map<? super I, ? extends O>)","position":"org.apache.commons.collections4.functors.MapTransformer:53","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) != null","position":"org.apache.commons.collections4.map.AbstractHashedMap:1159","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterIterator:182","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Object[] java.lang.Object[] = null","position":"org.apache.commons.collections4.set.CompositeSet:182","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:257","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"fromIndexInclusive":"toIndex","toIndexExclusive":"fromIndex"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(this , int , int)","position":"org.apache.commons.collections4.list.AbstractLinkedList:200","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().subList(int, int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:107","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (java.lang.Object instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(java.lang.Object)).org.apache.commons.collections4.Put<?, ?>.equals(this.org.apache.commons.collections4.Put<K, V>))","position":"org.apache.commons.collections4.SplitMapUtils:155","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.DefaultedMap<K, V>(java.util.Map<K, V> , org.apache.commons.collections4.functors.FactoryTransformer.org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(org.apache.commons.collections4.Factory<? extends V>))","position":"org.apache.commons.collections4.map.DefaultedMap:108","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>))","position":"org.apache.commons.collections4.functors.SwitchClosure:97","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.LazySortedMap:153","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"return this.java.util.ListIterator<E>.hasNext()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:62","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:77","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++","position":"org.apache.commons.collections4.list.AbstractLinkedList:994","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:89","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends I>.remove()","position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.addAll(java.util.Collection<C>, java.lang.Iterable<? extends C>.iterator())","position":"org.apache.commons.collections4.CollectionUtils:1108","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:133","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"currentIterator"},"name":"add","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:91","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"outputStream":"out"},"name":"add","transplant":{"sourceCode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}","position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.map.DefaultedMap:180","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"left=\").append(\"null\")","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1364","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.LazySortedMap:135","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.collections4.map.MultiKeyMap:502","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.SynchronizedCollection:164","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"V = V","position":"org.apache.commons.collections4.map.Flat3Map:558","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<? extends E>.size()","position":"org.apache.commons.collections4.iterators.LoopingIterator:122","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * A range view of the {@link Trie}.\n */\nprivate abstract class RangeMap extends java.util.AbstractMap<K, V> implements java.util.SortedMap<K, V> {\n    /** \n     * The {@link #entrySet()} view.\n     */\nprivate transient volatile java.util.Set<java.util.Map.Entry<K, V>> entrySet;\n\n    /** \n     * Creates and returns an {@link #entrySet()} view of the {@link RangeMap}.\n     */\nprotected abstract java.util.Set<java.util.Map.Entry<K, V>> createEntrySet();\n\n    /** \n     * Returns the FROM Key.\n     */\nprotected abstract K getFromKey();\n\n    /** \n     * Whether or not the {@link #getFromKey()} is in the range.\n     */\nprotected abstract boolean isFromInclusive();\n\n    /** \n     * Returns the TO Key.\n     */\nprotected abstract K getToKey();\n\n    /** \n     * Whether or not the {@link #getToKey()} is in the range.\n     */\nprotected abstract boolean isToInclusive();\n\n    public java.util.Comparator<? super K> comparator() {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator();\n    }\n\n    @java.lang.Override\n    public boolean containsKey(final java.lang.Object key) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange(org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.castKey(java.lang.Object)))) {\n            return false;\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(java.lang.Object);\n    }\n\n    @java.lang.Override\n    public V remove(final java.lang.Object key) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange(org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.castKey(java.lang.Object)))) {\n            return null;\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object);\n    }\n\n    @java.lang.Override\n    public V get(final java.lang.Object key) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange(org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.castKey(java.lang.Object)))) {\n            return null;\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(java.lang.Object);\n    }\n\n    @java.lang.Override\n    public V put(final K key, final V value) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange(K))) {\n            throw new java.lang.IllegalArgumentException((\"Key is out of range: \" + K));\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.put(K, V);\n    }\n\n    @java.lang.Override\n    public java.util.Set<java.util.Map.Entry<K, V>> entrySet() {\n        if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n            java.util.Set<java.util.Map.Entry<K, V>> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.createEntrySet();\n        } \n        return java.util.Set<java.util.Map.Entry<K, V>>;\n    }\n\n    public java.util.SortedMap<K, V> subMap(final K fromKey, final K toKey) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange2(K))) {\n            throw new java.lang.IllegalArgumentException((\"FromKey is out of range: \" + K));\n        } \n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange2(K))) {\n            throw new java.lang.IllegalArgumentException((\"ToKey is out of range: \" + K));\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.createRangeMap(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isFromInclusive(), K, org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isToInclusive());\n    }\n\n    public java.util.SortedMap<K, V> headMap(final K toKey) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange2(K))) {\n            throw new java.lang.IllegalArgumentException((\"ToKey is out of range: \" + K));\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.createRangeMap(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getFromKey(), org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isFromInclusive(), K, org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isToInclusive());\n    }\n\n    public java.util.SortedMap<K, V> tailMap(final K fromKey) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange2(K))) {\n            throw new java.lang.IllegalArgumentException((\"FromKey is out of range: \" + K));\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.createRangeMap(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isFromInclusive(), org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getToKey(), org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isToInclusive());\n    }\n\n    /** \n     * Returns true if the provided key is greater than TO and less than FROM.\n     */\nprotected boolean inRange(final K key) {\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getFromKey();\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getToKey();\n        return ((K == null) || org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inFromRange(K, false))) && ((K == null) || org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inToRange(K, false)));\n    }\n\n    /** \n     * This form allows the high endpoint (as well as all legit keys).\n     */\nprotected boolean inRange2(final K key) {\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getFromKey();\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getToKey();\n        return ((K == null) || org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inFromRange(K, false))) && ((K == null) || org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inToRange(K, true)));\n    }\n\n    /** \n     * Returns true if the provided key is in the FROM range of the {@link RangeMap}.\n     */\nprotected boolean inFromRange(final K key, final boolean forceInclusive) {\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getFromKey();\n        final boolean boolean = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isFromInclusive();\n        final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.getKeyAnalyzer().compare(K, K);\n        if (boolean || boolean) {\n            return int >= 0;\n        } else {\n            return int > 0;\n        }\n    }\n\n    /** \n     * Returns true if the provided key is in the TO range of the {@link RangeMap}.\n     */\nprotected boolean inToRange(final K key, final boolean forceInclusive) {\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getToKey();\n        final boolean boolean = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isToInclusive();\n        final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.getKeyAnalyzer().compare(K, K);\n        if (boolean || boolean) {\n            return int <= 0;\n        } else {\n            return int < 0;\n        }\n    }\n\n    /** \n     * Creates and returns a sub-range view of the current {@link RangeMap}.\n     */\nprotected abstract java.util.SortedMap<K, V> createRangeMap(K fromKey, boolean fromInclusive, K toKey, boolean toInclusive);\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1675","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[])","position":"org.apache.commons.collections4.functors.InstantiateFactory:126","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:137","type":"CtReturnImpl"},"status":-2},{"failures":[157,158],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.set(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:145","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\")","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:718","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.SortedMap<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>);\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} ","position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1709","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:89","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\")","position":"org.apache.commons.collections4.functors.TransformedPredicate:54","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:141","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"Start index must not be less than zero\")","position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:85","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:65","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1599","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().size()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:92","type":"CtReturnImpl"},"status":-2},{"failures":[159],"variableMapping":{"this":"this","key":"key"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().nextKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:78","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.TransformingComparator:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}","position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.iterators.UnmodifiableMapIterator.org.apache.commons.collections4.iterators.UnmodifiableMapIterator.unmodifiableMapIterator(org.apache.commons.collections4.MapIterator<K, V>)","position":"org.apache.commons.collections4.IteratorUtils:475","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:257","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.ObjectOutputStream.writeObject(E)","position":"org.apache.commons.collections4.queue.CircularFifoQueue:121","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<I>.remove()","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:62","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().remove()","position":"org.apache.commons.collections4.queue.PredicatedQueue:115","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().poll()","position":"org.apache.commons.collections4.queue.PredicatedQueue:103","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(org.apache.commons.collections4.Factory<? extends O>)","position":"org.apache.commons.collections4.functors.FactoryTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[144,145,146,147,148,149,150,151,152,153,154,155],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.UnmodifiableCollection.org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection<V>)","position":"org.apache.commons.collections4.map.FixedSizeMap:159","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))","position":"org.apache.commons.collections4.map.LazySortedMap:126","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.Trie<K, V>.size()","position":"org.apache.commons.collections4.trie.UnmodifiableTrie:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (boolean) || org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())","position":"org.apache.commons.collections4.iterators.FilterIterator:86","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"object"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(java.lang.Object)","position":"org.apache.commons.collections4.map.StaticBucketMap:627","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>.isInstance(java.lang.Object)","position":"org.apache.commons.collections4.functors.InstanceofPredicate:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:144","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) - 1","position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = (int) - (int)","position":"org.apache.commons.collections4.queue.CircularFifoQueue:164","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)++","position":"org.apache.commons.collections4.iterators.FilterListIterator:134","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:106","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.bag.SynchronizedBag<E>.getBag().remove(java.lang.Object, int);\n}","position":"org.apache.commons.collections4.bag.SynchronizedBag:94","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.select(java.util.Collection<? extends E>, org.apache.commons.collections4.Predicate<? super E>, new java.util.ArrayList<E>(java.util.Collection<? extends E>.size()))","position":"org.apache.commons.collections4.ListUtils:188","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"List must not be null\")","position":"org.apache.commons.collections4.ListUtils:656","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().keySet()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:102","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collections.java.util.Collections.unmodifiableSet(org.apache.commons.collections4.Trie<K, V>.keySet())","position":"org.apache.commons.collections4.trie.UnmodifiableTrie:86","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((org.apache.commons.collections4.ResettableListIterator<E>)(org.apache.commons.collections4.iterators.EmptyListIterator.org.apache.commons.collections4.ResettableListIterator))","position":"org.apache.commons.collections4.iterators.EmptyListIterator:57","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.collections4.sequence.EditCommand:69","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:205","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().size();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:187","type":"CtSynchronizedImpl"},"status":-2},{"failures":[160],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.LoopingListIterator:215","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.bag.AbstractMapBag:377","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = -1","position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.LazyList:112","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{"value":"result"},"name":"replace","transplant":{"sourceCode":"E = E","position":"org.apache.commons.collections4.list.AbstractLinkedList:694","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:147","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.map.AbstractHashedMap:1104","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:175","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return ((java.util.Collection<?>)(java.lang.Object)).isEmpty()","position":"org.apache.commons.collections4.CollectionUtils:1386","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:112","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.StaticBucketMap.Values()","position":"org.apache.commons.collections4.map.StaticBucketMap:360","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.sequence.EditCommand<T>.accept(org.apache.commons.collections4.sequence.CommandVisitor<T>)","position":"org.apache.commons.collections4.sequence.EditScript:107","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:45","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.map.LinkedMap:254","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().comparator()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:80","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"tmpMap":"map"},"name":"add","transplant":{"sourceCode":"return java.util.SortedMap<K, V>","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:149","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()","position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceBaseIterator<K, java.lang.Object>.nextEntry().getKey()","position":"org.apache.commons.collections4.map.AbstractReferenceMap:876","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl"},"status":-2},{"failures":[141,142],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null));\n} ","position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"(int)++","position":"org.apache.commons.collections4.list.TreeList:1106","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.org.apache.commons.collections4.Predicate<? super E> = org.apache.commons.collections4.Predicate<? super E>","position":"org.apache.commons.collections4.iterators.FilterIterator:163","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"right=\")","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1375","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this)","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())))","position":"org.apache.commons.collections4.CollectionUtils:1399","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:210","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V)","name":"math","position":"org.apache.commons.collections4.map.LRUMap:312","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * The EntrySet iterator.\n */\nstatic class ReferenceEntrySetIterator<K, V> extends org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceBaseIterator<K, V> implements java.util.Iterator<java.util.Map.Entry<K, V>> {\n    public ReferenceEntrySetIterator(final org.apache.commons.collections4.map.AbstractReferenceMap<K, V> parent) {\n        org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceBaseIterator<K, V>.super(org.apache.commons.collections4.map.AbstractReferenceMap<K, V>);\n    }\n\n    public java.util.Map.Entry<K, V> next() {\n        return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceBaseIterator<K, V>.nextEntry();\n    }\n}","position":"org.apache.commons.collections4.map.AbstractReferenceMap:852","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:151","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.util.Map<K, V>.get(java.lang.Object)","position":"org.apache.commons.collections4.map.DefaultedMap:205","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Map<K, V>.containsKey(java.lang.Object)) == false) {\n    return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)));\n} ","position":"org.apache.commons.collections4.map.DefaultedMap:202","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:49","type":"CtThrowImpl"},"status":-2},{"failures":[161,162],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.OrPredicate.org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:306","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:102","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.iterators.FilterIterator:100","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) || ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey()","position":"org.apache.commons.collections4.map.AbstractLinkedMap:217","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:133","type":"CtThrowImpl"},"status":-2},{"failures":[163,164],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.Iterator<? extends E> = ((java.util.Iterator<? extends E>)(E))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:109","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.map.Flat3Map:651","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterListIterator:235","type":"CtAssignmentImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":121,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":150,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":164,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":7,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":44,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":17,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":156,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":131,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":115,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testSet":157,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":63,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":142,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":141,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":14,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":76,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":137,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":60,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":123,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":77,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":103,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":127,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":83,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":152,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":159,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":80,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":81,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":163,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":45,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":46,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetIteratorRemoveChangesMap":43,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":56,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":75,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":126,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":161,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":98,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":52,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":99,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":140,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":88,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":144,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":28,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":71,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":134,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":20,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":59,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":23,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":119,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":149,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":21,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":49,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":48,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":132,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":42,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":116,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":160,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":3,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":85,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":124,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":24,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":54,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":118,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":117,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":151,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveChangesMap":93,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":122,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":89,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":102,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":58,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":143,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":30,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":37,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":82,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":34,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":146,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":100,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":5,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":108,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":110,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":139,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":4,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":101,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":79,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":125,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":15,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":84,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":109,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":70,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":26,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testRemoveThenSet":158,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":78,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":86,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetIteratorRemoveChangesMap":95,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":153,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":133,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":104,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":55,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":145,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":29,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":113,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":27,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":114,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":6,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":112,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":128,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":91,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":90,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":9,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":73,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":32,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":35,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":38,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":72,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":136,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":33,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":39,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":19,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":129,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":96,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":155,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":12,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":69,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":120,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":8,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":68,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":94,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":154,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":135,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":61,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetRemoveChangesMap":40,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":97,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":0,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":36,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":106,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":1,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":107,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":148,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":18,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":87,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":67,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":31,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":10,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":16,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":64,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":65,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":105,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":2,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":147,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":74,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":92,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":162,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":130,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":111,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":51}}]
