[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return K","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2166","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.LazySortedMap:131","type":"CtReturnImpl"},"status":-2},{"failures":[0,1],"name":"returnValue","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:45","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2116","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)))","position":"org.apache.commons.collections4.map.DefaultedMap:203","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().removeAll(null)","position":"org.apache.commons.collections4.bag.CollectionBag:136","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated()","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"tmpMap":"map"},"name":"add","transplant":{"sourceCode":"return java.util.SortedMap<K, V>","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:156","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Transformer must not be null\")","position":"org.apache.commons.collections4.IteratorUtils:676","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.SynchronizedCollection:73","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().last()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:85","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().first()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:162","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().removeAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:140","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractMapBag<E>.retainAll(((org.apache.commons.collections4.Bag<?>)(java.util.Collection<?>)))","position":"org.apache.commons.collections4.bag.AbstractMapBag:363","type":"CtReturnImpl"},"status":-2},{"failures":[2,3],"variableMapping":{"iterator":"currentIterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.Iterator<? extends E> = ((java.util.Iterator<? extends E>)(E))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:109","type":"CtAssignmentImpl"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12],"variableMapping":{"startIndex":"nextIndex","index":"nextIndex"},"name":"replace","transplant":{"sourceCode":"return ((this.int) - (this.int)) - 1","position":"org.apache.commons.collections4.iterators.ArrayListIterator:154","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) - 1","position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.bag.SynchronizedBag.SynchronizedBagSet(java.util.Set<E> , java.lang.Object)","position":"org.apache.commons.collections4.bag.SynchronizedBag:102","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsValue(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:86","type":"CtReturnImpl"},"status":-2},{"failures":[13],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} ","position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.collections4.list.CursorableLinkedList:487","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24],"variableMapping":{"removed":"nextObjectSet","nextCalled":"nextObjectSet"},"name":"add","transplant":{"sourceCode":"if ((!(this.boolean)) || (this.boolean)) {\n    throw new java.lang.IllegalStateException();\n} ","position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.nextIndex()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:115","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.isEqualCollection(org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.util.Collection<?>, org.apache.commons.collections4.Transformer), org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.util.Collection<?>, org.apache.commons.collections4.Transformer))","position":"org.apache.commons.collections4.CollectionUtils:557","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated()))","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:58","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionTransformer invoked\")","position":"org.apache.commons.collections4.functors.ExceptionTransformer:67","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"add() not supported for empty Iterator\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:61","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator()","position":"org.apache.commons.collections4.list.CursorableLinkedList:332","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.List<E>.size()) - 1","position":"org.apache.commons.collections4.iterators.LoopingListIterator:172","type":"CtReturnImpl"},"status":-2},{"failures":[25,26,27,28,29,30,31,32],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"if ((this.java.util.ListIterator<E>.hasPrevious()) == false) {\n    E E = null;\n    while (this.java.util.ListIterator<E>.hasNext()) {\n        E = this.java.util.ListIterator<E>.next();\n    }\n    this.java.util.ListIterator<E>.previous();\n    return E;\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previous()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:82","type":"CtReturnImpl"},"status":-1},{"failures":[33,34,35],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().add(E)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:96","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 1","position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().hashCode()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:117","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)))","position":"org.apache.commons.collections4.CollectionUtils:1106","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return -1","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl"},"status":-2},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,35,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 0","position":"org.apache.commons.collections4.list.TreeList:701","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:154","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((java.util.Map.Entry<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} ","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:737","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Map.Entry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} ","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:108","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.SingletonIterator:110","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} ","position":"org.apache.commons.collections4.iterators.PushbackIterator:57","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().subList(int, int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:107","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.ListUtils.org.apache.commons.collections4.ListUtils.removeAll(java.util.Collection<E>, java.util.Collection<?>)","position":"org.apache.commons.collections4.CollectionUtils:1690","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:115","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"endIndex":"endIndex","index":"index"},"name":"add","transplant":{"sourceCode":"return (int) < (int)","position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (this.int) < (this.int)","position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:111","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceBaseIterator<K, V>.checkMod()","position":"org.apache.commons.collections4.map.AbstractReferenceMap:818","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator();\n} ","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:144","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"canRemove":"previousObjectSet"},"name":"add","transplant":{"sourceCode":"this.boolean = false","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:725","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterListIterator:267","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:181","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null))","position":"org.apache.commons.collections4.list.GrowthList:184","type":"CtInvocationImpl"},"status":-2},{"failures":[374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,18,390,391,392,393],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:132","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) < (int)","position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.map.StaticBucketMap:214","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:236","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n    throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n} ","position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Comparator<? super E> java.util.Comparator<? super E> = ((java.util.Comparator<? super E>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.bag.TreeBag:128","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 0","position":"org.apache.commons.collections4.list.TreeList:701","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:205","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 0 :\n    break;","position":"org.apache.commons.collections4.map.Flat3Map:1202","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NotPredicate.org.apache.commons.collections4.functors.NotPredicate.notPredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:452","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Key cannot be null\")","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:131","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Map must not be null\")","position":"org.apache.commons.collections4.map.AbstractMapDecorator:62","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.bag.TreeBag<E>.(comparator()) == null) && (!(E instanceof java.lang.Comparable))) {\n    throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"));\n} ","position":"org.apache.commons.collections4.bag.TreeBag:86","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:101","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.util.ConcurrentModificationException()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1662","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:125","type":"CtInvocationImpl"},"status":-2},{"failures":[13],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"mutation","status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.bag.TreeBag:117","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:78","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"((java.lang.ref.Reference<V>)(java.lang.Object)).clear()","position":"org.apache.commons.collections4.map.AbstractReferenceMap:648","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"MapIterator[]\"","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:768","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toString();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:211","type":"CtSynchronizedImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.ClosureUtils.org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.org.apache.commons.collections4.functors.InvokerTransformer.<E,java.lang.Object>invokerTransformer(java.lang.String, java.lang.Class<?>[], java.lang.Object[]))","position":"org.apache.commons.collections4.ClosureUtils:185","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:64","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>))","position":"org.apache.commons.collections4.functors.SwitchClosure:97","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:72","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"lastUsedIterator"},"name":"replace","transplant":{"sourceCode":"if ((this.java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    this.java.util.Iterator<? extends E>.reset();\n} ","position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.collections4.map.Flat3Map:887","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toString()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:212","type":"CtReturnImpl"},"status":0},{"failures":[4,5,6,7,9,10,11,12],"variableMapping":{"modCount":"nextIndex"},"name":"add","transplant":{"sourceCode":"this.int -= 2","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:977","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)--","position":"org.apache.commons.collections4.iterators.FilterListIterator:150","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Iterator<? extends I>.remove()","position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().comparator()","position":"org.apache.commons.collections4.map.LazySortedMap:139","type":"CtReturnImpl"},"status":-2},{"failures":[394,395],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<K, V> = java.util.Iterator<java.util.Map.Entry<K, V>>.next()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:84","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object))","position":"org.apache.commons.collections4.CollectionUtils:1347","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().isEmpty()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:98","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (java.lang.ref.Reference<?> != null) {\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>);\n    java.lang.ref.Reference<?> = java.lang.ref.ReferenceQueue<java.lang.Object>.poll();\n}","position":"org.apache.commons.collections4.map.AbstractReferenceMap:380","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:54","type":"CtReturnImpl"},"status":-2},{"failures":[396,397,274],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 1","position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:182","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterIterator:103","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.IfClosure.org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(org.apache.commons.collections4.Predicate<? super E>, org.apache.commons.collections4.Closure<? super E>)","position":"org.apache.commons.collections4.ClosureUtils:238","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:132","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"(int)++","position":"org.apache.commons.collections4.bag.AbstractMapBag:252","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList<E>(java.util.List<E>)","position":"org.apache.commons.collections4.list.FixedSizeList:56","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:80","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}","position":"org.apache.commons.collections4.functors.WhileClosure:88","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(java.util.Collection<?> , java.util.Collection<?>)","position":"org.apache.commons.collections4.CollectionUtils:514","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:86","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.trie.UnmodifiableTrie:118","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterIterator:182","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"sub":"map"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:115","type":"CtReturnImpl"},"status":-2},{"failures":[398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417],"variableMapping":{"obj":"object"},"name":"add","transplant":{"sourceCode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().remove(java.lang.Object, int)","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:77","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:152","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} ","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final E E : E[]) {\n    org.apache.commons.collections4.bag.TransformedBag<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}","position":"org.apache.commons.collections4.bag.TransformedBag:82","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl"},"status":-2},{"failures":[14,15,418,17,19],"variableMapping":{"added":"nextObjectSet","changed":"nextObjectSet"},"name":"replace","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterIterator:178","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"obj":"key"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().containsKey(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:64","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterListIterator:211","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"collection":"collection"},"name":"add","transplant":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:79","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.TransformedCollection.org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(java.util.Collection<E>, org.apache.commons.collections4.Transformer<? super E, ? extends E>)","position":"org.apache.commons.collections4.CollectionUtils:1772","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"in":"in"},"name":"add","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Comparator<? super E> java.util.Comparator<? super E> = ((java.util.Comparator<? super E>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.bag.TreeBag:128","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:103","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n    return int;\n} ","position":"org.apache.commons.collections4.map.LinkedMap:168","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().size()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:118","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().containsValue(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:68","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(V, java.lang.Object)) {\n    java.util.Iterator<V>.remove();\n    return true;\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1518","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeCloneFactory<T>(T , java.lang.reflect.Method)","position":"org.apache.commons.collections4.functors.PrototypeFactory:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate()","position":"org.apache.commons.collections4.functors.IdentityPredicate:48","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ExceptionPredicate.org.apache.commons.collections4.functors.ExceptionPredicate.<T>exceptionPredicate()","position":"org.apache.commons.collections4.PredicateUtils:91","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceBaseIterator<K, V>.nextEntry().getKey()","position":"org.apache.commons.collections4.map.AbstractReferenceMap:905","type":"CtReturnImpl"},"status":-2},{"failures":[419,420,421,422,423,424,425],"binaryOperator":"org.apache.commons.collections4.Transformer<? super E, ?> == null","name":"removeConditional","position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"mutation","status":-1},{"failures":[],"name":"inlineConstant","inlineConstant":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.List<java.lang.String>","position":"org.apache.commons.collections4.EnumerationUtils:66","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:54","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null))","position":"org.apache.commons.collections4.list.GrowthList:184","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * The sublist implementation for AbstractLinkedList.\n */\nprotected static class LinkedSubList<E> extends java.util.AbstractList<E> {\n    /** \n     * The main list\n     */\norg.apache.commons.collections4.list.AbstractLinkedList<E> parent;\n\n    /** \n     * Offset from the main list\n     */\nint offset;\n\n    /** \n     * Sublist size\n     */\nint size;\n\n    /** \n     * Sublist modCount\n     */\nint expectedModCount;\n\n    protected LinkedSubList(final org.apache.commons.collections4.list.AbstractLinkedList<E> parent ,final int fromIndex ,final int toIndex) {\n        if (int < 0) {\n            throw new java.lang.IndexOutOfBoundsException((\"fromIndex = \" + int));\n        } \n        if (int > (org.apache.commons.collections4.list.AbstractLinkedList<E>.size())) {\n            throw new java.lang.IndexOutOfBoundsException((\"toIndex = \" + int));\n        } \n        if (int > int) {\n            throw new java.lang.IllegalArgumentException(((((\"fromIndex(\" + int) + \") > toIndex(\") + int) + \")\"));\n        } \n        this.org.apache.commons.collections4.list.AbstractLinkedList<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>;\n        this.int = int;\n        this.int = int - int;\n        this.int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n    }\n\n    @java.lang.Override\n    public int size() {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return int;\n    }\n\n    @java.lang.Override\n    public E get(final int index) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, int);\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((int + (int)));\n    }\n\n    @java.lang.Override\n    public void add(final int index, final E obj) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, ((int) + 1));\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        org.apache.commons.collections4.list.AbstractLinkedList<E>.add((int + (int)), E);\n        int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n        (int)++;\n        (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n    }\n\n    @java.lang.Override\n    public E remove(final int index) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, int);\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((int + (int)));\n        int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n        (int)--;\n        (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        return E;\n    }\n\n    @java.lang.Override\n    public boolean addAll(final java.util.Collection<? extends E> coll) {\n        return org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.addAll(int, java.util.Collection<? extends E>);\n    }\n\n    @java.lang.Override\n    public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, ((int) + 1));\n        final int int = java.util.Collection<? extends E>.size();\n        if (int == 0) {\n            return false;\n        } \n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + int), java.util.Collection<? extends E>);\n        int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n        int += int;\n        (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        return true;\n    }\n\n    @java.lang.Override\n    public E set(final int index, final E obj) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, int);\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((int + (int)), E);\n    }\n\n    @java.lang.Override\n    public void clear() {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.iterator();\n        while (java.util.Iterator<E>.hasNext()) {\n            java.util.Iterator<E>.next();\n            java.util.Iterator<E>.remove();\n        }\n    }\n\n    @java.lang.Override\n    public java.util.Iterator<E> iterator() {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListIterator(this);\n    }\n\n    @java.lang.Override\n    public java.util.ListIterator<E> listIterator(final int index) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, ((int) + 1));\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(this, int);\n    }\n\n    @java.lang.Override\n    public java.util.List<E> subList(final int fromIndexInclusive, final int toIndexExclusive) {\n        return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(org.apache.commons.collections4.list.AbstractLinkedList<E> , (int + (int)) , (int + (int)));\n    }\n\n    protected void rangeCheck(final int index, final int beyond) {\n        if ((int < 0) || (int >= int)) {\n            throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n        } \n    }\n\n    protected void checkModCount() {\n        if ((org.apache.commons.collections4.list.AbstractLinkedList<E>.int) != (int)) {\n            throw new java.util.ConcurrentModificationException();\n        } \n    }\n}","position":"org.apache.commons.collections4.list.AbstractLinkedList:938","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.LoopingListIterator:215","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"private class ValueIterator extends org.apache.commons.collections4.map.StaticBucketMap<K, V>.BaseIterator implements java.util.Iterator<V> {\n    public V next() {\n        return org.apache.commons.collections4.map.StaticBucketMap<K, V>.BaseIterator.nextEntry().getValue();\n    }\n}","position":"org.apache.commons.collections4.map.StaticBucketMap:541","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().iterator())","position":"org.apache.commons.collections4.list.FixedSizeList:108","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \")","name":"math","position":"org.apache.commons.collections4.list.AbstractLinkedList:547","type":"mutation","status":-2},{"failures":[],"variableMapping":{"this":"this","index":"index","object":"object"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.FixedSizeList:148","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (E == null) {\n    E = org.apache.commons.collections4.Factory<? extends E>.create();\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E);\n    return E;\n} ","position":"org.apache.commons.collections4.list.LazyList:116","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} ","position":"org.apache.commons.collections4.map.MultiKeyMap:269","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:175","type":"CtSynchronizedImpl"},"status":-2},{"failures":[426],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:84","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"entry":"entry"},"name":"add","transplant":{"sourceCode":"if (java.util.Map.Entry<K, V> == null) {\n    return null;\n} ","position":"org.apache.commons.collections4.map.AbstractReferenceMap:245","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.getValue()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:64","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} ","position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.DefaultedMap<K, V>.this(new java.util.HashMap<K, V>(), org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.DefaultedMap:154","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}","position":"org.apache.commons.collections4.functors.WhileClosure:88","type":"CtWhileImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V)","name":"math","position":"org.apache.commons.collections4.map.LRUMap:259","type":"mutation","status":-2},{"failures":[],"variableMapping":{"nextIndex":"nextIndex"},"name":"add","transplant":{"sourceCode":"(int)++","position":"org.apache.commons.collections4.iterators.FilterListIterator:134","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.collections4.list.AbstractLinkedList<E>.size()","position":"org.apache.commons.collections4.list.CursorableLinkedList:475","type":"CtAssignmentImpl"},"status":0},{"failures":[427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>>.remove()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:99","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(java.util.Iterator<? extends E> , (int + 1) , int , int , this , org.apache.commons.collections4.list.TreeList.AVLNode<E>)","position":"org.apache.commons.collections4.list.TreeList:383","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null)","position":"org.apache.commons.collections4.FactoryUtils:68","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:93","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \")","position":"org.apache.commons.collections4.functors.InstantiateTransformer:118","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:109","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().iterator()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:116","type":"CtReturnImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:109","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:137","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:133","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":8,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":328,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":232,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":364,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":76,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":103,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":349,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":43,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":79,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":305,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":208,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":112,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":31,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":381,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":110,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":117,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":180,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":148,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":26,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":33,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":14,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":440,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":452,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":278,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":168,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":30,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":259,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":176,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":4,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":297,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":28,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":96,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":194,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":50,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":365,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":114,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":372,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":235,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":333,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":47,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":172,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":260,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":430,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":320,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":360,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":433,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":58,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":186,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":331,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":428,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":63,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIteratorRemove":134,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":5,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":171,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":196,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":265,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":81,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":294,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":210,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":126,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":89,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":279,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":257,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":292,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":107,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIsEmpty":146,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":266,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":270,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":57,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":71,"org.apache.commons.collections4.list.TreeListTest.testFullListSerialization":449,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":18,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":149,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":247,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":419,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":354,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":175,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":216,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":48,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":376,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":67,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIsEmpty":132,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":253,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":302,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":403,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":404,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":225,"org.apache.commons.collections4.list.TreeListTest.testSerializeDeserializeThenCompare":451,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":65,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":398,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":324,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":161,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":141,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":417,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":443,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":123,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":137,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":23,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":73,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":269,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":407,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":281,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":205,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":6,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":87,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":233,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":201,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":402,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":46,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":373,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":460,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":293,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":370,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":184,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":359,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":412,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":226,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":291,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":348,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":244,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":393,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":303,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":447,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":437,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":24,"org.apache.commons.collections4.list.TreeListTest.testFullListCompatibility":450,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":185,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":344,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":111,"org.apache.commons.collections4.set.TransformedSetTest.testSetHashCode":140,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":461,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":405,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":454,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":85,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":158,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":190,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":241,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":157,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":166,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":435,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":77,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":29,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":49,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":37,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":458,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":423,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":70,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":338,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":90,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":298,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":187,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":427,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":319,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":367,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":61,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":74,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":421,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":246,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":311,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":51,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":323,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":212,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":457,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":62,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":174,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":198,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":268,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":195,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":102,"org.apache.commons.collections4.list.TreeListTest.testListEquals":432,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":409,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":346,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":327,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":45,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":400,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":321,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":408,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":242,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":154,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":54,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":261,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":1,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":272,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":341,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":252,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":439,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":197,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":230,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":335,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":318,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":345,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":38,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":221,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":116,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":307,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":131,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":411,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":389,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testFirstKey":426,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":209,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":121,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":84,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":199,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":273,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":358,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":387,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":388,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":188,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":379,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":35,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":380,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":392,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":219,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":192,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":177,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":27,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":13,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":336,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":383,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":459,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":448,"org.apache.commons.collections4.list.TreeListTest.testCollectionSize":462,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":144,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":397,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":169,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":396,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":413,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":276,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":453,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":218,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":207,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":250,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":41,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":88,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":243,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":213,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":115,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":153,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":401,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":337,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":262,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":399,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":203,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":240,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":95,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":237,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":228,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":248,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":431,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":55,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":317,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":17,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":429,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":56,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":300,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":406,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":178,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":44,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":251,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":254,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":347,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":189,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":239,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":362,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":182,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":106,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":66,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":64,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":357,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":356,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":385,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":94,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":375,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":217,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":369,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":214,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":308,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":100,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":75,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":10,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":366,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":384,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":105,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":125,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":378,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":339,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":342,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":414,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":97,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":119,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":135,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":284,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":124,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":267,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":283,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":446,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":351,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":434,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":418,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":456,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":245,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":436,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":295,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":394,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":441,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":113,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":334,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetHashCode":118,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetHashCode":179,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":60,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":7,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":361,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":202,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":310,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":464,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":82,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":224,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":34,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":130,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":442,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testEmptyIterator":22,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":271,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":229,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":438,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":32,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":288,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":164,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":455,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":263,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":330,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":465,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":374,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":3,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":424,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":343,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":165,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":181,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":0,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":463,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":395,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":204,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":312,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":289,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray2":142,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":352,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":329,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":93,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":145,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":80,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":191,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":382,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":9,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":299,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":2,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":314,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":133,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":280,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":211,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":420,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":128,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":53,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":42,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":155,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":220,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":167,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":25,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":83,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":309,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":371,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":150,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":386,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":39,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":101,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":416,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":255,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":160,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":21,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":332,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":275,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":286,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":193,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":108,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":19,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":282,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":304,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":139,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":151,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":274,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":129,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":136,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":368,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":315,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":290,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":16,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":109,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":72,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":422,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":410,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":285,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":223,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":306,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":350,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":99,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":322,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":52,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":222,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":159,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":183,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":231,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":296,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":20,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":173,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":91,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetHashCode":127,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":377,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":445,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":147,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":104,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":425,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":258,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":206,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":68,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":156,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":234,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":256,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":313,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":12,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":390,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":11,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":36,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":163,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":215,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":98,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":355,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":200,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":40,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":238,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":287,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":69,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":325,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":316,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":236,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":277,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":391,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":415,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":363,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":170,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":353,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIteratorRemove":143,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":444,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":78,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":301,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":264,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":326,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":227,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":122,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":152}}]
