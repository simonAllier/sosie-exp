[{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapEntryIterator()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1601","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().iterator())","position":"org.apache.commons.collections4.list.FixedSizeList:108","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iClosure":"closure"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.Closure<? super E>","position":"org.apache.commons.collections4.functors.ClosureTransformer:83","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>))","position":"org.apache.commons.collections4.functors.ForClosure:56","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.ArrayStack<E>.pop()","position":"org.apache.commons.collections4.iterators.PushbackIterator:96","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = org.apache.commons.collections4.queue.CircularFifoQueue<E>.increment(int)","position":"org.apache.commons.collections4.queue.CircularFifoQueue:370","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsFalsePredicate.org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:503","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(0, java.util.List<T>.size(), 0, java.util.List<T>.size(), org.apache.commons.collections4.sequence.EditScript<T>)","position":"org.apache.commons.collections4.sequence.SequencesComparator:130","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"sub":"map"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:146","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"removed":"hasNext","beforeFirst":"hasNext"},"name":"add","transplant":{"sourceCode":"if ((this.boolean) || (this.boolean)) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.set.CompositeSet<K> org.apache.commons.collections4.set.CompositeSet<K> = new org.apache.commons.collections4.set.CompositeSet<K>()","position":"org.apache.commons.collections4.map.CompositeMap:320","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:122","type":"CtLocalVariableImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.FilterListIterator:232","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return int & (int - 1)","position":"org.apache.commons.collections4.map.AbstractHashedMap:439","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) - 1","position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.push(java.util.Map<?, ?>)","position":"org.apache.commons.collections4.MapUtils:988","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.bag.TreeBag:117","type":"CtInvocationImpl"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91],"variableMapping":{"this":"this","index":"index"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(java.lang.Object)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1716","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:175","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}","position":"org.apache.commons.collections4.MapUtils:1162","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:60","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}","position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.iterators.PushbackIterator<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.PushbackIterator:65","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().nextKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:78","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"value2":"object","value1":"lock"},"name":"add","transplant":{"sourceCode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object == null ? false : java.lang.Object.equals(java.lang.Object))","position":"org.apache.commons.collections4.list.AbstractLinkedList:416","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == this) {\n        return true;\n    } \n    return (java.lang.Object == this) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:182","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * A {@link Set} view of a {@link RangeMap}.\n */\nprivate class RangeEntrySet extends java.util.AbstractSet<java.util.Map.Entry<K, V>> {\n    private final org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap delegate;\n\n    private transient int size = -1;\n\n    private transient int expectedModCount;\n\n    /** \n     * Creates a {@link RangeEntrySet}.\n     */\npublic RangeEntrySet(final org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap delegate) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap == null) {\n            throw new java.lang.NullPointerException(\"delegate\");\n        } \n        this.org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap;\n    }\n\n    @java.lang.Override\n    public java.util.Iterator<java.util.Map.Entry<K, V>> iterator() {\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getFromKey();\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getToKey();\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null;\n        if (K == null) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.ceilingEntry(K);\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null;\n        if (K != null) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.ceilingEntry(K);\n        } \n        return new EntryIterator(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> , org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n\n    @java.lang.Override\n    public int size() {\n        if (((int) == (-1)) || ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int))) {\n            int = 0;\n            for (final java.util.Iterator<?> java.util.Iterator<?> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeEntrySet.iterator() ; java.util.Iterator<?>.hasNext() ; java.util.Iterator<?>.next()) {\n                ++(int);\n            }\n            int = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int;\n        } \n        return int;\n    }\n\n    @java.lang.Override\n    public boolean isEmpty() {\n        return !(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeEntrySet.iterator().hasNext());\n    }\n\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    @java.lang.Override\n    public boolean contains(final java.lang.Object o) {\n        if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n            return false;\n        } \n        final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(java.lang.Object));\n        final K K = java.util.Map.Entry<K, V>.getKey();\n        if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(K))) {\n            return false;\n        } \n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getEntry(K);\n        return (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue(), java.util.Map.Entry<K, V>.getValue()));\n    }\n\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    @java.lang.Override\n    public boolean remove(final java.lang.Object o) {\n        if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n            return false;\n        } \n        final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(java.lang.Object));\n        final K K = java.util.Map.Entry<K, V>.getKey();\n        if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(K))) {\n            return false;\n        } \n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getEntry(K);\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue(), java.util.Map.Entry<K, V>.getValue()))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n            return true;\n        } \n        return false;\n    }\n\n    /** \n     * An {@link Iterator} for {@link RangeEntrySet}s.\n     */\nprivate final class EntryIterator extends org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.TrieIterator<java.util.Map.Entry<K, V>> {\n        private final K excludedKey;\n\n        /** \n         * Creates a {@link EntryIterator}.\n         */\nprivate EntryIterator(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> first ,final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> last) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.TrieIterator<java.util.Map.Entry<K, V>>.super(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n            this.K = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null;\n        }\n\n        @java.lang.Override\n        public boolean hasNext() {\n            return ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, K)));\n        }\n\n        public java.util.Map.Entry<K, V> next() {\n            if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) || org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, K))) {\n                throw new java.util.NoSuchElementException();\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.TrieIterator<java.util.Map.Entry<K, V>>.nextEntry();\n        }\n    }\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1954","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.LoopingListIterator:145","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.CollatingIterator:401","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"iArgs":"iArgs","iConstructor":"iConstructor"},"name":"replace","transplant":{"sourceCode":"return this.java.lang.reflect.Constructor<T>.newInstance(this.java.lang.Object[])","position":"org.apache.commons.collections4.functors.InstantiateFactory:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[]);\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: InstantiationException\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor must be public\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor threw an exception\" , java.lang.reflect.InvocationTargetException);\n}","position":"org.apache.commons.collections4.functors.InstantiateFactory:125","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear()","position":"org.apache.commons.collections4.map.TransformedSortedMap:97","type":"CtInvocationImpl"},"status":-2},{"failures":[92],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated()","position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}","position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().remove(java.lang.Object, int)","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:77","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}","position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toString();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:211","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:137","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:133","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getFromKey()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1793","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().first()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:92","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.getEntry(int).getValue()","position":"org.apache.commons.collections4.map.LinkedMap:155","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsFalsePredicate.org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:503","type":"CtReturnImpl"},"status":-2},{"failures":[93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().lastKey()","position":"org.apache.commons.collections4.bag.TreeBag:100","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} ","position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Closure<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} ","position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtIfImpl"},"status":-2},{"failures":[135],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\")","position":"org.apache.commons.collections4.collection.IndexedCollection:244","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:73","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.util.Collection<? super E>) != null) {\n    if ((E) != null) {\n        java.util.Collection<? super E>.remove(E);\n    } else {\n        throw new java.lang.IllegalStateException(\"next() must have been called for remove() to function\");\n    }\n} else {\n    throw new java.lang.UnsupportedOperationException(\"No Collection associated with this Iterator\");\n}","position":"org.apache.commons.collections4.iterators.EnumerationIterator:107","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:119","type":"CtLocalVariableImpl"},"status":-2},{"failures":[136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"binaryOperator":"(int) < (int)","name":"conditionalBoundary","position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (java.util.Set<E> java.util.Set<E> : java.util.Set<E>[]) {\n    org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>);\n}","position":"org.apache.commons.collections4.set.CompositeSet:378","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:227","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int","position":"org.apache.commons.collections4.map.StaticBucketMap:179","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} ","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"key"},"name":"replace","transplant":{"sourceCode":"return java.lang.Object","position":"org.apache.commons.collections4.map.AbstractHashedMap:1092","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>.get(java.lang.Object)","position":"org.apache.commons.collections4.map.DefaultedMap:205","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean) {\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    org.apache.commons.collections4.map.LRUMap<K, V>.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addMapping(int, int, K, V);\n}","position":"org.apache.commons.collections4.map.LRUMap:268","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().peek()","position":"org.apache.commons.collections4.queue.PredicatedQueue:107","type":"CtReturnImpl"},"status":-2},{"failures":[155,156],"variableMapping":{"iterator":"iterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<java.util.Map.Entry<K, V>>(this.java.util.Iterator<java.util.Map.Entry<K, V>>)","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:145","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>> = java.util.Set<java.util.Map.Entry<K, V>>.iterator()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:92","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:95","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:152","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\")","name":"math","position":"org.apache.commons.collections4.collection.PredicatedCollection:101","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().lastIndexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.FixedSizeList:113","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The list of items must not be null\")","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:95","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.iterators.PushbackIterator:105","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return K","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1980","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:85","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:350","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:322","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.PeekingIterator:87","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} ","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl"},"status":-2},{"failures":[13,157,26],"variableMapping":{"this":"this","index":"index"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.GrowthList:186","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet(this)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1921","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>.entrySet()","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:102","type":"CtReturnImpl"},"status":-2},{"failures":[158],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.map.AbstractMapDecorator:128","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null == (java.util.Map<T, java.lang.Integer>) ? null == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(org.apache.commons.collections4.comparators.FixedOrderComparator<?>.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.int))) && ((boolean) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior))","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:288","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>(8)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:80","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:126","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.LazyList:115","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().comparator()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:105","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:89","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>","position":"org.apache.commons.collections4.map.MultiKeyMap:142","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:138","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)) ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : null","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:260","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.OnePredicate.org.apache.commons.collections4.functors.OnePredicate.onePredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:372","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:129","type":"CtIfImpl"},"status":-2},{"failures":[159],"binaryOperator":"int < int","name":"conditionalBoundary","position":"org.apache.commons.collections4.list.LazyList:126","type":"mutation","status":-1},{"failures":[],"variableMapping":{"predicate":"iPredicate"},"name":"add","transplant":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} ","position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}","position":"org.apache.commons.collections4.functors.WhileClosure:88","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.StaticBucketMap.EntrySet()","position":"org.apache.commons.collections4.map.StaticBucketMap:369","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().entrySet()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:90","type":"CtReturnImpl"},"status":-2},{"failures":[160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,13,157,14,15,16,17,406,19,20,23,24,26,407,28,29,30,408,32,33,409,34,35,36,37,410,38,39,40,41,411,42,43,44,412,45,48,413,49,50,414,51,52,415,53,54,55,56,416,57,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,135,459,460,461,462,463,58,464,59,465,60,466,467,468,469,470,471,61,62,472,63,473,474,475,64,65,476,66,477,67,68,69,478,70,71,72,73,74,479,480,75,481,76,482,77,78,483,484,79,80,81,485,486,82,83,84,85,86,87,88,487,488,89,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,94,95,96,97,98,99,100,101,102,103,610,104,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,105,106,107,108,109,661,110,111,662,663,664,665,666,667,668,669,670,671,112,113,114,115,116,117,118,119,120,121,672,122,673,674,675,676,677,678,679,680,124,125,126,127,128,129,130,131,132,133,681,134,159,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,90,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,91,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:154","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:124","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.SortedMap<K, V>","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().headMap(K)","position":"org.apache.commons.collections4.map.TransformedSortedMap:150","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator<E>.getListIterator().set(E)","position":"org.apache.commons.collections4.list.TransformedList:188","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.EnumerationIterator<E>.this(java.util.Enumeration<? extends E>, null)","position":"org.apache.commons.collections4.iterators.EnumerationIterator:56","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(V)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2094","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"))","position":"org.apache.commons.collections4.iterators.ArrayIterator:114","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.LazySortedMap:131","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.LazySortedMap:135","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\")","name":"math","position":"org.apache.commons.collections4.bag.TreeBag:87","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.PredicatedMap<K, V>.validate(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}","position":"org.apache.commons.collections4.map.PredicatedMap:186","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"))","position":"org.apache.commons.collections4.iterators.ArrayIterator:114","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.size()","position":"org.apache.commons.collections4.map.ListOrderedMap:514","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.collection.SynchronizedCollection<T>(java.util.Collection<T>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:61","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:129","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"hasNext":"nextObjectSet"},"name":"add","transplant":{"sourceCode":"return (this.boolean) == false","position":"org.apache.commons.collections4.map.SingletonMap:427","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.CompositeMap<K, V>.addComposited(java.util.Map<K, V>[][int])","position":"org.apache.commons.collections4.map.CompositeMap:111","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate()","position":"org.apache.commons.collections4.functors.IdentityPredicate:48","type":"CtReturnImpl"},"status":-2},{"failures":[799,800,801,802,803,804,805,806],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"this.java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}","position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl"},"status":-1},{"failures":[807,808],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\")","position":"org.apache.commons.collections4.comparators.ComparatorChain:240","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingIterator:85","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"ListIterator must not be null\")","position":"org.apache.commons.collections4.IteratorUtils:722","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"))","position":"org.apache.commons.collections4.iterators.ArrayIterator:114","type":"CtThrowImpl"},"status":-2},{"failures":[],"binaryOperator":"((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\")","name":"math","position":"org.apache.commons.collections4.map.LRUMap:259","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.collections4.bag.AbstractMapBag:439","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().size()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:188","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().iterator())","position":"org.apache.commons.collections4.list.UnmodifiableList:78","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.list.AbstractListDecorator:75","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((org.apache.commons.collections4.Bag<E>)(org.apache.commons.collections4.BagUtils.org.apache.commons.collections4.Bag))","position":"org.apache.commons.collections4.BagUtils:249","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:198","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"sub":"map"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:146","type":"CtReturnImpl"},"status":-2},{"failures":[809,810,645],"variableMapping":{"array":"object"},"name":"replace","transplant":{"sourceCode":"return T[]","position":"org.apache.commons.collections4.bag.AbstractMapBag:479","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray(T[]);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:163","type":"CtSynchronizedImpl"},"status":-1},{"failures":[811,812,813,814,815,816,817,818,819,820],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return 0","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return K[].int","position":"org.apache.commons.collections4.keyvalue.MultiKey:206","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getKey()","position":"org.apache.commons.collections4.map.MultiKeyMap:694","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>.isInstance(java.lang.Object)","position":"org.apache.commons.collections4.functors.InstanceofPredicate:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.ListOrderedMap.KeySetView<K>(this)","position":"org.apache.commons.collections4.map.ListOrderedMap:292","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().entrySet()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:90","type":"CtReturnImpl"},"status":-2},{"failures":[7],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterListIterator:271","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.list.CursorableLinkedList<E>.cursor(0)","position":"org.apache.commons.collections4.list.CursorableLinkedList:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.LazyList:112","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().clear()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:104","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:225","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final E E = org.apache.commons.collections4.list.TreeList.AVLNode<E>.getValue()","position":"org.apache.commons.collections4.list.TreeList:1077","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Map.Entry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} ","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:108","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int))","name":"math","position":"org.apache.commons.collections4.map.LRUMap:271","type":"mutation","status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"variableMapping":{"exhausted":"nextObjectSet"},"name":"replace","transplant":{"sourceCode":"if (this.boolean) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.PeekingIterator:97","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceMapIterator<K, V>(this)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:307","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.entrySet())","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:104","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n} ","position":"org.apache.commons.collections4.functors.FunctorUtils:106","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int))","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:95","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map<java.lang.Object, java.lang.Long>.clear()","position":"org.apache.commons.collections4.map.PassiveExpiringMap:337","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * An iterator over the map.\n */\nabstract class ViewIterator {\n    /** \n     * Whether to return KEY or VALUE order.\n     */\nprivate final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement orderType;\n\n    /** \n     * The last node returned by the iterator.\n     */\norg.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> lastReturnedNode;\n\n    /** \n     * The next node to be returned by the iterator.\n     */\nprivate org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextNode;\n\n    /** \n     * The previous node in the sequence returned by the iterator.\n     */\nprivate org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> previousNode;\n\n    /** \n     * The modification count.\n     */\nprivate int expectedModifications;\n\n    /** \n     * Constructor.\n     * @param orderType  the KEY or VALUE int for the order\n     * @param main  the main map\n     */\nViewIterator(final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement orderType) {\n        java.lang.Object.super();\n        this.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement = org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement;\n        int = int;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()], org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n    }\n\n    public final boolean hasNext() {\n        return (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) != null;\n    }\n\n    protected org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> navigateNext() {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n            throw new java.util.NoSuchElementException();\n        } \n        if ((int) != (int)) {\n            throw new java.util.ConcurrentModificationException();\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    }\n\n    public boolean hasPrevious() {\n        return (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) != null;\n    }\n\n    protected org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> navigatePrevious() {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n            throw new java.util.NoSuchElementException();\n        } \n        if ((int) != (int)) {\n            throw new java.util.ConcurrentModificationException();\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextSmaller(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    }\n\n    public final void remove() {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n            throw new java.lang.IllegalStateException();\n        } \n        if ((int) != (int)) {\n            throw new java.util.ConcurrentModificationException();\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        (int)++;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()], org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextSmaller(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    }\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1609","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.iterators.FilterIterator:100","type":"CtThrowImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":537,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":606,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":285,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":389,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":755,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":265,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":644,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":227,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":318,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":530,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":68,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":217,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":473,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesClearChangesMap":232,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":47,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":764,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIsEmpty":198,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":175,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":790,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":14,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueRemove":162,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":730,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":751,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":73,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":658,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":478,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":684,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":436,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":0,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":53,"org.apache.commons.collections4.ListUtilsTest.testLazyList":159,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListSerialization":413,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":777,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":259,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":521,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":133,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":491,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":512,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":292,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":358,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":334,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":677,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":222,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":370,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":766,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":696,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":289,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIteratorRemove":705,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":2,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":442,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":779,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":624,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueCompatibility":167,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":796,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionSize":745,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":71,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":33,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":331,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":666,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":433,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListSerialization":484,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIsEmpty":749,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":577,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":324,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":369,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":647,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":204,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":373,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":272,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIsEmpty":543,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":615,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":634,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":130,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":421,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":691,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":359,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":141,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":480,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":352,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":252,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":96,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":619,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":428,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":472,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":655,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":582,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":380,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":801,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":604,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":724,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":802,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":783,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray2":499,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":595,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":735,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":326,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":17,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":35,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":115,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":344,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":390,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":653,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":675,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":134,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":679,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":357,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":465,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":573,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":762,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionSize":458,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":264,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":614,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":549,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":447,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":545,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":486,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":103,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":791,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":200,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":628,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":448,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":341,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":721,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":105,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesClearChangesMap":268,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":316,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":360,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":479,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":645,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":118,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":510,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":502,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":249,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":168,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionClear":544,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":770,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":515,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":546,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":231,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":163,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":346,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":419,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionSize":211,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":417,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary":804,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":243,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":363,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":77,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":127,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":781,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":121,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":563,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":483,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":381,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":161,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":603,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":641,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":261,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":637,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":284,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":356,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":240,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":640,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":718,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":401,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":716,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":186,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":23,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":578,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":592,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":739,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":780,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":526,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":87,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards":805,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":453,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueSerialization":188,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":101,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":506,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping0":807,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenRemove":158,"org.apache.commons.collections4.list.GrowthListTest.testCollectionSize":409,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":70,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":674,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":622,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":182,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":340,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":784,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":150,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":151,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":572,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":144,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":375,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":693,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":806,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":100,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":247,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":21,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":685,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":111,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":29,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":557,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":213,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":84,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":814,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":795,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":567,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":248,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":547,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":605,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":404,"org.apache.commons.collections4.list.TransformedListTest.testCollectionSize":434,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":399,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":632,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":396,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":384,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":66,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":210,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":207,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":568,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":422,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":664,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionSize":528,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":5,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":160,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":367,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":620,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":667,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":281,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":56,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":368,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":201,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":599,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":425,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":429,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":661,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":237,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":771,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":93,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetClearChangesMap":233,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":398,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":594,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":536,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":618,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":786,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":351,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":732,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":275,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":516,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":274,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":337,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":83,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":277,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":80,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":454,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":311,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":9,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":230,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":416,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":148,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":738,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":250,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":308,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":731,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":768,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":254,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":378,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":445,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":773,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":37,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":550,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":219,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":405,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":576,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":51,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":793,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionSize":172,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":633,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":635,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":736,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":498,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":345,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":4,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":492,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListSerialization":431,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":701,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":327,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":20,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":587,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":42,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":440,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":197,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":816,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIteratorRemove":501,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":646,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":819,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":818,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":817,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":156,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":61,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray2":744,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":444,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":710,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testSize":811,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":287,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":748,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":319,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIsEmpty":176,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":636,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionSize":500,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":34,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":717,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":339,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":279,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":300,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":119,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":430,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":630,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":496,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":799,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":124,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":648,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":179,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":39,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":788,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":449,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":26,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":335,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":742,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":524,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":562,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":700,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":276,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":463,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":44,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":680,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":165,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":789,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":517,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":290,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":109,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueSerialization":191,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":266,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":451,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":242,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesClearChangesMap":246,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":88,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListSerialization":414,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":74,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":333,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListSerialization":408,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":750,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":785,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":435,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":497,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":583,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":187,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":460,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":507,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":136,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":297,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":726,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":81,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":117,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":631,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":654,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":809,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIsEmpty":504,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":662,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":609,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":320,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueSerialization":166,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":98,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":99,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":41,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":671,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":30,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":686,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":271,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIteratorRemove":746,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetClearChangesMap":269,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":317,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":57,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":116,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":541,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetClearChangesMap":296,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePoll":164,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":283,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":649,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":608,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":813,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":228,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":315,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":27,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":314,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":728,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":304,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":450,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":694,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionSize":539,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":792,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":145,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueRemove":184,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":591,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":372,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":758,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":519,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":520,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":558,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionSize":194,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":589,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":32,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":692,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":307,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":494,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":229,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":362,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":527,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":503,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":794,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":123,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":280,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":642,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray2":171,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":205,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":393,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":95,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":437,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":688,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":529,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":625,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":239,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":656,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":552,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":348,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":687,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":321,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":612,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":50,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":698,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":178,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":48,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":787,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":754,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIteratorRemove":195,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":443,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":533,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":19,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":361,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":140,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":464,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":752,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":673,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":420,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":355,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":94,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":192,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":82,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueSerialization":169,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":31,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":712,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIsEmpty":703,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":471,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":126,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":446,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":216,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":580,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":627,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":114,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":532,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":610,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":223,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":350,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":555,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":244,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":584,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":743,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":120,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":215,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":196,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":708,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":596,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":263,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":571,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":62,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":3,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":569,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":581,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":282,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":556,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":49,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":278,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":190,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":221,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":407,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":102,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":382,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":45,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":740,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":709,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":403,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":90,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":139,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":241,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":509,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":765,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":258,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":652,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":665,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":617,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":548,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":374,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":495,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":672,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":513,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":772,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":400,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":720,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":559,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":208,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":475,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":298,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":60,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":474,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":323,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":54,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":332,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":238,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":328,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":670,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":7,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":135,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":347,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":690,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":590,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":16,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":97,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":125,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":342,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":778,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":782,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":313,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":106,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":12,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":371,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":514,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":554,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":131,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray2":538,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":579,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":623,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":366,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":438,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":638,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":611,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":253,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":426,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":597,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":815,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIteratorRemove":540,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":294,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":386,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":418,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":713,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":236,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":260,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":299,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":797,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":412,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":616,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":702,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":406,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":152,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":678,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":203,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":488,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":411,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":733,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":535,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":220,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":143,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetClearChangesMap":354,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":40,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":138,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":85,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":775,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesClearChangesMap":295,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":489,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":695,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":147,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":681,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":676,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":482,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":747,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":157,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":13,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":67,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":424,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":302,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":330,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIteratorRemove":173,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":575,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":402,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":78,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":132,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":518,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":798,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":112,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":46,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray2":193,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":202,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":439,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":534,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":306,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":377,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":235,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":58,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":565,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":663,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":810,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":523,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":757,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":305,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionSize":763,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":262,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":181,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":586,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":225,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":812,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":760,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":349,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":476,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":423,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":149,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":154,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":485,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":626,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":329,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":128,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":174,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":598,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":741,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":800,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":727,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":218,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":256,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":651,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":1,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":410,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":706,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":570,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":737,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":561,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":129,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":493,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":63,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":267,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionSize":415,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":91,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":155,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":601,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionClear":505,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":660,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":511,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":293,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":469,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":639,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":468,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":668,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":613,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":600,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":224,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":75,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":457,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":338,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":379,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":714,"org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering":769,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":621,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":522,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":199,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":467,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":525,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":25,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":385,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":113,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":107,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":729,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionClear":177,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":69,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":65,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":288,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":585,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":462,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":531,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":257,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":682,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":759,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":459,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":481,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":43,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":270,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":336,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":607,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":774,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":146,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":8,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":376,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":55,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":461,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":466,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":704,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":566,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":15,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":76,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":180,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":699,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":185,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":490,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":365,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":303,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":86,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":508,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":683,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":72,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":643,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":669,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":456,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":104,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":753,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":650,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":312,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":723,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":291,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":28,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":629,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":122,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":477,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":776,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":808,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":36,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":756,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":707,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListSerialization":391,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":551,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":79,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":214,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":325,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":593,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":487,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":560,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":564,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":38,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":170,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":89,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":387,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":310,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":364,"org.apache.commons.collections4.list.TransformedListTest.testFullListSerialization":427,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":722,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":761,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":286,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":388,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":52,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":689,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":602,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":142,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":18,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":108,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":64,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":588,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":353,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":392,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":719,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":394,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":432,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":11,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":212,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":803,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueCompatibility":189,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":10,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":209,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":309,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":251,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":273,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":301,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":397,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":322,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":767,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":245,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":234,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":820,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":395,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":137,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":659,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":657,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":226,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":725,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":183,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":542,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":574,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":697,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":441,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":452,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":383,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":470,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":734,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":110,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":553,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":206,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":715,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":711,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListSerialization":455,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":343}}]
