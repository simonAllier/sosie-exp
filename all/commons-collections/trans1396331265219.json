[{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:124","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:170","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:197","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().size()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:118","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int >= 0) {\n    final java.lang.Object java.lang.Object = java.util.ArrayList<E>.get(int);\n    if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n        return int;\n    } \n    int--;\n    int++;\n}","position":"org.apache.commons.collections4.ArrayStack:155","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.list.AbstractListDecorator:75","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:140","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().entrySet()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:72","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\")","name":"removeConditional","position":"org.apache.commons.collections4.map.LRUMap:259","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null","position":"org.apache.commons.collections4.map.StaticBucketMap:392","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().iterator()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:116","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>","position":"org.apache.commons.collections4.list.AbstractLinkedList:829","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)) | boolean","position":"org.apache.commons.collections4.list.GrowthList:157","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.set.ListOrderedSet<E>(java.util.Set<E>)","position":"org.apache.commons.collections4.set.ListOrderedSet:101","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(java.util.Map<K, V>.entrySet())","position":"org.apache.commons.collections4.map.AbstractIterableMap:34","type":"CtReturnImpl"},"status":-2},{"failures":[0,1],"variableMapping":{"classToInstantiate":"iClassToInstantiate"},"name":"replace","transplant":{"sourceCode":"if (java.lang.Class<T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n} ","position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"InstantiateFactory: The constructor must exist and be public \");\n}","position":"org.apache.commons.collections4.functors.InstantiateFactory:107","type":"CtTryImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return ((V)(java.lang.Object))","position":"org.apache.commons.collections4.map.AbstractHashedMap:1092","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:94","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:147","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case EXCEPTION :\n    final java.lang.Object java.lang.Object = java.lang.Integer == null ? T : T;\n    throw new java.lang.IllegalArgumentException((\"Attempting to compare unknown object \" + java.lang.Object));","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:237","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == this) {\n        return true;\n    } \n    return (java.lang.Object == this) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate()","position":"org.apache.commons.collections4.functors.NonePredicate:72","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:151","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:183","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractMapBag<E>.add(E)","position":"org.apache.commons.collections4.bag.TreeBag:90","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Comparator<? super E> java.util.Comparator<? super E> = ((java.util.Comparator<? super E>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.bag.TreeBag:128","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().values()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:122","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:429","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:113","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.Set<E>)(org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated()))","position":"org.apache.commons.collections4.set.AbstractSetDecorator:63","type":"CtReturnImpl"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:165","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().poll()","position":"org.apache.commons.collections4.queue.PredicatedQueue:103","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.LazyList:115","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.list.CursorableLinkedList:368","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:105","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Set<java.util.Map.Entry<K, V>> java.util.Set<java.util.Map.Entry<K, V>> = java.util.Collections.java.util.Collections.emptySet()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2283","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"(int)++","position":"org.apache.commons.collections4.map.AbstractHashedMap:565","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().subSet(E, E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:104","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:253","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.keyvalue.MultiKey<K>.calculateHashCode(K[])","position":"org.apache.commons.collections4.keyvalue.MultiKey:278","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"lastUsedIterator"},"name":"add","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends I>","position":"org.apache.commons.collections4.iterators.TransformIterator:110","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:113","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.Double java.lang.Double = org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.getDouble(java.util.Map<? super K, ?>, K)","position":"org.apache.commons.collections4.MapUtils:843","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().values()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:122","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.bag.CollectionSortedBag:115","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:266","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)","position":"org.apache.commons.collections4.bag.PredicatedBag:93","type":"CtInvocationImpl"},"status":-2},{"failures":[13],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.util.ConcurrentModificationException(\"Cursor closed\")","position":"org.apache.commons.collections4.list.CursorableLinkedList:548","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"add() not supported for empty Iterator\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:61","type":"CtThrowImpl"},"status":-1},{"failures":[14,15],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsFalsePredicate.org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:503","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().comparator()","position":"org.apache.commons.collections4.map.TransformedSortedMap:141","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next()","position":"org.apache.commons.collections4.list.AbstractLinkedList:366","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(java.util.Map<K, V>.entrySet())","position":"org.apache.commons.collections4.map.AbstractIterableMap:34","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.CollectionUtils:390","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null));\n} ","position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:239","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.ClosureTransformer<T>(org.apache.commons.collections4.Closure<? super T>)","position":"org.apache.commons.collections4.functors.ClosureTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[16,17,18,19,20,21],"variableMapping":{"list":"list"},"name":"add","transplant":{"sourceCode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<E>.add(java.util.Iterator<? extends E>.next())","position":"org.apache.commons.collections4.IteratorUtils:1026","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 1","position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().hashCode()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:117","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"InstantiateFactory: The constructor must exist and be public \");\n}","position":"org.apache.commons.collections4.functors.InstantiateFactory:107","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getConstructor(java.lang.Class<?>[])","position":"org.apache.commons.collections4.functors.InstantiateFactory:108","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:165","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:140","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().last()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:85","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.collections4.queue.CircularFifoQueue:211","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<E>.previous()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:77","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.set.CompositeSet:304","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Set<T>.add(T)","position":"org.apache.commons.collections4.functors.UniquePredicate:67","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.this(new org.apache.commons.collections4.map.HashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>())","position":"org.apache.commons.collections4.map.MultiKeyMap:110","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().iterator()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:153","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>","position":"org.apache.commons.collections4.list.AbstractLinkedList:561","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:87","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previousIndex()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:87","type":"CtReturnImpl"},"status":-2},{"failures":[22,23],"variableMapping":{"nextObject":"nextObject"},"name":"replace","transplant":{"sourceCode":"this.E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterIterator:177","type":"CtAssignmentImpl"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,12],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:192","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:147","type":"CtAssignmentImpl"},"status":-2},{"failures":[24,25,26,27,28,29],"variableMapping":{"object":"object"},"name":"replace","transplant":{"sourceCode":"return ((java.util.Collection<?>)(java.lang.Object)).isEmpty()","position":"org.apache.commons.collections4.CollectionUtils:1386","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == this) {\n        return true;\n    } \n    return (java.lang.Object == this) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl"},"status":-1},{"failures":[30],"variableMapping":{"this":"this","index":"index"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.FixedSizeList:148","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}","position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator<java.lang.Object, V>.nextEntry().getValue()","position":"org.apache.commons.collections4.map.AbstractLinkedMap:485","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"lastValue":"object"},"name":"replace","transplant":{"sourceCode":"return V","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:546","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.setValue(V)","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:68","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.SynchronizedCollection:73","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass())) + \"\\' cannot be accessed\"))","position":"org.apache.commons.collections4.functors.InvokerTransformer:134","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new org.apache.commons.collections4.functors.ExceptionClosure<java.lang.Object>()","position":"org.apache.commons.collections4.functors.ExceptionClosure:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ArrayIterator<E>.this(java.lang.Object, int, java.lang.reflect.Array.java.lang.reflect.Array.getLength(java.lang.Object))","position":"org.apache.commons.collections4.iterators.ArrayIterator:74","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((java.util.SortedMap<V, K>)(java.util.Map<V, K>)).comparator()","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:136","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(org.apache.commons.collections4.SortedBag<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:61","type":"CtReturnImpl"},"status":-2},{"failures":[31,32,33],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(java.util.List<E>.isEmpty())","position":"org.apache.commons.collections4.iterators.LoopingListIterator:74","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final E E : E[]) {\n    org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}","position":"org.apache.commons.collections4.collection.TransformedCollection:90","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(0))","position":"org.apache.commons.collections4.list.FixedSizeList:118","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"added":"nextObjectSet","changed":"nextObjectSet"},"name":"add","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterIterator:178","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.collections4.bag.AbstractMapBag:90","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.iterators.PushbackIterator:105","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"key"},"name":"replace","transplant":{"sourceCode":"return java.lang.Object","position":"org.apache.commons.collections4.map.AbstractHashedMap:1092","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>.get(java.lang.Object)","position":"org.apache.commons.collections4.map.DefaultedMap:205","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.Flat3Map.KeySet<K>(this)","position":"org.apache.commons.collections4.map.Flat3Map:952","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this)","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:100","type":"CtReturnImpl"},"status":-2},{"failures":[34,35,36,37,38,39,40,41],"binaryOperator":"int < int","name":"conditionalBoundary","position":"org.apache.commons.collections4.iterators.ArrayIterator:99","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new org.apache.commons.collections4.functors.ComparatorPredicate.Criterion()","position":"org.apache.commons.collections4.functors.ComparatorPredicate:84","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().headSet(E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:109","type":"CtLocalVariableImpl"},"status":-2},{"failures":[42,43,44],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.ArrayStack<E>.pop()","position":"org.apache.commons.collections4.iterators.PushbackIterator:96","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.ArrayStack<E>.push(E)","position":"org.apache.commons.collections4.iterators.PushbackIterator:88","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:110","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"lastUsedIterator"},"name":"add","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:91","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}","position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.FixedSizeList:148","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:99","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-612114643488955218L","position":"org.apache.commons.collections4.map.LRUMap:64","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:176","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = 2","position":"org.apache.commons.collections4.map.Flat3Map:519","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ExceptionPredicate.org.apache.commons.collections4.functors.ExceptionPredicate.<T>exceptionPredicate()","position":"org.apache.commons.collections4.PredicateUtils:91","type":"CtReturnImpl"},"status":-2},{"failures":[45],"variableMapping":{"iterator":"currentIterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends I>","position":"org.apache.commons.collections4.iterators.TransformIterator:110","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:126","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:196","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} ","position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().size()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:118","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"The list must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl"},"status":0},{"failures":[46,47,48,49,50,51,52,53,54,55,56,57],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(\"Map is empty\")","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:313","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.DefaultedMap<K, V>(java.util.Map<K, V> , org.apache.commons.collections4.functors.FactoryTransformer.org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(org.apache.commons.collections4.Factory<? extends V>))","position":"org.apache.commons.collections4.map.DefaultedMap:108","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:67","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"The collection must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingIterator:56","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (boolean) || org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())","position":"org.apache.commons.collections4.iterators.FilterListIterator:121","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()","position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().lastIndexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.FixedSizeList:113","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"this.int = int","position":"org.apache.commons.collections4.list.NodeCachingLinkedList:114","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.ForClosure:81","type":"CtInvocationImpl"},"status":-2},{"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1327","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:136","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.util.Map<K, V>.clear()","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:196","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl"},"status":-2},{"failures":[239],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterListIterator:261","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>.decorated()","position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:152","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:184","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * PrototypeCloneFactory creates objects by copying a prototype using the clone method.\n */\nstatic class PrototypeCloneFactory<T> implements java.io.Serializable , org.apache.commons.collections4.Factory<T> {\n    /** \n     * The serial version\n     */\nprivate static final long serialVersionUID = 5604271422565175555L;\n\n    /** \n     * The object to clone each time\n     */\nprivate final T iPrototype;\n\n    /** \n     * The method used to clone\n     */\nprivate transient java.lang.reflect.Method iCloneMethod;\n\n    /** \n     * Constructor to store prototype.\n     */\nprivate PrototypeCloneFactory(final T prototype ,final java.lang.reflect.Method method) {\n        java.lang.Object.super();\n        T = T;\n        java.lang.reflect.Method = java.lang.reflect.Method;\n    }\n\n    /** \n     * Find the Clone method for the class specified.\n     */\nprivate void findCloneMethod() {\n        try {\n            java.lang.reflect.Method = T.getClass().getMethod(\"clone\", ((java.lang.Class[])(null)));\n        } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n            throw new java.lang.IllegalArgumentException(\"PrototypeCloneFactory: The clone method must exist and be public \");\n        }\n    }\n\n    /** \n     * Creates an object by calling the clone method.\n     * \n     * @return the new object\n     */\n@java.lang.SuppressWarnings(value = \"unchecked\")\n    public T create() {\n        if ((java.lang.reflect.Method) == null) {\n            org.apache.commons.collections4.functors.PrototypeFactory.PrototypeCloneFactory<T>.findCloneMethod();\n        } \n        try {\n            return ((T)(java.lang.reflect.Method.invoke(T, ((java.lang.Object[])(null)))));\n        } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n            throw new org.apache.commons.collections4.FunctorException(\"PrototypeCloneFactory: Clone method must be public\" , java.lang.IllegalAccessException);\n        } catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n            throw new org.apache.commons.collections4.FunctorException(\"PrototypeCloneFactory: Clone method threw an exception\" , java.lang.reflect.InvocationTargetException);\n        }\n    }\n}","position":"org.apache.commons.collections4.functors.PrototypeFactory:94","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(org.apache.commons.collections4.SortedBag<E>)","position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.util.Map.Entry<K, V> == null) {\n    return null;\n} ","position":"org.apache.commons.collections4.map.AbstractReferenceMap:245","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.getValue()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:64","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"((\"Couldn\\'t get the node: \" + \"index (\") + int)","name":"math","position":"org.apache.commons.collections4.list.AbstractLinkedList:539","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"Start index must not be greater than the array length\")","position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:91","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:129","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:73","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\")","position":"org.apache.commons.collections4.functors.InstanceofPredicate:47","type":"CtThrowImpl"},"status":0},{"failures":[31,240,241,32,33,242,243,244],"variableMapping":{"iterator":"iterator","list":"list"},"name":"replace","transplant":{"sourceCode":"this.java.util.ListIterator<E> = this.java.util.List<E>.listIterator(this.java.util.List<E>.size())","position":"org.apache.commons.collections4.iterators.ReverseListIterator:171","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:242","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:137","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n    if ((org.apache.commons.collections4.Bag<?>.getCount(E)) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(E))) {\n        return false;\n    } \n}","position":"org.apache.commons.collections4.bag.AbstractMapBag:549","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<? extends E>.previous()","position":"org.apache.commons.collections4.iterators.FilterListIterator:264","type":"CtLocalVariableImpl"},"status":-2},{"failures":[245,246,247,165,248,249,250,251],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().first()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().last()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:85","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((int) > 0) || (java.util.Iterator<java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>>.hasNext())","position":"org.apache.commons.collections4.bag.AbstractMapBag:197","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.SynchronizedCollection:164","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":67,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":52,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":179,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":243,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":69,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":233,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":29,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":115,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":106,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":170,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":215,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":149,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":118,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":238,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":124,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":107,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":146,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":239,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":133,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":245,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":171,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":62,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":96,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":46,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":97,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":51,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":19,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":139,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":156,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":190,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":234,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":22,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":211,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":207,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":64,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":158,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":157,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":206,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":184,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":150,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":91,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":111,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":218,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":192,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":194,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":162,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":229,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":160,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":187,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":126,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":48,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":121,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":232,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":167,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":128,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":131,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":247,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":224,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":108,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":225,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":114,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":35,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":9,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":202,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":76,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":159,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":94,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":102,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":79,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":55,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":235,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":39,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":18,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":241,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":251,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":173,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":208,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":47,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":99,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":246,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":222,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":137,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":250,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":71,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":12,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":92,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":217,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":129,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":176,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback":43,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":61,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":132,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":185,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":230,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":1,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":127,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":32,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":70,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":122,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":10,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":50,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":197,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":231,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":21,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":33,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":169,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":82,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":81,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":249,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":226,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":219,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":49,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":88,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":98,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":182,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":66,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":34,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":11,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":65,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":7,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":90,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":205,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":209,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":24,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":147,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":203,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":228,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":6,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":214,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":153,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":220,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":200,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":181,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":13,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":113,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":210,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":119,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":38,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":54,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":138,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":85,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":5,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":135,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":63,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":116,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":27,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":93,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":154,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":141,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":148,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":166,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":83,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":60,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":75,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":204,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":144,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":172,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":104,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":109,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":23,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":183,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":240,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":193,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":236,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":123,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":78,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":53,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":151,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":196,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":28,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":142,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":112,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":125,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":201,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":164,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":77,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":188,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCopyConstructor":0,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":105,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":73,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":103,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate":14,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":161,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":213,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":30,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":216,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":101,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":178,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":195,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":2,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":152,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":3,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":4,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":89,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":180,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":199,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingForward":31,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":110,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":163,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":155,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":26,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":174,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":59,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":68,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":130,"org.apache.commons.collections4.IteratorUtilsTest.testToList":17,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":58,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":57,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":186,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":40,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":242,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":191,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":56,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":140,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":212,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":72,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":16,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":143,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":100,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":120,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":175,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":223,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":145,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":168,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":74,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":198,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":189,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":25,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":45,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary":244,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback":42,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback":44,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":237,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":221,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":165,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":84,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":117,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":227,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":36,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":177,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":37,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":248,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":41,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":136,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":87}}]
