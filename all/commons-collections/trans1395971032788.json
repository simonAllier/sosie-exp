[{"failures":[],"variableMapping":{"key":"key"},"name":"replace","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    return null;\n} ","position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:94","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.bag.TreeBag:126","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"char char = 0","position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:77","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:60","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.CollectionUtils:382","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:118","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"keyAnalyzer\")","position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:50","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Map must not be null\")","position":"org.apache.commons.collections4.map.AbstractMapDecorator:62","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"key":"key"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2066","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * Implementation of a map entry that checks additions via setValue.\n */\nprivate class MapEntry extends org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator<K, V> {\n    /** \n     * The parent map\n     */\nprivate final org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V> parent;\n\n    protected MapEntry(final java.util.Map.Entry<K, V> entry ,final org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V> parent) {\n        org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator<K, V>.super(java.util.Map.Entry<K, V>);\n        this.org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V> = org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>;\n    }\n\n    @java.lang.Override\n    public V setValue(V value) {\n        V = org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.checkSetValue(V);\n        return org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator<K, V>.getMapEntry().setValue(V);\n    }\n}","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:189","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasNext()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:97","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"flag":"hasNext","removed":"hasNext"},"name":"add","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:169","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:225","type":"CtInvocationImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(org.apache.commons.collections4.SortedBag<E>)","position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:51","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSet<E>(java.util.Set<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSet:60","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"value","key":"key"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.put(K, V)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1742","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass()))","name":"math","position":"org.apache.commons.collections4.functors.InvokerTransformer:131","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Transformer must not be null\")","position":"org.apache.commons.collections4.map.DefaultedMap:129","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:64","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"status":-2},{"failures":[12],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"mutation","status":-1},{"failures":[13,14],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:72","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.CollatingIterator:385","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterListIterator:211","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    E E = null;\n    while (java.util.ListIterator<E>.hasNext()) {\n        E = java.util.ListIterator<E>.next();\n    }\n    java.util.ListIterator<E>.previous();\n    return E;\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(org.apache.commons.collections4.ArrayStack<E>.isEmpty()) ? org.apache.commons.collections4.ArrayStack<E>.pop() : java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.PushbackIterator:96","type":"CtReturnImpl"},"status":-2},{"failures":[15,16,17,18,19,20],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:110","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().comparator()","position":"org.apache.commons.collections4.map.TransformedSortedMap:141","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TransformedSortedBag<E>.getSortedBag().comparator()","position":"org.apache.commons.collections4.bag.TransformedSortedBag:125","type":"CtReturnImpl"},"status":-2},{"failures":[21],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().size()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:188","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:204","type":"CtSynchronizedImpl"},"status":-1},{"failures":[22,23,24,25,26,27],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"this.java.util.Iterator<? extends I> = java.util.Iterator<? extends I>","position":"org.apache.commons.collections4.iterators.TransformIterator:110","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Collection<? extends E>.iterator()","position":"org.apache.commons.collections4.iterators.LoopingIterator:113","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return new org.apache.commons.collections4.iterators.ObjectArrayIterator<java.lang.Object>(((java.lang.Object[])(java.lang.Object)));\n} ","position":"org.apache.commons.collections4.IteratorUtils:1062","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.Collection<E> = java.util.Collection<E>","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:90","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.setCollection(((java.util.Collection<E>)(java.io.ObjectInputStream.readObject())))","position":"org.apache.commons.collections4.bag.UnmodifiableBag:102","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (T == null) {\n    return org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null);\n} ","position":"org.apache.commons.collections4.functors.PrototypeFactory:59","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:85","type":"CtIfImpl"},"status":-2},{"failures":[28,29],"variableMapping":{"index":"bound"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} ","position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"parent=\")","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1350","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:239","type":"CtReturnImpl"},"status":-2},{"failures":[30,31],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:80","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().nextKey(K)","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:76","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"C.execute(java.util.Iterator<T>.next())","position":"org.apache.commons.collections4.CollectionUtils:687","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.EnumerationIterator:93","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\")","name":"removeConditional","position":"org.apache.commons.collections4.map.LRUMap:325","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitInsertCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.InsertCommand:54","type":"CtInvocationImpl"},"status":-2},{"failures":[32,33],"binaryOperator":"(\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1))","name":"removeConditional","position":"org.apache.commons.collections4.MapUtils:1012","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} ","position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Set<T>.add(T)","position":"org.apache.commons.collections4.functors.UniquePredicate:67","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final E E : E[]) {\n    org.apache.commons.collections4.set.TransformedSortedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}","position":"org.apache.commons.collections4.set.TransformedSortedSet:84","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) - 1","position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionTransformer invoked\")","position":"org.apache.commons.collections4.functors.ExceptionTransformer:67","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:143","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(java.util.Iterator<? extends E>));\n    return org.apache.commons.collections4.iterators.PushbackIterator<E>;\n} ","position":"org.apache.commons.collections4.iterators.PushbackIterator:60","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.iterators.PushbackIterator<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.PushbackIterator:65","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} ","position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.LoopingListIterator:215","type":"CtInvocationImpl"},"status":-2},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],"name":"returnValue","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.LazyList:115","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean) {\n    java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.ceilingEntry(K);\n} else {\n    java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.higherEntry(K);\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1886","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().iterator()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:153","type":"CtReturnImpl"},"status":-2},{"failures":[26,27],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.LoopingIterator:106","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.bag.TreeBag:126","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.map.StaticBucketMap:464","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(',')","position":"org.apache.commons.collections4.map.AbstractHashedMap:1382","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().remove(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:169","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\")","position":"org.apache.commons.collections4.functors.TransformerPredicate:75","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:67","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.bitIndex(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:907","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:157","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    java.util.Set<java.lang.Object>.add(java.lang.Object);\n} ","position":"org.apache.commons.collections4.list.SetUniqueList:258","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<I>.hasNext()","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:58","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"tmpMap":"map"},"name":"add","transplant":{"sourceCode":"return java.util.SortedMap<K, V>","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:115","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.Iterator<java.util.Map.Entry<K, V>> java.util.Iterator<java.util.Map.Entry<K, V>> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.createEntrySetIterator()","position":"org.apache.commons.collections4.map.AbstractHashedMap:1351","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().headSet(E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:109","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.lastEntry()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1903","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.Collection<? extends E>.size()) > 0","position":"org.apache.commons.collections4.iterators.LoopingIterator:71","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\")","position":"org.apache.commons.collections4.functors.ChainedTransformer:72","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"))","position":"org.apache.commons.collections4.iterators.ArrayIterator:120","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Set<K>","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:254","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.Iterator<? extends E> = ((java.util.Iterator<? extends E>)(E))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:109","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final C C : java.lang.Iterable<C>) {\n    if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n        int++;\n    } \n}","position":"org.apache.commons.collections4.CollectionUtils:826","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:209","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1600","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().first()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new java.lang.StringBuilder().append(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getKey())","position":"org.apache.commons.collections4.map.AbstractHashedMap:1124","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:132","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"object":"object"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.IdentityPredicate<T>(T)","position":"org.apache.commons.collections4.functors.IdentityPredicate:50","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (T == null) {\n    return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate();\n} ","position":"org.apache.commons.collections4.functors.IdentityPredicate:47","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<java.util.Map.Entry<K, java.lang.Object>, K>.getIterator().next().getKey()","position":"org.apache.commons.collections4.map.ListOrderedMap:581","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.SortedBidiMap<K, V>)(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated()))","position":"org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator:59","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().removeAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:140","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>));\n} ","position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"coll":"coll","this":"this","lock":"lock"},"name":"add","transplant":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:175","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:112","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"coll","b":"coll"},"name":"add","transplant":{"sourceCode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} ","position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:182","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    E E = null;\n    while (java.util.ListIterator<E>.hasNext()) {\n        E = java.util.ListIterator<E>.next();\n    }\n    java.util.ListIterator<E>.previous();\n    return E;\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:67","type":"CtReturnImpl"},"status":-2},{"failures":[182,183,184,185,186,187,188],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 1","position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().getCount(java.lang.Object)","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:69","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<T>.clear()","position":"org.apache.commons.collections4.sequence.ReplacementsFinder:95","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:89","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"remove() method is not supported for an ObjectArrayIterator\")","position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:134","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"))","position":"org.apache.commons.collections4.iterators.ArrayIterator:120","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList<E>(java.util.List<E>)","position":"org.apache.commons.collections4.list.FixedSizeList:56","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().clear()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:78","type":"CtInvocationImpl"},"status":-2},{"failures":[189,190],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.map.AbstractHashedMap:226","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().containsValue(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:68","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)","position":"org.apache.commons.collections4.list.AbstractLinkedList:239","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().comparator()","position":"org.apache.commons.collections4.map.TransformedSortedMap:141","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.SynchronizedSortedBag<E>.getSortedBag().last()","position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:95","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))","position":"org.apache.commons.collections4.map.LazySortedMap:126","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitDeleteCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.DeleteCommand:53","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"CtLocalVariableImpl"},"status":-2},{"failures":[7],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterListIterator:271","type":"mutation","return":"return false","status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:78","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Map must not be null\")","position":"org.apache.commons.collections4.MapUtils:1774","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:122","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"try {\n    final java.lang.reflect.Method java.lang.reflect.Method = T.getClass().getMethod(\"clone\", ((java.lang.Class[])(null)));\n    return new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeCloneFactory<T>(T , java.lang.reflect.Method);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    try {\n        T.getClass().getConstructor(new java.lang.Class<?>[]{ T.getClass() });\n        return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T });\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        if (T instanceof java.io.Serializable) {\n            return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n        } \n    }\n}","position":"org.apache.commons.collections4.functors.PrototypeFactory:62","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:84","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount()","position":"org.apache.commons.collections4.list.AbstractLinkedList:990","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I)","position":"org.apache.commons.collections4.iterators.TransformIterator:142","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.set.CompositeSet<E>.getMutator().resolveCollision(this, java.util.Set<E>, java.util.Set<E>, java.util.Collection<E>)","position":"org.apache.commons.collections4.set.CompositeSet:351","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.nextIndex()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:72","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int ^= java.lang.Object.hashCode()","position":"org.apache.commons.collections4.map.MultiKeyMap:363","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.PrototypeFactory.org.apache.commons.collections4.functors.PrototypeFactory.<T>prototypeFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:106","type":"CtReturnImpl"},"status":-2},{"failures":[191,192],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"The list must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")","position":"org.apache.commons.collections4.functors.WhileClosure:56","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.OnePredicate.org.apache.commons.collections4.functors.OnePredicate.onePredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:372","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return org.apache.commons.collections4.functors.FunctorUtils.org.apache.commons.collections4.functors.FunctorUtils.coerce(org.apache.commons.collections4.Predicate<? super T>[][0]);\n} ","position":"org.apache.commons.collections4.functors.AllPredicate:60","type":"CtIfImpl"},"status":-2},{"failures":[193],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.iterators.ArrayIterator:148","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")","position":"org.apache.commons.collections4.functors.AndPredicate:51","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((K) == null) {\n    final V V = V;\n    V = V;\n    return V;\n} ","position":"org.apache.commons.collections4.map.Flat3Map:310","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge()","position":"org.apache.commons.collections4.map.AbstractReferenceMap:367","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> = null","position":"org.apache.commons.collections4.map.AbstractReferenceMap:842","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().indexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.FixedSizeList:103","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"The list must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:73","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"object"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2070","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().contains(java.lang.Object)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:108","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Collections.java.util.Collections.synchronizedSet(java.util.Set<E>)","position":"org.apache.commons.collections4.SetUtils:179","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.UniquePredicate.org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()","position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl"},"status":-2},{"failures":[194],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"final int int = \"BooleanComparator\".hashCode()","position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.LazyList:112","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.checkModCount()","position":"org.apache.commons.collections4.list.AbstractLinkedList:824","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:126","type":"CtAssignmentImpl"},"status":-2},{"failures":[12],"binaryOperator":"(int <= 0)","name":"conditionalBoundary","position":"org.apache.commons.collections4.functors.ForClosure:52","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 0","position":"org.apache.commons.collections4.comparators.ComparatorChain:292","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().size()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:188","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<I>.remove()","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:62","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":6,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":41,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":130,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":191,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":59,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":95,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":100,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":12,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":104,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":193,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":63,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":110,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":148,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":156,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":107,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":17,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":88,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":170,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":36,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":85,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":188,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":146,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":150,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":162,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":113,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":93,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":117,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":20,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":0,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":119,"org.apache.commons.collections4.ListUtilsTest.testLazyList":194,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":91,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":163,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":52,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":13,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":139,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":166,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":96,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":98,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":89,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":123,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":74,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":51,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":157,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":19,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":120,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":128,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":2,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":165,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":103,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":142,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":173,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":76,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":53,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":158,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":181,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":46,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":54,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":133,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":80,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":172,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":9,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":175,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":86,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":159,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":64,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":111,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":187,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":81,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":92,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":129,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":116,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":145,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":178,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize":26,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":39,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":72,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":78,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":152,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":125,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":179,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":121,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":4,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":57,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":161,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":87,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":82,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":135,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":153,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":171,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":141,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":144,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":44,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":56,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":83,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testReset":25,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":18,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":126,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":42,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":180,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":186,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":61,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":154,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":75,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":62,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":190,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":65,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":21,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":45,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":137,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":35,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":29,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":185,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":8,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":55,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":97,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":134,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":167,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":122,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":124,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":176,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":84,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":7,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":99,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":90,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":27,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":143,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":67,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":182,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":168,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":174,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":49,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":101,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":183,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":15,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":60,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":108,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":136,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":160,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":73,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":138,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":189,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":50,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":77,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":192,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":11,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":28,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":32,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":10,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":149,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":115,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":132,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":155,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":147,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":177,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":58,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1":22,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2":23,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":71,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":127,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":109,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":43,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":33,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":30,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":114,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":66,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":164,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":112,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":106,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":151,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":105,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":140}}]
