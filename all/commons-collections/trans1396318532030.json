[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = org.apache.commons.collections4.queue.CircularFifoQueue<E>.increment(int)","position":"org.apache.commons.collections4.queue.CircularFifoQueue:398","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:41","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((org.apache.commons.collections4.map.AbstractHashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>)(org.apache.commons.collections4.map.AbstractMapDecorator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.decorated()))","position":"org.apache.commons.collections4.map.MultiKeyMap:879","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()","position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:164","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.CollectionUtils:1121","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NonePredicate.org.apache.commons.collections4.functors.NonePredicate.nonePredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:438","type":"CtReturnImpl"},"status":-2},{"failures":[0,1,2,3,4,5],"binaryOperator":"(java.util.Collection<? extends E>.size()) == 0","name":"negateConditional","position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.LoopingListIterator:145","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next()","position":"org.apache.commons.collections4.map.MultiKeyMap:718","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}","position":"org.apache.commons.collections4.map.AbstractHashedMap:252","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.MapTransformer<I, O>(java.util.Map<? super I, ? extends O>)","position":"org.apache.commons.collections4.functors.MapTransformer:53","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"fromKey > toKey\")","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1872","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} ","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().comparator()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:880","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>));\n} ","position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return -1","position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().lastIndexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.FixedSizeList:113","type":"CtReturnImpl"},"status":-2},{"failures":[6,7],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n    R.add(O);\n} ","position":"org.apache.commons.collections4.CollectionUtils:973","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:236","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-944364551314110330L","position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:149","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.AbstractListDecorator:103","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.getShort(java.util.Map<? super K, ?>, K)","position":"org.apache.commons.collections4.MapUtils:467","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:168","type":"CtAssignmentImpl"},"status":-2},{"failures":[8,9],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>> = java.util.Set<java.util.Map.Entry<K, V>>.iterator()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:92","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.FilterListIterator:232","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)]","position":"org.apache.commons.collections4.map.AbstractHashedMap:182","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:86","type":"CtInvocationImpl"},"status":-2},{"failures":[10,11],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (null == java.lang.Object) {\n    return false;\n} ","position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().remove(java.lang.Object, int)","position":"org.apache.commons.collections4.bag.PredicatedBag:98","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.queue.CircularFifoQueue<E>.(size()) == (int)","position":"org.apache.commons.collections4.queue.CircularFifoQueue:193","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl"},"status":-2},{"failures":[12],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null))","position":"org.apache.commons.collections4.list.GrowthList:124","type":"CtInvocationImpl"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return \"ComparableComparator\".hashCode()","position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new org.apache.commons.collections4.functors.NotNullPredicate<java.lang.Object>()","position":"org.apache.commons.collections4.functors.NotNullPredicate:36","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Comparator<? super E> java.util.Comparator<? super E> = ((java.util.Comparator<? super E>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.bag.TreeBag:128","type":"CtLocalVariableImpl"},"status":-2},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156],"variableMapping":{"a":"key","b":"key"},"name":"replace","transplant":{"sourceCode":"return java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)","position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:141","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:82","type":"CtReturnImpl"},"status":-1},{"failures":[157],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\")","position":"org.apache.commons.collections4.functors.InstantiateFactory:64","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:143","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.LRUMap<K, V>.doReadObject(java.io.ObjectInputStream)","position":"org.apache.commons.collections4.map.LRUMap:424","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E)","position":"org.apache.commons.collections4.list.AbstractLinkedList:212","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl"},"status":-2},{"failures":[158,159],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(java.util.List<E>.isEmpty())","position":"org.apache.commons.collections4.iterators.LoopingListIterator:127","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl"},"status":-2},{"failures":[160,161],"binaryOperator":"((java.lang.Object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(java.lang.Object)).boolean)))","name":"removeConditional","position":"org.apache.commons.collections4.comparators.BooleanComparator:172","type":"mutation","status":-1},{"failures":[162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267],"variableMapping":{"iterator":"iterator"},"name":"replace","transplant":{"sourceCode":"return this.java.util.ListIterator<E>.previous()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:67","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1201","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:210","type":"CtReturnImpl"},"status":-2},{"failures":[158,159],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(java.util.List<E>.isEmpty())","position":"org.apache.commons.collections4.iterators.LoopingListIterator:127","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return ","position":"org.apache.commons.collections4.list.NodeCachingLinkedList:165","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    return ;\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"key":"key"},"name":"replace","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    return null;\n} ","position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:94","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.functors.FunctorUtils.org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Closure<? super E>[])","position":"org.apache.commons.collections4.functors.SwitchClosure:60","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().setValue(V)","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:70","type":"CtReturnImpl"},"status":-2},{"failures":[268],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null));\n    boolean = true;\n} ","position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"key1":"object","key2":"object"},"name":"add","transplant":{"sourceCode":"return java.lang.Object == java.lang.Object","position":"org.apache.commons.collections4.map.ReferenceIdentityMap:206","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().remove(java.lang.Object, int)","position":"org.apache.commons.collections4.bag.PredicatedBag:98","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V)","position":"org.apache.commons.collections4.map.ListOrderedMap:221","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:76","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\")","name":"math","position":"org.apache.commons.collections4.list.AbstractLinkedList:543","type":"mutation","status":-2},{"failures":[],"variableMapping":{"flag":"result","removed":"result"},"name":"replace","transplant":{"sourceCode":"boolean = boolean","position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.list.GrowthList:155","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final K K = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse.get(V)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2100","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:86","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:144","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractMapBag<E>.containsAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(java.util.Collection<?>))","position":"org.apache.commons.collections4.bag.AbstractMapBag:139","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final T T = org.apache.commons.collections4.Transformer<? super T, ? extends T>.transform(T)","position":"org.apache.commons.collections4.functors.TransformedPredicate:83","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>.entrySet()","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:102","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * Values iterator.\n */\nprotected static class ValuesIterator<V> extends org.apache.commons.collections4.map.AbstractHashedMap.HashIterator<java.lang.Object, V> implements java.util.Iterator<V> {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    protected ValuesIterator(final org.apache.commons.collections4.map.AbstractHashedMap<?, V> parent) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashIterator<java.lang.Object, V>.super(((org.apache.commons.collections4.map.AbstractHashedMap<java.lang.Object, V>)(org.apache.commons.collections4.map.AbstractHashedMap<?, V>)));\n    }\n\n    public V next() {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashIterator<java.lang.Object, V>.nextEntry().getValue();\n    }\n}","position":"org.apache.commons.collections4.map.AbstractHashedMap:1043","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:150","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:239","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.InternalError()","position":"org.apache.commons.collections4.map.AbstractHashedMap:1298","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")","position":"org.apache.commons.collections4.functors.WhileClosure:56","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.InstanceofPredicate.org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(java.lang.Class<?>)","position":"org.apache.commons.collections4.PredicateUtils:175","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]","position":"org.apache.commons.collections4.map.AbstractHashedMap:652","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:118","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.Predicate","position":"org.apache.commons.collections4.functors.NullPredicate:68","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.SortedBag<E>)(org.apache.commons.collections4.bag.PredicatedBag<E>.decorated()))","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:86","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()","position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.List<E>.size()) - 1","position":"org.apache.commons.collections4.iterators.LoopingListIterator:172","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear()","position":"org.apache.commons.collections4.map.TransformedSortedMap:97","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.Transformer<? super V, ? extends V>.transform(V)","position":"org.apache.commons.collections4.map.TransformedMap:218","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl"},"status":-2},{"failures":[269,270],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.DefaultedMap:181","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().comparator()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[157],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:78","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:148","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractMapBag<E>.add(E)","position":"org.apache.commons.collections4.bag.TreeBag:90","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-3110538116913760108L","position":"org.apache.commons.collections4.functors.WhileClosure:34","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[]);\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: InstantiationException\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor must be public\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor threw an exception\" , java.lang.reflect.InvocationTargetException);\n}","position":"org.apache.commons.collections4.functors.InstantiateFactory:125","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.java.util.ListIterator<? extends E> = java.util.ListIterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterListIterator:187","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:158","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:157","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.this(E[], 0, E[].int)","position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:55","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:132","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>(org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>.getSortedMap().headMap(K))","position":"org.apache.commons.collections4.map.FixedSizeSortedMap:166","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().remove(java.lang.Object, int)","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:77","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Byte == null) {\n    return 0;\n} ","position":"org.apache.commons.collections4.MapUtils:607","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(java.util.List<E>.isEmpty())","position":"org.apache.commons.collections4.iterators.LoopingListIterator:74","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return \"[]\"","position":"org.apache.commons.collections4.bag.AbstractMapBag:585","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().toString()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:140","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.list.TreeList<E>.(indexOf(java.lang.Object)) >= 0","position":"org.apache.commons.collections4.list.TreeList:174","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:70","type":"CtInvocationImpl"},"status":-2},{"failures":[271],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Iterator must not be null\")","position":"org.apache.commons.collections4.iterators.CollatingIterator:174","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.iterators.PushbackIterator:105","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().comparator()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.Trie<K, V>.previousKey(K)","position":"org.apache.commons.collections4.trie.UnmodifiableTrie:168","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:125","type":"CtInvocationImpl"},"status":-2},{"failures":[272,273],"variableMapping":{"predicate":"predicate"},"name":"replace","transplant":{"sourceCode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>))","position":"org.apache.commons.collections4.functors.FunctorUtils:70","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsExceptionPredicate.org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:488","type":"CtReturnImpl"},"status":-1},{"failures":[],"binaryOperator":"((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\")","name":"math","position":"org.apache.commons.collections4.map.LRUMap:325","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The prototype must be cloneable via a public clone method\")","position":"org.apache.commons.collections4.functors.PrototypeFactory:79","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:93","type":"CtThrowImpl"},"status":-2},{"failures":[274,275,276,277],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return \"[]\"","position":"org.apache.commons.collections4.bag.AbstractMapBag:585","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toString();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:211","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} ","position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:92","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl"},"status":-2},{"failures":[278,279,280],"variableMapping":{"predicate":"predicate"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.functors.NullIsTruePredicate:49","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NotPredicate.org.apache.commons.collections4.functors.NotPredicate.notPredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:452","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * List iterator that only permits changes via set()\n */\nprivate class FixedSizeListIterator extends org.apache.commons.collections4.iterators.AbstractListIteratorDecorator<E> {\n    protected FixedSizeListIterator(final java.util.ListIterator<E> iterator) {\n        org.apache.commons.collections4.iterators.AbstractListIteratorDecorator<E>.super(java.util.ListIterator<E>);\n    }\n\n    @java.lang.Override\n    public void remove() {\n        throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n    }\n\n    @java.lang.Override\n    public void add(final java.lang.Object object) {\n        throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n    }\n}","position":"org.apache.commons.collections4.list.FixedSizeList:160","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ExceptionPredicate.org.apache.commons.collections4.functors.ExceptionPredicate.<T>exceptionPredicate()","position":"org.apache.commons.collections4.PredicateUtils:91","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull();\n} ","position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:136","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractSortedMapDecorator.SortedMapIterator<K, V>(org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.entrySet())","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:119","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.FixedSizeList:148","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:72","type":"CtReturnImpl"},"status":-2},{"failures":[274,275,276,277],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doPut(K, V)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:227","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"The list must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V)","name":"math","position":"org.apache.commons.collections4.map.LRUMap:259","type":"mutation","status":-2},{"failures":[],"variableMapping":{"preds":"predicates"},"name":"add","transplant":{"sourceCode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]))","position":"org.apache.commons.collections4.functors.AnyPredicate:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.OnePredicate.org.apache.commons.collections4.functors.OnePredicate.onePredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:372","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int) > 0) {\n    (int)--;\n} ","position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.Collection<E> = java.util.Collection<E>","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:90","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:122","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator()","position":"org.apache.commons.collections4.map.AbstractHashedMap:1320","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Trie must not be null\")","position":"org.apache.commons.collections4.trie.UnmodifiableTrie:72","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingIterator:85","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Map<? super K, ?> != null) {\n    final java.lang.Object java.lang.Object = java.util.Map<? super K, ?>.get(K);\n    if (java.lang.Object != null) {\n        if (java.lang.Object instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean)(java.lang.Object));\n        } \n        if (java.lang.Object instanceof java.lang.String) {\n            return java.lang.Boolean.java.lang.Boolean.valueOf(((java.lang.String)(java.lang.Object)));\n        } \n        if (java.lang.Object instanceof java.lang.Number) {\n            final java.lang.Number java.lang.Number = ((java.lang.Number)(java.lang.Object));\n            return (java.lang.Number.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean;\n        } \n    } \n} ","position":"org.apache.commons.collections4.MapUtils:151","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.DefaultedMap<K, V>.this(new java.util.HashMap<K, V>(), org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.DefaultedMap:154","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.FilterIterator:175","type":"CtLocalVariableImpl"},"status":-2},{"failures":[281],"binaryOperator":"(int <= 0)","name":"negateConditional","position":"org.apache.commons.collections4.functors.ForClosure:52","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>)","position":"org.apache.commons.collections4.set.CompositeSet:379","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.LazySortedMap:153","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 3 :\n    org.apache.commons.collections4.map.Flat3Map<K, V>.V = V;\n    break;","position":"org.apache.commons.collections4.map.Flat3Map:841","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:253","type":"CtInvocationImpl"},"status":-2},{"failures":[282,283,284,285,286,287,288,289,290,291,292,293],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterIterator:179","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) && org.apache.commons.collections4.CollectionUtils.(org.apache.commons.collections4.CollectionUtils.isSubCollection(java.util.Collection<?>, java.util.Collection<?>))","position":"org.apache.commons.collections4.CollectionUtils:495","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = java.io.ObjectInputStream.readInt()","position":"org.apache.commons.collections4.list.AbstractLinkedList:622","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:225","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":19,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":175,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":93,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":194,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":167,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":281,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":98,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":226,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":134,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":245,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":31,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":262,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":244,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":199,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":106,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":149,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":224,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":187,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":255,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":12,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":282,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":56,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":57,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":77,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":250,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":90,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":289,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":144,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":83,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":182,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":169,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":145,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":278,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":198,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":212,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":13,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":168,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":45,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":37,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":195,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":121,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":102,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":18,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":286,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":131,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":61,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":154,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":180,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":116,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":200,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":205,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":213,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":105,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":189,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":184,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":58,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":51,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":15,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":217,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate":272,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsNull":161,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":146,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":73,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":75,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetIteratorRemoveChangesMap":130,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":147,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":155,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":248,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":196,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":201,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":109,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":32,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":60,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":210,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":137,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":269,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":261,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":218,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":258,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":94,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":229,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":6,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testRemove":271,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":22,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":193,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":78,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":293,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":117,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":14,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":96,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":44,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":53,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":95,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":220,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance":160,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":260,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":112,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":65,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":84,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":64,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":171,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":26,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":88,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":49,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":52,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":87,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":36,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":113,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":284,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":190,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":8,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":140,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":204,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":242,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize":4,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":221,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":139,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":10,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":123,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":143,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":163,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":125,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":273,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":71,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":72,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping0":158,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":17,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":7,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":252,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":35,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":280,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":232,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":124,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":162,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":48,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":239,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":135,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":136,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":70,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":170,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":291,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":164,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":225,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":246,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testReset":3,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":215,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":241,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":16,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":176,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":89,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":82,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":104,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":54,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":34,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":270,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":219,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":9,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":115,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":165,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":240,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":234,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":188,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":222,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":91,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":292,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":122,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":92,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":111,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":11,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":59,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":21,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":208,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":285,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":236,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":150,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetIteratorRemoveChangesMap":132,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":119,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":118,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":110,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":268,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":185,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":253,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":230,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenSet":157,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":177,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":197,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":81,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":62,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":263,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":86,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":249,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":231,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":40,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":38,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":206,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":80,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":79,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":290,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":99,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":108,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":237,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":41,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":101,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":207,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":100,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":192,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":20,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveChangesMap":67,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":233,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":5,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":63,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":148,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":277,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":120,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":287,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":223,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":254,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":47,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":126,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":238,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":257,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":283,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":156,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":256,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":55,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":173,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":266,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":74,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":43,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":267,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":107,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":227,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetIteratorRemoveChangesMap":69,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":274,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":275,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":265,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":276,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":141,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":174,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":42,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":288,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":251,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":186,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":46,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":214,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":202,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":211,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":127,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":243,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":50,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":128,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":179,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":209,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":235,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":24,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":142,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":29,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":172,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":103,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":191,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":25,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":279,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":23,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":68,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":259,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":133,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetRemoveChangesMap":129,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":264,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":151,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards":159,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":152,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":228,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":183,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1":0,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2":1,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3":2,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":138,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":27,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":33,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":247,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":181,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":203,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":178,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":216,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":166,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":153,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":114,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":76}}]
