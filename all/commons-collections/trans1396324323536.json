[{"failures":[0,1,2],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.SynchronizedCollection:73","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size())","position":"org.apache.commons.collections4.MapUtils:1028","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:130","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:143","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The map must not be null\")","position":"org.apache.commons.collections4.set.MapBackedSet:76","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Object","position":"org.apache.commons.collections4.set.ListOrderedSet:347","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (boolean) || org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())","position":"org.apache.commons.collections4.iterators.FilterIterator:86","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.ListUtils:249","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.List<E>)(org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated()))","position":"org.apache.commons.collections4.list.AbstractListDecorator:65","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return -1","position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:154","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} ","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:897","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().tailSet(E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:114","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()","position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previousIndex()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:87","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:638","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"switch (org.apache.commons.collections4.list.TreeList.AVLNode<E>.heightRightMinusLeft()) {\n    case 1 :\n    case 0 :\n    case -1 :\n        return this;\n    case -2 :\n        if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>.heightRightMinusLeft()) > 0) {\n            org.apache.commons.collections4.list.TreeList.AVLNode<E>.setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.rotateLeft(), null);\n        } \n        return org.apache.commons.collections4.list.TreeList.AVLNode<E>.rotateRight();\n    case 2 :\n        if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>.heightRightMinusLeft()) < 0) {\n            org.apache.commons.collections4.list.TreeList.AVLNode<E>.setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.rotateRight(), null);\n        } \n        return org.apache.commons.collections4.list.TreeList.AVLNode<E>.rotateLeft();\n    default :\n        throw new java.lang.RuntimeException(\"tree inconsistent!\");\n}","position":"org.apache.commons.collections4.list.TreeList:676","type":"CtSwitchImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"InstantiateFactory: The constructor must exist and be public \");\n}","position":"org.apache.commons.collections4.functors.InstantiateFactory:107","type":"CtTryImpl"},"status":-2},{"failures":[3,4,5,6,7,8],"variableMapping":{"endIndex":"count","index":"count"},"name":"replace","transplant":{"sourceCode":"return int < int","position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().add(E, int)","position":"org.apache.commons.collections4.bag.PredicatedBag:94","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.map.AbstractHashedMap:871","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NonePredicate.org.apache.commons.collections4.functors.NonePredicate.nonePredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:438","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"inlineConstant","inlineConstant":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"mutation","status":0},{"failures":[],"variableMapping":{"valid":"result"},"name":"replace","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.list.CursorableLinkedList:563","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.list.GrowthList:155","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this","index":"index"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int))","position":"org.apache.commons.collections4.list.FixedSizeList:123","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:95","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<I>.remove()","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:62","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<java.util.Collection<E>>.add(java.util.Collection<E>)","position":"org.apache.commons.collections4.collection.CompositeCollection:361","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceMapIterator<K, V>(this)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:307","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.entrySet())","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:104","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:900","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(java.lang.Character)","position":"org.apache.commons.collections4.ListUtils:581","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new java.lang.StringBuilder().append(\"AVLNode(\")","position":"org.apache.commons.collections4.list.TreeList:969","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.TransformedPredicate.org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(org.apache.commons.collections4.Transformer<? super T, ? extends T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:537","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int <= int ; ++int) {\n    for (int int = -int ; int <= int ; int += 2) {\n        final int int = int + int;\n        if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n            int[][int] = int[][(int + 1)];\n        } else {\n            int[][int] = (int[][(int - 1)]) + 1;\n        }\n        int int = int[][int];\n        int int = ((int - int) + int) - int;\n        while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = ++int;\n            ++int;\n        }\n        if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n            if ((int[][(int - int)]) <= (int[][int])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n            } \n        } \n    }\n    for (int int = int - int ; int <= (int + int) ; int += 2) {\n        final int int = (int + int) - int;\n        if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n            int[][int] = (int[][(int + 1)]) - 1;\n        } else {\n            int[][int] = int[][(int - 1)];\n        }\n        int int = (int[][int]) - 1;\n        int int = ((int - int) + int) - int;\n        while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = int--;\n            int--;\n        }\n        if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n            if ((int[][int]) <= (int[][(int + int)])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n            } \n        } \n    }\n}","position":"org.apache.commons.collections4.sequence.SequencesComparator:184","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.org.apache.commons.collections4.Predicate<? super E> = org.apache.commons.collections4.Predicate<? super E>","position":"org.apache.commons.collections4.iterators.FilterIterator:163","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().comparator()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:100","type":"CtReturnImpl"},"status":-2},{"failures":[9],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.Flat3Map.EntrySet<K, V>(this)","position":"org.apache.commons.collections4.map.Flat3Map:733","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().entrySet()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:72","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.bag.CollectionBag:165","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bag.AbstractMapBag<E>.doWriteObject(java.io.ObjectOutputStream)","position":"org.apache.commons.collections4.bag.TreeBag:119","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.bag.TreeBag:126","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int) >= (int)) {\n    int = 0;\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl"},"status":-2},{"failures":[10],"variableMapping":{"iterator":"iterator","list":"list"},"name":"replace","transplant":{"sourceCode":"this.java.util.ListIterator<E> = this.java.util.List<E>.listIterator()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:242","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator(java.util.List<E>.size())","position":"org.apache.commons.collections4.iterators.ReverseListIterator:171","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>))","position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:53","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.bag.TreeBag<E>.(comparator()) == null) && (!(E instanceof java.lang.Comparable))) {\n    throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"));\n} ","position":"org.apache.commons.collections4.bag.TreeBag:86","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.iterators.PushbackIterator:105","type":"CtThrowImpl"},"status":0},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"variableMapping":{"coll":"coll"},"name":"replace","transplant":{"sourceCode":"return (java.util.Collection<?> == null) || (java.util.Collection<?>.isEmpty())","position":"org.apache.commons.collections4.CollectionUtils:1415","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:113","type":"CtReturnImpl"},"status":-1},{"failures":[36,37,38,39,40,41,42],"binaryOperator":"org.apache.commons.collections4.Transformer<? super E, ?> == null","name":"negateConditional","position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:164","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null))","position":"org.apache.commons.collections4.list.GrowthList:124","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Provides a partition view on a {@link List}.\n * @since 4.0\n */\nprivate static class Partition<T> extends java.util.AbstractList<java.util.List<T>> {\n    private final java.util.List<T> list;\n\n    private final int size;\n\n    private Partition(final java.util.List<T> list ,final int size) {\n        this.java.util.List<T> = java.util.List<T>;\n        this.int = int;\n    }\n\n    @java.lang.Override\n    public java.util.List<T> get(final int index) {\n        final int int = org.apache.commons.collections4.ListUtils.Partition<T>.size();\n        if (int < 0) {\n            throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n        } \n        if (int < 0) {\n            throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n        } \n        if (int >= int) {\n            throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n        } \n        final int int = int * (int);\n        final int int = java.lang.Math.java.lang.Math.min((int + (int)), java.util.List<T>.size());\n        return java.util.List<T>.subList(int, int);\n    }\n\n    @java.lang.Override\n    public int size() {\n        return (((java.util.List<T>.size()) + (int)) - 1) / (int);\n    }\n\n    @java.lang.Override\n    public boolean isEmpty() {\n        return java.util.List<T>.isEmpty();\n    }\n}","position":"org.apache.commons.collections4.ListUtils:668","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:869","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().clear()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:104","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (long > ((java.lang.Long.long) - (long))) {\n    return -1;\n} ","position":"org.apache.commons.collections4.map.PassiveExpiringMap:141","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    return ;\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.util.ListIterator<E>.previous()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:152","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<? extends E>.previous()","position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:86","type":"CtReturnImpl"},"status":0},{"failures":[43,44,45,46,47,48,49,50,11,51,12,52,13,14,15,16,17,18,19,20,21,22,23,53,24,25,26,27,28,29,30,54,31,32,55,33,34,35],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:109","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().size()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:188","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.lengthInBits(K)","position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:93","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>(8)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:80","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ","position":"org.apache.commons.collections4.functors.SwitchClosure:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:165","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}","position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:406","type":"CtReturnImpl"},"status":-2},{"failures":[56,57,58,59,60,61,62,63,64],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\")","position":"org.apache.commons.collections4.functors.TransformedPredicate:54","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:69","type":"CtThrowImpl"},"status":-1},{"failures":[],"binaryOperator":"((\"Objects of type \" + (E.getClass())) + \" cannot be added to \")","name":"math","position":"org.apache.commons.collections4.bag.TreeBag:87","type":"mutation","status":-2},{"failures":[65,66,67],"variableMapping":{"removed":"validForUpdate","beforeFirst":"validForUpdate"},"name":"replace","transplant":{"sourceCode":"if ((this.boolean) || (this.boolean)) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")","position":"org.apache.commons.collections4.functors.PredicateTransformer:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super V, ? extends V>) == null) {\n    return V;\n} ","position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:77","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Number == null) {\n    return null;\n} ","position":"org.apache.commons.collections4.MapUtils:299","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate()","position":"org.apache.commons.collections4.functors.IdentityPredicate:48","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"coll":"coll","this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:113","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:182","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.Collection<V> java.util.Collection<V> = org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.values()","position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:149","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingIterator<E>.reset()","position":"org.apache.commons.collections4.iterators.LoopingIterator:88","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"(\"Couldn\\'t get the node: \" + \"index (\")","name":"removeConditional","position":"org.apache.commons.collections4.list.AbstractLinkedList:547","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.FixedSizeSortedMap.org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.MapUtils:1589","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap()","position":"org.apache.commons.collections4.map.LazySortedMap:131","type":"CtInvocationImpl"},"status":-2},{"failures":[68,69],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:129","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"End index must not be greater than the array length\")","position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:88","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl"},"status":-2},{"failures":[9],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>","position":"org.apache.commons.collections4.map.LRUMap:247","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.Bag<E>)(org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated()))","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:63","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingIterator<E>.reset()","position":"org.apache.commons.collections4.iterators.LoopingIterator:88","type":"CtInvocationImpl"},"status":-2},{"failures":[0,1,2],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"next() must have been called for remove() to function\")","position":"org.apache.commons.collections4.iterators.EnumerationIterator:111","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.SynchronizedCollection:73","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.InstanceofPredicate.org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(java.lang.Class<?>)","position":"org.apache.commons.collections4.PredicateUtils:175","type":"CtReturnImpl"},"status":-2},{"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"variableMapping":{"coll":"coll"},"name":"add","transplant":{"sourceCode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} ","position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:144","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.util.SortedSet<E>","position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:57","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:115","type":"CtReturnImpl"},"status":-2},{"failures":[62],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"End index must not be greater than the array length\")","position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:88","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:65","type":"CtThrowImpl"},"status":-1},{"failures":[9],"binaryOperator":"(int <= 0)","name":"negateConditional","position":"org.apache.commons.collections4.functors.ForClosure:52","type":"mutation","status":-1},{"failures":[86],"variableMapping":{"iterator":"lastUsedIterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:91","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"binaryOperator":"(((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int))","name":"math","position":"org.apache.commons.collections4.map.LRUMap:312","type":"mutation","status":-2},{"failures":[9],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"mutation","status":-1},{"failures":[87,88],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")","position":"org.apache.commons.collections4.map.FixedSizeMap:140","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingIterator:85","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-7032449491269434877L","position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:29","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(0))","position":"org.apache.commons.collections4.list.FixedSizeList:118","type":"CtReturnImpl"},"status":-2},{"failures":[89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,7,8,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().lastKey()","position":"org.apache.commons.collections4.bag.TreeBag:100","type":"CtReturnImpl"},"status":-1},{"failures":[129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:136","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.StaticBucketMap.EntryIterator()","position":"org.apache.commons.collections4.map.StaticBucketMap:571","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().iterator())","position":"org.apache.commons.collections4.list.FixedSizeList:108","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:89","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.bag.SynchronizedBag<E>.getBag().getCount(java.lang.Object);\n}","position":"org.apache.commons.collections4.bag.SynchronizedBag:107","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsValue(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:86","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterIterator:177","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return (int) < (int)","position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (this.int) < (this.int)","position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:111","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((org.w3c.dom.NodeList) != null) && ((int) < (org.w3c.dom.NodeList.getLength()))) {\n    return org.w3c.dom.NodeList.item((int)++);\n} ","position":"org.apache.commons.collections4.iterators.NodeListIterator:73","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"}\\n\")","position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:71","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:112","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"(int)++","position":"org.apache.commons.collections4.queue.CircularFifoQueue:234","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl"},"status":-2},{"failures":[310,311,312,313,314],"variableMapping":{"outputStream":"out"},"name":"replace","transplant":{"sourceCode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}","position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.bag.TreeBag:117","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl"},"status":-2},{"failures":[315,316,317,318,319,320,321,322],"variableMapping":{"slotFilled":"previousObjectSet"},"name":"add","transplant":{"sourceCode":"if (this.boolean) {\n    throw new java.lang.IllegalStateException();\n} ","position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl"},"status":-1},{"failures":[315,323,316,317,318,324,325,326,319,320,321,322],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:244","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().entrySet()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:72","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.UnmodifiableEntrySet.org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(java.util.Set<java.util.Map.Entry<K, V>>)","position":"org.apache.commons.collections4.map.UnmodifiableMap:144","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K","position":"org.apache.commons.collections4.map.StaticBucketMap:302","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().comparator()","position":"org.apache.commons.collections4.map.LazySortedMap:139","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\")","position":"org.apache.commons.collections4.functors.InstantiateTransformer:70","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.TransformerPredicate.org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean>)","position":"org.apache.commons.collections4.PredicateUtils:470","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().contains(java.lang.Object)) {\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n    } \n}","position":"org.apache.commons.collections4.set.ListOrderedSet:231","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getConstructor(java.lang.Class<?>[])","position":"org.apache.commons.collections4.functors.InstantiateFactory:108","type":"CtAssignmentImpl"},"status":-2},{"failures":[327,71,328,329,330,205,331,332,333,334,335,336],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().first()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().last()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:100","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}","position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NotPredicate.org.apache.commons.collections4.functors.NotPredicate.notPredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:452","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} ","position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1655","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedSet<E>)(org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated()))","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:64","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:132","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().containsValue(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:68","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(K, java.util.Map.Entry<?, ?>.getKey())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(V, java.util.Map.Entry<?, ?>.getValue()))) {\n    return true;\n} ","position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:201","type":"CtIfImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":308,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":325,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":143,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":309,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":137,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":280,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":220,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":96,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":9,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":162,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":172,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":278,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":22,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":136,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":283,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":223,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":107,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionClear":54,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":333,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":261,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":275,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":331,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":71,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":115,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":232,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":61,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":118,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":173,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":70,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":210,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":302,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":33,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":315,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":211,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":56,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":324,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":237,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":180,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":292,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":4,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":138,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":245,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":156,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":31,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":83,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":196,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":116,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":200,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":294,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":335,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":293,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":108,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":195,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":20,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":150,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":78,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":91,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":279,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":241,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":265,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":159,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":182,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":184,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":34,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":208,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":89,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":131,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":296,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":27,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":147,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":225,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":316,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":286,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":134,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":203,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":328,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":229,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":171,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":262,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":169,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":268,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":60,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":69,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":44,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":329,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":312,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":192,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":255,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":295,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":216,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":244,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":260,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":111,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":320,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":139,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":36,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":175,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":153,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":213,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":323,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":233,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":12,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":90,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":167,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":113,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":238,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":298,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":112,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":242,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":164,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":58,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":230,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":177,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":92,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":3,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":301,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":28,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":109,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":334,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":227,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":151,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":51,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":13,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":17,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":120,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":74,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":132,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":228,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":306,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":221,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":318,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":133,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":189,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":1,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":204,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":126,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":246,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":5,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":258,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":73,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":75,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":57,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":119,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":257,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":103,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":170,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":160,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":121,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":212,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":252,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":317,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":146,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":201,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":313,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":117,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":68,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":199,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":197,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":240,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":41,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":311,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":154,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":193,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":276,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":2,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":52,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":55,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":50,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":63,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":130,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":98,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":161,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":289,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testSet":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":165,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":0,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":186,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":99,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":145,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":155,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":267,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":30,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":284,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":332,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testReset":10,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":14,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":236,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":314,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":319,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":249,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":234,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":43,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":48,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":101,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":198,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":37,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":281,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenSet":66,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":11,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":243,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":290,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":270,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":277,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":23,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":40,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":124,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":206,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":21,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":247,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":310,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":254,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":304,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":194,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":100,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":174,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":273,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":125,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":218,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":263,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":76,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":149,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":85,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":183,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":7,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":140,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":222,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":79,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":128,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":35,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":38,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":259,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":80,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":326,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":53,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":88,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":188,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":287,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":330,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":110,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":271,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":266,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":72,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":224,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":191,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":6,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":93,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":127,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":205,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":8,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":250,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":256,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":26,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":39,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":148,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":219,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":299,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":102,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":217,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":19,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testRemoveThenSet":67,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":105,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":158,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":297,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":163,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":142,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":215,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":187,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":288,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":114,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":144,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":239,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":185,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":18,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":81,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":264,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":209,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":291,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":16,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":29,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":64,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":42,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":178,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":327,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":104,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":47,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":231,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":303,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":307,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":305,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":322,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":84,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":152,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":32,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":181,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":269,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":321,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":123,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":157,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":300,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":272,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":59,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":336,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":77,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":214,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":285,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":176,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":168,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":274,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":97,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":207,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":95,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":45,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping0":87,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":253,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":46,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":190,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":179,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":49,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":86,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":166,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":24,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":202,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":248,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":282,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":122,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":129,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":82,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":141,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":106,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":235,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":251}}]
