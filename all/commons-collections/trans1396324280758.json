[{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.bag.TreeBag<E>.(comparator()) == null) && (!(E instanceof java.lang.Comparable))) {\n    throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"));\n} ","position":"org.apache.commons.collections4.bag.TreeBag:86","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"V = V","position":"org.apache.commons.collections4.map.Flat3Map:537","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.TransformerClosure<E>(org.apache.commons.collections4.Transformer<? super E, ?>)","position":"org.apache.commons.collections4.functors.TransformerClosure:52","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bag.AbstractMapBag<E>.doWriteObject(java.io.ObjectOutputStream)","position":"org.apache.commons.collections4.bag.HashBag:67","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.Bag<E>)(org.apache.commons.collections4.collection.PredicatedCollection<E>.decorated()))","position":"org.apache.commons.collections4.bag.PredicatedBag:87","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int = int","position":"org.apache.commons.collections4.map.AbstractHashedMap:495","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \")","position":"org.apache.commons.collections4.functors.InstantiateTransformer:118","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:129","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.AbstractIteratorDecorator<java.util.Map.Entry<K, V>>.remove()","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:641","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[]);\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: InstantiationException\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor must be public\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor threw an exception\" , java.lang.reflect.InvocationTargetException);\n}","position":"org.apache.commons.collections4.functors.InstantiateFactory:125","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:138","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:93","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.bag.AbstractMapBag:209","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:227","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:417","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingIterator:85","type":"CtThrowImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:212","type":"CtAssignmentImpl"},"status":-1},{"failures":[12],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:129","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","object":"object"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.SynchronizedCollection:164","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray(T[]);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:163","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"K = null","position":"org.apache.commons.collections4.map.Flat3Map:570","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.list.LazyList:132","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.AbstractListDecorator:103","type":"CtReturnImpl"},"status":-1},{"failures":[22],"variableMapping":{"defaultClosure":"closure","size":"count","this":"this"},"name":"replace","transplant":{"sourceCode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} ","position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} ","position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsTruePredicate.org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:518","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:135","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<? super E>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n        org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n        return ;\n    } \n}","position":"org.apache.commons.collections4.functors.SwitchClosure:146","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) == 5) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(4))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(4)))))","position":"org.apache.commons.collections4.map.MultiKeyMap:695","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) - 1","position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"nextObjectSet":"chainExhausted"},"name":"add","transplant":{"sourceCode":"if (this.boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl"},"status":0},{"failures":[23],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = null","position":"org.apache.commons.collections4.list.TreeList:273","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:145","type":"CtInvocationImpl"},"status":-1},{"failures":[24],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:84","type":"CtReturnImpl"},"status":-1},{"failures":[25,26],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<java.util.Map.Entry<K, V>>(java.util.Iterator<java.util.Map.Entry<K, V>>)","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:145","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>> = java.util.Set<java.util.Map.Entry<K, V>>.iterator()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:92","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * An {@link Iterator} for iterating over a prefix search.\n */\nprivate final class EntryIterator extends org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.TrieIterator<java.util.Map.Entry<K, V>> {\n    private final K prefix;\n\n    private final int offset;\n\n    private final int lengthInBits;\n\n    private boolean lastOne;\n\n    private org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> subtree;\n\n    /** \n     * Starts iteration at the given entry & search only\n     * within the given subtree.\n     */\nEntryIterator(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> startScan ,final K prefix ,final int offset ,final int lengthInBits) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        this.K = K;\n        this.int = int;\n        this.int = int;\n    }\n\n    public java.util.Map.Entry<K, V> next() {\n        final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.TrieIterator<java.util.Map.Entry<K, V>>.nextEntry();\n        if (boolean) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null;\n        } \n        return java.util.Map.Entry<K, V>;\n    }\n\n    @java.lang.Override\n    protected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> findNext(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> prior) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n\n    @java.lang.Override\n    public void remove() {\n        boolean boolean = false;\n        final int int = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            boolean = true;\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.TrieIterator<java.util.Map.Entry<K, V>>.remove();\n        if ((int != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || boolean) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.subtree(K, int, int);\n        } \n        if ((int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            boolean = true;\n        } \n    }\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2331","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:69","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:100","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.BidiMapIterator<K, V>(this)","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:218","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(java.util.Map<K, V>.entrySet())","position":"org.apache.commons.collections4.map.AbstractIterableMap:34","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.ListOrderedMap.org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(java.util.Map<K, V>)","position":"org.apache.commons.collections4.MapUtils:1423","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.iterators.PushbackIterator<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.PushbackIterator:65","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:137","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.map.Flat3Map:477","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().headMap(K)","position":"org.apache.commons.collections4.map.LazySortedMap:148","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:77","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasNext()","position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:73","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"changed":"previousObjectSet"},"name":"add","transplant":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:279","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl"},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"binaryOperator":"int > int","name":"removeConditional","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:699","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSet<E>(java.util.Set<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSet:60","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"remove() method is not supported\")","position":"org.apache.commons.collections4.iterators.ArrayIterator:159","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.reflect.Array.((E)(java.lang.reflect.Array.get(this.java.lang.Object, this.int)))","position":"org.apache.commons.collections4.iterators.ArrayListIterator:120","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.containsKey(V)) && ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.get(V)) != (java.util.Map.Entry<K, V>.getKey()))) {\n    throw new java.lang.IllegalArgumentException(\"Cannot use setValue() when the object being set is already in the map\");\n} ","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:355","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:209","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][int]","position":"org.apache.commons.collections4.map.MultiKeyMap:605","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:145","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.ListIterator<?>.nextIndex()","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:163","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:131","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"obj"},"name":"add","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.ReverseListIterator:79","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((int + (int)), E)","position":"org.apache.commons.collections4.list.AbstractLinkedList:1023","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return T[]","position":"org.apache.commons.collections4.bag.AbstractMapBag:479","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:132","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.collection.UnmodifiableCollection:108","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.size()","position":"org.apache.commons.collections4.bag.AbstractMapBag:458","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:120","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap(K , null)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:875","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"))","position":"org.apache.commons.collections4.iterators.ArrayIterator:114","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:98","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.TransformedSortedMap:155","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>","position":"org.apache.commons.collections4.map.AbstractLinkedMap:571","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>))","position":"org.apache.commons.collections4.map.AbstractLinkedMap:263","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().first()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:92","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.TransformerPredicate<T>(org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean>)","position":"org.apache.commons.collections4.functors.TransformerPredicate:51","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.TransformerPredicate.org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean>)","position":"org.apache.commons.collections4.PredicateUtils:470","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.PredicatedCollection.org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(java.util.Collection<C>, org.apache.commons.collections4.Predicate<? super C>)","position":"org.apache.commons.collections4.CollectionUtils:1751","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().equals(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:130","type":"CtReturnImpl"},"status":-2},{"failures":[84,85],"binaryOperator":"int >= int","name":"removeConditional","position":"org.apache.commons.collections4.list.GrowthList:183","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"(int)--","position":"org.apache.commons.collections4.list.AbstractLinkedList:847","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:133","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = (int) - (int)","position":"org.apache.commons.collections4.queue.CircularFifoQueue:164","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.int = this.int","position":"org.apache.commons.collections4.iterators.ArrayIterator:197","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.getShort(java.util.Map<? super K, ?>, K)","position":"org.apache.commons.collections4.MapUtils:624","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NotNullPredicate.org.apache.commons.collections4.functors.NotNullPredicate.<T>notNullPredicate()","position":"org.apache.commons.collections4.PredicateUtils:135","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.StaticBucketMap.EntrySet()","position":"org.apache.commons.collections4.map.StaticBucketMap:369","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this)","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:146","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 2 :\n    if (java.lang.Object.equals(V)) {\n        return true;\n    } ","position":"org.apache.commons.collections4.map.Flat3Map:269","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (T) == T","position":"org.apache.commons.collections4.functors.IdentityPredicate:72","type":"CtReturnImpl"},"status":-2},{"failures":[86,87,88,84,85],"variableMapping":{"val":"element"},"name":"replace","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.CollatingIterator:258","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.GrowthList:186","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().lastIndexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.FixedSizeList:113","type":"CtReturnImpl"},"status":-2},{"failures":[89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:113","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl"},"status":-1},{"failures":[162],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\")","position":"org.apache.commons.collections4.functors.SwitchTransformer:63","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:143","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.map.ListOrderedMap:776","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().clear()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:78","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return 1","position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:106","type":"CtReturnImpl"},"status":-2},{"failures":[163,164],"variableMapping":{"this":"this","visitor":"visitor"},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitInsertCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.InsertCommand:54","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitDeleteCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.DeleteCommand:53","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(\"No more elements in the iteration\")","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:222","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The map must not be null\")","position":"org.apache.commons.collections4.set.MapBackedSet:76","type":"CtThrowImpl"},"status":0},{"failures":[93,94,95,96,97,98,99,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,121,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304],"name":"returnValue","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:86","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"sub":"map"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:120","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"R.add(O)","position":"org.apache.commons.collections4.CollectionUtils:926","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().comparator()","position":"org.apache.commons.collections4.bag.TreeBag:104","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"falseClosure":"iClosure","trueClosure":"iClosure"},"name":"add","transplant":{"sourceCode":"if ((org.apache.commons.collections4.Closure<? super E> == null) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n} ","position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super T>.execute(T)","position":"org.apache.commons.collections4.functors.ClosureTransformer:72","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>","position":"org.apache.commons.collections4.list.NodeCachingLinkedList:139","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.bag.SynchronizedBag<E>(org.apache.commons.collections4.Bag<E>)","position":"org.apache.commons.collections4.bag.SynchronizedBag:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl"},"status":-2},{"failures":[22],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:236","type":"CtReturnImpl"},"status":-2},{"failures":[22],"variableMapping":{"estimatedSize":"iCount"},"name":"replace","transplant":{"sourceCode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} ","position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (int) ; int++) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.util.Collection<V>.isEmpty()) {\n    org.apache.commons.collections4.map.MultiValueMap.this.remove(java.lang.Object);\n} ","position":"org.apache.commons.collections4.map.MultiValueMap:522","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.LoopingIterator:90","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"object":"object"},"name":"add","transplant":{"sourceCode":"return ((java.util.Collection<?>)(java.lang.Object)).isEmpty()","position":"org.apache.commons.collections4.CollectionUtils:1386","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:125","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> = new org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>()","position":"org.apache.commons.collections4.list.TreeList:831","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().isEmpty()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:84","type":"CtReturnImpl"},"status":-2},{"failures":[305,306],"variableMapping":{"c":"coll"},"name":"add","transplant":{"sourceCode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} ","position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:131","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.intersection(this.java.util.Map<K, V>[][int].keySet(), java.util.Map<K, V>.keySet())","position":"org.apache.commons.collections4.map.CompositeMap:135","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} ","position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl"},"status":-2},{"failures":[0,2,3,4,6,8,9,10,11],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return -1","position":"org.apache.commons.collections4.map.LinkedMap:172","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) - 1","position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Factory<? extends O> == null) {\n    throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n} ","position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:89","type":"CtReturnImpl"},"status":-2},{"failures":[307],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterIterator:144","type":"CtAssignmentImpl"},"status":-1},{"failures":[308,309,310,23],"binaryOperator":"(E) == null","name":"removeConditional","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:141","type":"mutation","status":-1},{"failures":[27,28,29,30,40,41,42,43,53,54,55,56,57,58,69,70,71,72,82,83],"binaryOperator":"(int) < (int)","name":"negateConditional","position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} ","position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.iterators.ArrayIterator:148","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:903","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = java.util.Enumeration<? extends E>.nextElement()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:92","type":"CtAssignmentImpl"},"status":-2},{"failures":[311],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.collections4.bag.AbstractMapBag:465","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:122","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>","position":"org.apache.commons.collections4.map.MultiKeyMap:487","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:132","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate()","position":"org.apache.commons.collections4.functors.IdentityPredicate:48","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String)","position":"org.apache.commons.collections4.map.ListOrderedMap:768","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.FixedSizeList:98","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"canRemove":"chainExhausted"},"name":"add","transplant":{"sourceCode":"this.boolean = false","position":"org.apache.commons.collections4.bag.AbstractMapBag:229","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:87","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.ReverseListIterator:109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((int + (int)), E)","position":"org.apache.commons.collections4.list.AbstractLinkedList:1023","type":"CtReturnImpl"},"status":0},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":6,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":95,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":129,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":280,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":226,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":261,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":103,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":224,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":297,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":22,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":28,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":164,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":228,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":144,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":281,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":237,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":87,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":233,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":86,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":140,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":148,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":112,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":174,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":182,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":17,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":234,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":156,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":90,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":58,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":290,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":307,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":196,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":47,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":301,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":274,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":123,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":172,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":44,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":118,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":176,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":188,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":31,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":209,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":213,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":295,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":0,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":155,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":215,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":49,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":5,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":189,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":293,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":45,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":255,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":20,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":113,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":13,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":165,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":192,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":157,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":243,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":298,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":222,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":291,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":217,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":247,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":141,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":254,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":117,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":34,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":183,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":100,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":216,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":278,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":2,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":191,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":168,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":199,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":227,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":154,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":48,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":264,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":19,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":62,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":184,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":204,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":256,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":30,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":83,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":300,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":77,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":249,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":257,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":311,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":283,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":198,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":268,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":9,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":104,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":201,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":143,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":14,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":29,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":68,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":84,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":106,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":273,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":55,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":185,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":128,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":125,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":207,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":238,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":269,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":294,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":130,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":279,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":212,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":81,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":136,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":142,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":171,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":35,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":53,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":146,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":108,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":205,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":25,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":80,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":246,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":16,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":63,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":178,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":266,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":147,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":160,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":206,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":275,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":150,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":220,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":107,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":4,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":131,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":214,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":38,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":109,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":187,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":260,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":289,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":270,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":288,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":179,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":75,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":197,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":167,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":170,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":262,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":271,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":3,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":250,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":82,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":251,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":276,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":96,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":203,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":235,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":180,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":306,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":263,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":303,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":236,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":296,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":21,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":33,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":66,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":111,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":244,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":239,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":72,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":99,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":285,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":302,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":27,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":8,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":36,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":76,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":94,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":73,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":162,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":37,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":137,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":242,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":139,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":163,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":258,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":138,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":221,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":284,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":193,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":120,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking":88,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":59,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":89,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":126,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":15,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":114,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":18,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":40,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":218,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":219,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":74,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":202,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":272,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":7,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":223,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":153,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":292,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":23,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":79,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":85,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":169,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":64,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":195,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":241,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":92,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":122,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":149,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":158,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":194,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":46,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":200,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":91,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":134,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":225,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":252,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":232,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":286,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":299,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":186,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":308,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":309,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":310,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":132,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":133,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":267,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":245,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":287,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":145,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":304,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":54,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":253,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":151,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":265,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":52,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":11,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":69,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":32,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":10,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":124,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":175,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":159,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":211,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":282,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":181,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":173,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":60,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":39,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":110,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":121,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":51,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":50,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":135,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":259,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":102,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":161,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenRemove":12,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testFirstKey":24,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":43,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":248,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":277,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":231,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":61,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":97,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":70,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":78,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":152,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":210,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":190,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":240,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":305,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":41,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":42,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":208,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":56,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":230,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":57,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":119,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":116,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":71,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":177,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":229,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":166}}]
