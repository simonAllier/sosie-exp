[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"variableMapping":{"obj":"lock"},"name":"add","transplant":{"sourceCode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:124","type":"CtSynchronizedImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final E E : E[]) {\n    org.apache.commons.collections4.bag.TransformedBag<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}","position":"org.apache.commons.collections4.bag.TransformedBag:82","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsTruePredicate.org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:518","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.map.StaticBucketMap:407","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:151","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * The lock object, which also includes a count of the nodes in this lock.\n */\nprivate static final class Lock {\n    public int size;\n}","position":"org.apache.commons.collections4.map.StaticBucketMap:486","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:118","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"remove() is not supported\")","position":"org.apache.commons.collections4.iterators.PermutationIterator:153","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"The collection must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingIterator:56","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.set.ListOrderedSet<E>(java.util.Set<E>)","position":"org.apache.commons.collections4.set.ListOrderedSet:101","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:225","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.remove()","position":"org.apache.commons.collections4.list.AbstractLinkedList:928","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedMap<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>)(org.apache.commons.collections4.bag.AbstractMapBag<E>.getMap()))","position":"org.apache.commons.collections4.bag.TreeBag:109","type":"CtReturnImpl"},"status":-2},{"failures":[14],"binaryOperator":"int >= int","name":"conditionalBoundary","position":"org.apache.commons.collections4.list.GrowthList:183","type":"mutation","status":-1},{"failures":[],"binaryOperator":"(\"Couldn\\'t get the node: \" + \"index (\")","name":"math","position":"org.apache.commons.collections4.list.AbstractLinkedList:543","type":"mutation","status":-2},{"failures":[14],"binaryOperator":"int >= int","name":"conditionalBoundary","position":"org.apache.commons.collections4.list.GrowthList:183","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * Values implementation for the SingletonMap.\n * This class is needed as values is a view that must update as the map updates.\n */\nstatic class SingletonValues<V> extends java.util.AbstractSet<V> implements java.io.Serializable {\n    private static final long serialVersionUID = -3689524741863047872L;\n\n    private final org.apache.commons.collections4.map.SingletonMap<?, V> parent;\n\n    SingletonValues(final org.apache.commons.collections4.map.SingletonMap<?, V> parent) {\n        java.util.AbstractSet<V>.super();\n        this.org.apache.commons.collections4.map.SingletonMap<?, V> = org.apache.commons.collections4.map.SingletonMap<?, V>;\n    }\n\n    @java.lang.Override\n    public int size() {\n        return 1;\n    }\n\n    @java.lang.Override\n    public boolean isEmpty() {\n        return false;\n    }\n\n    @java.lang.Override\n    public boolean contains(final java.lang.Object object) {\n        return org.apache.commons.collections4.map.SingletonMap<?, V>.containsValue(java.lang.Object);\n    }\n\n    @java.lang.Override\n    public void clear() {\n        throw new java.lang.UnsupportedOperationException();\n    }\n\n    @java.lang.Override\n    public java.util.Iterator<V> iterator() {\n        return new org.apache.commons.collections4.iterators.SingletonIterator<V>(org.apache.commons.collections4.map.SingletonMap<?, V>.getValue() , false);\n    }\n}","position":"org.apache.commons.collections4.map.SingletonMap:480","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:132","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.map.LazyMap:154","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:87","type":"CtAssignmentImpl"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,3,4,5,6,7,8,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().contains(java.lang.Object)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:108","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"ComparableComparator\".hashCode()","position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.nextIndex()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:72","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return -1","position":"org.apache.commons.collections4.map.LinkedMap:172","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().indexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.FixedSizeList:103","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.recalcHeight()","position":"org.apache.commons.collections4.list.TreeList:599","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:92","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:86","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:128","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>.toArray(new java.lang.Object[org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>.size()])","position":"org.apache.commons.collections4.map.AbstractReferenceMap:543","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return K","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1897","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()","position":"org.apache.commons.collections4.functors.ForClosure:53","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)","position":"org.apache.commons.collections4.bag.AbstractMapBag:572","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>","position":"org.apache.commons.collections4.map.AbstractMapDecorator:73","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.map.Flat3Map:760","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:85","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"(int)++","position":"org.apache.commons.collections4.map.AbstractHashedMap:515","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().addAll(java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:100","type":"CtReturnImpl"},"status":-2},{"failures":[236],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Transformer must not be null\")","position":"org.apache.commons.collections4.map.DefaultedMap:129","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:138","type":"CtThrowImpl"},"status":-1},{"failures":[237,238,239],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsValue(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:86","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey().equals(java.lang.Object))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    return true;\n} ","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1592","type":"CtIfImpl"},"status":-2},{"failures":[240,241],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"ComparatorChains must contain at least one Comparator\")","position":"org.apache.commons.collections4.comparators.ComparatorChain:252","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")","position":"org.apache.commons.collections4.functors.WhileClosure:56","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bag.AbstractMapBag<E>.addAll(java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.bag.HashBag:58","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:196","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:65","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\")","position":"org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator:44","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (V != null) {\n    return V;\n} ","position":"org.apache.commons.collections4.MapUtils:367","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:124","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().tailSet(E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:114","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.TransformedSortedSet<E>.getSortedSet().tailSet(E)","position":"org.apache.commons.collections4.set.TransformedSortedSet:140","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.ExceptionTransformer.org.apache.commons.collections4.functors.ExceptionTransformer.<I,O>exceptionTransformer()","position":"org.apache.commons.collections4.TransformerUtils:79","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}","position":"org.apache.commons.collections4.functors.WhileClosure:88","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}","position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:131","type":"CtInvocationImpl"},"status":-2},{"failures":[242],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null));\n} ","position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtIfImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:226","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.bag.CollectionSortedBag:109","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AndPredicate.org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:258","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator","list":"list"},"name":"add","transplant":{"sourceCode":"this.java.util.ListIterator<E> = this.java.util.List<E>.listIterator(this.java.util.List<E>.size())","position":"org.apache.commons.collections4.iterators.ReverseListIterator:171","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:242","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"value":"value","key":"key"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.put(K, V)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1742","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}","position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:209","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.Put<K, V>.clear()","position":"org.apache.commons.collections4.SplitMapUtils:135","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == this) {\n        return true;\n    } \n    return (java.lang.Object == this) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int))","name":"math","position":"org.apache.commons.collections4.map.LRUMap:259","type":"mutation","status":-2},{"failures":[],"variableMapping":{"nextObject":"object"},"name":"replace","transplant":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:266","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Map<E, ? super V>.keySet().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.set.MapBackedSet:141","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((E) == null) {\n} else {\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n    } else {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n    E = null;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:141","type":"CtIfImpl"},"status":-2},{"failures":[243,244,245,246,247,248,249,250,251,252,253,254],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterListIterator:236","type":"mutation","return":"return true","status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:196","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:131","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl"},"status":-2},{"failures":[255,256,257,258,259,260,261,262,263,264],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bag.AbstractMapBag<E>.doWriteObject(java.io.ObjectOutputStream)","position":"org.apache.commons.collections4.bag.TreeBag:119","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.getEntry(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:427","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.list.GrowthList:155","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"replace","transplant":{"sourceCode":"if ((this.java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = this.java.util.Iterator<? extends E>;\n    return java.util.ListIterator<E>.previous();\n} ","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.LoopingIterator:90","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()","position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().uniqueSet()","position":"org.apache.commons.collections4.bag.PredicatedBag:102","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Closure<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} ","position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}","position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:113","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.Flat3Map<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())","position":"org.apache.commons.collections4.map.Flat3Map:385","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:162","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"key"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2116","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:114","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:405","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsFalsePredicate.org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:503","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} ","position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().hashCode()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:117","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"map":"map"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.MapTransformer<I, O>(java.util.Map<? super I, ? extends O>)","position":"org.apache.commons.collections4.functors.MapTransformer:53","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} ","position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:234","type":"CtAssignmentImpl"},"status":-2},{"failures":[265],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterListIterator:261","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue()","position":"org.apache.commons.collections4.map.MultiKeyMap:339","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)--","position":"org.apache.commons.collections4.iterators.FilterListIterator:150","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(java.io.IOException)","position":"org.apache.commons.collections4.functors.PrototypeFactory:187","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.Bag<E>)(org.apache.commons.collections4.collection.PredicatedCollection<E>.decorated()))","position":"org.apache.commons.collections4.bag.PredicatedBag:87","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"curObject":"currentValue","leastObject":"currentValue"},"name":"add","transplant":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:226","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.CollectionUtils:377","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:175","type":"CtSynchronizedImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.map.ReferenceIdentityMap:236","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsTruePredicate.org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:518","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet(this)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2221","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this)","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:100","type":"CtReturnImpl"},"status":-2},{"failures":[266],"binaryOperator":"(boolean) == false","name":"removeConditional","position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < int) {\n    E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int);\n    if (E == null) {\n        E = org.apache.commons.collections4.Factory<? extends E>.create();\n        org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E);\n        return E;\n    } \n    return E;\n} ","position":"org.apache.commons.collections4.list.LazyList:113","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.list.TreeList:228","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:204","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.collections4.map.AbstractHashedMap:675","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.DefaultedMap<K, V>.this(org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(V))","position":"org.apache.commons.collections4.map.DefaultedMap:145","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} ","position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:65","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().iterator()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:153","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()","position":"org.apache.commons.collections4.collection.CompositeCollection:153","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"input":"object"},"name":"replace","transplant":{"sourceCode":"if (T == null) {\n    return null;\n} ","position":"org.apache.commons.collections4.functors.CloneTransformer:66","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.collections4.sequence.EditCommand:69","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(java.util.List<E> , new java.util.HashSet<E>())","position":"org.apache.commons.collections4.list.SetUniqueList:80","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(\"Couldn\\'t get the node: \" + \"index (\")","name":"math","position":"org.apache.commons.collections4.list.AbstractLinkedList:539","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"[]\"","position":"org.apache.commons.collections4.bag.AbstractMapBag:585","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toString()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:212","type":"CtReturnImpl"},"status":0},{"failures":[267,268,269],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.Iterator<I>.remove()","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:62","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"K = java.util.ListIterator<K>.previous()","position":"org.apache.commons.collections4.map.ListOrderedMap:738","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:119","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()","position":"org.apache.commons.collections4.map.AbstractReferenceMap:189","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:205","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (null == E) {\n    throw new java.lang.NullPointerException(\"Attempted to add null object to queue\");\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:226","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.bag.TreeBag<E>.(comparator()) == null) && (!(E instanceof java.lang.Comparable))) {\n    throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"));\n} ","position":"org.apache.commons.collections4.bag.TreeBag:86","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E)","position":"org.apache.commons.collections4.bag.AbstractMapBag:254","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().entrySet()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:72","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)","position":"org.apache.commons.collections4.bag.AbstractMapBag:572","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:196","type":"CtInvocationImpl"},"status":-2},{"failures":[270],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} ","position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} ","position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((E) == null) {\n} else {\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n    } else {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n    E = null;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:141","type":"CtIfImpl"},"status":-2},{"failures":[271],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = -1","position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.LazyList:112","type":"CtLocalVariableImpl"},"status":-1},{"failures":[272,273],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:101","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().comparator()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl"},"status":-2},{"failures":[274,275],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:224","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:86","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:110","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return java.util.Set<E>.remove(java.lang.Object);\n    } \n}","position":"org.apache.commons.collections4.set.CompositeSet:228","type":"CtForEachImpl"},"status":-2},{"failures":[276,277,278,279,280,281,282,283],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"if ((this.java.util.ListIterator<E>.hasNext()) == false) {\n    return 0;\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:112","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.nextIndex()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:72","type":"CtReturnImpl"},"status":-1},{"failures":[237,238,239,284,285,286,287,288,274,289,290,291],"variableMapping":{"validForUpdate":"hasNext"},"name":"add","transplant":{"sourceCode":"if ((this.boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl"},"status":-1},{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":169,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":170,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":249,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":158,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":157,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":211,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":240,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":195,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":280,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":181,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":80,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":8,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":119,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":14,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":137,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":139,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":194,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":290,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testLastKey":273,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":282,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":198,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":50,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":25,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":64,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":143,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":265,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":65,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":242,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":106,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":134,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":116,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":213,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":279,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":26,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":214,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":59,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":48,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":121,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":269,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":277,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":63,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":83,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":243,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":281,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":230,"org.apache.commons.collections4.ListUtilsTest.testLazyList":271,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":248,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":140,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":91,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":10,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":125,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":102,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":136,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSimpleSerialization":258,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":40,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":68,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":17,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":100,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":95,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":58,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":12,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":199,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":235,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":234,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":245,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":19,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":191,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":1,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":113,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":183,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":187,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":72,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":188,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":267,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":104,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":105,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":144,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":232,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":288,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":184,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":120,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":274,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":52,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":259,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":55,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":252,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":32,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":130,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":67,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":151,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":210,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":207,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":135,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":152,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":231,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":244,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":171,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":223,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":4,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":39,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":84,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":21,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":193,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":275,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":79,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":118,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":122,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":225,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":233,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":41,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":27,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":51,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":161,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":77,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":138,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":129,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":103,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":3,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":5,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":108,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":153,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":44,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":190,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":69,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":247,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":270,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":289,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":175,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":217,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":92,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":203,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":216,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":189,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":224,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":61,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":107,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":98,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":283,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":38,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":182,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":18,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":109,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":246,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":260,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":74,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":154,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":155,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":257,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":54,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":132,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":29,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":291,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":287,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":222,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":47,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":261,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":86,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":131,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":196,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":197,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":11,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":22,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":268,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":73,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":285,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":206,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":28,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":88,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":205,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":90,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testSet":266,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":20,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":117,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":167,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":115,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":168,"org.apache.commons.collections4.bag.TreeBagTest.testSimpleSerialization":256,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":56,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":208,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":186,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":6,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":133,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":251,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":263,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":178,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":236,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":284,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":111,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":204,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":82,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":24,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":164,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":145,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":201,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":276,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":156,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":0,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":127,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":278,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":226,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":255,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":228,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":227,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":31,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":142,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":179,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":123,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":75,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":13,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":159,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":250,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":160,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSimpleSerialization":264,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":15,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":172,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":185,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":34,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":78,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":212,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":81,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":202,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":30,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":42,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":272,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":76,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":89,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":173,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":141,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":165,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":35,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":97,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":166,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":218,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":219,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":99,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":237,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":46,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":238,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":239,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":53,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":192,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":70,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":94,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":7,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":163,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":87,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":215,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":9,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":162,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":209,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":66,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":124,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":62,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":174,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":241,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":220,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":254,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":221,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":16,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":177,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":150,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":253,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":57,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":96,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":110,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":149,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":101,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":148,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":23,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":43,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":126,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":2,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":262,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":60,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":37,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":93,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":180,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":147,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":112,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":146,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":176,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":49,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":114,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":200,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":33,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":286,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":85,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":36,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":45,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":71}}]
