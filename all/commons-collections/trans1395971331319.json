[{"failures":[],"binaryOperator":"(((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int))","name":"math","position":"org.apache.commons.collections4.map.LRUMap:271","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}","position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:112","type":"CtReturnImpl"},"status":-2},{"failures":[0,1],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.util.ConcurrentModificationException(\"Cursor closed\")","position":"org.apache.commons.collections4.list.CursorableLinkedList:548","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")","position":"org.apache.commons.collections4.functors.WhileClosure:56","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.collection.UnmodifiableCollection:88","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:182","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"this.java.util.Iterator<? extends I> = java.util.Iterator<? extends I>","position":"org.apache.commons.collections4.iterators.TransformIterator:110","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:182","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Set<java.util.Map.Entry<V, K>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2139","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.ArrayIterator<E>.this(java.lang.Object, 0)","position":"org.apache.commons.collections4.iterators.ArrayIterator:60","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().lastKey()","position":"org.apache.commons.collections4.bag.TreeBag:100","type":"CtReturnImpl"},"status":-2},{"failures":[2],"binaryOperator":"int < (int)","name":"conditionalBoundary","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsExceptionPredicate.org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:488","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:151","type":"CtLocalVariableImpl"},"status":-2},{"failures":[3,4,5,6,7,8,9,10],"variableMapping":{"hash":"nextIndex"},"name":"add","transplant":{"sourceCode":"int += ~(int << 11)","position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)--","position":"org.apache.commons.collections4.iterators.FilterListIterator:150","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[11,12,13,14,15],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:97","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.functors.OnePredicate:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.bag.TreeBag:117","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.list.SetUniqueList<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}","position":"org.apache.commons.collections4.list.SetUniqueList:265","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.Queue<E>)(org.apache.commons.collections4.collection.PredicatedCollection<E>.decorated()))","position":"org.apache.commons.collections4.queue.PredicatedQueue:84","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>> = new org.apache.commons.collections4.ArrayStack<org.apache.commons.collections4.list.TreeList.AVLNode<E>>()","position":"org.apache.commons.collections4.list.TreeList:877","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:120","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.util.ConcurrentModificationException(\"Cursor closed\")","position":"org.apache.commons.collections4.list.CursorableLinkedList:548","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Factory must not be null\")","position":"org.apache.commons.collections4.functors.FactoryTransformer:49","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Character.java.lang.Character.valueOf(java.lang.CharSequence.charAt(int))","position":"org.apache.commons.collections4.ListUtils:622","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:93","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2320","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:110","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.bag.TreeBag:126","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingIterator<E>.reset()","position":"org.apache.commons.collections4.iterators.LoopingIterator:88","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return \"[]\"","position":"org.apache.commons.collections4.bag.AbstractMapBag:585","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl"},"status":-2},{"failures":[16,17,18,19,20],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:113","type":"CtAssignmentImpl"},"status":0},{"failures":[21,22],"variableMapping":{"object":"object"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.UnmodifiableEntrySet.org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(java.util.Set<java.util.Map.Entry<K, V>>)","position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:101","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    E E = null;\n    while (java.util.ListIterator<E>.hasNext()) {\n        E = java.util.ListIterator<E>.next();\n    }\n    java.util.ListIterator<E>.previous();\n    return E;\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtIfImpl"},"status":-2},{"failures":[23],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().nextKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:78","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return (java.util.Collection<?> == null) || (java.util.Collection<?>.isEmpty())","position":"org.apache.commons.collections4.CollectionUtils:1415","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:176","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"E = org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E)","position":"org.apache.commons.collections4.list.TransformedList:187","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>.isInstance(java.lang.Object)","position":"org.apache.commons.collections4.functors.InstanceofPredicate:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().headSet(E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:109","type":"CtLocalVariableImpl"},"status":-2},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],"variableMapping":{"obj":"object"},"name":"add","transplant":{"sourceCode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().contains(java.lang.Object)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:108","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}","position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().first()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtReturnImpl"},"status":-2},{"failures":[2],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(\"No more elements in the iteration\")","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:222","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:65","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:107","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.CursorableLinkedList<E>.broadcastNodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)","position":"org.apache.commons.collections4.list.CursorableLinkedList:222","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().first()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:170","type":"CtReturnImpl"},"status":-2},{"failures":[213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,108,109,259,110,111,260,112,261,262,263,264,265,113,266,267,268,269,270,271,272,273,274,275],"binaryOperator":"java.util.Collection<E> == null","name":"removeConditional","position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"this.java.util.Iterator<? extends I> = java.util.Iterator<? extends I>","position":"org.apache.commons.collections4.iterators.TransformIterator:110","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:97","type":"CtAssignmentImpl"},"status":-2},{"failures":[276,277,278,279,280,281,282,283,284,285],"variableMapping":{"out":"out"},"name":"add","transplant":{"sourceCode":"java.io.ObjectOutputStream.writeObject(null)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.bag.TreeBag:117","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Policy must not be null.\")","position":"org.apache.commons.collections4.map.PassiveExpiringMap:242","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:94","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:154","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:69","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot set value - Predicate rejected it\")","position":"org.apache.commons.collections4.map.PredicatedMap:161","type":"CtThrowImpl"},"status":-2},{"failures":[286,287,166,288,289,167,290,291],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().first()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().last()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:85","type":"CtReturnImpl"},"status":-1},{"failures":[292,293,294,295,296,297,298,299,300,301],"variableMapping":{"iterator":"currentIterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:197","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1950","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.InstanceofPredicate.org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(java.lang.Class<?>)","position":"org.apache.commons.collections4.PredicateUtils:175","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:69","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"))","position":"org.apache.commons.collections4.iterators.ArrayIterator:114","type":"CtThrowImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int))","name":"math","position":"org.apache.commons.collections4.map.LRUMap:325","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.PrintStream.print(\" = \")","position":"org.apache.commons.collections4.MapUtils:975","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]))","position":"org.apache.commons.collections4.functors.OnePredicate:58","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null)","position":"org.apache.commons.collections4.FactoryUtils:68","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-8223473624050467718L","position":"org.apache.commons.collections4.bag.AbstractSortedBagDecorator:35","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.SynchronizedCollection:164","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"(int)++","position":"org.apache.commons.collections4.map.AbstractHashedMap:565","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int))","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:84","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl"},"status":-2},{"failures":[302,303],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"hasNext":"nextObjectSet"},"name":"replace","transplant":{"sourceCode":"return (this.boolean) == false","position":"org.apache.commons.collections4.map.SingletonMap:427","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{"hasNext":"hasNext"},"name":"add","transplant":{"sourceCode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == true) {\n    throw new java.util.NoSuchElementException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n} ","position":"org.apache.commons.collections4.map.SingletonMap:431","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:113","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.PredicatedList<E>.decorated().addAll(int, java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.list.PredicatedList:121","type":"CtReturnImpl"},"status":0},{"failures":[304,305,306],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NotPredicate.org.apache.commons.collections4.functors.NotPredicate.notPredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:452","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>(this)","position":"org.apache.commons.collections4.map.Flat3Map:616","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(java.util.Map<K, V>.entrySet())","position":"org.apache.commons.collections4.map.AbstractIterableMap:34","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (K == null) {\n    throw new java.lang.NullPointerException(\"Key cannot be null\");\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:130","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"The collection must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingIterator:56","type":"CtThrowImpl"},"status":-2},{"failures":[307],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:60","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>>.remove()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:99","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().clear()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:104","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().subMap(K, K)","position":"org.apache.commons.collections4.map.TransformedSortedMap:145","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:124","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:147","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.FilterListIterator:232","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} ","position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:145","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:108","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return K","position":"org.apache.commons.collections4.map.TransformedMap:168","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:234","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (org.apache.commons.collections4.Bag<E> != null)) && ((org.apache.commons.collections4.Bag<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(org.apache.commons.collections4.Bag<E>.toArray()));\n    org.apache.commons.collections4.Bag<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.bag.TransformedBag<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} ","position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:405","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:72","type":"CtReturnImpl"},"status":-2},{"failures":[308,309],"variableMapping":{"nextObject":"nextObject"},"name":"replace","transplant":{"sourceCode":"this.E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterIterator:177","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().subSet(E, E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:104","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Comparator<E> = org.apache.commons.collections4.ComparatorUtils.java.util.Comparator","position":"org.apache.commons.collections4.ComparatorUtils:154","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (!org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException(((\"No element at index \" + (int)) + \".\"));\n} ","position":"org.apache.commons.collections4.list.TreeList:1050","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:115","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (this.int) > org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(getStartIndex())","position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))","position":"org.apache.commons.collections4.map.PredicatedSortedMap:92","type":"CtReturnImpl"},"status":-2},{"failures":[293,294,295,296,297,298,299,300,301],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:198","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * An {@link Iterator} that holds a single {@link TrieEntry}.\n */\nprivate final class SingletonIterator implements java.util.Iterator<java.util.Map.Entry<K, V>> {\n    private final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry;\n\n    private int hit = 0;\n\n    public SingletonIterator(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry) {\n        this.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n\n    public boolean hasNext() {\n        return (int) == 0;\n    }\n\n    public java.util.Map.Entry<K, V> next() {\n        if ((int) != 0) {\n            throw new java.util.NoSuchElementException();\n        } \n        ++(int);\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n\n    public void remove() {\n        if ((int) != 1) {\n            throw new java.lang.IllegalStateException();\n        } \n        ++(int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2295","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().first()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:92","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"canRemove":"result"},"name":"replace","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:97","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.list.GrowthList:155","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"obj":"key"},"name":"add","transplant":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:66","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().containsKey(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:64","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(java.util.Map<? extends K, ? extends V>)","position":"org.apache.commons.collections4.map.Flat3Map:389","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:105","type":"CtReturnImpl"},"status":-2},{"failures":[310,311,312,313,314],"binaryOperator":"(java.util.Collection<? extends E>.size()) > 0","name":"negateConditional","position":"org.apache.commons.collections4.iterators.LoopingIterator:71","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} ","position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:132","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 3 :\n    if ((V) == null) {\n        return true;\n    } ","position":"org.apache.commons.collections4.map.Flat3Map:250","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.ClosureTransformer<T>(org.apache.commons.collections4.Closure<? super T>)","position":"org.apache.commons.collections4.functors.ClosureTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    if ((java.util.Set<E>.isEmpty()) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.collections4.set.CompositeSet:111","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.IdentityPredicate<T>(T)","position":"org.apache.commons.collections4.functors.IdentityPredicate:50","type":"CtReturnImpl"},"status":-2},{"failures":[2],"binaryOperator":"(int <= 0)","name":"conditionalBoundary","position":"org.apache.commons.collections4.functors.ForClosure:52","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * An iterator over the map entries.\n */\nclass ViewMapEntryIterator extends org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator implements org.apache.commons.collections4.OrderedIterator<java.util.Map.Entry<K, V>> {\n    /** \n     * Constructor.\n     */\nViewMapEntryIterator() {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.super(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n\n    public java.util.Map.Entry<K, V> next() {\n        return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigateNext();\n    }\n\n    public java.util.Map.Entry<K, V> previous() {\n        return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigatePrevious();\n    }\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1777","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.ArrayStack<E>.pop()","position":"org.apache.commons.collections4.iterators.PushbackIterator:96","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} ","position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.equals(java.lang.Object)","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:76","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"inlineConstant","inlineConstant":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.keyvalue.MultiKey<K>.this(((K[])(new java.lang.Object[]{ K , K , K })), false)","position":"org.apache.commons.collections4.keyvalue.MultiKey:82","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"(((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \")","name":"math","position":"org.apache.commons.collections4.list.AbstractLinkedList:547","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == 0) {\n    return ;\n} ","position":"org.apache.commons.collections4.map.Flat3Map:376","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.collections4.sequence.EditCommand:69","type":"CtReturnImpl"},"status":-2},{"failures":[315],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null));\n    boolean = true;\n} ","position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(java.lang.Object)","position":"org.apache.commons.collections4.bag.AbstractMapBag:299","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"relativePosition":"size"},"name":"replace","transplant":{"sourceCode":"if (int < 0) {\n    int++;\n} ","position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null));\n} ","position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.IndexedCollection<K, C>.removeFromIndex(((C)(java.lang.Object)))","position":"org.apache.commons.collections4.collection.IndexedCollection:209","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectHashCodeEqualsContract":236,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":159,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":233,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":0,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":165,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":173,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":2,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":53,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":113,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":240,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":42,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":196,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":198,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionClear":223,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":164,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":195,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCanonicalFullCollectionExists":232,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":103,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":94,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":146,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":202,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":23,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":95,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":286,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":69,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":210,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":31,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":147,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":11,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":89,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":44,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":84,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":227,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":304,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":93,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":77,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":26,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":199,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":118,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":251,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":308,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":224,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":302,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":34,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":65,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":252,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":264,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":212,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSimpleSerialization":277,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSimpleSerialization":272,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":55,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":98,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":130,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":63,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":122,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":88,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":229,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":186,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":219,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":4,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":132,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":161,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":242,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":28,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":181,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":185,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":45,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":166,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":67,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":68,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":203,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":298,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":244,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":182,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":43,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":299,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":105,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":284,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":85,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":8,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":124,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":126,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":97,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":158,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":155,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":291,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":211,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":287,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":175,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testSerializeDeserializeThenCompare":228,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":54,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":78,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":109,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":134,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":290,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":20,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":163,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":52,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":33,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":39,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":56,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":104,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":148,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":153,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":220,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":50,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":197,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":38,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":66,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":108,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":110,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":261,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCanonicalEmptyCollectionExists":273,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":15,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":71,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":152,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":59,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":247,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":168,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":99,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":6,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":300,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":214,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":306,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":179,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":119,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":190,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":167,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":91,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":70,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":61,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":139,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":174,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":13,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":131,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":72,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":5,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":285,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":47,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":276,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":107,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":208,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":141,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":301,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":297,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":25,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":83,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":280,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":243,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":267,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":80,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToString":218,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":239,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":207,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectEqualsSelf":231,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":259,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":275,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":193,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":194,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":143,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":226,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":256,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":46,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":21,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":296,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":154,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":115,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":140,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":192,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":22,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":117,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCanonicalEmptyCollectionExists":234,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":32,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":133,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":255,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":30,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":213,"org.apache.commons.collections4.bag.TreeBagTest.testSimpleSerialization":279,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":86,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":156,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":222,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":184,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":111,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":209,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":7,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":282,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":170,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":248,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":295,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":74,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":191,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":241,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":250,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":76,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":315,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":145,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":151,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":188,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":204,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":257,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":266,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":149,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":36,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":238,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":265,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":278,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":37,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":125,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":201,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":171,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":309,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":40,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":48,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":230,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSimpleSerialization":283,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":128,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":176,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":271,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":314,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":183,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":269,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":135,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":51,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":160,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":75,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":189,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":142,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":57,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":49,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":116,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":217,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":177,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":200,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":136,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":60,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":263,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":62,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":258,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":260,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":268,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCanonicalFullCollectionExists":274,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":292,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":82,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":293,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":294,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":106,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":162,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":262,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":100,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":121,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":112,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":114,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":254,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":24,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":221,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":303,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":96,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":41,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":249,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":92,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":178,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":1,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":10,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_remove":17,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":129,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":169,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":225,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testSimpleSerialization":235,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":305,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":150,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":9,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":73,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":87,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":123,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":216,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":18,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":64,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":12,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":144,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":35,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":58,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":245,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping0":310,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1":311,"org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.testThrowingClosure":307,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2":312,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3":313,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":246,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":253,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":281,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":14,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":90,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":138,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":120,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":172,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":215,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":206,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":288,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":19,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":27,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":180,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":205,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":29,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":102,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":187,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":127,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":16,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":79,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":137,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectHashCodeEqualsSelfHashCode":237,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":289,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":81,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsSelfHashCode":270,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":101}}]
