[{"failures":[0,1,2,3,4,5,6,7],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (boolean) || org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())","position":"org.apache.commons.collections4.iterators.FilterIterator:86","type":"CtReturnImpl"},"status":-1},{"failures":[8],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.IteratorChain:273","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)--","position":"org.apache.commons.collections4.iterators.FilterListIterator:150","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\")","position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:129","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int))","position":"org.apache.commons.collections4.list.FixedSizeList:123","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.util.Collection<? extends E>.size())","position":"org.apache.commons.collections4.collection.TransformedCollection:137","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<E>.previous()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:77","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} ","position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))","position":"org.apache.commons.collections4.map.LazySortedMap:126","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new java.lang.StringBuilder().append(org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getKey())","position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:84","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().subMap(K, K)","position":"org.apache.commons.collections4.map.LazySortedMap:143","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitInsertCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.InsertCommand:54","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((E) == null) {\n} else {\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n    } else {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n    E = null;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:141","type":"CtIfImpl"},"status":-2},{"failures":[9,10],"variableMapping":{"predicate1":"predicate","predicate2":"predicate"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.OrPredicate<T>(org.apache.commons.collections4.Predicate<? super T> , org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.functors.OrPredicate:53","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsFalsePredicate.org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:503","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.MapIterator<K, V>","position":"org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator:55","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractMapBag<E>.add(E)","position":"org.apache.commons.collections4.bag.TreeBag:90","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += java.util.Collection<? extends E>.size()","position":"org.apache.commons.collections4.list.TreeList:227","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().poll()","position":"org.apache.commons.collections4.queue.PredicatedQueue:103","type":"CtReturnImpl"},"status":-2},{"failures":[11,12,13,14,15,16],"binaryOperator":"((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int))))","name":"removeConditional","position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.SwitchTransformer.org.apache.commons.collections4.functors.SwitchTransformer.<I,O>switchTransformer(org.apache.commons.collections4.Predicate<? super I>[], org.apache.commons.collections4.Transformer<? super I, ? extends O>[], null)","position":"org.apache.commons.collections4.TransformerUtils:252","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().subSet(E, E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:104","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.GrowthList:186","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:89","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet(this)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2221","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().entrySet()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:72","type":"CtReturnImpl"},"status":-2},{"failures":[17,18,19,20,21,22,23,24],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl"},"status":-1},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"variableMapping":{"coll":"coll","this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:182","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:113","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:92","type":"CtReturnImpl"},"status":-2},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.util.EmptyStackException()","position":"org.apache.commons.collections4.ArrayStack:108","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * The sublist implementation for AbstractLinkedList.\n */\nprotected static class LinkedSubList<E> extends java.util.AbstractList<E> {\n    /** \n     * The main list\n     */\norg.apache.commons.collections4.list.AbstractLinkedList<E> parent;\n\n    /** \n     * Offset from the main list\n     */\nint offset;\n\n    /** \n     * Sublist size\n     */\nint size;\n\n    /** \n     * Sublist modCount\n     */\nint expectedModCount;\n\n    protected LinkedSubList(final org.apache.commons.collections4.list.AbstractLinkedList<E> parent ,final int fromIndex ,final int toIndex) {\n        if (int < 0) {\n            throw new java.lang.IndexOutOfBoundsException((\"fromIndex = \" + int));\n        } \n        if (int > (org.apache.commons.collections4.list.AbstractLinkedList<E>.size())) {\n            throw new java.lang.IndexOutOfBoundsException((\"toIndex = \" + int));\n        } \n        if (int > int) {\n            throw new java.lang.IllegalArgumentException(((((\"fromIndex(\" + int) + \") > toIndex(\") + int) + \")\"));\n        } \n        this.org.apache.commons.collections4.list.AbstractLinkedList<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>;\n        this.int = int;\n        this.int = int - int;\n        this.int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n    }\n\n    @java.lang.Override\n    public int size() {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return int;\n    }\n\n    @java.lang.Override\n    public E get(final int index) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, int);\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((int + (int)));\n    }\n\n    @java.lang.Override\n    public void add(final int index, final E obj) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, ((int) + 1));\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        org.apache.commons.collections4.list.AbstractLinkedList<E>.add((int + (int)), E);\n        int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n        (int)++;\n        (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n    }\n\n    @java.lang.Override\n    public E remove(final int index) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, int);\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((int + (int)));\n        int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n        (int)--;\n        (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        return E;\n    }\n\n    @java.lang.Override\n    public boolean addAll(final java.util.Collection<? extends E> coll) {\n        return org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.addAll(int, java.util.Collection<? extends E>);\n    }\n\n    @java.lang.Override\n    public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, ((int) + 1));\n        final int int = java.util.Collection<? extends E>.size();\n        if (int == 0) {\n            return false;\n        } \n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + int), java.util.Collection<? extends E>);\n        int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n        int += int;\n        (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        return true;\n    }\n\n    @java.lang.Override\n    public E set(final int index, final E obj) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, int);\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((int + (int)), E);\n    }\n\n    @java.lang.Override\n    public void clear() {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.iterator();\n        while (java.util.Iterator<E>.hasNext()) {\n            java.util.Iterator<E>.next();\n            java.util.Iterator<E>.remove();\n        }\n    }\n\n    @java.lang.Override\n    public java.util.Iterator<E> iterator() {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListIterator(this);\n    }\n\n    @java.lang.Override\n    public java.util.ListIterator<E> listIterator(final int index) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, ((int) + 1));\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(this, int);\n    }\n\n    @java.lang.Override\n    public java.util.List<E> subList(final int fromIndexInclusive, final int toIndexExclusive) {\n        return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(org.apache.commons.collections4.list.AbstractLinkedList<E> , (int + (int)) , (int + (int)));\n    }\n\n    protected void rangeCheck(final int index, final int beyond) {\n        if ((int < 0) || (int >= int)) {\n            throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n        } \n    }\n\n    protected void checkModCount() {\n        if ((org.apache.commons.collections4.list.AbstractLinkedList<E>.int) != (int)) {\n            throw new java.util.ConcurrentModificationException();\n        } \n    }\n}","position":"org.apache.commons.collections4.list.AbstractLinkedList:938","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedMap<K, V>.transformMap(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.TransformedMap:104","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} ","position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:157","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>(this)","position":"org.apache.commons.collections4.map.Flat3Map:616","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.entrySet())","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:104","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"add() is not supported on CompositeSet without a SetMutator strategy\");\n} ","position":"org.apache.commons.collections4.set.CompositeSet:213","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().getCount(java.lang.Object)","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:69","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.Flat3Map.EntrySet<K, V>(this)","position":"org.apache.commons.collections4.map.Flat3Map:733","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().entrySet()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:90","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:60","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.this(new org.apache.commons.collections4.map.PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<K, V>(long), java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.PassiveExpiringMap:277","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:120","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(this)","position":"org.apache.commons.collections4.map.AbstractHashedMap:759","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.entrySet())","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:104","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.TransformerPredicate<T>(org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean>)","position":"org.apache.commons.collections4.functors.TransformerPredicate:51","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.int = this.int","position":"org.apache.commons.collections4.iterators.ArrayIterator:197","type":"CtAssignmentImpl"},"status":-2},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"variableMapping":{"obj":"object"},"name":"add","transplant":{"sourceCode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (this == java.lang.Object) {\n    return true;\n} ","position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.equals(java.lang.Object)","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:76","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.util.Map.Entry<K, V> == null) {\n    return null;\n} ","position":"org.apache.commons.collections4.map.AbstractReferenceMap:245","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.setValue(V)","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:68","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size()","position":"org.apache.commons.collections4.map.Flat3Map:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:224","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return 0","position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().remove(java.lang.Object, int)","position":"org.apache.commons.collections4.bag.PredicatedBag:98","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.MapTransformer<I, O>(java.util.Map<? super I, ? extends O>)","position":"org.apache.commons.collections4.functors.MapTransformer:53","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.Flat3Map.Values<V>(this)","position":"org.apache.commons.collections4.map.Flat3Map:1026","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.SynchronizedCollection:100","type":"CtReturnImpl"},"status":-2},{"failures":[287],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (T == null) {\n    return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate();\n} ","position":"org.apache.commons.collections4.functors.IdentityPredicate:47","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E E = ((E)(java.io.ObjectInputStream.readObject()));\n    final int int = java.io.ObjectInputStream.readInt();\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    int += int;\n}","position":"org.apache.commons.collections4.bag.AbstractMapBag:520","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:119","type":"CtInvocationImpl"},"status":-2},{"failures":[288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344],"binaryOperator":"int > int","name":"negateConditional","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"T = org.apache.commons.collections4.Transformer<? super T, ? extends T>.transform(T)","position":"org.apache.commons.collections4.functors.ChainedTransformer:112","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().comparator()","position":"org.apache.commons.collections4.map.LazySortedMap:139","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"added":"hasNext","changed":"hasNext"},"name":"add","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:227","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Set must not be null\")","position":"org.apache.commons.collections4.list.SetUniqueList:98","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:138","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}","position":"org.apache.commons.collections4.map.StaticBucketMap:226","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"))","position":"org.apache.commons.collections4.iterators.ArrayIterator:120","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean) {\n    if ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) != (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n        ((java.lang.ref.Reference<?>)(java.lang.Object)).clear();\n    } \n    if ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) != (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n        ((java.lang.ref.Reference<?>)(java.lang.Object)).clear();\n    } else if (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.boolean) {\n        java.lang.Object = null;\n    } \n} ","position":"org.apache.commons.collections4.map.AbstractReferenceMap:729","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:101","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1460","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null))","position":"org.apache.commons.collections4.list.GrowthList:154","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().headSet(E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:109","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Size: \") + (java.util.List<K>.size())))","position":"org.apache.commons.collections4.map.ListOrderedMap:247","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:60","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.List<E> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} ","position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:519","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.DefaultedMap:181","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"key":"key"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(java.lang.Object)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1734","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:76","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\")","name":"math","position":"org.apache.commons.collections4.bag.TreeBag:87","type":"mutation","status":-2},{"failures":[345,346,347],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(java.util.List<E>.isEmpty())","position":"org.apache.commons.collections4.iterators.LoopingListIterator:127","type":"CtReturnImpl"},"status":-1},{"failures":[],"binaryOperator":"((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \")","name":"math","position":"org.apache.commons.collections4.iterators.ArrayIterator:115","type":"mutation","status":-2},{"failures":[],"variableMapping":{"sub":"map"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:149","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (T == null) {\n    return null;\n} ","position":"org.apache.commons.collections4.functors.CloneTransformer:66","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>));\n} ","position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:120","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(java.lang.Object));\n    return null == (java.util.Map<T, java.lang.Integer>) ? null == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(org.apache.commons.collections4.comparators.FixedOrderComparator<?>.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.int))) && ((boolean) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n} ","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:286","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"E[][org.apache.commons.collections4.queue.CircularFifoQueue<E>.decrement(int)] = E[][int]","position":"org.apache.commons.collections4.queue.CircularFifoQueue:397","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.iterators.PushbackIterator:105","type":"CtThrowImpl"},"status":-2},{"failures":[348],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>.isInstance(java.lang.Object)","position":"org.apache.commons.collections4.functors.InstanceofPredicate:70","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"Entry(\")","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1339","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean boolean = true","position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:59","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.TransformedSortedMap:155","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.util.SortedMap<K, V> == null) {\n    throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n} ","position":"org.apache.commons.collections4.MapUtils:1773","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.SortedMap<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>);\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} ","position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Set<E>.contains(java.lang.Object)","position":"org.apache.commons.collections4.list.SetUniqueList:285","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:133","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"code":"size"},"name":"replace","transplant":{"sourceCode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}","position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null);\n}","position":"org.apache.commons.collections4.list.LazyList:126","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return byte","position":"org.apache.commons.collections4.MapUtils:745","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterIterator:165","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V)","name":"math","position":"org.apache.commons.collections4.map.LRUMap:259","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"class KeyView extends org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.View<K> {\n    /** \n     * Create a new TreeBidiMap.KeyView.\n     */\npublic KeyView(final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement orderType) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.View<K>.super(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n\n    @java.lang.Override\n    public java.util.Iterator<K> iterator() {\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n\n    @java.lang.Override\n    public boolean contains(final java.lang.Object obj) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(lookupKey(java.lang.Object)) != null;\n    }\n\n    @java.lang.Override\n    public boolean remove(final java.lang.Object o) {\n        return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(doRemoveKey(java.lang.Object)) != null;\n    }\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1469","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.LoopingListIterator:145","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.util.SortedMap<K, V>","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:144","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:151","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:104","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:158","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}","position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:147","type":"CtAssignmentImpl"},"status":0},{"failures":[50,51,52,53,54,56,57,58,59,61],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:197","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"Trie[\").append(java.util.AbstractMap<K, V>.size()).append(\"]={\\n\")","position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:67","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:107","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.util.SortedMap<K, V>","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:146","type":"CtReturnImpl"},"status":-2},{"failures":[349,350,351,352,353,354,355,356,357,358,359,360],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.FilterListIterator:232","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasNext()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:62","type":"CtReturnImpl"},"status":-2},{"failures":[361],"variableMapping":{"falseClosure":"iClosure","trueClosure":"iClosure"},"name":"replace","transplant":{"sourceCode":"if ((org.apache.commons.collections4.Closure<? super E> == null) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n} ","position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:86","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.collection.PredicatedCollection<T>(java.util.Collection<T> , org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.collection.PredicatedCollection:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().keySet()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:102","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"set":"sub"},"name":"replace","transplant":{"sourceCode":"if (java.util.SortedSet<E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    return java.util.SortedSet<E>;\n} ","position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:115","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:553","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.LoopingIterator:90","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeyIterator()","position":"org.apache.commons.collections4.map.StaticBucketMap:622","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().iterator()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:116","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int == (org.apache.commons.collections4.trie.KeyAnalyzer.int)","position":"org.apache.commons.collections4.trie.KeyAnalyzer:58","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:405","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n} ","position":"org.apache.commons.collections4.map.AbstractReferenceMap:926","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}","position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"nextIterator"},"name":"add","transplant":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:97","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"isLocked":"nextObjectSet"},"name":"add","transplant":{"sourceCode":"this.boolean = true","position":"org.apache.commons.collections4.comparators.ComparatorChain:269","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterIterator:165","type":"CtAssignmentImpl"},"status":0},{"failureDictionary":{"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":197,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectEqualsSelf":242,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":355,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":170,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":192,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":204,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":150,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":134,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":174,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":8,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":318,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":14,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":108,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":48,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":210,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":153,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":246,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":232,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":60,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":105,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":181,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":94,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":307,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":24,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":113,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":0,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":137,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":245,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":278,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":337,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":142,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":64,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":206,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":158,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":5,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":17,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":334,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":167,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":124,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":34,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":321,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":120,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":148,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":175,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":202,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":349,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":339,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":125,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":354,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":283,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":270,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":276,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":262,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":3,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":335,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":32,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":84,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":277,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":272,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":263,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":271,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":215,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":46,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":248,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":316,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":109,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":139,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":258,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":78,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":314,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":35,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":274,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":28,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":324,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":118,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":234,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":351,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":156,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":177,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":193,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":205,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":238,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":338,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":112,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":235,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":90,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":243,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":77,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":311,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":182,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":196,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":198,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":57,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":75,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":320,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":188,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":344,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":141,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":296,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":58,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":80,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":161,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":273,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":130,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":261,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":136,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":166,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":358,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":301,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":319,"org.apache.commons.collections4.map.TransformedSortedMapTest.testSerializeDeserializeThenCompare":241,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":304,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":7,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":211,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":127,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":350,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":279,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":73,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":95,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":284,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":173,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":62,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":259,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":300,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":302,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":325,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":19,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":239,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":1,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":68,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectEqualsSelf":110,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":29,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":299,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":254,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":168,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":236,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":286,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":194,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":39,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":43,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":250,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":312,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":22,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":23,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":237,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":135,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":345,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":230,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":59,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":353,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":346,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":328,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":221,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":285,"org.apache.commons.collections4.PredicateUtilsTest.testIdentityPredicate":287,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":294,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":164,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":176,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":6,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":163,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":76,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":122,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":20,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":12,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":126,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":227,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":352,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":179,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":138,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":343,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":61,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":217,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":56,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":85,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":257,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":264,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":208,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":81,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":106,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":180,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectEqualsSelf":207,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":348,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":201,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":209,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":111,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":249,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":54,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":323,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":315,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":218,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":267,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":212,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":71,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":291,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":255,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":253,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":187,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":191,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":31,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":154,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":40,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":317,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":282,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":357,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":326,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":96,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":295,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":224,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":2,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":144,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":292,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":53,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":280,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":327,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":11,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":151,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":195,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":37,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":260,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":268,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":100,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":107,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":247,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":308,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":49,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":140,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":47,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectEqualsSelf":220,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":251,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":252,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":160,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":82,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":330,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":103,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":89,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":132,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":183,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":203,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":293,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":231,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":36,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":165,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":356,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":86,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":146,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":97,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":265,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":147,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":298,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":4,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":101,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":186,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":233,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":313,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":119,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":79,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":123,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":214,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":229,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":162,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":225,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":27,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":172,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":336,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":133,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":178,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":131,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate":9,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":45,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":157,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":41,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":275,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":93,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":121,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":129,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":50,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":171,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":266,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":51,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":52,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":190,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":256,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":44,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":184,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":98,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":269,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":42,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":200,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":30,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":303,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":69,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":145,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":228,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":240,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":342,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":361,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":360,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":288,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":33,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":322,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":99,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":359,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":216,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":26,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":102,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":309,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":16,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":329,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards":347,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":88,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":341,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":128,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":155,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":340,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":67,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":244,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":74,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":18,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":15,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":104,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectEqualsSelf":70,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":333,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":159,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":219,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":310,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":289,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":21,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":143,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":297,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":115,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":72,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":213,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectEqualsSelf":149,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":223,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":152,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":331,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":55,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":189,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":332,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":114,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":305,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":306,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":290,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":281,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":226}}]
