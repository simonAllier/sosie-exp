[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.comparators.ComparatorChain<E> org.apache.commons.collections4.comparators.ComparatorChain<E> = new org.apache.commons.collections4.comparators.ComparatorChain<E>()","position":"org.apache.commons.collections4.ComparatorUtils:80","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:406","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:164","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().headMap(K)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:114","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(int)","position":"org.apache.commons.collections4.CollectionUtils:1606","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Map.Entry<K, V>.equals(java.lang.Object)","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:76","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:93","type":"CtReturnImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.map.AbstractHashedMap:352","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.Bag<E>)(org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated()))","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:63","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Factory must not be null\")","position":"org.apache.commons.collections4.list.LazyList:93","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.WhileClosure<E>(org.apache.commons.collections4.Predicate<? super E> , org.apache.commons.collections4.Closure<? super E> , boolean)","position":"org.apache.commons.collections4.functors.WhileClosure:61","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (int) > 0","position":"org.apache.commons.collections4.list.TreeList:1064","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().first()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}","position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.LazySortedMap:131","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass()))","name":"math","position":"org.apache.commons.collections4.functors.InvokerTransformer:137","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.ReverseListIterator:109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((int + (int)), E)","position":"org.apache.commons.collections4.list.AbstractLinkedList:1023","type":"CtReturnImpl"},"status":0},{"failures":[],"name":"inlineConstant","inlineConstant":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 0 :\n    int = K == null ? 0 : K.hashCode();\n    K = K;\n    V = V;\n    break;","position":"org.apache.commons.collections4.map.Flat3Map:358","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterIterator:182","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return ((V)(java.lang.Object))","position":"org.apache.commons.collections4.map.AbstractHashedMap:1092","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:114","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return boolean ? null : org.apache.commons.collections4.list.TreeList.AVLNode<E>","position":"org.apache.commons.collections4.list.TreeList:536","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:145","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:122","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (T) == T","position":"org.apache.commons.collections4.functors.IdentityPredicate:72","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (int) > 0","position":"org.apache.commons.collections4.list.TreeList:1064","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.ForClosure<E>(int , org.apache.commons.collections4.Closure<? super E>)","position":"org.apache.commons.collections4.functors.ForClosure:58","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.util.Map.Entry<K, V>.getValue()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n    return V;\n} ","position":"org.apache.commons.collections4.map.MultiKeyMap:180","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterListIterator:211","type":"CtAssignmentImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray(T[]);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:163","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (null != (java.util.List<java.util.Comparator<E>>)) {\n    int ^= java.util.List<java.util.Comparator<E>>.hashCode();\n} ","position":"org.apache.commons.collections4.comparators.ComparatorChain:306","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.Set<E>)(org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated()))","position":"org.apache.commons.collections4.set.AbstractSetDecorator:63","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n    throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n} ","position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>","position":"org.apache.commons.collections4.list.AbstractLinkedList:520","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.iterators.PushbackIterator<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.PushbackIterator:65","type":"CtReturnImpl"},"status":-2},{"failures":[177,178,179,180,181,182,183,184,185],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"remove() method is not supported for an ObjectArrayIterator\")","position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:134","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:69","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Collections.java.util.Collections.singleton(K)","position":"org.apache.commons.collections4.map.SingletonMap:319","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int += org.apache.commons.collections4.list.TreeList.AVLNode<E>.int","position":"org.apache.commons.collections4.list.TreeList:886","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.LoopingListIterator:215","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} ","position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1104","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterIterator:103","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"iClosure":"closure"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.Closure<? super E>","position":"org.apache.commons.collections4.functors.ClosureTransformer:83","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>))","position":"org.apache.commons.collections4.functors.ForClosure:56","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} ","position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:157","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1154","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:209","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<I>.remove()","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:62","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashIterator<K, V>.currentEntry()","position":"org.apache.commons.collections4.map.AbstractHashedMap:792","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ArrayIterator<E>.this(java.lang.Object, int, java.lang.reflect.Array.java.lang.reflect.Array.getLength(java.lang.Object))","position":"org.apache.commons.collections4.iterators.ArrayIterator:74","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"predicate":"predicate"},"name":"add","transplant":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl"},"status":0},{"failures":[186,187,188],"variableMapping":{"element":"obj"},"name":"replace","transplant":{"sourceCode":"if (null == E) {\n    throw new java.lang.NullPointerException(\"Attempted to add null object to queue\");\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:226","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:162","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)","position":"org.apache.commons.collections4.map.MultiKeyMap:309","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.map.DefaultedMap:180","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean) {\n    java.util.List<E>.addAll(int, java.util.List<E>);\n} ","position":"org.apache.commons.collections4.set.ListOrderedSet:329","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:119","type":"CtLocalVariableImpl"},"status":-2},{"failures":[189,190,191,192,193,194,195,196,197,198,199,200],"variableMapping":{"nextObjectSet":"nextObjectSet"},"name":"add","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterIterator:178","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:129","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingIterator:85","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:133","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append('=')","position":"org.apache.commons.collections4.map.Flat3Map:1238","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((E) == null) {\n} else {\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n    } else {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n    E = null;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:141","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>()","position":"org.apache.commons.collections4.CollectionUtils:329","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} ","position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl"},"status":-2},{"failures":[182,201,202,203,204,205,206,207],"variableMapping":{"iterator":"currentIterator"},"name":"add","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int))","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:84","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1911","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:126","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int != org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(size())","position":"org.apache.commons.collections4.list.SetUniqueList:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.WhileClosure<E>(org.apache.commons.collections4.Predicate<? super E> , org.apache.commons.collections4.Closure<? super E> , boolean)","position":"org.apache.commons.collections4.functors.WhileClosure:61","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<K, V> = null","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:100","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"The list must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>))","position":"org.apache.commons.collections4.functors.SwitchClosure:97","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().lastIndexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.FixedSizeList:113","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1218","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList<E>(java.util.List<E>)","position":"org.apache.commons.collections4.list.FixedSizeList:56","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next()","position":"org.apache.commons.collections4.list.CursorableLinkedList:315","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingIterator:85","type":"CtThrowImpl"},"status":-2},{"failures":[208],"binaryOperator":"int < (int)","name":"conditionalBoundary","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().size()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:188","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().isEmpty()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:84","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\")","position":"org.apache.commons.collections4.iterators.ArrayListIterator:189","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Factory must not be null\")","position":"org.apache.commons.collections4.functors.FactoryTransformer:49","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(E[])","position":"org.apache.commons.collections4.IteratorUtils:245","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--","position":"org.apache.commons.collections4.map.StaticBucketMap:333","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return boolean ^ boolean ? boolean ^ (boolean) ? 1 : -1 : 0","position":"org.apache.commons.collections4.comparators.BooleanComparator:141","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.Bag<E>)(org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated()))","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:63","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = null","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2172","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E>.(heightRightMinusLeft()) > 0) {\n    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.min();\n    E = org.apache.commons.collections4.list.TreeList.AVLNode<E>.E;\n    if (boolean) {\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n    } \n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeMin();\n    if ((int) < 0) {\n        (int)++;\n    } \n} else {\n    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.max();\n    E = org.apache.commons.collections4.list.TreeList.AVLNode<E>.E;\n    if (boolean) {\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n    } \n    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeMax();\n    if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n        boolean = true;\n    } \n    if ((int) > 0) {\n        (int)--;\n    } \n}","position":"org.apache.commons.collections4.list.TreeList:637","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.LazyList:112","type":"CtLocalVariableImpl"},"status":-2},{"failures":[209],"variableMapping":{"iterator":"iterator","obj":"obj"},"name":"add","transplant":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:162","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.set(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:97","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"newCapacity":"size","proposedCapacity":"size"},"name":"add","transplant":{"sourceCode":"while (int < int) {\n    int <<= 1;\n}","position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null));\n} ","position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:671","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.V = null","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:89","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ArrayIterator<E>.this(java.lang.Object, int, java.lang.reflect.Array.java.lang.reflect.Array.getLength(java.lang.Object))","position":"org.apache.commons.collections4.iterators.ArrayIterator:74","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))","position":"org.apache.commons.collections4.map.TransformedSortedMap:128","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.FixedSizeSortedMap.org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.MapUtils:1589","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Map Entry must not be null\")","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:43","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:143","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.ListOrderedMap<K, V>.entrySet()) {\n    final K K = java.util.Map.Entry<K, V>.getKey();\n    final V V = java.util.Map.Entry<K, V>.getValue();\n    if (boolean) {\n        boolean = false;\n    } else {\n        java.lang.StringBuilder.append(\", \");\n    }\n    java.lang.StringBuilder.append((K == this ? \"(this Map)\" : K));\n    java.lang.StringBuilder.append('=');\n    java.lang.StringBuilder.append((V == this ? \"(this Map)\" : V));\n}","position":"org.apache.commons.collections4.map.ListOrderedMap:365","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:109","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][--int]","position":"org.apache.commons.collections4.map.AbstractHashedMap:1151","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:162","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Number instanceof java.lang.Double) {\n    return ((java.lang.Double)(java.lang.Number));\n} ","position":"org.apache.commons.collections4.MapUtils:323","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-721644942746081630L","position":"org.apache.commons.collections4.comparators.ComparatorChain:53","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<K, V> = null","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:100","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}","position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedMap<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>)(org.apache.commons.collections4.bag.AbstractMapBag<E>.getMap()))","position":"org.apache.commons.collections4.bag.TreeBag:109","type":"CtReturnImpl"},"status":-2},{"failures":[178],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The collection must not be null\")","position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:82","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"add() not supported for empty Iterator\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:61","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (int) == 0","position":"org.apache.commons.collections4.map.AbstractHashedMap:209","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:205","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<?, ?> != null) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<?, ?>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<?, ?>.int))) && (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<?, ?>.isEmpty()))","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1253","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.LazySortedMap:131","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:210","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:151","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap.org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(java.util.SortedMap<K, V>, org.apache.commons.collections4.Transformer<? super K, ? extends K>, org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.MapUtils:1573","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return 0","position":"org.apache.commons.collections4.ListUtils:283","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:107","type":"CtLocalVariableImpl"},"status":-2},{"failures":[189,190,191,192,193,194,195,196,197,198,199,200],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl"},"status":-1},{"failures":[210,211],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.util.ListIterator<E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:77","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasNext()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:97","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>(this)","position":"org.apache.commons.collections4.map.Flat3Map:616","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.entrySet())","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:104","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList<E>(java.util.List<E>)","position":"org.apache.commons.collections4.list.FixedSizeList:154","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.TransformerClosure<E>(org.apache.commons.collections4.Transformer<? super E, ?>)","position":"org.apache.commons.collections4.functors.TransformerClosure:52","type":"CtReturnImpl"},"status":-2},{"failures":[212],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NotNullPredicate.org.apache.commons.collections4.functors.NotNullPredicate.<T>notNullPredicate()","position":"org.apache.commons.collections4.PredicateUtils:135","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"sub":"map"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:149","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:110","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (org.w3c.dom.NodeList) == null ? false : (int) < (org.w3c.dom.NodeList.getLength())","position":"org.apache.commons.collections4.iterators.NodeListIterator:69","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated())","position":"org.apache.commons.collections4.bag.UnmodifiableBag:88","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (int) > 0","position":"org.apache.commons.collections4.list.TreeList:1064","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:141","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>","position":"org.apache.commons.collections4.map.StaticBucketMap:337","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedMap<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>)(org.apache.commons.collections4.bag.AbstractMapBag<E>.getMap()))","position":"org.apache.commons.collections4.bag.TreeBag:109","type":"CtReturnImpl"},"status":-2},{"failures":[213,214],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitDeleteCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.DeleteCommand:53","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitInsertCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.InsertCommand:54","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.collections4.set.CompositeSet:96","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)","position":"org.apache.commons.collections4.bag.PredicatedBag:93","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int += ~(int << 9)","position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:125","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.ArrayStack<E>.pop()","position":"org.apache.commons.collections4.iterators.PushbackIterator:96","type":"CtInvocationImpl"},"status":-2},{"failures":[215,216],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().putAll(java.util.Map<? extends K, ? extends V>)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:110","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.PredicatedMap<K, V>.validate(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}","position":"org.apache.commons.collections4.map.PredicatedMap:186","type":"CtForEachImpl"},"status":-1},{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":91,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":95,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":195,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":22,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":208,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":214,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":108,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":12,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":209,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":70,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":158,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":37,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":46,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":205,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":105,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":120,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":162,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":179,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":90,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":206,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":76,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":38,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":145,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":122,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":189,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":184,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":194,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":132,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":159,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsSelfHashCode":43,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":106,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":129,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":118,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":10,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":134,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testReverse":210,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsSelfHashCode":80,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":16,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":44,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":84,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":155,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":138,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":73,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":32,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":58,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":191,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":59,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":137,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":164,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":17,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":47,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":26,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":30,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":177,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":49,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":126,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":62,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":139,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":60,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":101,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":198,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":82,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":173,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":67,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":190,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":1,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":15,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":124,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":103,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":112,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":176,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":102,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":182,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":18,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":48,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":86,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":72,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":99,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":148,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":54,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":52,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":0,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":147,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":3,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":7,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":140,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":203,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":165,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":204,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":27,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsSelfHashCode":160,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":35,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":85,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":110,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":89,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":193,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":56,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":171,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":133,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":185,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":163,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":151,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":125,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":201,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":166,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":192,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":53,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":69,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":123,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":57,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":109,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":61,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":154,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":36,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":83,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":14,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":128,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":2,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":180,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":24,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":25,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":68,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":178,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":92,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":4,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":141,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":197,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":174,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testWalkForwardAndBack":211,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":213,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":119,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":149,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":39,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenSet":188,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":42,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":75,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":215,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":13,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":169,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":11,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":28,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":78,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":66,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":170,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":143,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAdd":187,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":115,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":142,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":63,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":96,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":175,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":196,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":116,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":100,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":113,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":29,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":19,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":31,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":114,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":161,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":172,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":97,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":65,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":88,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":41,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":117,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsSelfHashCode":131,"org.apache.commons.collections4.PredicateUtilsTest.testIsNotNullPredicate":212,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":150,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":9,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":153,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":5,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":34,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":104,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":51,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":8,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":87,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":136,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":6,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":121,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":130,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":181,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":81,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":152,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":50,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":55,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":40,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":111,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":200,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":216,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":199,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":71,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":144,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":168,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":94,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":183,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":20,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":146,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":207,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":23,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":21,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenRemove":186,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":79,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":202,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":77,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":74,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":107,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":135,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":157,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":45,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":167,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":127,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":98,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":64,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":33,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":156,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":93}}]
