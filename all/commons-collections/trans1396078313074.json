[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:78","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.map.DefaultedMap:194","type":"CtAssignmentImpl"},"status":-2},{"failures":[0],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:88","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)","position":"org.apache.commons.collections4.list.AbstractLinkedList:483","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().setValue(V)","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:70","type":"CtReturnImpl"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10],"binaryOperator":"(int) - 1","name":"math","position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:162","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.SplitMapUtils:56","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.put(K, V)","position":"org.apache.commons.collections4.map.PassiveExpiringMap:442","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:137","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:406","type":"CtReturnImpl"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"binaryOperator":"(int) < (int)","name":"conditionalBoundary","position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().set(int, E)","position":"org.apache.commons.collections4.list.TransformedList:157","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.PrototypeFactory.org.apache.commons.collections4.functors.PrototypeFactory.<T>prototypeFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Short.shortValue()","position":"org.apache.commons.collections4.MapUtils:767","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()","position":"org.apache.commons.collections4.map.AbstractLinkedMap:377","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().hashCode()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:117","type":"CtReturnImpl"},"status":-2},{"failures":[30],"binaryOperator":"(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)) | boolean","name":"removeConditional","position":"org.apache.commons.collections4.list.GrowthList:157","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V> = this","position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:135","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getKey()","position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:136","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:228","type":"CtReturnImpl"},"status":-2},{"failures":[31],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return -1","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.List<E>.size()) - 1","position":"org.apache.commons.collections4.iterators.LoopingListIterator:172","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.selectRejected(java.util.Collection<? extends E>, org.apache.commons.collections4.Predicate<? super E>, new java.util.ArrayList<E>(java.util.Collection<? extends E>.size()))","position":"org.apache.commons.collections4.ListUtils:212","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < int) {\n    E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int);\n    if (E == null) {\n        E = org.apache.commons.collections4.Factory<? extends E>.create();\n        org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E);\n        return E;\n    } \n    return E;\n} ","position":"org.apache.commons.collections4.list.LazyList:113","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)]","position":"org.apache.commons.collections4.map.MultiKeyMap:266","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>.get(java.lang.Object)","position":"org.apache.commons.collections4.map.DefaultedMap:205","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:154","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap.org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(java.util.SortedMap<K, V>, org.apache.commons.collections4.Factory<? extends V>)","position":"org.apache.commons.collections4.MapUtils:1624","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.checkKey(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>)","position":"org.apache.commons.collections4.map.MultiKeyMap:848","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int))","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:95","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:45","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.size()","position":"org.apache.commons.collections4.list.FixedSizeList:179","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:101","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K","position":"org.apache.commons.collections4.map.StaticBucketMap:302","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = java.util.Enumeration<? extends E>.nextElement()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:92","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().poll()","position":"org.apache.commons.collections4.queue.PredicatedQueue:103","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().contains(java.lang.Object)) {\n    java.util.Set<java.lang.Object>.add(java.lang.Object);\n} ","position":"org.apache.commons.collections4.set.ListOrderedSet:232","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterIterator:144","type":"CtAssignmentImpl"},"status":-2},{"failures":[32,33,34],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:91","type":"CtInvocationImpl"},"status":-1},{"failures":[35,36,37,38,39,40,41,42],"binaryOperator":"(org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null","name":"removeConditional","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return K","position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:53","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:122","type":"CtLocalVariableImpl"},"status":-2},{"failures":[1,2,3,4,43,6,44,7,8,9,10],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:135","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(E[] , int)","position":"org.apache.commons.collections4.IteratorUtils:279","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:109","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Collections.java.util.Collections.synchronizedSortedSet(java.util.SortedSet<E>)","position":"org.apache.commons.collections4.SetUtils:275","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.DefaultedMap<K, V>(java.util.Map<K, V> , org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(V))","position":"org.apache.commons.collections4.map.DefaultedMap:87","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().clear()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:78","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Closure<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} ","position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtIfImpl"},"status":-2},{"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,37,38,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Object","position":"org.apache.commons.collections4.iterators.ArrayIterator:170","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().contains(java.lang.Object)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:108","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.OnePredicate.org.apache.commons.collections4.functors.OnePredicate.onePredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:372","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n} ","position":"org.apache.commons.collections4.functors.AllPredicate:57","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1407","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.TransformedPredicate.org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(org.apache.commons.collections4.Transformer<? super T, ? extends T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:537","type":"CtReturnImpl"},"status":-2},{"failures":[191,192,193,194],"variableMapping":{"nextObject":"root"},"name":"replace","transplant":{"sourceCode":"this.E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.TrieIterator<java.util.Map.Entry<K, V>>.nextEntry()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2355","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends I>.remove()","position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.setOffset(org.apache.commons.collections4.list.TreeList.AVLNode<E>, int)","position":"org.apache.commons.collections4.list.TreeList:754","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:87","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().first()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:92","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().last()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:170","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:632","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl"},"status":-2},{"failures":[195,196,197,198,199,200,201,202,203,204,205,206],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().last()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().first()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:92","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator<K, V>.previousEntry()","position":"org.apache.commons.collections4.map.AbstractLinkedMap:419","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)) | boolean","position":"org.apache.commons.collections4.list.GrowthList:157","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"cSize":"count"},"name":"replace","transplant":{"sourceCode":"if (int == 0) {\n    return false;\n} ","position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().add(E, int)","position":"org.apache.commons.collections4.bag.PredicatedBag:94","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.collections4.list.CursorableLinkedList:480","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:115","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:112","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:164","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = int < 0","position":"org.apache.commons.collections4.functors.ComparatorPredicate:177","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.DefaultedMap<K, V>.this(org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(V))","position":"org.apache.commons.collections4.map.DefaultedMap:145","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.OnePredicate.org.apache.commons.collections4.functors.OnePredicate.onePredicate(java.util.Collection<org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:388","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:128","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} ","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"element":"object"},"name":"add","transplant":{"sourceCode":"if (null == E) {\n    throw new java.lang.NullPointerException(\"Attempted to add null object to queue\");\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:226","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.bag.TreeBag<E>.(comparator()) == null) && (!(E instanceof java.lang.Comparable))) {\n    throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"));\n} ","position":"org.apache.commons.collections4.bag.TreeBag:86","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.collections4.comparators.ComparatorChain:287","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this)","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.MapUtils:321","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:229","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator<T>.isLocked()) {\n    throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\");\n} ","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:140","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"prototype":"constantToReturn"},"name":"add","transplant":{"sourceCode":"try {\n    T.getClass().getConstructor(new java.lang.Class<?>[]{ T.getClass() });\n    return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if (T instanceof java.io.Serializable) {\n        return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n    } \n}","position":"org.apache.commons.collections4.functors.PrototypeFactory:67","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:84","type":"CtReturnImpl"},"status":-2},{"failures":[32],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.LoopingListIterator:215","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:197","type":"CtAssignmentImpl"},"status":-2},{"failures":[207,208],"variableMapping":{"predicate1":"predicate1","predicate2":"predicate2"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.OrPredicate<T>(org.apache.commons.collections4.Predicate<? super T> , org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.functors.OrPredicate:53","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AndPredicate.org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:258","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:229","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * A view of this map.\n */\nabstract class View<E> extends java.util.AbstractSet<E> {\n    /** \n     * Whether to return KEY or VALUE order.\n     */\nfinal org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement orderType;\n\n    /** \n     * Constructor.\n     * @param orderType  the KEY or VALUE int for the order\n     * @param main  the main map\n     */\nView(final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement orderType) {\n        java.util.AbstractSet<E>.super();\n        this.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement = org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement;\n    }\n\n    @java.lang.Override\n    public int size() {\n        return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size();\n    }\n\n    @java.lang.Override\n    public void clear() {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear();\n    }\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1443","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().add(E, int)","position":"org.apache.commons.collections4.bag.PredicatedBag:94","type":"CtReturnImpl"},"status":-2},{"failures":[209],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.LazyList:112","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:406","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:147","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"closure":"closure"},"name":"replace","transplant":{"sourceCode":"return ((org.apache.commons.collections4.Closure<T>)(org.apache.commons.collections4.Closure<? super T>))","position":"org.apache.commons.collections4.functors.FunctorUtils:158","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.ForClosure<E>(int , org.apache.commons.collections4.Closure<? super E>)","position":"org.apache.commons.collections4.functors.ForClosure:58","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\")","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:533","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.GrowthList<E>(java.util.List<E>)","position":"org.apache.commons.collections4.list.GrowthList:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"R.add(O)","position":"org.apache.commons.collections4.CollectionUtils:974","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:138","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"(int)--","position":"org.apache.commons.collections4.iterators.FilterListIterator:150","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    boolean = false;\n} else if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n    boolean = true;\n    (int)--;\n} else {\n    boolean = false;\n    boolean = false;\n}","position":"org.apache.commons.collections4.list.CursorableLinkedList:510","type":"CtIfImpl"},"status":-2},{"failures":[1,210,2,3,4,43,6,44,7,8,9,10],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterListIterator:236","type":"mutation","return":"return true","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final K K = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.castKey(java.lang.Object)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:383","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return -1","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.lastEntry()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2174","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:68","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()], org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getKey()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:315","type":"CtReturnImpl"},"status":-2},{"failures":[195,196,197,198,199,200,201,202,203,204,205,206],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().last()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().first()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:92","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String)","position":"org.apache.commons.collections4.map.AbstractLinkedMap:581","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bag.AbstractMapBag<E>.doWriteObject(java.io.ObjectOutputStream)","position":"org.apache.commons.collections4.bag.TreeBag:119","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (java.util.Iterator<T>.hasNext()) {\n    final T T = java.util.Iterator<T>.next();\n    if (java.util.Iterator<T>.hasNext()) {\n        C.execute(T);\n    } else {\n        return T;\n    }\n}","position":"org.apache.commons.collections4.CollectionUtils:724","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:228","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"add() method is not supported\")","position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:157","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedMap<K, V>)(org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated()))","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:75","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:956","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.LoopingListIterator:215","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(K, K)","position":"org.apache.commons.collections4.map.MultiKeyMap:176","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null))","position":"org.apache.commons.collections4.list.GrowthList:154","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().iterator()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:153","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(\"PrototypeCloneFactory: Clone method must be public\" , java.lang.IllegalAccessException)","position":"org.apache.commons.collections4.functors.PrototypeFactory:139","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:136","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.ArrayList<java.util.Map.Entry<K, V>> java.util.ArrayList<java.util.Map.Entry<K, V>> = new java.util.ArrayList<java.util.Map.Entry<K, V>>(org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>.size())","position":"org.apache.commons.collections4.map.AbstractReferenceMap:523","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:149","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final int int = \"BooleanComparator\".hashCode()","position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:182","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().lastKey()","position":"org.apache.commons.collections4.bag.TreeBag:100","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl"},"status":-2},{"failures":[211],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:65","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The collections must not be null\")","position":"org.apache.commons.collections4.CollectionUtils:1592","type":"CtThrowImpl"},"status":-1},{"failures":[191,192,193,194],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:60","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"entryKey":"lock","entryValue":"lock"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} ","position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:112","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.UnmodifiableSortedMap<K, V>(org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().subMap(K, K))","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:162","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object,java.lang.Boolean>invokerTransformer(java.lang.String, java.lang.Class<?>[], java.lang.Object[]))","position":"org.apache.commons.collections4.PredicateUtils:239","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.util.ListIterator<E>.previous()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<? extends E>.previous()","position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:86","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.util.SortedMap<K, V>","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:154","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"inlineConstant","inlineConstant":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"mutation","status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl"},"status":0},{"failures":[212],"variableMapping":{"object":"object"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.EqualPredicate<T>(T)","position":"org.apache.commons.collections4.functors.EqualPredicate:56","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.IdentityPredicate<T>(T)","position":"org.apache.commons.collections4.functors.IdentityPredicate:50","type":"CtReturnImpl"},"status":-1},{"failures":[209,213,214,215,216,217],"variableMapping":{"canRemove":"validForUpdate"},"name":"replace","transplant":{"sourceCode":"this.boolean = false","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:725","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:78","type":"CtAssignmentImpl"},"status":-1},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":6,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":47,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":31,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":76,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":149,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":119,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":124,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":14,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":128,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":207,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":59,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":134,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":181,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":189,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":131,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":112,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":204,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":165,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":54,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":95,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testRemove":217,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":179,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFalsePredicate":5,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":157,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":183,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":99,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":117,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":1,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":105,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":115,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":142,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":205,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":161,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":172,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":65,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":195,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":120,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":122,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":113,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":70,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testLastKey":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":141,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":190,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":74,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":106,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":2,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":160,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":127,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":168,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":175,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":86,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":38,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":143,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":153,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":16,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":12,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":136,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":39,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":144,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":79,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":90,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":167,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":8,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":200,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":170,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":15,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":17,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":96,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":154,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":60,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":97,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":210,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":91,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":116,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":202,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":42,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":75,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":102,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":201,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":178,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":22,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":150,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":198,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":68,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":88,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":185,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":71,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":151,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":33,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":107,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":4,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":40,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":104,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":147,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":156,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":111,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":92,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":81,"org.apache.commons.collections4.PredicateUtilsTest.testIdentityPredicate":212,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":186,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":166,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":174,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":177,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":50,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":93,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":146,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":137,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":206,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":11,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":138,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":41,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":72,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":48,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":57,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":187,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":85,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":58,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":36,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":118,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":61,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testSet":214,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":21,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":51,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":83,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":53,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":13,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":7,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":46,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":145,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":30,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":208,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":121,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":80,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenSet":215,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":162,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":108,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":110,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAdd":213,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":32,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":196,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":171,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":94,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":44,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":123,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":114,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":194,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":199,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":176,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":164,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":63,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":197,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":211,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":163,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":169,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":125,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":139,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testRemoveThenSet":216,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":82,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":132,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":135,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":155,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":191,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":192,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":193,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":203,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":69,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":84,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":56,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":23,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":140,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":87,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":10,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":18,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":9,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":182,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":78,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":101,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":188,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":180,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":152,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":148,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenRemove":209,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":67,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":73,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":133,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":49,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":19,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":62,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":159,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":27,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":28,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":98,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":24,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":130,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":25,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":20,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":184,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":129,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":173}}]
