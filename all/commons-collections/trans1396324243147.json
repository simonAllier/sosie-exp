[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal E[] E[] = ((E[])(java.util.Set<E>.toArray()))","position":"org.apache.commons.collections4.set.TransformedSet:80","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedSet<E>)(org.apache.commons.collections4.set.PredicatedSet<E>.decorated()))","position":"org.apache.commons.collections4.set.PredicatedSortedSet:87","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Object[] = java.lang.reflect.Array.((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), 0)))","position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:126","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null))","position":"org.apache.commons.collections4.list.GrowthList:124","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:85","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.entrySet().iterator()","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:758","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return -1","position":"org.apache.commons.collections4.map.LinkedMap:172","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<? extends E>.size()","position":"org.apache.commons.collections4.iterators.LoopingIterator:122","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}","position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.select(java.util.Collection<? extends E>, org.apache.commons.collections4.Predicate<? super E>, new java.util.ArrayList<E>(java.util.Collection<? extends E>.size()))","position":"org.apache.commons.collections4.ListUtils:188","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:362","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:91","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.list.AbstractLinkedList:995","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.set(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:97","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.InstantiateTransformer.org.apache.commons.collections4.functors.InstantiateTransformer.<T>instantiateTransformer()","position":"org.apache.commons.collections4.TransformerUtils:349","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.Iterator<? extends E> = ((java.util.Iterator<? extends E>)(E))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:109","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.map.AbstractHashedMap:246","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.iterators.FilterIterator:100","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} ","position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Array.((E)(java.lang.reflect.Array.get(java.lang.Object, (int)++)))","position":"org.apache.commons.collections4.iterators.ArrayIterator:150","type":"CtReturnImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:169","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.getKey()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:160","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"return java.util.ListIterator<E>.nextIndex()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:115","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previousIndex()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:87","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new java.util.HashSet<E>(this)","position":"org.apache.commons.collections4.set.CompositeSet:400","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>.entrySet()","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:102","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().toString()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:140","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.lang.StringBuilder().append(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getKey()).append('=').append(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()).toString()","position":"org.apache.commons.collections4.map.AbstractHashedMap:1124","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = new org.apache.commons.collections4.bag.HashBag<E>()","position":"org.apache.commons.collections4.bag.AbstractMapBag:378","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashIterator<K, V>.currentEntry()","position":"org.apache.commons.collections4.map.AbstractHashedMap:776","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} ","position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractHashedMap:953","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:119","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.List<K>.get((org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) - 1))","position":"org.apache.commons.collections4.map.ListOrderedMap:183","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:84","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.remove(K)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:841","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:212","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.collections4.functors.ForClosure:102","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:84","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Iterator<E>.remove()","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:380","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.PrototypeFactory.org.apache.commons.collections4.functors.PrototypeFactory.<T>prototypeFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.bag.CollectionSortedBag:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw java.lang.RuntimeException","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:62","type":"CtThrowImpl"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"FilterListIterator.add(Object) is not supported.\")","position":"org.apache.commons.collections4.iterators.FilterListIterator:117","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedSet<E>)(org.apache.commons.collections4.set.PredicatedSet<E>.decorated()))","position":"org.apache.commons.collections4.set.PredicatedSortedSet:87","type":"CtReturnImpl"},"status":-1},{"failures":[37,38],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterIterator:179","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(org.apache.commons.collections4.Predicate<? super T>.evaluate(T))","position":"org.apache.commons.collections4.functors.NotPredicate:70","type":"CtReturnImpl"},"status":-1},{"failures":[39],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:126","type":"CtAssignmentImpl"},"status":-1},{"failures":[16,23,24,25,26,27,28,31,18,19,21,22],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().first()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().last()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:100","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.functors.AnyPredicate:84","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NonePredicate.org.apache.commons.collections4.functors.NonePredicate.nonePredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:422","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    if (boolean) {\n        return false;\n    } \n    boolean = true;\n} ","position":"org.apache.commons.collections4.functors.OnePredicate:97","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return V","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:177","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:212","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"replace","transplant":{"sourceCode":"if ((this.java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = this.java.util.Iterator<? extends E>;\n    return java.util.ListIterator<E>.previous();\n} ","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.LoopingIterator:90","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:165","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}","position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.map.FixedSizeSortedMap:112","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:154","type":"CtReturnImpl"},"status":-2},{"failures":[40,41],"variableMapping":{"predicate":"iPredicate"},"name":"replace","transplant":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} ","position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}","position":"org.apache.commons.collections4.functors.WhileClosure:88","type":"CtWhileImpl"},"status":-1},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()","position":"org.apache.commons.collections4.functors.TransformerClosure:50","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.IfClosure.org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(org.apache.commons.collections4.Predicate<? super E>, org.apache.commons.collections4.Closure<? super E>, org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure())","position":"org.apache.commons.collections4.functors.IfClosure:57","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.ByteArrayInputStream = new java.io.ByteArrayInputStream(java.io.ByteArrayOutputStream.toByteArray())","position":"org.apache.commons.collections4.functors.PrototypeFactory:180","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().keySet()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:102","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.map.Flat3Map:640","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E);\n} catch (final java.lang.RuntimeException java.lang.RuntimeException) {\n    throw java.lang.RuntimeException;\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable);\n}","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:59","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.V = null","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:89","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.set(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:97","type":"CtInvocationImpl"},"status":-2},{"failures":[42],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Set and List must be empty\")","position":"org.apache.commons.collections4.set.ListOrderedSet:84","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:83","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{"prototype":"constantToReturn"},"name":"add","transplant":{"sourceCode":"if (T instanceof java.io.Serializable) {\n    return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n} ","position":"org.apache.commons.collections4.functors.PrototypeFactory:74","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:84","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"map":"map"},"name":"add","transplant":{"sourceCode":"return java.util.Map<K, V>.entrySet()","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:102","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this)","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:97","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"status":-2},{"failures":[43,44,39,45,46,47,48,49],"binaryOperator":"(int) == 0","name":"negateConditional","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 2 :\n    int += (int) ^ ((V) == null ? 0 : V.hashCode());","position":"org.apache.commons.collections4.map.Flat3Map:1198","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:322","type":"CtReturnImpl"},"status":-2},{"failures":[50],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:84","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:88","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"this.int = this.int","position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:171","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"The collection must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingIterator:56","type":"CtThrowImpl"},"status":-2},{"failures":[51,52,53,54,55,56,57,58],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    E E = null;\n    while (java.util.ListIterator<E>.hasNext()) {\n        E = java.util.ListIterator<E>.next();\n    }\n    java.util.ListIterator<E>.previous();\n    return E;\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtIfImpl"},"status":-1},{"failures":[59,60],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().hashCode()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:117","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().size()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:92","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:154","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + java.lang.Integer.(java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}","position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"object"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2070","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>.isInstance(java.lang.Object)","position":"org.apache.commons.collections4.functors.InstanceofPredicate:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Object java.lang.Object = java.util.Map<? super K, ?>.get(K)","position":"org.apache.commons.collections4.MapUtils:152","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsExceptionPredicate.org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:488","type":"CtReturnImpl"},"status":-2},{"failures":[61,62],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * Internal iterator handle remove.\n */\nstatic class OrderedSetIterator<E> extends org.apache.commons.collections4.iterators.AbstractIteratorDecorator<E> implements org.apache.commons.collections4.OrderedIterator<E> {\n    /** \n     * Object we iterate on\n     */\nprivate final java.util.Collection<E> set;\n\n    /** \n     * Last object retrieved\n     */\nprivate E last;\n\n    private OrderedSetIterator(final java.util.ListIterator<E> iterator ,final java.util.Collection<E> set) {\n        org.apache.commons.collections4.iterators.AbstractIteratorDecorator<E>.super(java.util.ListIterator<E>);\n        this.java.util.Collection<E> = java.util.Collection<E>;\n    }\n\n    @java.lang.Override\n    public E next() {\n        E = org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<E, E>.getIterator().next();\n        return E;\n    }\n\n    @java.lang.Override\n    public void remove() {\n        java.util.Collection<E>.remove(E);\n        org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<E, E>.getIterator().remove();\n        E = null;\n    }\n\n    public boolean hasPrevious() {\n        return org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<E, E>.((java.util.ListIterator<E>)(getIterator())).hasPrevious();\n    }\n\n    public E previous() {\n        E = org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<E, E>.((java.util.ListIterator<E>)(getIterator())).previous();\n        return E;\n    }\n}","position":"org.apache.commons.collections4.set.ListOrderedSet:367","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"key":"lock"},"name":"replace","transplant":{"sourceCode":"this.java.lang.Object.clear()","position":"org.apache.commons.collections4.map.AbstractReferenceMap:731","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:118","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().addMapping(int, int, new org.apache.commons.collections4.keyvalue.MultiKey<K>(K , K , K), V)","position":"org.apache.commons.collections4.map.MultiKeyMap:319","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.setValue(V)","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:68","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","object":"object"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.SynchronizedCollection:164","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray(T[]);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:163","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return (!(boolean)) && (!(boolean))","position":"org.apache.commons.collections4.iterators.SingletonListIterator:66","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)))","position":"org.apache.commons.collections4.map.Flat3Map:1205","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.collections4.iterators.FilterListIterator:141","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"default :\n    throw new java.lang.IllegalArgumentException();","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1407","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.util.Iterator<? extends E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingIterator<E>.reset();\n} ","position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:116","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (java.lang.Object == this) || (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().equals(java.lang.Object))","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(0))","position":"org.apache.commons.collections4.list.FixedSizeList:118","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.TreeBag<E>.comparator())","position":"org.apache.commons.collections4.bag.TreeBag:118","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new java.util.HashSet<E>(this)","position":"org.apache.commons.collections4.set.CompositeSet:400","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this)","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"predicate1":"predicate1","predicate2":"predicate2","this":"this"},"name":"add","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:405","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:74","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:118","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + int) + \", size=\") + org.apache.commons.collections4.list.TreeList<E>.(size())))","position":"org.apache.commons.collections4.list.TreeList:288","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsValue(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:86","type":"CtReturnImpl"},"status":-2},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,6,7,43,46,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206],"name":"returnValue","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{"this":"this","index":"index"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.FixedSizeList:98","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()","position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitKeepCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.KeepCommand:55","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:127","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:70","type":"CtReturnImpl"},"status":-2},{"failures":[207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263],"binaryOperator":"int > int","name":"conditionalBoundary","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Iterator<? extends E> = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:92","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"lastUsedIterator"},"name":"add","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(\"Already at start of list.\")","position":"org.apache.commons.collections4.list.AbstractLinkedList:842","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"End index must not be less than start index.\")","position":"org.apache.commons.collections4.iterators.ArrayIterator:100","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","previousObjectSet":"previousObjectSet"},"name":"add","transplant":{"sourceCode":"return (this.boolean) || (org.apache.commons.collections4.iterators.FilterListIterator<E>.setPreviousObject())","position":"org.apache.commons.collections4.iterators.FilterListIterator:125","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl"},"status":-2},{"failures":[264,265,266],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:73","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot add value - Predicate rejected it\")","position":"org.apache.commons.collections4.map.PredicatedMap:146","type":"CtThrowImpl"},"status":-1},{"failures":[267,268,269],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().element()","position":"org.apache.commons.collections4.queue.PredicatedQueue:111","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().peek()","position":"org.apache.commons.collections4.queue.PredicatedQueue:107","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.list.UnmodifiableList<E>(java.util.List<? extends E>)","position":"org.apache.commons.collections4.list.UnmodifiableList:60","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>","position":"org.apache.commons.collections4.map.StaticBucketMap:304","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.ArrayStack<E>.pop()","position":"org.apache.commons.collections4.iterators.PushbackIterator:96","type":"CtInvocationImpl"},"status":-2},{"failures":[0,1,2,270,5,271,272],"variableMapping":{"iterator":"currentIterator"},"name":"add","transplant":{"sourceCode":"if (java.util.Iterator<?> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} ","position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    if ((E) == null) {\n    } else {\n        if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n        } else {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n        }\n        E = null;\n    }\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"CtIfImpl"},"status":-1},{"failures":[273,61,274,275,276,62,277,278,279,280,281,282],"variableMapping":{"added":"previousObjectSet","changed":"previousObjectSet"},"name":"replace","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:244","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Object == null ? org.apache.commons.collections4.map.SingletonMap<K, V>.(getValue()) == null : java.lang.Object.equals(org.apache.commons.collections4.map.SingletonMap<K, V>.getValue())","position":"org.apache.commons.collections4.map.SingletonMap:396","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(java.util.List<E>.isEmpty())","position":"org.apache.commons.collections4.iterators.LoopingListIterator:74","type":"CtReturnImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = ((java.util.Iterator<? extends E>)(E))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:109","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    if ((E) == null) {\n    } else {\n        if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n        } else {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n        }\n        E = null;\n    }\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T })","position":"org.apache.commons.collections4.functors.PrototypeFactory:69","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.PrototypeFactory.org.apache.commons.collections4.functors.PrototypeFactory.<T>prototypeFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:106","type":"CtReturnImpl"},"status":-2},{"failures":[221,222,223,250,251,252],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl"},"status":-1},{"failures":[266,283],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtReturnImpl"},"status":-1},{"failures":[284,285,286,287],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object,java.lang.Boolean>invokerTransformer(java.lang.String, java.lang.Class<?>[], java.lang.Object[]))","position":"org.apache.commons.collections4.PredicateUtils:239","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated()","position":"org.apache.commons.collections4.map.MultiKeyMap:288","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear()","position":"org.apache.commons.collections4.map.TransformedSortedMap:97","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":277,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":65,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":58,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":182,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":40,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":128,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":164,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":126,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":199,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":208,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":130,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":183,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":139,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":136,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":79,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":87,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":25,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":133,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":238,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":23,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":192,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":270,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":28,"org.apache.commons.collections4.queue.PredicatedQueueTest.testRemove":268,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":34,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":101,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":33,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":227,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":203,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":175,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":48,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":77,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":224,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":81,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":93,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":211,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":38,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":111,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":115,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":197,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":273,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":117,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":229,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":62,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":195,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":157,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":225,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":70,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":97,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":145,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":247,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":200,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":13,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":124,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":193,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":120,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":245,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":150,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testLastKey":50,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":156,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":88,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":214,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionSize":29,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":118,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":180,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":274,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":96,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":73,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":104,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":129,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":18,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":30,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":166,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":228,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":284,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":242,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":7,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":158,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":210,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":202,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":263,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":151,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":257,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":19,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":8,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":159,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":185,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":103,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":170,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testGetSet":15,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":280,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":106,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":209,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":248,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":17,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":52,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":176,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":90,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":235,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":140,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":61,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":171,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":196,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":11,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":181,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":114,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":261,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":76,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":215,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":233,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":43,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":12,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":260,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":63,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":149,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":243,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":45,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":83,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":168,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":46,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":177,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":53,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":119,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":9,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":116,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":276,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":54,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":37,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":92,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":163,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":218,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":191,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":172,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":187,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":84,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":255,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":102,"org.apache.commons.collections4.queue.PredicatedQueueTest.testGet":267,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":72,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":75,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":68,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":161,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":173,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":44,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":275,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":152,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":262,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":153,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":10,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":178,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":66,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":137,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":85,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":165,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":205,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":138,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":4,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":60,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":198,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":213,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":246,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":287,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":141,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":252,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":69,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":286,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":285,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":188,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":35,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":204,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":24,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":207,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":279,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":216,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":256,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":64,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":253,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":3,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":217,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":144,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":160,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":123,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":186,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":269,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":98,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":239,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":265,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":220,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":121,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":122,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":254,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":51,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":107,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":174,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":125,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":278,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":42,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":194,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary":56,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":5,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":21,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":259,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":74,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":244,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":143,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":266,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":22,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":99,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":105,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":226,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":127,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":154,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":135,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":189,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":201,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":91,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":0,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":1,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":2,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":148,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":59,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":190,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":36,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":206,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":234,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":155,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":167,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":41,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":232,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testComparator":14,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":264,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":282,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":249,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":55,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":212,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToString":32,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":80,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":281,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":113,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":184,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":86,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":78,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":240,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards":57,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":219,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":271,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":108,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testFirstKey":283,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":31,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":231,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":230,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":162,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":49,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":223,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":147,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":179,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":134,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":67,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":241,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":250,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":39,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":258,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":112,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":95,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":142,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":272,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":221,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":110,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":222,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":236,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":132,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":237,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":82,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":251,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":131,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":71}}]
