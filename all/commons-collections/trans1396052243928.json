[{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionClosure invoked\")","position":"org.apache.commons.collections4.functors.ExceptionClosure:65","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:64","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength(0)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:88","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:125","type":"CtReturnImpl"},"status":-2},{"failures":[0,1],"variableMapping":{"this":"this","object":"object"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().indexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.AbstractListDecorator:83","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().lastIndexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.AbstractListDecorator:87","type":"CtReturnImpl"},"status":-1},{"failures":[2,3,4,5,6,7],"variableMapping":{"preds":"predicates"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.functors.OnePredicate:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NonePredicate.org.apache.commons.collections4.functors.NonePredicate.nonePredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:422","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"lastUsedIterator":"currentIterator","currentIterator":"currentIterator"},"name":"add","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = this.java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.IteratorChain:252","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:197","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingIterator<E>.reset()","position":"org.apache.commons.collections4.iterators.LoopingIterator:88","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:76","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:198","type":"CtInvocationImpl"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16],"variableMapping":{"this":"this","index":"index"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.AbstractListDecorator:103","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int < 0","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1825","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:227","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"key":"key"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:114","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:125","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate()","position":"org.apache.commons.collections4.functors.IdentityPredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().removeAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:140","type":"CtReturnImpl"},"status":-2},{"failures":[17],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\")","position":"org.apache.commons.collections4.functors.InstantiateFactory:59","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:133","type":"CtThrowImpl"},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31],"variableMapping":{"obj":"object"},"name":"add","transplant":{"sourceCode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:125","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return V","position":"org.apache.commons.collections4.map.Flat3Map:313","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl"},"status":-2},{"failures":[32],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>));\n} ","position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:99","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E E = java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:188","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().comparator()","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:157","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))","position":"org.apache.commons.collections4.map.LazySortedMap:126","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))))","position":"org.apache.commons.collections4.CollectionUtils:282","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E> != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.max().setRight(null, org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.int -= int - 1;\n} ","position":"org.apache.commons.collections4.list.TreeList:849","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<E, E>.getIterator()","position":"org.apache.commons.collections4.iterators.AbstractIteratorDecorator:44","type":"CtInvocationImpl"},"status":-2},{"failures":[33],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"this.java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.set(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:145","type":"CtInvocationImpl"},"status":-1},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,17,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,1,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,31,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:143","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:128","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:253","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:933","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1168","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(java.util.Map<K, V>.entrySet())","position":"org.apache.commons.collections4.map.AbstractIterableMap:34","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"tmpMap":"map"},"name":"replace","transplant":{"sourceCode":"return java.util.SortedMap<K, V>","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:149","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterIterator:182","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K)","name":"math","position":"org.apache.commons.collections4.map.LRUMap:271","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(this, this.java.util.Map<K, V>[], java.util.Map<? extends K, ? extends V>)","position":"org.apache.commons.collections4.map.CompositeMap:385","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:93","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.doWriteObject(java.io.ObjectOutputStream)","position":"org.apache.commons.collections4.list.CursorableLinkedList:369","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = 2","position":"org.apache.commons.collections4.map.Flat3Map:530","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:170","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.map.CompositeMap:204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<K, V> = java.util.Iterator<java.util.Map.Entry<K, V>>.next()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:84","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The map size must be 1\")","position":"org.apache.commons.collections4.map.SingletonMap:122","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitKeepCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.KeepCommand:55","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:112","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>.decorated().isFull()","position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:152","type":"CtReturnImpl"},"status":0},{"failures":[335,336,337,338,339,340,341,342,343,344,345,346],"variableMapping":{"canRemove":"hasNext"},"name":"replace","transplant":{"sourceCode":"this.boolean = false","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:725","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:169","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator()","position":"org.apache.commons.collections4.map.AbstractLinkedMap:433","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:84","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException((\"Unknown unknownObjectBehavior: \" + (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)))","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:242","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:248","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.collection.SynchronizedCollection:196","type":"CtReturnImpl"},"status":-2},{"failures":[347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"delegate\")","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1967","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:67","type":"CtThrowImpl"},"status":-1},{"failures":[371],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"ListIterator does not support set\")","position":"org.apache.commons.collections4.list.SetUniqueList:419","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")","position":"org.apache.commons.collections4.functors.WhileClosure:59","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{"root":"nextObject"},"name":"add","transplant":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:164","type":"CtAssignmentImpl"},"status":0},{"failures":[335,336,337,338,339,372,341,342,343,344,373,345,346],"variableMapping":{"this":"this","currentIterator":"currentIterator"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(this.java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:198","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.util.SortedMap<K, V>","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:149","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"c":"coll"},"name":"replace","transplant":{"sourceCode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} ","position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)) | boolean","position":"org.apache.commons.collections4.list.GrowthList:157","type":"CtReturnImpl"},"status":-2},{"failures":[374,375,376,377,378,379,380],"binaryOperator":"org.apache.commons.collections4.Transformer<? super E, ?> == null","name":"negateConditional","position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.map.SingletonMap:422","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.InstanceofPredicate.org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(java.lang.Class<?>)","position":"org.apache.commons.collections4.PredicateUtils:175","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Set<E> java.util.Set<E> = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().uniqueSet()","position":"org.apache.commons.collections4.bag.UnmodifiableBag:154","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.util.Map<K, V>.get(java.lang.Object)","position":"org.apache.commons.collections4.map.DefaultedMap:205","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<K, V> != null) {\n    final V V = java.util.Map<K, V>.get(K);\n    if (V != null) {\n        return V;\n    } \n} ","position":"org.apache.commons.collections4.MapUtils:365","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.reset()","position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:190","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:170","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(java.lang.Object)","position":"org.apache.commons.collections4.map.Flat3Map:984","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingIterator<E>.reset();\n} ","position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.LazyList:115","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.map.Flat3Map:759","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null))","position":"org.apache.commons.collections4.list.GrowthList:184","type":"CtInvocationImpl"},"status":-2},{"failures":[381,382,383,384,385,386,387,388,389,390],"variableMapping":{"flag":"previousObjectSet","removed":"previousObjectSet"},"name":"replace","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterListIterator:267","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NonePredicate.org.apache.commons.collections4.functors.NonePredicate.nonePredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:422","type":"CtReturnImpl"},"status":-2},{"failures":[347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"add() is not supported\")","position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:102","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:67","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>","position":"org.apache.commons.collections4.map.AbstractLinkedMap:570","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:137","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection.org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(java.util.Collection<C>)","position":"org.apache.commons.collections4.CollectionUtils:1718","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[])","position":"org.apache.commons.collections4.functors.InstantiateFactory:126","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:154","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<I>","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:54","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:725","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:99","type":"CtAssignmentImpl"},"status":-2},{"failures":[391,392],"variableMapping":{"iterator":"currentIterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends I>","position":"org.apache.commons.collections4.iterators.TransformIterator:110","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:86","type":"CtAssignmentImpl"},"status":-1},{"failures":[335,336,337],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.map.FixedSizeMap:110","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:143","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E>.(heightRightMinusLeft()) > 0) {\n    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.min();\n    E = org.apache.commons.collections4.list.TreeList.AVLNode<E>.E;\n    if (boolean) {\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n    } \n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeMin();\n    if ((int) < 0) {\n        (int)++;\n    } \n} else {\n    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.max();\n    E = org.apache.commons.collections4.list.TreeList.AVLNode<E>.E;\n    if (boolean) {\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n    } \n    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeMax();\n    if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n        boolean = true;\n    } \n    if ((int) > 0) {\n        (int)--;\n    } \n}","position":"org.apache.commons.collections4.list.TreeList:637","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated()))","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:58","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:93","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:129","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"lastUsedIterator":"lastUsedIterator"},"name":"add","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:91","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Iterator must not be null\")","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:43","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:143","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Map.Entry<K, V>.setValue(V)","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:68","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().hashCode()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:117","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\")","position":"org.apache.commons.collections4.iterators.IteratorChain:192","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:87","type":"CtThrowImpl"},"status":-2},{"failures":[393,394,395,396,397,398,399],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeSet without a SetMutator strategy\")","position":"org.apache.commons.collections4.set.CompositeSet:267","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.iterators.FilterIterator:100","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValuesIterator<V>(this)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:502","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<I>","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:54","type":"CtReturnImpl"},"status":-2},{"failures":[381,382,383,384,385,386,400,401,387,388,389,390],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:244","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"key":"key"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:114","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.StaticBucketMap.Values()","position":"org.apache.commons.collections4.map.StaticBucketMap:360","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.SynchronizedCollection:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} ","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = org.apache.commons.collections4.Factory<? extends E>.create()","position":"org.apache.commons.collections4.list.LazyList:130","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().isEmpty()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:98","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}","position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.getKey()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:160","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtReturnImpl"},"status":-2},{"failures":[402,403],"variableMapping":{"coll2":"coll","coll1":"coll"},"name":"replace","transplant":{"sourceCode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}","position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:176","type":"CtReturnImpl"},"status":-1},{"failures":[404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,341,342,391,392,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547],"name":"returnValue","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.IdentityPredicate<T>(T)","position":"org.apache.commons.collections4.functors.IdentityPredicate:50","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:261","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<? extends E>.previous()","position":"org.apache.commons.collections4.iterators.FilterListIterator:264","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return -1","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()","position":"org.apache.commons.collections4.functors.ChainedClosure:72","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Transformer<? super E, ?> == null) {\n    return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} ","position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ArrayIterator<E>.this(java.lang.Object, int, java.lang.reflect.Array.java.lang.reflect.Array.getLength(java.lang.Object))","position":"org.apache.commons.collections4.iterators.ArrayIterator:74","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super T>.execute(T)","position":"org.apache.commons.collections4.functors.ClosureTransformer:72","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"add() not supported for empty Iterator\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:61","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"must have a from or to!\")","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1868","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:101","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().nextKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:78","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = int > 0","position":"org.apache.commons.collections4.functors.ComparatorPredicate:174","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bag.AbstractMapBag<E>.doWriteObject(java.io.ObjectOutputStream)","position":"org.apache.commons.collections4.bag.TreeBag:119","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getLeftSubTree()) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], (int + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n} ","position":"org.apache.commons.collections4.list.TreeList:454","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.TransformedPredicate.org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(org.apache.commons.collections4.Transformer<? super T, ? extends T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:537","type":"CtReturnImpl"},"status":-2},{"failures":[548,549,550,551],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * An iterator over the map entries.\n */\nclass ViewMapEntryIterator extends org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator implements org.apache.commons.collections4.OrderedIterator<java.util.Map.Entry<K, V>> {\n    /** \n     * Constructor.\n     */\nViewMapEntryIterator() {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.super(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n\n    public java.util.Map.Entry<K, V> next() {\n        return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigateNext();\n    }\n\n    public java.util.Map.Entry<K, V> previous() {\n        return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigatePrevious();\n    }\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1777","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.ClosureTransformer<T>(org.apache.commons.collections4.Closure<? super T>)","position":"org.apache.commons.collections4.functors.ClosureTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.map.DefaultedMap:193","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":400,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":267,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":156,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":309,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":435,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":251,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":234,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":485,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":298,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":31,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":237,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":308,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":80,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":118,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":546,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":13,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":264,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":490,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":252,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":219,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":413,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":355,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":202,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":198,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":64,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":262,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":458,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":462,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":104,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":142,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":381,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":464,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":474,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":218,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":310,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":39,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":292,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":19,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":518,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":259,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":332,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":424,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray2":49,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":159,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":274,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":479,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":214,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":105,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":245,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":472,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":468,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":175,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":282,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":429,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":303,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":547,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":271,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":465,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":383,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":110,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":240,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":486,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":525,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":260,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":445,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":1,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":120,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":65,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":242,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":102,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":342,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":138,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":40,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":111,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":343,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":57,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":228,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":6,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":217,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":438,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":524,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":9,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":395,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":54,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":92,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":379,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":419,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":475,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":220,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":315,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":126,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":346,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":434,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":461,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":215,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":535,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":326,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":98,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":402,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":77,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":48,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":404,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":195,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":427,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":447,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":430,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":149,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":186,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":304,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":353,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":360,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":463,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":287,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":180,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":506,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":470,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":53,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":440,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray2":44,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":543,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":523,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":531,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":399,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":230,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":409,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":363,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":56,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":364,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":296,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":348,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":351,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":452,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":505,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":67,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":115,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":157,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":211,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":384,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":178,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":496,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":213,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":334,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":416,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":544,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":5,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":139,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":330,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":444,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":302,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":417,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":185,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":150,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":339,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":137,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":477,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":297,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":168,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":425,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":420,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":43,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":410,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":78,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":284,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":442,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":253,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":291,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":192,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":208,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":405,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":181,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":221,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":504,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":165,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":199,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":439,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":235,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":216,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":519,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":184,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":376,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":10,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":25,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":14,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":46,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":227,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":45,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":323,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":143,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":243,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":467,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":469,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":281,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":312,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":528,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":453,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":232,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":374,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":91,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":401,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":482,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":86,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":362,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":473,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":286,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":122,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":533,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":55,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":188,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":422,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":209,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":520,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":526,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":484,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":183,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":294,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":441,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":494,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":266,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":212,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray2":41,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":283,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":166,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":443,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":30,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":106,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":18,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":415,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":59,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":327,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":97,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":154,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":276,"org.apache.commons.collections4.CollectionUtilsTest.testUnmodifiableCollection":366,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":7,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":279,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":437,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":460,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":293,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":131,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":509,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":261,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":82,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":507,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":426,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":492,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":119,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":370,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":133,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":75,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":51,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":207,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":60,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":301,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":350,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":372,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":457,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":190,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":73,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":356,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":129,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":222,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":406,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":371,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":508,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":367,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":359,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":478,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":483,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":32,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":321,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":487,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":177,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":436,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":418,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":250,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":493,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":63,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":538,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":128,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":373,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":117,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":95,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":241,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":167,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":123,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":471,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":176,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":522,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray2":52,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":322,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":454,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":107,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":172,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":169,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":536,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":164,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":194,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":161,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":514,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":540,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":152,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":16,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":476,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":368,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":320,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":93,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":386,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":515,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":224,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":278,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":394,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":501,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":333,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":8,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":529,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":145,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":189,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":171,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":481,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":96,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":99,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":203,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":295,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":280,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":349,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":21,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":500,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":163,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":358,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":197,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":433,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":517,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":306,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":532,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":319,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":37,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":94,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":502,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":510,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":317,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":248,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":411,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":549,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":495,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":127,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":329,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":124,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":503,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":83,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":233,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":449,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":388,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":50,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":146,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":311,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":527,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":455,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":511,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":324,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":289,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":456,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":201,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":70,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":382,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":450,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":113,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":225,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":258,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":69,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":12,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":300,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":391,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":170,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":140,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":357,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":275,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":26,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":28,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":365,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":11,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":542,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":392,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":257,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":466,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":344,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":385,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":305,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":513,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":85,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":148,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":205,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":451,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":231,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":352,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":58,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testEmptyIterator":398,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":153,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":534,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":76,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":318,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":108,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":270,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":196,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":548,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":89,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":191,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":497,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":345,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":431,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":407,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":341,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":377,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":290,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":20,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":414,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":114,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":87,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":135,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray2":249,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testSet":33,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":112,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":256,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":313,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":269,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":247,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":412,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":369,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":238,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":29,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":550,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":223,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":387,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":144,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":17,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":338,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":423,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":403,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":66,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":121,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":480,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":380,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":34,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":130,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":206,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":84,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":331,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":187,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":361,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":100,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":397,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":35,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":273,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":62,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":200,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":182,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":22,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":72,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":347,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":340,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":68,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":396,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":79,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":61,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":246,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":38,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":521,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":179,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":254,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":328,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":90,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":136,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":393,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":229,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":272,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":375,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":71,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":498,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":134,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":81,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":299,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":491,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":285,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":512,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":335,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":336,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":132,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":337,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":268,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":448,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":155,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":141,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":428,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":244,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":378,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":103,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":499,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":116,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":446,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":158,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":88,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":101,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":390,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":551,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":389,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":539,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":125,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":193,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":545,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":537,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":174,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":354,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":239,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":325,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":316,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":162,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":74,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":226,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":24,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":288,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":432,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":277,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":408,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":160,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":0,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":3,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":2,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":4,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":307,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":263,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":314,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":459,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":421,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":516,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":236,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":147,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":109,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":42,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":489,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":265,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":151,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":204,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":541,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":173,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":488,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":210,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":530}}]
