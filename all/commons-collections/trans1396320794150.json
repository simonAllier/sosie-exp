[{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().comparator()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:67","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"End index must not be less than start index.\")","position":"org.apache.commons.collections4.iterators.ArrayIterator:100","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"No value has been returned yet\")","position":"org.apache.commons.collections4.iterators.CollatingIterator:283","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"this.java.util.Iterator<? extends I> = java.util.Iterator<? extends I>","position":"org.apache.commons.collections4.iterators.TransformIterator:110","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.bag.AbstractMapBag:539","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:157","type":"CtSynchronizedImpl"},"status":-2},{"failures":[0,1],"variableMapping":{"lastKey":"key"},"name":"replace","transplant":{"sourceCode":"return K","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:461","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().nextKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:78","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().comparator()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[2,3],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"if (!(org.apache.commons.collections4.iterators.FilterListIterator<E>.setPreviousObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:146","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:221","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"tmpMap":"map"},"name":"add","transplant":{"sourceCode":"return java.util.SortedMap<K, V>","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:149","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:599","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:96","type":"CtLocalVariableImpl"},"status":-2},{"failures":[2,3],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:146","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:221","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((T[].int) < (int)) {\n    final java.lang.Class<?> java.lang.Class<?> = T[].getClass().getComponentType();\n    T[] = java.lang.reflect.Array.((T[])(java.lang.reflect.Array.newInstance(java.lang.Class<?>, int)));\n} ","position":"org.apache.commons.collections4.list.AbstractLinkedList:176","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().iterator())","position":"org.apache.commons.collections4.list.FixedSizeList:108","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\")","name":"math","position":"org.apache.commons.collections4.map.LRUMap:325","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.Set<V> java.util.Set<V> = org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.values()","position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:113","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14],"variableMapping":{"iterator":"currentIterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:184","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Object[][int++] = E","position":"org.apache.commons.collections4.set.CompositeSet:192","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().getCount(java.lang.Object)","position":"org.apache.commons.collections4.bag.PredicatedBag:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.map.DefaultedMap:194","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previousIndex()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:88","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.Object == java.lang.Object","position":"org.apache.commons.collections4.map.ReferenceIdentityMap:206","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.set.TransformedSortedSet<E>.getSortedSet()","position":"org.apache.commons.collections4.set.TransformedSortedSet:117","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:138","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"canRemove":"validForUpdate"},"name":"add","transplant":{"sourceCode":"this.boolean = true","position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:76","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl"},"status":0},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.getKey()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:60","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean boolean = boolean[][int]","position":"org.apache.commons.collections4.iterators.PermutationIterator:135","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:196","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.bitIndex(K, 0, org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.lengthInBits(K), K, 0, org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.lengthInBits(K))","position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:129","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.LoopingListIterator:150","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((java.lang.Integer)(java.lang.Number))","position":"org.apache.commons.collections4.MapUtils:261","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:406","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.comparators.ComparatorChain<E>.this(new java.util.ArrayList<java.util.Comparator<E>>(), new java.util.BitSet())","position":"org.apache.commons.collections4.comparators.ComparatorChain:70","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:108","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object,java.lang.Boolean>invokerTransformer(java.lang.String, java.lang.Class<?>[], java.lang.Object[]))","position":"org.apache.commons.collections4.PredicateUtils:239","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().mapIterator()","position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:130","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.set(E)","position":"org.apache.commons.collections4.iterators.LoopingListIterator:231","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E))","position":"org.apache.commons.collections4.collection.TransformedCollection:147","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:128","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","key":"key"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().nextKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:78","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[220,221],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AndPredicate.org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:258","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String)","position":"org.apache.commons.collections4.map.AbstractLinkedMap:568","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.getShort(java.util.Map<? super K, ?>, K)","position":"org.apache.commons.collections4.MapUtils:624","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:110","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator<E>.add(E)","position":"org.apache.commons.collections4.list.SetUniqueList:412","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.nextIndex()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:72","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (null == E) {\n    throw new java.lang.NullPointerException(\"Attempted to add null object to queue\");\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:226","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.set(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:97","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} ","position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:136","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NonePredicate.org.apache.commons.collections4.functors.NonePredicate.nonePredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:438","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:105","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.ExceptionPredicate.org.apache.commons.collections4.Predicate","position":"org.apache.commons.collections4.functors.ExceptionPredicate:70","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.SortedBidiMap<K, V>)(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated()))","position":"org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator:59","type":"CtReturnImpl"},"status":-2},{"failures":[222,223],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.LazySortedMap:135","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * A {@link Trie} is a set of {@link TrieEntry} nodes.\n */\nprotected static class TrieEntry<K, V> extends org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry<K, V> {\n    private static final long serialVersionUID = 4596023148184140013L;\n\n    /** \n     * The index this entry is comparing.\n     */\nprotected int bitIndex;\n\n    /** \n     * The parent of this entry.\n     */\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parent;\n\n    /** \n     * The left child of this entry.\n     */\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> left;\n\n    /** \n     * The right child of this entry.\n     */\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> right;\n\n    /** \n     * The entry who uplinks to this entry.\n     */\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> predecessor;\n\n    public TrieEntry(final K key ,final V value ,final int bitIndex) {\n        org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry<K, V>.super(K, V);\n        this.int = int;\n        this.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null;\n        this.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = this;\n        this.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null;\n        this.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = this;\n    }\n\n    /** \n     * Whether or not the entry is storing a key.\n     * Only the root can potentially be empty, all other\n     * nodes must have a key.\n     */\npublic boolean isEmpty() {\n        return (K) == null;\n    }\n\n    /** \n     * Neither the left nor right child is a loopback.\n     */\npublic boolean isInternalNode() {\n        return ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != this) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != this);\n    }\n\n    /** \n     * Either the left or right child is a loopback.\n     */\npublic boolean isExternalNode() {\n        return !org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.(isInternalNode());\n    }\n\n    @java.lang.Override\n    public java.lang.String toString() {\n        final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n        if ((int) == (-1)) {\n            java.lang.StringBuilder.append(\"RootEntry(\");\n        } else {\n            java.lang.StringBuilder.append(\"Entry(\");\n        }\n        java.lang.StringBuilder.append(\"key=\").append(org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry<K, V>.getKey()).append(\" [\").append(int).append(\"], \");\n        java.lang.StringBuilder.append(\"value=\").append(org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry<K, V>.getValue()).append(\", \");\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) {\n            if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) == (-1)) {\n                java.lang.StringBuilder.append(\"parent=\").append(\"ROOT\");\n            } else {\n                java.lang.StringBuilder.append(\"parent=\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()).append(\" [\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int).append(\"]\");\n            }\n        } else {\n            java.lang.StringBuilder.append(\"parent=\").append(\"null\");\n        }\n        java.lang.StringBuilder.append(\", \");\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) {\n            if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) == (-1)) {\n                java.lang.StringBuilder.append(\"left=\").append(\"ROOT\");\n            } else {\n                java.lang.StringBuilder.append(\"left=\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()).append(\" [\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int).append(\"]\");\n            }\n        } else {\n            java.lang.StringBuilder.append(\"left=\").append(\"null\");\n        }\n        java.lang.StringBuilder.append(\", \");\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) {\n            if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) == (-1)) {\n                java.lang.StringBuilder.append(\"right=\").append(\"ROOT\");\n            } else {\n                java.lang.StringBuilder.append(\"right=\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()).append(\" [\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int).append(\"]\");\n            }\n        } else {\n            java.lang.StringBuilder.append(\"right=\").append(\"null\");\n        }\n        java.lang.StringBuilder.append(\", \");\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) {\n            if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) == (-1)) {\n                java.lang.StringBuilder.append(\"predecessor=\").append(\"ROOT\");\n            } else {\n                java.lang.StringBuilder.append(\"predecessor=\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()).append(\" [\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int).append(\"]\");\n            }\n        } \n        java.lang.StringBuilder.append(\")\");\n        return java.lang.StringBuilder.toString();\n    }\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1279","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (T == null) {\n    return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate();\n} ","position":"org.apache.commons.collections4.functors.IdentityPredicate:47","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitInsertCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.InsertCommand:54","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.util.ListIterator<E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:77","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasNext()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:97","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))","position":"org.apache.commons.collections4.map.LazySortedMap:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap.org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(java.util.SortedMap<K, V>, org.apache.commons.collections4.Factory<? extends V>)","position":"org.apache.commons.collections4.MapUtils:1624","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.comparators.ComparatorChain<E>.setComparator(int, java.util.Comparator<E>, false)","position":"org.apache.commons.collections4.comparators.ComparatorChain:168","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl"},"status":-2},{"failures":[4,5,6],"variableMapping":{"next":"next","transformer":"transformer"},"name":"add","transplant":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:190","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.util.ListIterator<E>.previous()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    return java.util.Iterator<? extends E>.next();\n} ","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} ","position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:94","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.bag.HashBag:66","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.Set<E>)(org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated()))","position":"org.apache.commons.collections4.set.AbstractSetDecorator:63","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.Trie<K, V>.nextKey(K)","position":"org.apache.commons.collections4.trie.UnmodifiableTrie:164","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\")","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:246","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return -1","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.NullIsFalsePredicate<T>(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:49","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.OrPredicate.org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:306","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().clear()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:78","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean) {\n    return false;\n} ","position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.map.DefaultedMap:180","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl"},"status":0},{"failures":[4,5,6,7,8,224,9,10,11,12,13,14],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()","position":"org.apache.commons.collections4.map.AbstractHashedMap:788","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>))","position":"org.apache.commons.collections4.functors.ForClosure:56","type":"CtReturnImpl"},"status":-2},{"failures":[225,226],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:85","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>))","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:236","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}","position":"org.apache.commons.collections4.functors.WhileClosure:88","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return 1","position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().size()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:188","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"inlineConstant","inlineConstant":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"mutation","status":0},{"failures":[227,228,229,230,231,232,233,234,18,19,20,235,36,37,236,237,63,64,65,238,80,81,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273],"variableMapping":{"this":"object","object":"object"},"name":"replace","transplant":{"sourceCode":"return (java.lang.Object == java.lang.Object) || ((null != java.lang.Object) && (java.lang.Object.getClass().equals(java.lang.Object.getClass())))","position":"org.apache.commons.collections4.comparators.ComparableComparator:124","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:120","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.list.AbstractLinkedList:164","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:77","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(java.util.List<? extends E>)","position":"org.apache.commons.collections4.ListUtils:128","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.getKey()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:60","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E)) {\n    java.util.List<E>.add(E);\n    return true;\n} ","position":"org.apache.commons.collections4.set.ListOrderedSet:194","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.OnePredicate.org.apache.commons.collections4.functors.OnePredicate.onePredicate(java.util.Collection<org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:388","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.set.CompositeSet:287","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:145","type":"CtInvocationImpl"},"status":-2},{"failures":[274,275],"variableMapping":{"it2":"iterator","it1":"iterator"},"name":"replace","transplant":{"sourceCode":"return !((java.util.Iterator<?>.hasNext()) || (java.util.Iterator<?>.hasNext()))","position":"org.apache.commons.collections4.ListUtils:266","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<? extends I>.hasNext()","position":"org.apache.commons.collections4.iterators.TransformIterator:74","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"boolean boolean = true","position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:190","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:212","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","position":"org.apache.commons.collections4.list.SetUniqueList:340","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedMap<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>)(org.apache.commons.collections4.bag.AbstractMapBag<E>.getMap()))","position":"org.apache.commons.collections4.bag.TreeBag:109","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"set":"sub"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(java.util.SortedSet<E>)","position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:59","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:115","type":"CtReturnImpl"},"status":-2},{"failures":[276],"variableMapping":{"map":"map"},"name":"replace","transplant":{"sourceCode":"return java.util.Map<K, V>","position":"org.apache.commons.collections4.map.AbstractMapDecorator:73","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.DefaultedMap<K, V>(java.util.Map<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.DefaultedMap:131","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterIterator:182","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 1","position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:205","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:76","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}","position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{"root":"previousObject"},"name":"add","transplant":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:266","type":"CtAssignmentImpl"},"status":0},{"failures":[277,278,279,280,281,282,283],"binaryOperator":"java.util.Collection<? extends E> == null","name":"negateConditional","position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.iterators.UnmodifiableListIterator.org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator())","position":"org.apache.commons.collections4.list.UnmodifiableList:114","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:95","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.toArray(new java.lang.Object[int])","position":"org.apache.commons.collections4.list.AbstractLinkedList:170","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.FixedSizeList:148","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<? extends E>.hasNext()","position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:70","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().keySet()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:88","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().entrySet()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:72","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"object"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.Object == this) || (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().equals(java.lang.Object))","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:149","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Integer java.lang.Integer = org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.getInteger(java.util.Map<? super K, ?>, K)","position":"org.apache.commons.collections4.MapUtils:487","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:151","type":"CtReturnImpl"},"status":-2},{"failures":[284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,229,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,231,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,232,377,378,379,380,233,381,382],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasNext()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:62","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Time unit must not be null\")","position":"org.apache.commons.collections4.map.PassiveExpiringMap:197","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl"},"status":-2},{"failures":[4,5,6,7,8,383,9,10,11,12,384,13,14],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += int << 4","position":"org.apache.commons.collections4.map.MultiKeyMap:676","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Enumeration<? extends E>.hasMoreElements()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"maxElements":"index","index":"index"},"name":"replace","transplant":{"sourceCode":"if (int >= int) {\n    int = 0;\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(int, E)","position":"org.apache.commons.collections4.list.GrowthList:126","type":"CtInvocationImpl"},"status":-2},{"failures":[385,386,387,388,389,390,391,392],"binaryOperator":"(java.util.ListIterator<E>.hasPrevious()) == false","name":"removeConditional","position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * Inner class that provides a simple reflection factory.\n */\nprivate static class ReflectionFactory<T extends java.util.Collection<?>> implements java.io.Serializable , org.apache.commons.collections4.Factory<T> {\n    /** \n     * Serialization version\n     */\nprivate static final long serialVersionUID = 2986114157496788874L;\n\n    private final java.lang.Class<T> clazz;\n\n    public ReflectionFactory(final java.lang.Class<T> clazz) {\n        this.java.lang.Class<T> = java.lang.Class<T>;\n    }\n\n    public T create() {\n        try {\n            return java.lang.Class<T>.newInstance();\n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw new org.apache.commons.collections4.FunctorException((\"Cannot instantiate class: \" + (java.lang.Class<T>)) , java.lang.Exception);\n        }\n    }\n}","position":"org.apache.commons.collections4.map.MultiValueMap:539","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((E) == null) {\n} else {\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n    } else {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n    E = null;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:141","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n    throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n} ","position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:338","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":78,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":79,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":137,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":343,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":172,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":72,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":49,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":115,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":122,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":200,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":31,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":220,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":75,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":317,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":362,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":315,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":223,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":367,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":80,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":253,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":239,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":81,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":290,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":304,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":269,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":336,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":41,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":101,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":173,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":216,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":142,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":348,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":98,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":305,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":190,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":168,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":92,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":178,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":177,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":176,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":140,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":54,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":309,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":77,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":248,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":365,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":10,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":162,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":302,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":240,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":11,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":229,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":91,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":244,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":285,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":276,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":205,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":14,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":232,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":99,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":58,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":296,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":312,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":331,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":44,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":56,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":386,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":194,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":387,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":111,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":131,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":198,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":199,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":359,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":109,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":344,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":22,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":151,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":97,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":217,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":214,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":167,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":8,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":333,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":271,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":121,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":231,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":15,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":16,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":313,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":17,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":267,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":117,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":0,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":222,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":107,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":300,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":266,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":242,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetIteratorRemoveChangesMap":68,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":353,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":321,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":73,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":289,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":345,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":100,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":125,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":127,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":126,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":154,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":236,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":37,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":36,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":189,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":175,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":52,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":260,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":299,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":284,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":324,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":227,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary":389,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":84,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":193,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":66,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":147,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":148,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":371,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":53,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":373,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":108,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":259,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":341,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":48,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":196,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":197,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":93,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":119,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":182,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":136,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":96,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":191,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":354,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":87,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":70,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":306,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":71,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":82,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":246,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":69,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":157,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":294,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":65,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":63,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":64,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":144,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":340,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":228,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":188,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":184,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":113,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":118,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":25,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":380,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards":390,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":319,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":275,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping0":277,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1":278,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2":279,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3":280,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":257,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":364,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":295,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":346,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":106,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":165,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":383,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":202,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":35,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":34,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":391,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":286,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":335,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":152,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":378,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":384,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":361,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":128,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":164,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":291,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":29,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":129,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":130,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":355,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":372,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":1,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":181,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":180,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":179,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":33,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":153,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":158,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":160,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":159,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":274,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":40,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":350,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":337,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":201,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":287,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":241,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":3,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":258,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":89,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":187,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":134,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":149,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":237,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":90,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":264,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":32,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":292,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":297,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":120,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":38,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":356,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":352,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":262,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":170,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":183,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":265,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":83,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":57,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":55,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":208,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":263,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":288,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":293,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":207,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":377,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":213,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":375,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":320,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":46,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":174,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":102,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":272,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":103,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":235,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":155,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":114,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":161,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":2,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":42,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":249,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":270,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":110,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":311,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":20,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":19,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":18,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":339,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":112,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":124,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":163,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":357,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":225,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize":282,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":268,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":143,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":238,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":50,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":51,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":12,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":169,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":369,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":323,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":104,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":146,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":330,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":145,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":250,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":67,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":338,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":332,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":316,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":363,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testReset":281,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":307,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":139,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":94,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":95,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":13,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":9,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":116,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":133,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":310,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":226,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":358,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":325,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":203,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":138,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":76,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":252,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":7,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":327,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":221,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":370,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":255,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":86,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":30,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":39,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":379,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":105,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":366,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":210,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":322,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":209,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":215,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":273,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":26,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":47,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":298,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":27,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":141,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":385,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":328,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":234,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":283,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":224,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":314,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":132,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":212,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":329,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":261,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":374,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":166,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":381,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":60,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":62,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":61,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":382,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":123,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":318,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":45,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":192,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":4,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":85,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":5,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":6,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":233,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":342,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":368,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":243,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":303,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":251,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":360,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":59,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":347,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":256,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":301,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":326,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":218,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":150,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":219,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":388,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":23,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":376,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":254,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":43,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":88,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":156,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":245,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":206,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":28,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":351,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":230,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":247,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":195,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":186,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":349,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary":392,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":204,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":74,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":308,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":135,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":334}}]
