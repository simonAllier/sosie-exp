[{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:112","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.iterators.LazyIteratorChain<java.util.Map.Entry<K, V>>() {\n    @java.lang.Override\n    protected java.util.Iterator<? extends java.util.Map.Entry<K, V>> nextIterator(int count) {\n        if (!(java.util.Iterator<K>.hasNext())) {\n            return null;\n        } \n        final K K = java.util.Iterator<K>.next();\n        final org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>() {\n            public java.util.Map.Entry<K, V> transform(final V input) {\n                return new java.util.Map.Entry<K, V>() {\n                    public K getKey() {\n                        return K;\n                    }\n\n                    public V getValue() {\n                        return V;\n                    }\n\n                    public V setValue(V value) {\n                        throw new java.lang.UnsupportedOperationException();\n                    }\n                };\n            }\n        };\n        return new org.apache.commons.collections4.iterators.TransformIterator<V, java.util.Map.Entry<K, V>>(new org.apache.commons.collections4.map.MultiValueMap.ValuesIterator(K) , org.apache.commons.collections4.Transformer<V, java.util.Map.Entry<K, V>>);\n    }\n}","position":"org.apache.commons.collections4.map.MultiValueMap:427","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Set<T>.add(T)","position":"org.apache.commons.collections4.functors.UniquePredicate:67","type":"CtReturnImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:86","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>","position":"org.apache.commons.collections4.map.MultiKeyMap:486","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:120","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.SynchronizedCollection:164","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray(T[]);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:163","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{"list1":"coll","list2":"coll"},"name":"replace","transplant":{"sourceCode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} ","position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:182","type":"CtReturnImpl"},"status":-2},{"failures":[148,149,150,151,8,9,152,153],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:182","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:212","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int","position":"org.apache.commons.collections4.list.AbstractLinkedList:922","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:119","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","index":"index"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:95","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int))","position":"org.apache.commons.collections4.list.FixedSizeList:123","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((T[].int) >= int) {\n    java.lang.Object[] = T[];\n} else {\n    java.lang.Object[] = java.lang.reflect.Array.((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n}","position":"org.apache.commons.collections4.collection.CompositeCollection:188","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:84","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.LazyList:115","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"binaryOperator":"(((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \")","name":"math","position":"org.apache.commons.collections4.list.AbstractLinkedList:547","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"this.boolean = java.io.ObjectInputStream.readBoolean()","position":"org.apache.commons.collections4.map.AbstractReferenceMap:1033","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int == (org.apache.commons.collections4.trie.KeyAnalyzer.int)","position":"org.apache.commons.collections4.trie.KeyAnalyzer:65","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().putAll(java.util.Map<? extends K, ? extends V>)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:110","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:980","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.LoopingIterator:90","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:271","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (T) == T","position":"org.apache.commons.collections4.functors.IdentityPredicate:72","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"canRemove":"chainExhausted"},"name":"replace","transplant":{"sourceCode":"this.boolean = false","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:725","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:99","type":"CtAssignmentImpl"},"status":-2},{"failures":[154,155],"binaryOperator":"org.apache.commons.collections4.Closure<? super E> == null","name":"negateConditional","position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.Flat3Map<K, V>.K","position":"org.apache.commons.collections4.map.Flat3Map:660","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int))","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:84","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:196","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>>.remove()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:99","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().getCount(java.lang.Object)","position":"org.apache.commons.collections4.bag.PredicatedBag:106","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().indexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.AbstractListDecorator:83","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().getCount(java.lang.Object)","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:69","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:975","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.TransformedSortedMap:155","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<? extends I>.hasNext()","position":"org.apache.commons.collections4.iterators.TransformIterator:74","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2013","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().remove(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:169","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.int = (int - 1) - int","position":"org.apache.commons.collections4.list.TreeList:857","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.bag.TreeBag<E>.(comparator()) == null) && (!(E instanceof java.lang.Comparable))) {\n    throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"));\n} ","position":"org.apache.commons.collections4.bag.TreeBag:86","type":"CtIfImpl"},"status":-2},{"failures":[156,157,158,159,160,161],"binaryOperator":"(java.util.ListIterator<E>.hasNext()) == false","name":"removeConditional","position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.UnmodifiableSortedMap.org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.Iterator<? extends E> = ((java.util.Iterator<? extends E>)(E))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:109","type":"CtAssignmentImpl"},"status":-2},{"failures":[162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:142","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.Number.intValue())","position":"org.apache.commons.collections4.MapUtils:263","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:136","type":"CtReturnImpl"},"status":-2},{"failures":[204],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:229","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    return java.util.Iterator<? extends E>.next();\n} ","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(org.apache.commons.collections4.ArrayStack<E>.isEmpty()) ? org.apache.commons.collections4.ArrayStack<E>.pop() : java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.PushbackIterator:96","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.collections4.map.Flat3Map:887","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toString();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:211","type":"CtSynchronizedImpl"},"status":0},{"failures":[205],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"E = java.util.Enumeration<? extends E>.nextElement()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:92","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:118","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.LoopingListIterator:215","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"E[][int] = null","position":"org.apache.commons.collections4.queue.CircularFifoQueue:405","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)","position":"org.apache.commons.collections4.bag.PredicatedBag:93","type":"CtInvocationImpl"},"status":-2},{"failures":[206,207],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:125","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.Closure))","position":"org.apache.commons.collections4.functors.NOPClosure:47","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:138","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.list.UnmodifiableList.org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(java.util.ArrayList<java.util.Iterator<? extends E>>)","position":"org.apache.commons.collections4.iterators.CollatingIterator:202","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.ReverseListIterator:79","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((int + (int)), E)","position":"org.apache.commons.collections4.list.AbstractLinkedList:1023","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.int)++","position":"org.apache.commons.collections4.list.CursorableLinkedList:609","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == this) {\n        return true;\n    } \n    return (java.lang.Object == this) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl"},"status":-2},{"failures":[208,209],"binaryOperator":"((int - int) + 1)","name":"math","position":"org.apache.commons.collections4.list.GrowthList:184","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.set.UnmodifiableSet.org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<E>)","position":"org.apache.commons.collections4.list.SetUniqueList:110","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getConstructor(java.lang.Class<?>[])","position":"org.apache.commons.collections4.functors.InstantiateFactory:108","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.MultiMap<K, V>.put(org.apache.commons.collections4.Transformer<E, K>.transform(E), org.apache.commons.collections4.Transformer<E, V>.transform(E))","position":"org.apache.commons.collections4.MapUtils:1743","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:79","type":"CtReturnImpl"},"status":-2},{"failures":[210,211,212,213,214,215,216,217,218,219,220,221],"variableMapping":{"nextObject":"previousObject"},"name":"replace","transplant":{"sourceCode":"this.E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:266","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 3 :\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);","position":"org.apache.commons.collections4.map.Flat3Map:399","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:60","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.collections4.list.TreeList:438","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:198","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K)","name":"math","position":"org.apache.commons.collections4.map.LRUMap:312","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:77","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Enumeration<? extends E>.hasMoreElements()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"switch (int) {\n    case 3 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 2 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 1 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n}","position":"org.apache.commons.collections4.map.Flat3Map:1154","type":"CtSwitchImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>));\n} ","position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * A {@link RangeMap} that deals with {@link Entry}s.\n */\nprivate class RangeEntryMap extends org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap {\n    /** \n     * The key to start from, null if the beginning.\n     */\nprivate final K fromKey;\n\n    /** \n     * The key to end at, null if till the end.\n     */\nprivate final K toKey;\n\n    /** \n     * Whether or not the 'from' is inclusive.\n     */\nprivate final boolean fromInclusive;\n\n    /** \n     * Whether or not the 'to' is inclusive.\n     */\nprivate final boolean toInclusive;\n\n    /** \n     * Creates a {@link RangeEntryMap} with the fromKey included and\n     * the toKey excluded from the range.\n     */\nprotected RangeEntryMap(final K fromKey ,final K toKey) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeEntryMap.this(K, true, K, false);\n    }\n\n    /** \n     * Creates a {@link RangeEntryMap}.\n     */\nprotected RangeEntryMap(final K fromKey ,final boolean fromInclusive ,final K toKey ,final boolean toInclusive) {\n        if ((K == null) && (K == null)) {\n            throw new java.lang.IllegalArgumentException(\"must have a from or to!\");\n        } \n        if (((K != null) && (K != null)) && ((org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.getKeyAnalyzer().compare(K, K)) > 0)) {\n            throw new java.lang.IllegalArgumentException(\"fromKey > toKey\");\n        } \n        this.K = K;\n        this.boolean = boolean;\n        this.K = K;\n        this.boolean = boolean;\n    }\n\n    public K firstKey() {\n        java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = null;\n        if ((K) == null) {\n            java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n        } else {\n            if (boolean) {\n                java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.ceilingEntry(K);\n            } else {\n                java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.higherEntry(K);\n            }\n        }\n        final K K = java.util.Map.Entry<K, V> != null ? java.util.Map.Entry<K, V>.getKey() : null;\n        if ((java.util.Map.Entry<K, V> == null) || (((K) != null) && (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inToRange(K, false))))) {\n            throw new java.util.NoSuchElementException();\n        } \n        return K;\n    }\n\n    public K lastKey() {\n        java.util.Map.Entry<K, V> java.util.Map.Entry<K, V>;\n        if ((K) == null) {\n            java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.lastEntry();\n        } else {\n            if (boolean) {\n                java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.floorEntry(K);\n            } else {\n                java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.lowerEntry(K);\n            }\n        }\n        final K K = java.util.Map.Entry<K, V> != null ? java.util.Map.Entry<K, V>.getKey() : null;\n        if ((java.util.Map.Entry<K, V> == null) || (((K) != null) && (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inFromRange(K, false))))) {\n            throw new java.util.NoSuchElementException();\n        } \n        return K;\n    }\n\n    @java.lang.Override\n    protected java.util.Set<java.util.Map.Entry<K, V>> createEntrySet() {\n        return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet(this);\n    }\n\n    @java.lang.Override\n    public K getFromKey() {\n        return K;\n    }\n\n    @java.lang.Override\n    public K getToKey() {\n        return K;\n    }\n\n    @java.lang.Override\n    public boolean isFromInclusive() {\n        return boolean;\n    }\n\n    @java.lang.Override\n    public boolean isToInclusive() {\n        return boolean;\n    }\n\n    @java.lang.Override\n    protected java.util.SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) {\n        return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap(K , boolean , K , boolean);\n    }\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1839","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:112","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends I>.remove()","position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().last()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().remove()","position":"org.apache.commons.collections4.queue.PredicatedQueue:115","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:913","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterListIterator:243","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.UnmodifiableEntrySet.org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(java.util.Set<java.util.Map.Entry<K, V>>)","position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:100","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<I>.remove()","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:62","type":"CtInvocationImpl"},"status":-2},{"failures":[222,148,149,223,151,224,225,9,226,227,153,228,229],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")","position":"org.apache.commons.collections4.functors.ClosureTransformer:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"No more elements in the iteration\")","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:222","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int ^= int >>> 14","position":"org.apache.commons.collections4.map.MultiKeyMap:369","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:175","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\")","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:44","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:64","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.System.java.lang.System.identityHashCode(java.lang.Object)","position":"org.apache.commons.collections4.map.ReferenceIdentityMap:175","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this)","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.map.MultiValueMap:390","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().entrySet()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:72","type":"CtReturnImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,19,28,29,31,32,33,34,35,36,37,38,39,30,40,41,42,43,45,46,47,48,49,50,51,52,53,44,55,56,57,58,59,60,61,62,63,54,64,65,66,67,69,70,71,72,73,74,75,76,77,68,78,79,80,81,83,84,85,86,87,88,89,90,91,82,92,93,94,95,97,98,99,100,101,102,103,104,105,96,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (T instanceof java.io.Serializable) {\n    return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n} ","position":"org.apache.commons.collections4.functors.PrototypeFactory:74","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:106","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.ListOrderedMap.EntrySetView<K, V>.getEntrySet().contains(java.lang.Object)","position":"org.apache.commons.collections4.map.ListOrderedMap:617","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.DefaultedMap<K, V>.this(new java.util.HashMap<K, V>(), org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.DefaultedMap:154","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterListIterator:211","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"object"},"name":"add","transplant":{"sourceCode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} ","position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().remove(java.lang.Object, int)","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:77","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(0))","position":"org.apache.commons.collections4.list.FixedSizeList:118","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator()","position":"org.apache.commons.collections4.list.AbstractListDecorator:91","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().subSet(E, E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:104","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-1788199231038721040L","position":"org.apache.commons.collections4.map.MultiKeyMap:81","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null);\n}","position":"org.apache.commons.collections4.list.LazyList:126","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:386","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:110","type":"CtReturnImpl"},"status":-2},{"failures":[230],"variableMapping":{"hasNext":"validForUpdate"},"name":"replace","transplant":{"sourceCode":"if ((this.boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl"},"status":-1},{"failures":[],"binaryOperator":"(((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K)","name":"math","position":"org.apache.commons.collections4.map.LRUMap:325","type":"mutation","status":-2},{"failures":[0,1,2,3,4,5,7,115,134],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"End index must not be less than start index.\")","position":"org.apache.commons.collections4.iterators.ArrayIterator:100","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:69","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) != (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n    ((java.lang.ref.Reference<V>)(java.lang.Object)).clear();\n} ","position":"org.apache.commons.collections4.map.AbstractReferenceMap:647","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:110","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(java.util.Map<? extends K, ? extends V>)","position":"org.apache.commons.collections4.map.Flat3Map:380","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().first()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int += ~(int << 15)","position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl"},"status":-2},{"failures":[222,148,149,150,151,8,9,152,153,229],"variableMapping":{"stack":"stack","currentIterator":"currentIterator"},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:182","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:197","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitDeleteCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.DeleteCommand:53","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.LoopingIterator:106","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"inlineConstant","inlineConstant":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"mutation","status":0},{"failures":[231,232,233],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.map.DefaultedMap:194","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:225","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = false","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1950","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.UniquePredicate.org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()","position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"curObject":"nextObject","leastObject":"nextObject"},"name":"add","transplant":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1036","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().tailSet(E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:114","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:154","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:87","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n        continue;\n    } \n    boolean boolean = false;\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n        if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n            boolean = true;\n            break;\n        } \n    }\n    if (boolean) {\n        continue;\n    } else {\n        return false;\n    }\n}","position":"org.apache.commons.collections4.CollectionUtils:372","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Closure<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} ","position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"removed":"hasNext"},"name":"add","transplant":{"sourceCode":"if (boolean == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:210","type":"CtReturnImpl"},"status":0},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":216,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":12,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":68,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":154,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":95,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":51,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":100,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":169,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":102,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":57,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":109,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":209,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":208,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":192,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":138,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":146,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":228,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":106,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":46,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":204,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":223,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":183,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":122,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":2,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":193,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":28,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":136,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":114,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":140,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":33,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":39,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":53,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":210,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":37,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":49,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":115,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":215,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":205,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":91,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":184,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":118,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":129,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":61,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":174,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":52,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":164,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":98,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":47,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":67,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":162,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":82,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":147,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":38,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":72,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":212,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":117,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":105,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":125,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":132,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":20,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":9,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":88,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":110,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":232,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":83,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":152,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":89,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":75,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":24,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":124,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":179,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":219,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":127,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":29,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":157,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":111,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":58,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":211,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":44,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":163,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":181,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":73,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":30,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":180,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":135,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":5,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":165,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":177,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":66,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":22,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":142,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":207,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":6,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":69,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":195,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":40,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":36,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":153,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":214,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":94,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":113,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":201,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":45,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":27,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":78,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":143,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":123,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":131,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":134,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":194,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":15,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":188,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":25,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":92,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":196,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":213,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":84,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":185,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":85,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":229,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":70,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":13,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":55,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":144,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":18,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":3,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":233,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":56,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":171,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":151,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":59,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":16,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":79,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":172,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":1,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":218,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":11,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":60,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":90,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":186,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":97,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":76,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenSet":230,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":119,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":199,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":173,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":200,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":42,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":43,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":156,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":175,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":128,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":26,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":203,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":99,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":217,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":48,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary":160,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":225,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":178,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":133,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":121,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":166,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":231,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":63,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":202,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":176,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":120,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":86,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":101,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":187,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":190,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":17,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":80,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":108,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":112,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":222,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":148,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":149,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":182,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":65,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":81,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":4,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":189,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":87,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":21,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":155,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":221,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":159,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":139,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":220,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":35,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":74,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":198,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":145,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":137,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":226,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":7,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":93,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":167,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":170,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":168,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":64,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":71,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":107,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":14,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":206,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary":161,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":54,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":116,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":227,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":197,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":32,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":224,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":104,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":191,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":141,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":103,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":130}}]
