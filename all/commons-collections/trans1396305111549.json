[{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (org.apache.commons.collections4.Transformer<? super E, ?> == null) {\n    return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} ","position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.TransformerClosure.org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(org.apache.commons.collections4.Transformer<? super E, ?>)","position":"org.apache.commons.collections4.ClosureUtils:98","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:112","type":"CtSynchronizedImpl"},"status":-2},{"failures":[0],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"valueTransformer cannot be null\")","position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:118","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:138","type":"CtThrowImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:106","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.SingletonListIterator:169","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this)","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:100","type":"CtReturnImpl"},"status":-2},{"failures":[1],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.RuntimeException(\"tree inconsistent!\")","position":"org.apache.commons.collections4.list.TreeList:692","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")","position":"org.apache.commons.collections4.functors.ClosureTransformer:49","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:119","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterIterator:179","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:91","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:89","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl"},"status":-2},{"failures":[2,3,4,5,6,7,8,9],"variableMapping":{"hasNext":"chainExhausted"},"name":"replace","transplant":{"sourceCode":"if ((this.boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} ","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl"},"status":-1},{"failures":[10,11,12],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NonePredicate.org.apache.commons.collections4.functors.NonePredicate.nonePredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:438","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().last()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:85","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.SynchronizedSortedBag<E>.getSortedBag().last()","position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:95","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"static class KeySetView<K> extends java.util.AbstractSet<K> {\n    private final org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object> parent;\n\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    KeySetView(final org.apache.commons.collections4.map.ListOrderedMap<K, ?> parent) {\n        java.util.AbstractSet<K>.super();\n        this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object> = ((org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>)(org.apache.commons.collections4.map.ListOrderedMap<K, ?>));\n    }\n\n    @java.lang.Override\n    public int size() {\n        return this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.size();\n    }\n\n    @java.lang.Override\n    public boolean contains(final java.lang.Object value) {\n        return this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(java.lang.Object);\n    }\n\n    @java.lang.Override\n    public void clear() {\n        this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.clear();\n    }\n\n    @java.lang.Override\n    public java.util.Iterator<K> iterator() {\n        return new org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<java.util.Map.Entry<K, java.lang.Object>, K>(org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.entrySet().iterator()) {\n            public K next() {\n                return org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<java.util.Map.Entry<K, java.lang.Object>, K>.getIterator().next().getKey();\n            }\n        };\n    }\n}","position":"org.apache.commons.collections4.map.ListOrderedMap:553","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterIterator:144","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"set":"sub"},"name":"add","transplant":{"sourceCode":"if (java.util.SortedSet<E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    return java.util.SortedSet<E>;\n} ","position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:110","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"InstantiateFactory: The constructor must exist and be public \")","position":"org.apache.commons.collections4.functors.InstantiateFactory:110","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:87","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.util.Map.Entry<K, V>","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:54","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2315","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends I>.remove()","position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null));\n} ","position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtIfImpl"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,2,6,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158],"name":"returnValue","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.MapTransformer<I, O>(java.util.Map<? super I, ? extends O>)","position":"org.apache.commons.collections4.functors.MapTransformer:53","type":"CtReturnImpl"},"status":-2},{"failures":[159,160,161,162,163,164],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:110","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = T.getClass().getMethod(\"clone\", ((java.lang.Class[])(null)))","position":"org.apache.commons.collections4.functors.PrototypeFactory:63","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , 0)","position":"org.apache.commons.collections4.list.AbstractLinkedList:123","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(0))","position":"org.apache.commons.collections4.list.FixedSizeList:118","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.CollectionUtils:1159","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:92","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>(this)","position":"org.apache.commons.collections4.map.Flat3Map:616","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(java.util.Map<K, V>.entrySet())","position":"org.apache.commons.collections4.map.AbstractIterableMap:34","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:105","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(java.util.List<E>.isEmpty())","position":"org.apache.commons.collections4.iterators.LoopingListIterator:74","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.collections4.map.AbstractHashedMap:675","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"{}\"","position":"org.apache.commons.collections4.map.AbstractHashedMap:1366","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toString()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:212","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:149","type":"CtReturnImpl"},"status":-2},{"failures":[165,166,167,168,169,170,51,52,171,172,173,174,175],"binaryOperator":"java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)","name":"negateConditional","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl"},"status":-2},{"failures":[165,166,167],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:147","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator()","position":"org.apache.commons.collections4.list.AbstractListDecorator:91","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:69","type":"CtThrowImpl"},"status":-2},{"failures":[176,177],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2371","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null))","position":"org.apache.commons.collections4.list.GrowthList:184","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"valid":"previousObjectSet"},"name":"add","transplant":{"sourceCode":"this.boolean = false","position":"org.apache.commons.collections4.list.CursorableLinkedList:563","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterListIterator:267","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"obj":"lock"},"name":"add","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:112","type":"CtSynchronizedImpl"},"status":0},{"failures":[178],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.IteratorEnumeration:92","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:143","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:91","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"(((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\")","name":"math","position":"org.apache.commons.collections4.list.AbstractLinkedList:539","type":"mutation","status":-2},{"failures":[179],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:129","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new java.lang.StringBuilder().append(\"AVLNode(\").append(int).append(',').append(((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null)).append(',').append(E).append(',').append((org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getRightSubTree()) != null)).append(\", faedelung \").append(boolean).append(\" )\").toString()","position":"org.apache.commons.collections4.list.TreeList:969","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)","position":"org.apache.commons.collections4.bag.PredicatedBag:93","type":"CtInvocationImpl"},"status":-2},{"failures":[180],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated()","position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:154","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.DefaultedMap<K, V>(java.util.Map<K, V> , org.apache.commons.collections4.functors.FactoryTransformer.org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(org.apache.commons.collections4.Factory<? extends V>))","position":"org.apache.commons.collections4.map.DefaultedMap:108","type":"CtReturnImpl"},"status":-2},{"failures":[181],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (E == null) {\n    return this.boolean ? 1 : -1;\n} ","position":"org.apache.commons.collections4.comparators.NullComparator:140","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:147","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.collection.IndexedCollection<K, C>.remove(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.IndexedCollection:217","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.IdentityPredicate.org.apache.commons.collections4.functors.IdentityPredicate.<T>identityPredicate(T)","position":"org.apache.commons.collections4.PredicateUtils:161","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Set<java.util.Map.Entry<K, V>>","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1750","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.TransformerClosure<E>(org.apache.commons.collections4.Transformer<? super E, ?>)","position":"org.apache.commons.collections4.functors.TransformerClosure:52","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:60","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:182","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:113","type":"CtReturnImpl"},"status":-2},{"failures":[182,183,184,185,186,187,188,189,190,191],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.io.ObjectOutputStream.writeObject(null)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.bag.TreeBag:117","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:239","type":"CtReturnImpl"},"status":-2},{"failures":[165,166,167],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:190","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.list.UnmodifiableList.org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(java.util.AbstractList<K>.subList(int, int))","position":"org.apache.commons.collections4.map.LinkedMap:299","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"CtReturnImpl"},"status":-2},{"failures":[192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226],"variableMapping":{"array":"object"},"name":"replace","transplant":{"sourceCode":"return T[]","position":"org.apache.commons.collections4.list.AbstractLinkedList:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:132","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"it":"iterator"},"name":"add","transplant":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>>.next()","position":"org.apache.commons.collections4.map.AbstractHashedMap:1353","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<K, V> = java.util.Iterator<java.util.Map.Entry<K, V>>.next()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:84","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.java.lang.Integer.valueOf(int), java.lang.Integer.java.lang.Integer.valueOf(int)));\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.DefaultedMap:181","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = int < 0","position":"org.apache.commons.collections4.functors.ComparatorPredicate:177","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.collections4.iterators.FilterListIterator:141","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((org.apache.commons.collections4.map.SingletonMap<K, V>)(java.lang.Object.clone()))","position":"org.apache.commons.collections4.map.SingletonMap:521","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.getValue()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:64","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()","position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().hashCode()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:135","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.functors.FunctorUtils.org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Closure<? super E>[])","position":"org.apache.commons.collections4.functors.ChainedClosure:80","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:119","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"lastUsedIterator":"currentIterator"},"name":"add","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:197","type":"CtAssignmentImpl"},"status":0},{"failures":[165,166,167,168,169,51,52,171,172,174,175],"variableMapping":{"iterator":"currentIterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:184","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1176","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"add() not supported for empty Iterator\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:61","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.intersection(this.java.util.Map<K, V>[][int].keySet(), java.util.Map<K, V>.keySet())","position":"org.apache.commons.collections4.map.CompositeMap:135","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:131","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case AFTER :\n    return java.lang.Integer == null ? java.lang.Integer == null ? 0 : 1 : -1;","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:235","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-721644942746081630L","position":"org.apache.commons.collections4.comparators.ComparatorChain:53","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().hashCode()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:117","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new java.lang.StringBuilder().append(\"AVLNode(\").append(int).append(',').append(((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null)).append(',').append(E).append(',').append((org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getRightSubTree()) != null)).append(\", faedelung \")","position":"org.apache.commons.collections4.list.TreeList:969","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:182","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2116","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Map<K, V>.containsKey(java.lang.Object)) == false) {\n    return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)));\n} ","position":"org.apache.commons.collections4.map.DefaultedMap:202","type":"CtIfImpl"},"status":-2},{"failures":[165,166,167,168,169,51,52,171,172,175],"variableMapping":{"isLocked":"hasNext"},"name":"add","transplant":{"sourceCode":"if ((this.boolean) == false) {\n    this.boolean = true;\n} ","position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"default :\n    throw new java.lang.IllegalStateException(((\"The current criterion \\'\" + (org.apache.commons.collections4.functors.ComparatorPredicate.Criterion)) + \"\\' is invalid.\"));","position":"org.apache.commons.collections4.functors.ComparatorPredicate:185","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedSet<E>)(org.apache.commons.collections4.set.PredicatedSet<E>.decorated()))","position":"org.apache.commons.collections4.set.PredicatedSortedSet:87","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"InstantiateFactory: The constructor must exist and be public \");\n}","position":"org.apache.commons.collections4.functors.InstantiateFactory:107","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getConstructor(java.lang.Class<?>[])","position":"org.apache.commons.collections4.functors.InstantiateFactory:108","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Object[][int] = java.util.Iterator<E>.next()","position":"org.apache.commons.collections4.collection.CompositeCollection:171","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl"},"status":-2},{"failures":[227],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.NonePredicate.org.apache.commons.collections4.functors.NonePredicate.nonePredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:438","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))","position":"org.apache.commons.collections4.functors.AnyPredicate:60","type":"CtReturnImpl"},"status":-1},{"failures":[228,229,230,231,232,233,234,235,236,237,193,238,239,240,241,242,243,244,245,246,247,248],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:125","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"o1":"lock","o2":"lock"},"name":"replace","transplant":{"sourceCode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{"last":"key"},"name":"add","transplant":{"sourceCode":"return K","position":"org.apache.commons.collections4.map.ListOrderedMap:756","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingIterator<E>.reset()","position":"org.apache.commons.collections4.iterators.LoopingIterator:88","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:164","type":"CtAssignmentImpl"},"status":0},{"failures":[],"binaryOperator":"(((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass()))","name":"math","position":"org.apache.commons.collections4.functors.InvokerTransformer:131","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>.decorated().java.util.Map<K, V>.containsValue(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:242","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:253","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:689","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.entrySet())","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:104","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , null , int)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:972","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:212","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> , int , org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(K) , V)","position":"org.apache.commons.collections4.map.AbstractLinkedMap:284","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:221","type":"CtInvocationImpl"},"status":-2},{"failures":[166,167,168,169,51,52,171,172,174,175],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:152","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:356","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"isLocked":"nextObjectSet"},"name":"add","transplant":{"sourceCode":"this.boolean = true","position":"org.apache.commons.collections4.comparators.ComparatorChain:269","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterIterator:103","type":"CtAssignmentImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().tailSet(E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:114","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().putAll(java.util.Map<? extends K, ? extends V>)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:110","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:70","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().nextKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:78","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:974","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(int, E)","position":"org.apache.commons.collections4.list.AbstractListDecorator:71","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":181,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":154,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":85,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":109,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":131,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":102,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":107,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":111,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":86,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":134,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":117,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":177,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":176,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":41,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":49,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":173,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":116,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":161,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":95,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":25,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":148,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":64,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray2":213,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":8,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":39,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":201,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":17,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":43,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":247,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":211,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":68,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":72,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":100,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":215,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":159,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":74,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":98,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":179,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":124,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":224,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":244,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":21,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":32,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":163,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":140,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":237,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSimpleSerialization":189,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray2":214,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":218,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":103,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":96,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":145,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":123,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":240,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":50,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":160,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":194,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":75,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":83,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":20,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":28,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":35,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":110,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":55,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":217,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":13,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":125,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":203,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":220,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":147,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":118,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":171,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":186,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":126,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":12,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":88,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":27,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":59,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":30,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":65,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":14,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":135,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":60,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":99,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":229,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":207,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":84,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":175,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":71,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":38,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":2,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":241,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":152,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":205,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":228,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":230,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":143,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":234,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":5,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":45,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":57,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":6,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":80,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":78,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":73,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":172,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":129,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":219,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":94,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":61,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":92,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":46,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray2":223,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":1,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":26,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":34,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":37,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":157,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":130,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":3,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":187,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":188,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":119,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":204,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":120,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":174,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":164,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":155,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":132,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":47,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":184,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":200,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":54,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":246,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":133,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":169,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":101,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray2":209,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":141,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":136,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":180,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":212,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":158,"org.apache.commons.collections4.bag.TreeBagTest.testSimpleSerialization":183,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":90,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":208,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":149,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":243,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":231,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":190,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":153,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":0,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":168,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":139,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":222,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":127,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":104,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":198,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":89,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenSet":178,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":22,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":226,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":193,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":195,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":182,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":192,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":77,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":79,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":199,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":31,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":63,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":206,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":248,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":106,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSimpleSerialization":191,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":97,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":36,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":138,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":202,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":23,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":29,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":108,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":121,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":236,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":232,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":91,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":115,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":146,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":162,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":15,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":165,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":166,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":167,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":58,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray2":225,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":216,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":142,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":235,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":93,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":233,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":151,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":242,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":122,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":56,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":227,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":245,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":42,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":70,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":87,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":221,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":48,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":40,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":239,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":53,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":196,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":210,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":128,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":9,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":144,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":114,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":156,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":185,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":4,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":10,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":11,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":69,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":137,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":238,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":67,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":170,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":113,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":197,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":44,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":112,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":33}}]
