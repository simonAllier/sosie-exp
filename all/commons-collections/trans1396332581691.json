[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (T == null) {\n    return ((org.apache.commons.collections4.Factory<T>)(org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.Factory));\n} ","position":"org.apache.commons.collections4.functors.ConstantFactory:54","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:138","type":"CtReturnImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"prototype":"prototype"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T })","position":"org.apache.commons.collections4.functors.PrototypeFactory:69","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.PrototypeFactory.org.apache.commons.collections4.functors.PrototypeFactory.<T>prototypeFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.list.SetUniqueList.SetListIterator<E>(org.apache.commons.collections4.list.AbstractSerializableListDecorator<E>.iterator() , java.util.Set<E>)","position":"org.apache.commons.collections4.list.SetUniqueList:295","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:129","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"key"},"name":"add","transplant":{"sourceCode":"return java.lang.Object","position":"org.apache.commons.collections4.map.AbstractHashedMap:1092","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)))","position":"org.apache.commons.collections4.map.DefaultedMap:203","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}","position":"org.apache.commons.collections4.set.ListOrderedSet:242","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.ArrayStack<E>.push(E)","position":"org.apache.commons.collections4.iterators.PushbackIterator:88","type":"CtInvocationImpl"},"status":-2},{"failures":[148,149],"variableMapping":{"nextPermutation":"list"},"name":"replace","transplant":{"sourceCode":"return (this.java.util.List<E>) != null","position":"org.apache.commons.collections4.iterators.PermutationIterator:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(java.util.List<E>.isEmpty())","position":"org.apache.commons.collections4.iterators.LoopingListIterator:74","type":"CtReturnImpl"},"status":-1},{"failures":[148,150],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:196","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2116","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)))","position":"org.apache.commons.collections4.map.DefaultedMap:203","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException((\"fromIndex = \" + int))","position":"org.apache.commons.collections4.list.AbstractLinkedList:950","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:86","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.lang.RuntimeException java.lang.RuntimeException","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:61","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((int + (int)))","position":"org.apache.commons.collections4.list.AbstractLinkedList:991","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>.decorated()","position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:152","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:108","type":"CtAssignmentImpl"},"status":-2},{"failures":[151],"variableMapping":{"lastUsedIterator":"iterator"},"name":"replace","transplant":{"sourceCode":"if ((this.java.util.Iterator<? extends I>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends I>.remove()","position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.MapUtils:237","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator(java.util.List<E>.size())","position":"org.apache.commons.collections4.iterators.ReverseListIterator:171","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null))","position":"org.apache.commons.collections4.list.GrowthList:154","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * The sublist implementation for AbstractLinkedList.\n */\nprotected static class LinkedSubList<E> extends java.util.AbstractList<E> {\n    /** \n     * The main list\n     */\norg.apache.commons.collections4.list.AbstractLinkedList<E> parent;\n\n    /** \n     * Offset from the main list\n     */\nint offset;\n\n    /** \n     * Sublist size\n     */\nint size;\n\n    /** \n     * Sublist modCount\n     */\nint expectedModCount;\n\n    protected LinkedSubList(final org.apache.commons.collections4.list.AbstractLinkedList<E> parent ,final int fromIndex ,final int toIndex) {\n        if (int < 0) {\n            throw new java.lang.IndexOutOfBoundsException((\"fromIndex = \" + int));\n        } \n        if (int > (org.apache.commons.collections4.list.AbstractLinkedList<E>.size())) {\n            throw new java.lang.IndexOutOfBoundsException((\"toIndex = \" + int));\n        } \n        if (int > int) {\n            throw new java.lang.IllegalArgumentException(((((\"fromIndex(\" + int) + \") > toIndex(\") + int) + \")\"));\n        } \n        this.org.apache.commons.collections4.list.AbstractLinkedList<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>;\n        this.int = int;\n        this.int = int - int;\n        this.int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n    }\n\n    @java.lang.Override\n    public int size() {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return int;\n    }\n\n    @java.lang.Override\n    public E get(final int index) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, int);\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((int + (int)));\n    }\n\n    @java.lang.Override\n    public void add(final int index, final E obj) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, ((int) + 1));\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        org.apache.commons.collections4.list.AbstractLinkedList<E>.add((int + (int)), E);\n        int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n        (int)++;\n        (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n    }\n\n    @java.lang.Override\n    public E remove(final int index) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, int);\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((int + (int)));\n        int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n        (int)--;\n        (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        return E;\n    }\n\n    @java.lang.Override\n    public boolean addAll(final java.util.Collection<? extends E> coll) {\n        return org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.addAll(int, java.util.Collection<? extends E>);\n    }\n\n    @java.lang.Override\n    public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, ((int) + 1));\n        final int int = java.util.Collection<? extends E>.size();\n        if (int == 0) {\n            return false;\n        } \n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + int), java.util.Collection<? extends E>);\n        int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n        int += int;\n        (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        return true;\n    }\n\n    @java.lang.Override\n    public E set(final int index, final E obj) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, int);\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((int + (int)), E);\n    }\n\n    @java.lang.Override\n    public void clear() {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.iterator();\n        while (java.util.Iterator<E>.hasNext()) {\n            java.util.Iterator<E>.next();\n            java.util.Iterator<E>.remove();\n        }\n    }\n\n    @java.lang.Override\n    public java.util.Iterator<E> iterator() {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListIterator(this);\n    }\n\n    @java.lang.Override\n    public java.util.ListIterator<E> listIterator(final int index) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, ((int) + 1));\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(this, int);\n    }\n\n    @java.lang.Override\n    public java.util.List<E> subList(final int fromIndexInclusive, final int toIndexExclusive) {\n        return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(org.apache.commons.collections4.list.AbstractLinkedList<E> , (int + (int)) , (int + (int)));\n    }\n\n    protected void rangeCheck(final int index, final int beyond) {\n        if ((int < 0) || (int >= int)) {\n            throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n        } \n    }\n\n    protected void checkModCount() {\n        if ((org.apache.commons.collections4.list.AbstractLinkedList<E>.int) != (int)) {\n            throw new java.util.ConcurrentModificationException();\n        } \n    }\n}","position":"org.apache.commons.collections4.list.AbstractLinkedList:938","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:165","type":"CtInvocationImpl"},"status":-2},{"failures":[152,153],"variableMapping":{"obj":"object","this":"object"},"name":"add","transplant":{"sourceCode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} ","position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(java.lang.Object, (int + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)))","position":"org.apache.commons.collections4.list.TreeList:441","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (org.apache.commons.collections4.Transformer<? super I, ? extends O> == null) {\n    throw new java.lang.NullPointerException(\"Transformer must not be null\");\n} ","position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:147","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final K K = java.util.Map.Entry<K, V> != null ? java.util.Map.Entry<K, V>.getKey() : null","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2179","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:181","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return 1","position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().size()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:118","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"input":"input","this":"this"},"name":"add","transplant":{"sourceCode":"try {\n    org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E);\n} catch (final java.lang.RuntimeException java.lang.RuntimeException) {\n    throw java.lang.RuntimeException;\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable);\n}","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:59","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:60","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"iterator":"currentIterator"},"name":"add","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends I>","position":"org.apache.commons.collections4.iterators.TransformIterator:110","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int))","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:84","type":"CtAssignmentImpl"},"status":0},{"failures":[154],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:356","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"(int)--","position":"org.apache.commons.collections4.list.AbstractLinkedList:869","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.SynchronizedCollection:73","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"~(int << 11)","position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:118","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.TransformerClosure<E>(org.apache.commons.collections4.Transformer<? super E, ?>)","position":"org.apache.commons.collections4.functors.TransformerClosure:52","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Transformer<? super E, ?> == null) {\n    return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} ","position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"switch (int) {\n    case 3 :\n        if ((K) == null) {\n            return true;\n        } \n    case 2 :\n        if ((K) == null) {\n            return true;\n        } \n    case 1 :\n        if ((K) == null) {\n            return true;\n        } \n}","position":"org.apache.commons.collections4.map.Flat3Map:202","type":"CtSwitchImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)) | boolean","position":"org.apache.commons.collections4.list.GrowthList:157","type":"CtReturnImpl"},"status":-2},{"failures":[155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:106","type":"CtSynchronizedImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:69","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}","position":"org.apache.commons.collections4.functors.WhileClosure:88","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>.isInstance(java.lang.Object)","position":"org.apache.commons.collections4.functors.InstanceofPredicate:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next())","position":"org.apache.commons.collections4.iterators.CollatingIterator:316","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:128","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Set<java.util.Map.Entry<K, V>> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.createEntrySet()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1748","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<? extends E>.size()","position":"org.apache.commons.collections4.iterators.LoopingIterator:122","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Iterator must not be null\")","position":"org.apache.commons.collections4.iterators.CollatingIterator:174","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:226","type":"CtAssignmentImpl"},"status":-2},{"failures":[173],"binaryOperator":"int < int","name":"conditionalBoundary","position":"org.apache.commons.collections4.list.LazyList:126","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)))","position":"org.apache.commons.collections4.map.DefaultedMap:203","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (K.equals(K))) {\n            final V V = V;\n            V = V;\n            return V;\n        } \n    case 2 :\n        if (((int) == int) && (K.equals(K))) {\n            final V V = V;\n            V = V;\n            return V;\n        } \n    case 1 :\n        if (((int) == int) && (K.equals(K))) {\n            final V V = V;\n            V = V;\n            return V;\n        } \n}","position":"org.apache.commons.collections4.map.Flat3Map:319","type":"CtSwitchImpl"},"status":-2},{"failures":[],"binaryOperator":"((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \")","name":"math","position":"org.apache.commons.collections4.iterators.ArrayIterator:115","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.TreeList<E>.checkInterval(int, 0, org.apache.commons.collections4.list.TreeList<E>.size())","position":"org.apache.commons.collections4.list.TreeList:202","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:86","type":"CtAssignmentImpl"},"status":-2},{"failures":[174,169,175],"variableMapping":{"array":"object"},"name":"replace","transplant":{"sourceCode":"return T[]","position":"org.apache.commons.collections4.bag.AbstractMapBag:479","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray(T[]);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:163","type":"CtSynchronizedImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<E> java.util.List<E> = java.util.List<E>","position":"org.apache.commons.collections4.iterators.PermutationIterator:125","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingIterator:85","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.collections4.set.CompositeSet:189","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().peek()","position":"org.apache.commons.collections4.queue.PredicatedQueue:107","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterListIterator:211","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"V = null","position":"org.apache.commons.collections4.map.Flat3Map:451","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","position":"org.apache.commons.collections4.functors.PrototypeFactory:138","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>> = java.util.Set<java.util.Map.Entry<K, V>>.iterator()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:92","type":"CtAssignmentImpl"},"status":0},{"failures":[176],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = -1","position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:151","type":"CtLocalVariableImpl"},"status":-1},{"failures":[177,178],"binaryOperator":"(java.util.Iterator<? extends E>) == null","name":"removeConditional","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"mutation","status":-1},{"failures":[179],"variableMapping":{"nextObject":"last"},"name":"replace","transplant":{"sourceCode":"this.E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = java.util.Enumeration<? extends E>.nextElement()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:92","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(java.lang.Object)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1734","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Map<K, V>.containsKey(java.lang.Object)) == false) {\n    return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)));\n} ","position":"org.apache.commons.collections4.map.DefaultedMap:202","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"iArgs":"iArgs","iConstructor":"iConstructor"},"name":"add","transplant":{"sourceCode":"return this.java.lang.reflect.Constructor<T>.newInstance(this.java.lang.Object[])","position":"org.apache.commons.collections4.functors.InstantiateFactory:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[]);\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: InstantiationException\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor must be public\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor threw an exception\" , java.lang.reflect.InvocationTargetException);\n}","position":"org.apache.commons.collections4.functors.InstantiateFactory:125","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{"transformer":"transformer"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.TransformerClosure<E>(org.apache.commons.collections4.Transformer<? super E, ?>)","position":"org.apache.commons.collections4.functors.TransformerClosure:52","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Transformer<? super E, ?> == null) {\n    return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} ","position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * FlatMapIterator\n */\nstatic class FlatMapIterator<K, V> implements org.apache.commons.collections4.MapIterator<K, V> , org.apache.commons.collections4.ResettableIterator<K> {\n    private final org.apache.commons.collections4.map.Flat3Map<K, V> parent;\n\n    private int nextIndex = 0;\n\n    private boolean canRemove = false;\n\n    FlatMapIterator(final org.apache.commons.collections4.map.Flat3Map<K, V> parent) {\n        java.lang.Object.super();\n        this.org.apache.commons.collections4.map.Flat3Map<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>;\n    }\n\n    public boolean hasNext() {\n        return (int) < (org.apache.commons.collections4.map.Flat3Map<K, V>.int);\n    }\n\n    public K next() {\n        if (org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>.(hasNext()) == false) {\n            throw new java.util.NoSuchElementException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n        } \n        boolean = true;\n        (int)++;\n        return org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>.getKey();\n    }\n\n    public void remove() {\n        if ((boolean) == false) {\n            throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n        } \n        org.apache.commons.collections4.map.Flat3Map<K, V>.remove(org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>.getKey());\n        (int)--;\n        boolean = false;\n    }\n\n    public K getKey() {\n        if ((boolean) == false) {\n            throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n        } \n        switch (int) {\n            case 3 :\n                return org.apache.commons.collections4.map.Flat3Map<K, V>.K;\n            case 2 :\n                return org.apache.commons.collections4.map.Flat3Map<K, V>.K;\n            case 1 :\n                return org.apache.commons.collections4.map.Flat3Map<K, V>.K;\n        }\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n    }\n\n    public V getValue() {\n        if ((boolean) == false) {\n            throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n        } \n        switch (int) {\n            case 3 :\n                return org.apache.commons.collections4.map.Flat3Map<K, V>.V;\n            case 2 :\n                return org.apache.commons.collections4.map.Flat3Map<K, V>.V;\n            case 1 :\n                return org.apache.commons.collections4.map.Flat3Map<K, V>.V;\n        }\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n    }\n\n    public V setValue(final V value) {\n        if ((boolean) == false) {\n            throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n        } \n        final V V = org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>.getValue();\n        switch (int) {\n            case 3 :\n                org.apache.commons.collections4.map.Flat3Map<K, V>.V = V;\n                break;\n            case 2 :\n                org.apache.commons.collections4.map.Flat3Map<K, V>.V = V;\n                break;\n            case 1 :\n                org.apache.commons.collections4.map.Flat3Map<K, V>.V = V;\n                break;\n            default :\n                throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n        }\n        return V;\n    }\n\n    public void reset() {\n        int = 0;\n        boolean = false;\n    }\n\n    @java.lang.Override\n    public java.lang.String toString() {\n        if (boolean) {\n            return (((\"Iterator[\" + org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>.(getKey())) + \"=\") + org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>.(getValue())) + \"]\";\n        } \n        return \"Iterator[]\";\n    }\n}","position":"org.apache.commons.collections4.map.Flat3Map:622","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().comparator()","position":"org.apache.commons.collections4.bag.TreeBag:104","type":"CtReturnImpl"},"status":-2},{"failures":[180,181,182],"variableMapping":{"o1":"object","c":"index","o2":"object"},"name":"replace","transplant":{"sourceCode":"return int < 0 ? E : E","position":"org.apache.commons.collections4.ComparatorUtils:220","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.FixedSizeList:148","type":"CtReturnImpl"},"status":-1},{"failures":[183],"binaryOperator":"(T) == T","name":"negateConditional","position":"org.apache.commons.collections4.functors.IdentityPredicate:72","type":"mutation","status":-1},{"failures":[173],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.collections4.keyvalue.MultiKey:262","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(E)","position":"org.apache.commons.collections4.list.LazyList:131","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.ArrayList<java.util.Iterator<? extends E>>.get(int).remove()","position":"org.apache.commons.collections4.iterators.CollatingIterator:272","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")","position":"org.apache.commons.collections4.functors.WhileClosure:56","type":"CtThrowImpl"},"status":-2},{"failures":[184],"variableMapping":{"validForUpdate":"validForUpdate"},"name":"add","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:108","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"iterator":"lastUsedIterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:113","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this","key":"key"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:94","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:114","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.OnePredicate.org.apache.commons.collections4.functors.OnePredicate.onePredicate(java.util.Collection<org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:388","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.FunctorUtils.org.apache.commons.collections4.functors.FunctorUtils.coerce(org.apache.commons.collections4.Predicate<? super T>[][0])","position":"org.apache.commons.collections4.functors.AllPredicate:61","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.List<E>","position":"org.apache.commons.collections4.ListUtils:107","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:239","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.Transformer<? super I, ? extends O> == null) {\n    throw new java.lang.NullPointerException(\"Transformer must not be null\");\n} ","position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:130","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset()","position":"org.apache.commons.collections4.iterators.IteratorIterable:126","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:248","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"(((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass()))","name":"math","position":"org.apache.commons.collections4.functors.InvokerTransformer:131","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.ListIterator<java.util.Map.Entry<K, V>>.hasNext()","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:311","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.UniquePredicate.org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()","position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl"},"status":-2},{"failures":[185],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * A soft reference holder.\n */\nstatic class SoftRef<T> extends java.lang.ref.SoftReference<T> {\n    /** \n     * the hashCode of the key (even if the reference points to a value)\n     */\nprivate final int hash;\n\n    public SoftRef(final int hash ,final T r ,final java.lang.ref.ReferenceQueue<? super T> q) {\n        java.lang.ref.SoftReference<T>.super(T, java.lang.ref.ReferenceQueue<? super T>);\n        this.int = int;\n    }\n\n    @java.lang.Override\n    public int hashCode() {\n        return int;\n    }\n}","position":"org.apache.commons.collections4.map.AbstractReferenceMap:941","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int))","position":"org.apache.commons.collections4.list.FixedSizeList:123","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Map must not be null\")","position":"org.apache.commons.collections4.MapUtils:1758","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().subMap(K, K)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:109","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator())","position":"org.apache.commons.collections4.list.UnmodifiableList:114","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator()","position":"org.apache.commons.collections4.list.AbstractListDecorator:91","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().remove(java.lang.Object, int)","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:77","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.DefaultedMap:181","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\")","name":"math","position":"org.apache.commons.collections4.map.LRUMap:312","type":"mutation","status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().subSet(E, E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:104","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.util.ListIterator<E>.nextIndex()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:118","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    return (java.util.List<E>.size()) - 1;\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:171","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")","position":"org.apache.commons.collections4.functors.WhileClosure:59","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(java.lang.String.java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.java.lang.Integer.valueOf(int), java.lang.Integer.java.lang.Integer.valueOf(int)))","position":"org.apache.commons.collections4.queue.CircularFifoQueue:257","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Object = org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>.toReference(org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength, V, int)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:650","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.WhileClosure<E>(org.apache.commons.collections4.Predicate<? super E> , org.apache.commons.collections4.Closure<? super E> , boolean)","position":"org.apache.commons.collections4.functors.WhileClosure:61","type":"CtReturnImpl"},"status":-2},{"failures":[3,4],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:45","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().lastKey()","position":"org.apache.commons.collections4.bag.TreeBag:100","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.SynchronizedSortedBag<E>.getSortedBag().last()","position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:95","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:284","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:68","type":"CtReturnImpl"},"status":-2},{"failures":[186,187,188,189,190,191,192,193,194,195,196,197],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterListIterator:236","type":"mutation","return":"return true","status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(((((\"fromIndex(\" + int) + \") > toIndex(\") + int) + \")\"))","position":"org.apache.commons.collections4.list.AbstractLinkedList:956","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:107","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new java.util.ArrayList<E>(this)","position":"org.apache.commons.collections4.collection.CompositeCollection:391","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:79","type":"CtReturnImpl"},"status":-3},{"failures":[198],"variableMapping":{"iterator":"currentIterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:91","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate()","position":"org.apache.commons.collections4.functors.NonePredicate:53","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.FilterListIterator:137","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new org.apache.commons.collections4.functors.ExceptionClosure<java.lang.Object>()","position":"org.apache.commons.collections4.functors.ExceptionClosure:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.OrderedMap<K, V>)(org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated()))","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:65","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.getKey()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:60","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.InstanceofPredicate(java.lang.Class<?>)","position":"org.apache.commons.collections4.functors.InstanceofPredicate:49","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount()","position":"org.apache.commons.collections4.list.AbstractLinkedList:1045","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.Set<E>)(org.apache.commons.collections4.collection.PredicatedCollection<E>.decorated()))","position":"org.apache.commons.collections4.set.PredicatedSet:86","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = int < 0 ? org.apache.commons.collections4.list.TreeList.AVLNode<E>.getLeftSubTree() : org.apache.commons.collections4.list.TreeList.AVLNode<E>.getRightSubTree()","position":"org.apache.commons.collections4.list.TreeList:420","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:133","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"map":"map"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.MapTransformer<I, O>(java.util.Map<? super I, ? extends O>)","position":"org.apache.commons.collections4.functors.MapTransformer:53","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} ","position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"node must not be null!\")","position":"org.apache.commons.collections4.iterators.NodeListIterator:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.iterators.ArrayIterator:148","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:261","type":"CtReturnImpl"},"status":-2},{"failures":[199,200,201,202,203,204,53,54,177,205,206,178],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:169","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.List<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.List<E> java.util.List<E> = ((java.util.List<E>)(java.util.List<? extends E>));\n    return java.util.List<E>;\n} ","position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.OnePredicate.org.apache.commons.collections4.functors.OnePredicate.onePredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:372","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int))","name":"math","position":"org.apache.commons.collections4.map.LRUMap:312","type":"mutation","status":-2},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":192,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":7,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":60,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":152,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":113,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":135,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":106,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":111,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":185,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":115,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":157,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":86,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":121,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":40,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":48,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":120,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":180,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":99,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":24,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":2,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":146,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":151,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":38,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":16,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":42,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":71,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":75,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":104,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":186,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":77,"org.apache.commons.collections4.ListUtilsTest.testLazyList":173,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":17,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":102,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":191,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":179,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":128,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":168,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":20,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":31,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":92,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":107,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":109,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":100,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":97,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":127,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":49,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":58,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":78,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":188,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":19,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":159,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":27,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":34,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":114,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":137,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":12,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":54,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":129,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":122,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":161,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":177,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":130,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":63,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":26,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":141,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":195,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":29,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":147,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":13,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":87,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":187,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":103,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":142,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":182,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":59,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":178,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":74,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":37,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":50,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":95,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":44,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":139,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":51,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":55,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":164,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":81,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping0":149,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":76,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":190,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":205,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":133,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":98,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":143,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":67,"org.apache.commons.collections4.PredicateUtilsTest.testIdentityPredicate":183,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":45,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":25,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":33,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":36,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":10,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":134,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":144,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":189,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":123,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":124,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":206,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":56,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":8,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":84,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":46,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":160,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":136,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":155,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":85,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":203,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":105,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":88,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":11,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":172,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":65,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":1,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":194,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":6,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":165,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":202,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":91,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":131,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":158,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":167,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":176,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":108,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":64,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenSet":184,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":21,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":175,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":156,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":80,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":82,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":30,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":145,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":110,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":193,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":101,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":204,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":153,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":35,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":90,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":22,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":28,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":112,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":125,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":66,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":83,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":119,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":181,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":14,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":199,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":200,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":201,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":140,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingForward":148,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":94,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":68,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":171,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":126,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":166,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":138,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":197,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":41,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":196,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":62,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":73,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":47,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":39,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":174,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards":150,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":132,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":154,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":162,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":163,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":96,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":118,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":9,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":170,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":198,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":72,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":89,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":70,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":117,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":43,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":116,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":32}}]
