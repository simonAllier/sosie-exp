[{"failures":[],"binaryOperator":"(int - int)","name":"removeConditional","position":"org.apache.commons.collections4.list.GrowthList:124","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.nextIndex()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:115","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.Flat3Map.Values<V>(this)","position":"org.apache.commons.collections4.map.Flat3Map:1026","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.SynchronizedCollection:100","type":"CtReturnImpl"},"status":-2},{"failures":[0],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < int) {\n    E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int);\n    if (E == null) {\n        E = org.apache.commons.collections4.Factory<? extends E>.create();\n        org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E);\n        return E;\n    } \n    return E;\n} ","position":"org.apache.commons.collections4.list.LazyList:113","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:248","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this)","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:100","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.UnmodifiableSet.org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Map<K, V>.keySet())","position":"org.apache.commons.collections4.map.FixedSizeSortedMap:150","type":"CtReturnImpl"},"status":-2},{"failures":[1],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.map.AbstractMapDecorator:128","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Enumeration<? extends E>.hasMoreElements()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:82","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} ","position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.collections4.iterators.FilterListIterator:141","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))","position":"org.apache.commons.collections4.CollectionUtils:254","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Factory<? extends O>.create()","position":"org.apache.commons.collections4.functors.FactoryTransformer:73","type":"CtReturnImpl"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"mutation","return":"return true","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.CollectionUtils:419","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}","position":"org.apache.commons.collections4.functors.WhileClosure:88","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.Predicate))","position":"org.apache.commons.collections4.functors.NullPredicate:47","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) < (int)","position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.bag.AbstractMapBag:229","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.list.GrowthList:155","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:89","type":"CtReturnImpl"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().isEmpty()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:98","type":"CtReturnImpl"},"status":-1},{"failures":[212,213,214,215,216,217,218,219,220],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.TransformerPredicate.org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean>)","position":"org.apache.commons.collections4.PredicateUtils:470","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = -1","position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.LazyList:112","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<K, V>.getValue())","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2420","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bag.AbstractMapBag<E>.doReadObject(new java.util.TreeMap<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>(java.util.Comparator<? super E>), java.io.ObjectInputStream)","position":"org.apache.commons.collections4.bag.TreeBag:129","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<E, E>.getIterator().next()","position":"org.apache.commons.collections4.iterators.AbstractIteratorDecorator:44","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.queue.AbstractQueueDecorator<E>.decorated().poll()","position":"org.apache.commons.collections4.queue.AbstractQueueDecorator:72","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"ListIterator must not be null\")","position":"org.apache.commons.collections4.IteratorUtils:722","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"remove() method is not supported\")","position":"org.apache.commons.collections4.iterators.ArrayIterator:159","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, java.lang.Object, java.util.Map<?, ?>, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true)","position":"org.apache.commons.collections4.MapUtils:939","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().clear()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:104","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:162","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.collections4.map.AbstractReferenceMap:1041","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().last()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (this == java.lang.Object) {\n    return true;\n} ","position":"org.apache.commons.collections4.comparators.ReverseComparator:110","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl"},"status":-2},{"failures":[221,222,223],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:111","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.SynchronizedCollection:73","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\")","position":"org.apache.commons.collections4.functors.ChainedTransformer:72","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw java.lang.RuntimeException","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:62","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterIterator:177","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.ListIterator<? extends E>))","position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:51","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:221","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"coll":"coll","this":"this","index":"index"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.list.AbstractListDecorator:75","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)) | boolean","position":"org.apache.commons.collections4.list.GrowthList:157","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.clear()","position":"org.apache.commons.collections4.map.PassiveExpiringMap:336","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    return (java.util.List<E>.size()) - 1;\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:171","type":"CtIfImpl"},"status":-2},{"failures":[224,225,226,227,228,229,230,231,232,233,234],"variableMapping":{"next":"value","this":"this"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:192","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:165","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<E>.previous();\n} ","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(org.apache.commons.collections4.ArrayStack<E>.isEmpty()) ? org.apache.commons.collections4.ArrayStack<E>.pop() : java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.PushbackIterator:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.util.Map<V, K>.containsKey(java.lang.Object)) {\n    K = java.util.Map<V, K>.remove(java.lang.Object);\n    java.util.Map<K, V>.remove(K);\n} ","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:227","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().first()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator","list":"list"},"name":"add","transplant":{"sourceCode":"this.java.util.ListIterator<E> = this.java.util.List<E>.listIterator(this.java.util.List<E>.size())","position":"org.apache.commons.collections4.iterators.ReverseListIterator:171","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:242","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:257","type":"CtInvocationImpl"},"status":-2},{"failures":[235,236,237,238,239,240,241,242,243,244,245,246],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterIterator:179","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"curObject":"currentValue","leastObject":"currentValue"},"name":"add","transplant":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:226","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.LazySortedMap:131","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.LazySortedMap:135","type":"CtReturnImpl"},"status":-2},{"failures":[247,248,249,250,234],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"keyTransformer cannot be null\")","position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:114","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\")","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:246","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final boolean boolean = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.containsKey(K)","position":"org.apache.commons.collections4.map.ListOrderedMap:251","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().subMap(K, K)","position":"org.apache.commons.collections4.map.TransformedSortedMap:145","type":"CtLocalVariableImpl"},"status":-2},{"failures":[251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.util.ListIterator<E>.previous()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:67","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.ChainedTransformer.org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(org.apache.commons.collections4.Transformer<? super T, ? extends T>[])","position":"org.apache.commons.collections4.TransformerUtils:194","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"The list must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigatePrevious()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1791","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((E) == null) {\n} else {\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n    } else {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n    E = null;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:141","type":"CtIfImpl"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:236","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.util.ListIterator<E>.previousIndex()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:174","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.nextIndex();\n} ","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"added":"validForUpdate","changed":"validForUpdate"},"name":"add","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:78","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:86","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>","position":"org.apache.commons.collections4.map.MultiKeyMap:612","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.map.AbstractMapDecorator:128","type":"CtReturnImpl"},"status":-2},{"failures":[357,358,359,360,361,362,330,335,340,341,346],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.iterators.UnmodifiableListIterator.org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator())","position":"org.apache.commons.collections4.list.UnmodifiableList:114","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator()","position":"org.apache.commons.collections4.list.AbstractListDecorator:91","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) != null","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1637","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:92","type":"CtInvocationImpl"},"status":-2},{"failures":[363,364,365,366,367,368,35,369,370,371,372,373,374,375,376,36,377,378,379,380,37,381,382,38,383,39,384,40,41,42,43,385,386,387,388,44,45,389,390,391,392,393,394,395,396,58,397,398,399,400,401,402,403,404,59,405,406,407,408,60,409,410,61,411,62,412,63,64,65,66,413,414,415,416,67,68,417,418,419,420,421,422,423,424,81,425,426,427,428,82,83,84,85,86,87,88,429,89,430,431,432,433,434,90,435,436,437,438,439,440,441,442,443,444,445,446,91,447,448,449,450,451,92,93,452,453,454,455,456,457,458,459,460,461,462,108,463,464,465,466,467,468,469,470,109,471,472,473,474,110,475,476,111,477,112,478,113,114,115,116,479,480,481,482,117,118,483,484,485,486,487,488,489,490,491,492,493,494,495,496,141,142,143,144,145,146,147,497,148,498,499,500,501,502,149,503,504,505,506,507,508,509,510,511,512,513,514,150,515,516,517,518,519,151,152,520],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:76","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:106","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.map.ReferenceMap:172","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:94","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"FilterListIterator.remove() is not supported.\")","position":"org.apache.commons.collections4.iterators.FilterListIterator:162","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Map must not be null\")","position":"org.apache.commons.collections4.map.AbstractMapDecorator:62","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((boolean) == true) {\n    return (((\"Iterator[\" + org.apache.commons.collections4.map.ListOrderedMap.ListOrderedMapIterator<K, V>.(getKey())) + \"=\") + org.apache.commons.collections4.map.ListOrderedMap.ListOrderedMapIterator<K, V>.(getValue())) + \"]\";\n} ","position":"org.apache.commons.collections4.map.ListOrderedMap:781","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:87","type":"CtThrowImpl"},"status":-2},{"failures":[521,522],"variableMapping":{"coll":"coll","this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:130","type":"CtSynchronizedImpl"},"status":-1},{"failures":[523,524,525,526,527,528],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.OnePredicate.org.apache.commons.collections4.functors.OnePredicate.onePredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:372","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * A MapEntry implementation for the map.\n * <p>\n * If getKey() or getValue() returns null, it means\n * the mapping is stale and should be removed.\n * \n * @since 3.1\n */\nprotected static class ReferenceEntry<K, V> extends org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> {\n    /** \n     * The parent map\n     */\nprivate final org.apache.commons.collections4.map.AbstractReferenceMap<K, V> parent;\n\n    /** \n     * Creates a new entry object for the ReferenceMap.\n     * \n     * @param parent  the parent map\n     * @param next  the next entry in the hash bucket\n     * @param hashCode  the hash code of the key\n     * @param key  the key\n     * @param value  the value\n     */\npublic ReferenceEntry(final org.apache.commons.collections4.map.AbstractReferenceMap<K, V> parent ,final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next ,final int hashCode ,final K key ,final V value) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.super(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, null, null);\n        this.org.apache.commons.collections4.map.AbstractReferenceMap<K, V> = org.apache.commons.collections4.map.AbstractReferenceMap<K, V>;\n        this.java.lang.Object = org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>.toReference(org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength, K, int);\n        this.java.lang.Object = org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>.toReference(org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength, V, int);\n    }\n\n    /** \n     * Gets the key from the entry.\n     * This method dereferences weak and soft keys and thus may return null.\n     * \n     * @return the key, which may be null if it was garbage collected\n     */\n@java.lang.Override\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    public K getKey() {\n        return ((K)((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? java.lang.Object : ((java.lang.ref.Reference<K>)(java.lang.Object)).get()));\n    }\n\n    /** \n     * Gets the value from the entry.\n     * This method dereferences weak and soft value and thus may return null.\n     * \n     * @return the value, which may be null if it was garbage collected\n     */\n@java.lang.Override\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    public V getValue() {\n        return ((V)((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? java.lang.Object : ((java.lang.ref.Reference<V>)(java.lang.Object)).get()));\n    }\n\n    /** \n     * Sets the value of the entry.\n     * \n     * @param obj  the object to store\n     * @return the previous value\n     */\n@java.lang.Override\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    public V setValue(final V obj) {\n        final V V = org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>.getValue();\n        if ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) != (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n            ((java.lang.ref.Reference<V>)(java.lang.Object)).clear();\n        } \n        java.lang.Object = org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>.toReference(org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength, V, int);\n        return V;\n    }\n\n    /** \n     * Compares this map entry to another.\n     * <p>\n     * This implementation uses <code>isEqualKey<\/code> and\n     * <code>isEqualValue<\/code> on the main map for comparison.\n     * \n     * @param obj  the other map entry to compare to\n     * @return true if equal, false if not\n     */\n@java.lang.Override\n    public boolean equals(final java.lang.Object obj) {\n        if (java.lang.Object == this) {\n            return true;\n        } \n        if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n            return false;\n        } \n        final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(java.lang.Object));\n        final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n        final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n        if ((java.lang.Object == null) || (java.lang.Object == null)) {\n            return false;\n        } \n        return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(java.lang.Object, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>.getValue()));\n    }\n\n    /** \n     * Gets the hashcode of the entry using temporary hard references.\n     * <p>\n     * This implementation uses <code>hashEntry<\/code> on the main map.\n     * \n     * @return the hashcode of the entry\n     */\n@java.lang.Override\n    public int hashCode() {\n        return org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.hashEntry(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>.getKey(), org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>.getValue());\n    }\n\n    /** \n     * Constructs a reference of the given type to the given referent.\n     * The reference is registered with the queue for later purging.\n     * \n     * @param <T> the type of the referenced object\n     * @param type  HARD, SOFT or WEAK\n     * @param referent  the object to refer to\n     * @param hash  the hash code of the <i>key<\/i> of the mapping;\n     * this number might be different from referent.hashCode() if\n     * the referent represents a value and not a key\n     * @return the reference to the object\n     */\nprotected <T>java.lang.Object toReference(final org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength type, final T referent, final int hash) {\n        if (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n            return T;\n        } \n        if (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n            return new org.apache.commons.collections4.map.AbstractReferenceMap.SoftRef<T>(int , T , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n        } \n        if (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n            return new org.apache.commons.collections4.map.AbstractReferenceMap.WeakRef<T>(int , T , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n        } \n        throw new java.lang.Error();\n    }\n\n    /** \n     * Purges the specified reference\n     * @param ref  the reference to purge\n     * @return true or false\n     */\nboolean purge(final java.lang.ref.Reference<?> ref) {\n        boolean boolean = ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) != (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) && ((java.lang.Object) == java.lang.ref.Reference<?>);\n        boolean = boolean || (((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) != (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) && ((java.lang.Object) == java.lang.ref.Reference<?>));\n        if (boolean) {\n            if ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) != (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                ((java.lang.ref.Reference<?>)(java.lang.Object)).clear();\n            } \n            if ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) != (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                ((java.lang.ref.Reference<?>)(java.lang.Object)).clear();\n            } else if (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.boolean) {\n                java.lang.Object = null;\n            } \n        } \n        return boolean;\n    }\n\n    /** \n     * Gets the next entry in the bucket.\n     * \n     * @return the next entry in the bucket\n     */\nprotected org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> next() {\n        return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>));\n    }\n}","position":"org.apache.commons.collections4.map.AbstractReferenceMap:592","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * The Map.Entry for the StaticBucketMap.\n */\nprivate static final class Node<K, V> implements java.util.Map.Entry<K, V> , org.apache.commons.collections4.KeyValue<K, V> {\n    protected K key;\n\n    protected V value;\n\n    protected org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> next;\n\n    public K getKey() {\n        return K;\n    }\n\n    public V getValue() {\n        return V;\n    }\n\n    @java.lang.Override\n    public int hashCode() {\n        return ((K) == null ? 0 : K.hashCode()) ^ ((V) == null ? 0 : V.hashCode());\n    }\n\n    @java.lang.Override\n    public boolean equals(final java.lang.Object obj) {\n        if (java.lang.Object == this) {\n            return true;\n        } \n        if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n            return false;\n        } \n        final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(java.lang.Object));\n        return ((K) == null ? (java.util.Map.Entry<?, ?>.getKey()) == null : K.equals(java.util.Map.Entry<?, ?>.getKey())) && ((V) == null ? (java.util.Map.Entry<?, ?>.getValue()) == null : V.equals(java.util.Map.Entry<?, ?>.getValue()));\n    }\n\n    public V setValue(final V obj) {\n        final V V = V;\n        V = V;\n        return V;\n    }\n}","position":"org.apache.commons.collections4.map.StaticBucketMap:442","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:119","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(\"Map is empty\")","position":"org.apache.commons.collections4.map.AbstractLinkedMap:176","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:257","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().comparator()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:100","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.decorated().valueComparator()","position":"org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator:73","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (java.lang.Object instanceof org.apache.commons.collections4.SplitMapUtils.WrappedGet) && (((org.apache.commons.collections4.SplitMapUtils.WrappedGet<?, ?>)(java.lang.Object)).org.apache.commons.collections4.Get<?, ?>.equals(this.org.apache.commons.collections4.Get<K, V>))","position":"org.apache.commons.collections4.SplitMapUtils:76","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"CtReturnImpl"},"status":-2},{"failures":[235,236,237,238,239,240,241,242,243,244,245,246],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = 1","position":"org.apache.commons.collections4.map.Flat3Map:484","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Transformer must not be null\")","position":"org.apache.commons.collections4.collection.TransformedCollection:111","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:133","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()","position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:205","type":"CtReturnImpl"},"status":-2},{"failures":[529,530,531,532,533,534,44,56,391,392,393,67,535,536,537,538,79,420,419,422,423,424,81,425,426,539,427,421,90,457,458,459,117,540,541,126,542,543,544,545,546,547,485,493,494,495,149,548,168,549,550,551,203,552,553],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.set.UnmodifiableSet:91","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:114","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:110","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)","position":"org.apache.commons.collections4.map.AbstractHashedMap:566","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.IteratorChain:147","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>","position":"org.apache.commons.collections4.map.TransformedSortedMap:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.ClosureTransformer<T>(org.apache.commons.collections4.Closure<? super T>)","position":"org.apache.commons.collections4.functors.ClosureTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().removeAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:140","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"normalMap":"map"},"name":"add","transplant":{"sourceCode":"this.java.util.Map<K, V> = new java.util.LinkedHashMap<K, V>()","position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:95","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.map.DefaultedMap:194","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.Closure<? super E> == null) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n} ","position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toString()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:159","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.InstanceofPredicate(java.lang.Class<?>)","position":"org.apache.commons.collections4.functors.InstanceofPredicate:49","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final E E : E[]) {\n    org.apache.commons.collections4.list.TransformedList<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}","position":"org.apache.commons.collections4.list.TransformedList:86","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:356","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"closure":"closure"},"name":"add","transplant":{"sourceCode":"return ((org.apache.commons.collections4.Closure<T>)(org.apache.commons.collections4.Closure<? super T>))","position":"org.apache.commons.collections4.functors.FunctorUtils:158","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>));\n} ","position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl"},"status":-2},{"failures":[554],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"))","position":"org.apache.commons.collections4.bag.TreeBag:87","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator<K, V>.setValue(V)","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:675","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(E)","position":"org.apache.commons.collections4.list.LazyList:131","type":"CtInvocationImpl"},"status":-2},{"failures":[555,556],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:86","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:144","type":"CtReturnImpl"},"status":-2},{"failures":[2,4,5,6,557,8,10,11,12,13],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 0","position":"org.apache.commons.collections4.comparators.ComparatorChain:292","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) - 1","position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySetIterator<K, V>(this)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:482","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().iterator())","position":"org.apache.commons.collections4.list.FixedSizeList:108","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"try {\n    return ((org.apache.commons.collections4.map.SingletonMap<K, V>)(java.lang.Object.clone()));\n} catch (final java.lang.CloneNotSupportedException java.lang.CloneNotSupportedException) {\n    throw new java.lang.InternalError();\n}","position":"org.apache.commons.collections4.map.SingletonMap:520","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Closure<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} ","position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtIfImpl"},"status":-2},{"failures":[558],"variableMapping":{"isFirst":"result","index":"index","end":"index"},"name":"replace","transplant":{"sourceCode":"return boolean || (int != int)","position":"org.apache.commons.collections4.queue.CircularFifoQueue:361","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)) | boolean","position":"org.apache.commons.collections4.list.GrowthList:157","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"E = org.apache.commons.collections4.list.TreeList.AVLNode<E>.E","position":"org.apache.commons.collections4.list.TreeList:640","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:405","type":"CtLocalVariableImpl"},"status":-2},{"failures":[559,560],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<K, V> = java.util.Iterator<java.util.Map.Entry<K, V>>.next()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:84","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.Transformer<? super T, ? extends T>","position":"org.apache.commons.collections4.functors.TransformedPredicate:104","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.Queue<E>)(org.apache.commons.collections4.collection.PredicatedCollection<E>.decorated()))","position":"org.apache.commons.collections4.queue.PredicatedQueue:84","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null))","position":"org.apache.commons.collections4.list.GrowthList:184","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")","position":"org.apache.commons.collections4.map.FixedSizeMap:135","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl"},"status":-2},{"failures":[224,225,226],"variableMapping":{"element":"root"},"name":"replace","transplant":{"sourceCode":"if (null == E) {\n    throw new java.lang.NullPointerException(\"Attempted to add null object to queue\");\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:226","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:147","type":"CtInvocationImpl"},"status":-1},{"failures":[561],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.util.List<E>.size()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:251","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.List<E>.size()) - 1","position":"org.apache.commons.collections4.iterators.LoopingListIterator:172","type":"CtReturnImpl"},"status":-1},{"failures":[330],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.ListIterator<E>.set(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:145","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(java.lang.Object)","position":"org.apache.commons.collections4.map.Flat3Map:1143","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>>.remove()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:99","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet(this)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1921","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().entrySet()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:90","type":"CtReturnImpl"},"status":-2},{"failures":[9],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterListIterator:271","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} ","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:897","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().keySet()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:102","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int = int = int = 0","position":"org.apache.commons.collections4.map.Flat3Map:591","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)--","position":"org.apache.commons.collections4.iterators.FilterListIterator:150","type":"CtUnaryOperatorImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":487,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":504,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":111,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":264,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":545,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":551,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":94,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRetainAll":449,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":80,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":361,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":549,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":56,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":46,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":524,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":525,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":97,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":526,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":315,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":175,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":334,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":162,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":403,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":313,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapHashCode":429,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":235,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":364,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":82,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":205,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":58,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":87,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":537,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":339,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":242,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":512,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":382,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":457,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFalsePredicate":557,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":287,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":301,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":496,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":2,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":257,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":518,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":72,"org.apache.commons.collections4.ListUtilsTest.testLazyList":0,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":471,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":81,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":192,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":202,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":148,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":183,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":387,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":177,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":398,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":269,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":84,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":188,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":485,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":123,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":302,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":481,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":203,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":370,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":414,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":164,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":534,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":4,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":306,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":100,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":404,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":117,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":392,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":406,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":470,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":40,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":213,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":337,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":120,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":130,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":230,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":299,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveAll":445,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":478,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":86,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":544,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":231,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":307,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":103,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":191,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":523,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":371,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":282,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":246,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":407,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":144,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":454,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":206,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":455,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":23,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":453,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":114,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":546,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":234,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":349,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":362,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":189,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":443,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":442,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":441,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":19,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":293,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":331,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":310,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":181,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":412,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":179,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":252,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":76,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":167,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testFullMapCompatibility":430,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":531,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":498,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":397,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains1":438,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains2":439,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":244,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains3":440,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":105,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":41,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":365,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":500,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":330,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":5,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":159,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":265,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":65,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":110,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":92,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":34,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":187,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":141,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":522,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":152,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":411,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":142,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":228,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":254,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":479,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":149,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":197,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":277,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":145,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":460,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":311,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":461,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":462,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":180,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullKey":432,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":513,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":245,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":543,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":220,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":380,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":363,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":156,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformer":212,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":297,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":207,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":511,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":510,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":509,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":274,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":319,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":95,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":266,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":286,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":127,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":190,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":506,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":176,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":507,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":508,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":102,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":427,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":16,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":121,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":115,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":161,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":393,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":468,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":107,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":296,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":467,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":466,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":281,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":494,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":218,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":9,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":219,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":322,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":434,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":195,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":69,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":515,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":50,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":343,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":163,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":476,"org.apache.commons.collections4.bag.TreeBagTest.testCollections265":554,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":147,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":345,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":157,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":424,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":113,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":262,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":79,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":465,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":408,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":420,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":204,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":68,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":419,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":186,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":275,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":199,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":303,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":194,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":358,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":20,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":291,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":488,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":108,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":475,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_remove":248,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":261,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":280,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":474,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":417,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":126,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":499,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":396,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":51,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":353,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":395,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":249,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":425,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":317,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":394,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":35,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":336,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":538,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":292,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":139,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":63,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":66,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":547,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":267,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":521,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":155,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":359,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":247,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetClearChangesMap":436,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":516,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":208,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":415,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":129,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":561,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":283,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":116,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":140,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":256,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":143,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":456,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":530,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":351,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":384,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":333,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":288,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":119,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":388,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":276,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":344,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":61,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":539,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":174,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":372,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":459,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":373,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":15,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":374,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":535,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":450,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":541,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":71,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":271,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":258,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":150,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesClearChangesMap":435,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":134,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":480,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":284,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":7,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":389,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":1,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":210,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":201,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":239,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":33,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":553,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":57,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":289,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":294,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveAll":448,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":193,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":70,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":59,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":278,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":273,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":377,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":542,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":486,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":399,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":135,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":60,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":165,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":405,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":503,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":172,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":27,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":552,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":285,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":290,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":128,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":25,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":47,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":125,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":350,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":536,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":29,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":347,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":318,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetClearChangesMap":437,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":11,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":184,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":469,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":493,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":376,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":17,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":472,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":483,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":3,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":74,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":182,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":44,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":211,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":309,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":43,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":260,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":444,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":555,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":237,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":279,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":559,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":166,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":421,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":495,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":402,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":520,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":556,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":548,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":400,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":401,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":160,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":6,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":232,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":375,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":501,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":341,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":321,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":153,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":251,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":106,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":328,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":482,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":171,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":385,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":360,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":259,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":253,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":314,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRetainAll":446,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":26,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":413,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":335,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":304,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":73,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":418,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":540,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":137,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":447,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":473,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":489,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":233,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":502,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":229,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":514,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":55,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":223,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":492,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":491,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":490,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":133,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":308,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":136,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":178,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":560,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":329,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":323,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":366,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":217,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":367,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":21,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":216,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":368,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":221,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":451,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":464,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":484,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":519,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullValue":433,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":452,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":98,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":391,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":10,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":209,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMakeMap":428,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":45,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":379,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":238,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":89,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":227,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":325,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":497,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":558,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":342,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":198,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":352,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":85,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":154,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":338,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":320,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":31,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":477,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":52,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":39,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":295,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":423,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":36,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":53,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":243,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":463,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":378,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":326,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":550,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":517,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":90,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":528,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":240,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":312,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":124,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":533,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":91,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":416,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":28,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":327,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":131,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":236,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":346,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":104,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":369,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":118,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":355,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":422,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":78,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":532,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":356,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":409,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":316,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":386,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":77,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":112,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":196,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":224,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":390,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":225,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":226,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":354,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":263,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":241,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":340,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":122,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":132,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":357,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":300,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":431,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":332,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":168,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":268,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":298,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":324,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":13,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":12,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":48,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":348,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":38,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":75,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":99,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":200,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":18,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":24,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":54,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":527,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":272,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":426,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":109,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":101,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":529,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":410,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":270,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":88,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":146,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2":215,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":250,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":96,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":214,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":93,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":305,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":62,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":255,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":138,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":381,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":151,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":158}}]
