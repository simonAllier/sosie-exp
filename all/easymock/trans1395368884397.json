[{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[12,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:191","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[24,25,26,27,15,28,29,30,31,32,33,34,35,36,37,38,39],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:480","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:497","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T> , this)","type":"CtReturnImpl"},"failures":[40,41,42,43,44,45,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[47],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[48,14,49,50,51,52,53,54,55,56,57,58,18,59,60,61,62,63,64,19,65,66,67],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[68],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[69,70,71],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[72,73,74,75,76,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[48,14,49,79,80,81,82,56,83,84,85,86,87,88,57,58,18,89,64,19,65,66,67,90,91,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches"}},{"position":"org.easymock.internal.Range:36","failures":[93,94,95,72,96,97,98,99,100,101,40,41,102,42,103,104,105,106,107,108,109,110,111,0,1,12,2,112,113,3,4,114,115,5,116,117,118,119,120,121,122,123,124,48,125,14,49,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,24,25,26,27,174,6,7,13,8,175,176,9,10,177,178,11,179,180,181,182,183,184,73,185,74,75,76,186,187,188,189,190,191,192,193,194,195,196,197,198,199,15,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,79,80,81,82,230,231,232,233,234,235,236,237,238,239,240,241,242,243,43,244,44,245,246,247,248,249,250,251,252,253,254,255,256,257,16,258,56,83,259,260,261,262,263,84,85,264,17,265,266,267,268,269,270,45,271,272,273,274,275,276,277,278,279,46,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,57,58,18,296,297,298,299,300,301,302,303,62,63,304,305,306,307,308,309,310,311,312,313,314,89,64,315,19,65,316,317,28,29,30,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,31,32,33,34,35,36,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,68,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,77,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,66,413,414,415,416,417,418,419,420,421,422,37,423,424,425,426,427,428,429,20,38,430,21,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,78,477,478,479,480,39,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,22,67,501,90,502,503,91,92,23],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[68,354],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[93,94,95,72,96,97,98,99,101,102,42,103,104,105,106,107,108,109,110,112,118,119,120,124,48,125,14,49,126,127,128,129,130,131,132,133,134,136,137,138,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,162,167,171,173,26,175,73,185,74,76,186,187,188,189,190,191,192,194,195,196,197,198,199,15,200,201,202,203,205,206,207,208,209,210,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,233,234,242,43,44,16,258,56,83,259,260,261,262,84,85,264,17,268,45,46,285,57,58,18,296,297,298,299,300,305,306,307,308,309,310,311,312,314,89,64,315,19,65,316,35,344,345,346,347,349,350,351,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,387,77,389,391,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,66,415,418,419,422,429,20,38,430,21,431,432,433,434,435,436,438,439,441,442,443,444,445,446,447,456,457,459,471,497,499,500,22,67,90,502,503,91,92,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[212,422],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[168],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[504],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[328],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[140,141,142,143,150,151,202,203,205,206,207,208,209,210,211,212,221,222,226,227],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[133,137,43,251,332,333,339,465,466,467],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[102,105,111,0,1,4,5,174,6,7,10,11],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":203,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":22,"org.easymock.tests2.UsageTest.argumentsOrdered":85,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":483,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":260,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":102,"org.easymock.tests2.DelegateToTest.testReturnException":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":32,"org.easymock.tests.MockingTest.testPartialClassMocking":456,"org.easymock.tests.MockClassControlTest.testToString":465,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":229,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":492,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":393,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":45,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":86,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":119,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":210,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":429,"org.easymock.tests2.UsageTest.wrongArguments":83,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":5,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":294,"org.easymock.samples.ExampleTest.answerVsDelegate":72,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":339,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":461,"org.easymock.tests2.UsageConstraintsTest.testNull":206,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":157,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":470,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":195,"org.easymock.tests2.CaptureTest.testPrimitive":143,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":21,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":412,"org.easymock.tests.UsageTest.moreThanOneArgument":67,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":450,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":417,"org.easymock.tests.UsageTest.argumentsOrdered":92,"org.easymock.tests.UsageVarargTest.varargIntAccepted":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":488,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":296,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":236,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":178,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":253,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":300,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":112,"org.easymock.tests.ReplayStateInvalidUsageTest.times":383,"org.easymock.tests2.DependencyTest.testClassMocking":116,"org.easymock.tests2.AnswerTest.answer":230,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":490,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":183,"org.easymock.tests2.CaptureTest.testAnd":140,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":336,"org.easymock.tests2.UsageTest.strictResetToDefault":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":165,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":449,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":499,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":190,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":421,"org.easymock.tests2.DelegateToTest.testDelegate":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":408,"org.easymock.tests.LimitationsTest.mockFinalMethod":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":428,"org.easymock.tests2.DependencyTest.testClassMockingSupport":117,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":62,"org.easymock.tests2.CaptureTest.testCapture1_2446744":144,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":406,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":181,"org.easymock.tests.UsageThrowableTest.throwError":305,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":377,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":338,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":11,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":287,"org.easymock.samples.PartialClassMockTest.testGetArea":42,"org.easymock.tests.MockingTest.testInterfaceMocking":458,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":297,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":290,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":394,"org.easymock.tests2.UsageTest.niceToStrict":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":275,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":475,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":71,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":242,"org.easymock.tests2.MockBuilderTest.testCreateMock":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":282,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":402,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":51,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":191,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":335,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":474,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":292,"org.easymock.tests.UsageOverloadedMethodTest.overloading":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":284,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":389,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":216,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":431,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":366,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":215,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":149,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":437,"org.easymock.tests.MockClassControlTest.testEquals":469,"org.easymock.tests2.EasyMockSupportClassTest.testAll":268,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":410,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":426,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":182,"org.easymock.tests2.CaptureTest.testCaptureAll":141,"org.easymock.tests.MockNameTest.defaultName":423,"org.easymock.tests2.UsageConstraintsTest.testMatches":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":451,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":375,"org.easymock.samples.ExampleTest.voteForRemovals":99,"org.easymock.tests.UsageVarargTest.allKinds":445,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":57,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":427,"org.easymock.samples.BasicClassMockTest.testPrintContent":104,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":311,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":36,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":9,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":75,"org.easymock.tests2.UsageConstraintsTest.greaterThan":219,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":269,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":498,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":168,"org.easymock.samples.ExampleTest.voteForRemoval":96,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":326,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":169,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":107,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":340,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":254,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":160,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":471,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":16,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":39,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":188,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":266,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":31,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":184,"org.easymock.tests2.CaptureTest.testCaptureFirst":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":480,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":189,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":17,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":392,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":362,"org.easymock.tests2.CaptureTest.testCapture2_2446744":152,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":109,"org.easymock.tests2.UsageTest.moreThanOneArgument":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":491,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":248,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":444,"org.easymock.tests.GenericTest.testBridgedEquals":354,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":349,"org.easymock.tests.UsageExpectAndReturnTest.longType":358,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":424,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":186,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":411,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":224,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":288,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":409,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":448,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":29,"org.easymock.tests.UsageCallCountTest.tooManyCalls":350,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":283,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":363,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":115,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":398,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":310,"org.easymock.tests.MockingTest.testNiceClassMocking":462,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":132,"org.easymock.tests.MockingTest.testClassMocking":454,"org.easymock.tests2.UsageConstraintsTest.testContains":214,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":343,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":26,"org.easymock.tests2.UsageConstraintsTest.testFind":205,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":433,"org.easymock.tests.MockTypeTest.fromEasyMockClass":337,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":173,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":313,"org.easymock.tests.UsageExpectAndReturnTest.object":365,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":114,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":194,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":439,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":330,"org.easymock.tests.UsageTest.exactCallCountByLastCall":23,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":479,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":418,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":301,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":121,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":434,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":371,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":77,"org.easymock.tests.MockClassControlTest.testHashCode":468,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":6,"org.easymock.tests2.EasyMockSupportTest.testVerify":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":277,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":419,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":473,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":387,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":180,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":179,"org.easymock.tests.UsageVarargTest.varargCharAccepted":438,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":318,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":496,"org.easymock.tests2.UsageTest.openCallCountByLastCall":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":69,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":197,"org.easymock.tests.DefaultClassInstantiatorTest.object":319,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":472,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":328,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":61,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":278,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":308,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":12,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":174,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":467,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":166,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":399,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":372,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":28,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":466,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":285,"org.easymock.tests2.UsageTest.resumeIfFailure":264,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":334,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":34,"org.easymock.tests2.StubTest.stubWithReturnValue":15,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":244,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":225,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":364,"org.easymock.tests2.SerializationTest.testAllMockedMethod":129,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":489,"org.easymock.samples.SupportTest.voteForRemovals":94,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":13,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":405,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":495,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":231,"org.easymock.tests.UsageExpectAndThrowTest.object":403,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":303,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":222,"org.easymock.tests2.DelegateToTest.testWrongClass":74,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":446,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":447,"org.easymock.samples.ConstructorCalledMockTest.testTax":40,"org.easymock.tests.UsageStrictMockTest.range":19,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":256,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":193,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":404,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":43,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":385,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":265,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":293,"org.easymock.tests2.CaptureTest.testCaptureNone":148,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":291,"org.easymock.tests.UsageUnorderedTest.message":66,"org.easymock.tests.UsageVerifyTest.twoReturns":18,"org.easymock.tests.UsageVarargTest.varargByteAccepted":443,"org.easymock.tests2.ThreadingTest.testThreadSafe":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":280,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":347,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":103,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":331,"org.easymock.tests2.CaptureTest.testCapture_2617107":142,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":493,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":430,"org.easymock.tests2.UsageConstraintsTest.any":212,"org.easymock.tests2.StubTest.stub":199,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":382,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":494,"org.easymock.tests.UsageExpectAndThrowTest.longType":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":33,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":323,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":381,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":125,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":175,"org.easymock.tests2.SerializationTest.testClass":127,"org.easymock.tests.LimitationsTest.mockNativeMethod":415,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":353,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":374,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":1,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":126,"org.easymock.tests2.NameTest.nameForMocksControl":82,"org.easymock.tests2.MockedExceptionTest.testMockedException":25,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":270,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":503,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":459,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":397,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":172,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":154,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":44,"org.easymock.tests.MockingTest.testNicePartialClassMocking":457,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":159,"org.easymock.tests2.CompareToTest.testCompareEqual":505,"org.easymock.tests2.CaptureTest.testCaptureLast":147,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":111,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":63,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":138,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":209,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":223,"org.easymock.tests.MockingTest.testTwoMocks":455,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":139,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":355,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":401,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":84,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":227,"org.easymock.samples.ExampleTest.removeNonExistingDocument":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":3,"org.easymock.tests.UsageStrictMockTest.differentMethods":65,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":7,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":321,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":108,"org.easymock.tests2.ConstraintsToStringTest.andToString":54,"org.easymock.tests2.MockBuilderTest.testCreateMockString":250,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":463,"org.easymock.tests.UsageExpectAndThrowTest.floatType":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":271,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":267,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":233,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":122,"org.easymock.tests.UsageVerifyTest.twoThrows":58,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":46,"org.easymock.samples.ExampleTest.voteAgainstRemoval":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":484,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":289,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":167,"org.easymock.tests.LimitationsTest.privateConstructor":414,"org.easymock.tests2.UsageConstraintsTest.testNotNull":226,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":24,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":312,"org.easymock.tests2.UsageTest.defaultResetToNice":263,"org.easymock.samples.ExampleTest.voteAgainstRemovals":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":485,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":370,"org.easymock.tests.UsageVarargTest.differentLength":440,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":0,"org.easymock.tests2.CallbackTest.callback":130,"org.easymock.tests2.UsageConstraintsTest.equals":204,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":163,"org.easymock.tests.UsageTest.openCallCountByLastCall":502,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":504,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":38,"org.easymock.tests.UsageCallCountTest.tooFewCalls":345,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":134,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":295,"org.easymock.tests.UsageThrowableTest.throwCheckedException":309,"org.easymock.tests.MockingTest.testStrictClassMocking":453,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":59,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":137,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":37,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":113,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":384,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":136,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":235,"org.easymock.tests.ObjectMethodsTest.testHashCode":329,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":110,"org.easymock.tests2.NameTest.nameForNiceMock":81,"org.easymock.tests2.DependencyTest.testInterfaceMocking":118,"org.easymock.samples.ExampleTest.addDocument":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":281,"org.easymock.tests2.DelegateToTest.testStubDelegate":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":286,"org.easymock.tests2.AnswerTest.stubAnswer":234,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":64,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":245,"org.easymock.tests.UsageVarargTest.varargLongAccepted":442,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":482,"org.easymock.tests.UsageExpectAndReturnTest.floatType":357,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":373,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":120,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":41,"org.easymock.tests2.ConstraintsToStringTest.orToString":50,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":390,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":177,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":220,"org.easymock.tests.UsageThrowableTest.noUpperLimit":306,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":201,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":251,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":145,"org.easymock.tests2.SerializationTest.test":128,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":320,"org.easymock.tests2.UsageConstraintsTest.testSame":207,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":356,"org.easymock.samples.SupportTest.addDocument":93,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":135,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":272,"org.easymock.tests.GenericTest.testPackageScope":351,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":10,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":460,"org.easymock.tests2.NameTest.nameForMock":79,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":367,"org.easymock.tests2.UsageStrictMockTest.differentMethods":49,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":249,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":164,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":359,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":407,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":327,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":500,"org.easymock.tests2.MockedExceptionTest.testRealException":27,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":487,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":257,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":486,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":48,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":386,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":20,"org.easymock.tests2.NameTest.nameForStrictMock":80,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":241,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":171,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":70,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":158,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":255,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":87,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":221,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":322,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":238,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":228,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":481,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":187,"org.easymock.tests2.CaptureTest.testCaptureRightOne":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":276,"org.easymock.tests2.UsageConstraintsTest.testOr":208,"org.easymock.tests.UsageRangeTest.combination":497,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":155,"org.easymock.tests.UsageTest.wrongArguments":90,"org.easymock.tests2.MockBuilderTest.testWithConstructor":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":273,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":464,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":368,"org.easymock.tests.UsageVarargTest.varargShortAccepted":441,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":324,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":348,"org.easymock.tests2.UsageConstraintsTest.cmpTo":213,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":477,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":262,"org.easymock.tests2.CaptureTest.testCaptureFromStub":151,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":376,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":239,"org.easymock.tests.UsageTest.unexpectedCallWithArray":501,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":89,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":346,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":369,"org.easymock.tests2.UsageConstraintsTest.constraints":202,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":315,"org.easymock.samples.ExampleTest.addAndChangeDocument":101,"org.easymock.tests2.ConstraintsToStringTest.notToString":52,"org.easymock.tests.UsageStrictMockTest.testVerify":317,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":105,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":314,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":425,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":146,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":298,"org.easymock.tests.LimitationsTest.abstractClass":413,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":361,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":299,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":435,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":88,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":192}}]
