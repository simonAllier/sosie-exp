[{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,1],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:266","sourceCode":"return ","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[48,49,50,51,52,53,54,55,56,57,58],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"classConstructor"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[59,60,61,62],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[7,8,63,39,40,41,42,43,44,45,46,64,65,66,1],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[67],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[9,10,11,12,13,40,41,42,43,45,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[7,8,63,39,40,68,41,42,43,44,46,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[52,54,56],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,11,83,84,85,12,17,20,30,36,39,86,87,88,89,90],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,1],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[91,92,93,69,70,71,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,72,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,73,74,148,149,150,151,152,153,154,155,75,156,76,77,157,78,158,159,160,161,162,163,164,165,166,167,168,169,79,170,48,171,172,173,174,175,176,50,177,178,80,179,180,51,52,181,53,182,54,55,183,184,185,186,187,60,188,189,190,191,57,192,61,193,58,194,62,81,82,11,83,84,85,12,17,20,30,36,39,195,196,197,198,199,200,201,202,203,204,205,86,87,88,89,90,206,207,208,209,210,211,212,213,214,215,216,217,1,2,218],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:181","sourceCode":"for (final java.lang.reflect.Field java.lang.reflect.Field : java.util.List<java.lang.reflect.Field>) {\n    final org.easymock.internal.InjectionTarget org.easymock.internal.InjectionTarget = org.easymock.internal.Injector.org.easymock.internal.Injector.injectionTargetWithField(java.lang.reflect.Field);\n    if (org.easymock.internal.InjectionTarget == null) {\n        continue;\n    } \n    final org.easymock.internal.Injection org.easymock.internal.Injection = org.easymock.internal.Injector.org.easymock.internal.Injector.findUniqueAssignable(java.util.List<org.easymock.internal.Injection>, org.easymock.internal.InjectionTarget);\n    if (org.easymock.internal.Injection == null) {\n        continue;\n    } \n    org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection);\n}","type":"CtForEachImpl"},"failures":[219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[91,92,242,243,93,244,245,246,247,248,249,69,70,250,71,251,252,253,94,95,254,255,256,257,258,96,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,97,284,98,99,285,286,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,120,72,121,122,123,124,125,126,127,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,128,129,130,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,67,131,384,132,385,133,386,134,135,387,136,137,138,139,140,141,142,388,389,390,391,143,144,392,393,145,146,394,395,147,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,73,426,427,219,220,428,429,74,7,8,430,148,149,431,150,151,432,152,433,434,435,436,437,438,439,440,441,442,443,153,154,444,155,75,156,76,77,157,78,445,446,158,63,447,448,159,160,161,449,450,221,222,223,451,224,162,225,226,227,228,229,230,452,453,454,455,231,232,233,456,234,163,235,236,237,238,239,240,457,458,164,459,165,166,460,167,168,169,79,170,48,171,49,172,173,461,462,174,175,176,50,463,177,178,464,465,466,80,467,468,469,179,180,51,52,470,181,53,182,54,55,183,56,184,185,186,187,60,188,189,190,191,57,192,61,471,193,58,194,62,81,82,11,83,472,84,85,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,473,39,40,68,195,474,475,476,196,477,197,198,199,478,200,479,201,202,203,480,481,204,205,482,41,86,483,42,484,87,485,88,43,89,486,44,487,90,46,488,206,207,208,209,210,211,212,213,214,215,216,217,489,1,2,3,490,491,218,492,493,494,495,496,497,498,499,500],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[7,8,63,39,40,41,42,43,44,45,46,64,65,66,1],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:189","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.reflect.Method.getParameterTypes()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[39,40,501,502,503,504,43,44,1],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[394,470,480],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:317","failures":[261,262,298,299],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.Error","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[91,92,242,243,93,245,69,70,71,94,95,254,256,257,96,260,261,262,263,275,276,277,278,279,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,287,288,289,290,291,297,298,299,120,72,121,122,123,124,125,126,127,317,318,319,322,329,330,331,332,333,334,128,129,130,352,375,381,383,131,132,133,386,134,135,387,136,137,138,139,140,141,142,388,389,390,391,143,144,145,146,147,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,73,427,74,7,7,8,8,148,149,431,150,151,152,434,153,154,444,155,75,156,76,77,157,78,158,159,160,161,162,163,164,165,166,167,168,169,79,170,48,171,172,173,174,175,176,50,463,177,178,464,465,466,80,467,468,469,179,180,51,52,181,53,182,54,55,183,184,185,186,187,60,188,189,190,191,57,192,61,193,58,194,62,81,82,11,83,84,85,12,17,20,30,36,39,195,474,475,476,196,477,197,198,199,200,201,202,203,204,205,86,87,88,89,90,206,207,208,209,210,211,212,213,214,215,216,217,1,2,490,491,218,492,498,500],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[91,92,242,243,93,244,245,246,247,248,249,69,70,250,71,251,252,253,94,95,254,255,256,257,258,96,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,97,284,98,99,285,286,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,120,72,121,122,123,124,125,126,127,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,128,129,130,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,67,131,384,132,385,133,386,134,135,387,136,137,138,139,140,141,142,388,389,390,391,143,144,392,393,145,146,394,395,147,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,73,426,427,219,220,428,429,74,7,8,430,148,149,431,150,151,432,152,433,434,435,436,437,438,439,440,441,442,443,153,154,444,155,75,156,76,77,157,78,445,446,158,63,447,448,159,160,161,449,450,221,222,223,451,224,162,225,226,227,228,229,230,452,453,454,455,231,232,233,456,234,163,235,236,237,238,239,240,457,458,164,459,165,166,460,167,168,169,79,170,48,171,49,172,173,461,462,174,175,176,50,463,177,178,464,465,466,80,467,468,469,179,180,51,52,470,181,53,182,54,55,183,56,184,185,186,187,60,188,189,190,191,57,192,61,471,193,58,194,62,81,82,11,83,472,84,85,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,473,39,40,68,195,474,475,476,196,477,197,198,199,478,200,479,201,202,203,480,481,204,205,482,41,86,483,42,484,87,485,88,43,89,486,44,487,90,46,488,206,207,208,209,210,211,212,213,214,215,216,217,489,1,2,3,490,491,218,492,493,494,495,496,497,498,499,500],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[9,10,11,12,13,40,41,42,43,45,46],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":52,"org.easymock.tests2.UsageTest.argumentsOrdered":481,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":143,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":216,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":369,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":479,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":219,"org.easymock.tests2.DelegateToTest.testReturnException":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":330,"org.easymock.tests.MockingTest.testPartialClassMocking":69,"org.easymock.tests.MockClassControlTest.testToString":418,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":493,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":390,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":396,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":20,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":154,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":501,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":183,"org.easymock.tests2.UsageTest.wrongArguments":478,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":91,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":240,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":266,"org.easymock.samples.ExampleTest.answerVsDelegate":431,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":305,"org.easymock.tests2.UsageConstraintsTest.testNull":53,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":252,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":77,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":423,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":215,"org.easymock.tests2.CaptureTest.testPrimitive":172,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":415,"org.easymock.tests.UsageTest.moreThanOneArgument":144,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":76,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":277,"org.easymock.tests.UsageTest.argumentsOrdered":395,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":287,"org.easymock.tests.UsageVarargTest.varargIntAccepted":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":120,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":482,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":229,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":361,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":123,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":163,"org.easymock.tests.ReplayStateInvalidUsageTest.times":355,"org.easymock.tests2.DependencyTest.testClassMocking":442,"org.easymock.tests2.AnswerTest.answer":195,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":376,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":455,"org.easymock.tests2.CaptureTest.testAnd":48,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":302,"org.easymock.tests2.UsageTest.strictResetToDefault":198,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":448,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":42,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":276,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":210,"org.easymock.tests2.DelegateToTest.testDelegate":469,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":411,"org.easymock.tests.LimitationsTest.mockFinalMethod":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":333,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":296,"org.easymock.tests2.DependencyTest.testClassMockingSupport":443,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":244,"org.easymock.tests2.CaptureTest.testCapture1_2446744":173,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":446,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":409,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":453,"org.easymock.tests.UsageThrowableTest.throwError":135,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":349,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":304,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":230,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":279,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":64,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":38,"org.easymock.samples.PartialClassMockTest.testGetArea":74,"org.easymock.tests.MockingTest.testInterfaceMocking":250,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":350,"org.easymock.tests2.CompareToTest.testLessOrEqual":47,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":72,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":318,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":25,"org.easymock.tests2.UsageTest.niceToStrict":200,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":273,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":359,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":87,"org.easymock.tests2.MockBuilderTest.testCreateMock":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":33,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":237,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":405,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":211,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":301,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":262,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":264,"org.easymock.tests.UsageOverloadedMethodTest.overloading":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":29,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":60,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":257,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":111,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":187,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":176,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":338,"org.easymock.tests.MockClassControlTest.testEquals":422,"org.easymock.tests2.EasyMockSupportClassTest.testAll":17,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":384,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":413,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":454,"org.easymock.tests2.CaptureTest.testCaptureAll":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":294,"org.easymock.tests.MockNameTest.defaultName":280,"org.easymock.tests2.UsageConstraintsTest.testMatches":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":278,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":347,"org.easymock.samples.ExampleTest.voteForRemovals":152,"org.easymock.tests.UsageVarargTest.allKinds":346,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":133,"org.easymock.samples.BasicClassMockTest.testPrintContent":429,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":295,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":140,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":457,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":468,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":226,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":334,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":504,"org.easymock.tests2.UsageConstraintsTest.greaterThan":190,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":18,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":125,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":161,"org.easymock.samples.ExampleTest.voteForRemoval":150,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":316,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":449,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":168,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":306,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":438,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":445,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":427,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":197,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":208,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":15,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":329,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":465,"org.easymock.tests2.CaptureTest.testCaptureFirst":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":209,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":205,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":259,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":107,"org.easymock.tests2.CaptureTest.testCapture2_2446744":177,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":79,"org.easymock.tests2.UsageTest.moreThanOneArgument":199,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":377,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":345,"org.easymock.tests.GenericTest.testBridgedEquals":385,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":327,"org.easymock.tests.UsageExpectAndReturnTest.longType":103,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":206,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":292,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":414,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":471,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":263,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":412,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":275,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":298,"org.easymock.tests.UsageCallCountTest.tooManyCalls":328,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":239,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":401,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":139,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":82,"org.easymock.tests.MockingTest.testNiceClassMocking":253,"org.easymock.tests.MockingTest.testClassMocking":248,"org.easymock.tests2.UsageConstraintsTest.testContains":186,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":321,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":218,"org.easymock.tests2.UsageConstraintsTest.testFind":181,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":130,"org.easymock.tests.MockTypeTest.fromEasyMockClass":303,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":500,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":281,"org.easymock.tests.UsageExpectAndReturnTest.object":110,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":158,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":238,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":502,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":340,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":271,"org.easymock.tests.UsageTest.exactCallCountByLastCall":147,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":389,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":288,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":40,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":116,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":335,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":256,"org.easymock.tests.MockClassControlTest.testHashCode":421,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":222,"org.easymock.tests2.EasyMockSupportTest.testVerify":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":27,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":289,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":254,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":261,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":452,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":473,"org.easymock.tests.UsageVarargTest.varargCharAccepted":339,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":308,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":382,"org.easymock.tests2.UsageTest.openCallCountByLastCall":201,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":5,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":217,"org.easymock.tests.DefaultClassInstantiatorTest.object":309,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":260,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":269,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":28,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":221,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":420,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":402,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":117,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":297,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":36,"org.easymock.tests2.UsageTest.resumeIfFailure":204,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":300,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":436,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":332,"org.easymock.tests2.StubTest.stubWithReturnValue":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":109,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":193,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":375,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":66,"org.easymock.samples.SupportTest.voteForRemovals":148,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":67,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":451,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":408,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":381,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":474,"org.easymock.tests.UsageExpectAndThrowTest.object":406,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":391,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":192,"org.easymock.tests2.DelegateToTest.testWrongClass":467,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":94,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":95,"org.easymock.tests.UsageStrictMockTest.range":98,"org.easymock.samples.ConstructorCalledMockTest.testTax":7,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":440,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":213,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":81,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":407,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":88,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":14,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":265,"org.easymock.tests2.CaptureTest.testCaptureNone":175,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":319,"org.easymock.tests.UsageUnorderedTest.message":383,"org.easymock.tests.UsageVerifyTest.twoReturns":134,"org.easymock.tests.UsageVarargTest.varargByteAccepted":344,"org.easymock.tests2.ThreadingTest.testThreadSafe":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":31,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":325,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":428,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":272,"org.easymock.tests2.CaptureTest.testCapture_2617107":49,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":246,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":379,"org.easymock.tests2.UsageConstraintsTest.any":184,"org.easymock.tests2.StubTest.stub":444,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":354,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":299,"org.easymock.tests.UsageExpectAndThrowTest.longType":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":380,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":313,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":353,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":459,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":162,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests.LimitationsTest.mockNativeMethod":73,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":132,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":119,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":233,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":460,"org.easymock.tests2.NameTest.nameForMocksControl":497,"org.easymock.tests2.MockedExceptionTest.testMockedException":491,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":19,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":146,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":499,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":400,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":71,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":75,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":89,"org.easymock.tests.MockingTest.testNicePartialClassMocking":70,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":78,"org.easymock.tests2.CaptureTest.testCaptureLast":174,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":231,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":245,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":12,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":55,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":61,"org.easymock.tests.MockingTest.testTwoMocks":249,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":404,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":480,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":194,"org.easymock.samples.ExampleTest.removeNonExistingDocument":433,"org.easymock.tests.UsageStrictMockTest.differentMethods":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":236,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":223,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":311,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":169,"org.easymock.tests2.MockBuilderTest.testCreateMockString":488,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":416,"org.easymock.tests.UsageExpectAndThrowTest.floatType":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":21,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":16,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":476,"org.easymock.tests.UsageVerifyTest.twoThrows":386,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":68,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":30,"org.easymock.samples.ExampleTest.voteAgainstRemoval":151,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":370,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":160,"org.easymock.tests.LimitationsTest.privateConstructor":425,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":10,"org.easymock.tests2.UsageConstraintsTest.testNotNull":58,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":490,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":141,"org.easymock.tests2.UsageTest.defaultResetToNice":203,"org.easymock.samples.ExampleTest.voteAgainstRemovals":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":371,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":232,"org.easymock.tests.UsageVarargTest.differentLength":341,"org.easymock.tests2.CallbackTest.callback":464,"org.easymock.tests2.UsageConstraintsTest.equals":470,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":63,"org.easymock.tests.UsageTest.openCallCountByLastCall":145,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":242,"org.easymock.tests.UsageCallCountTest.tooFewCalls":323,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":83,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":267,"org.easymock.tests.UsageThrowableTest.throwCheckedException":138,"org.easymock.tests.MockingTest.testStrictClassMocking":247,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":388,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":85,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":11,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":235,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":356,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":84,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":477,"org.easymock.tests.ObjectMethodsTest.testHashCode":270,"org.easymock.tests2.NameTest.nameForNiceMock":496,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":170,"org.easymock.tests2.DependencyTest.testInterfaceMocking":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":503,"org.easymock.samples.ExampleTest.addDocument":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":37,"org.easymock.tests2.DelegateToTest.testStubDelegate":80,"org.easymock.tests2.AnswerTest.stubAnswer":196,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":97,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":486,"org.easymock.tests.UsageVarargTest.varargLongAccepted":343,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":368,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":118,"org.easymock.tests.UsageExpectAndReturnTest.floatType":102,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":39,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":8,"org.easymock.tests.UsageThrowableTest.noUpperLimit":387,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":191,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":228,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":258,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":180,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":435,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":461,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":310,"org.easymock.tests2.UsageConstraintsTest.testSame":182,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":101,"org.easymock.samples.SupportTest.addDocument":430,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":472,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":22,"org.easymock.tests.GenericTest.testPackageScope":131,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":227,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":251,"org.easymock.tests2.NameTest.nameForMock":494,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":112,"org.easymock.tests2.UsageStrictMockTest.differentMethods":166,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":46,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":447,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":104,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":410,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":268,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":127,"org.easymock.tests2.MockedExceptionTest.testRealException":492,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":307,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":65,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":372,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":92,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":358,"org.easymock.tests2.NameTest.nameForStrictMock":495,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":484,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":498,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":157,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":439,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":57,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":312,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":86,"org.easymock.tests2.UsageStrictMockTest.range":165,"org.easymock.tests2.UsageConstraintsTest.lessThan":62,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":224,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":26,"org.easymock.tests2.CaptureTest.testCaptureRightOne":50,"org.easymock.tests2.UsageConstraintsTest.testOr":54,"org.easymock.tests.UsageRangeTest.combination":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":156,"org.easymock.tests.UsageTest.wrongArguments":393,"org.easymock.tests2.MockBuilderTest.testWithConstructor":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":23,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":417,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":360,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":314,"org.easymock.tests.UsageVarargTest.varargShortAccepted":342,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":326,"org.easymock.tests2.UsageConstraintsTest.cmpTo":185,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":475,"org.easymock.tests2.CompareToTest.testLessThan":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":362,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":202,"org.easymock.tests2.CaptureTest.testCaptureFromStub":463,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":348,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":483,"org.easymock.tests.UsageTest.unexpectedCallWithArray":392,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":283,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":324,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":45,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":114,"org.easymock.tests2.UsageConstraintsTest.constraints":51,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":284,"org.easymock.samples.ExampleTest.addAndChangeDocument":434,"org.easymock.tests.UsageStrictMockTest.testVerify":286,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":220,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":282,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":293,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":462,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":121,"org.easymock.tests.LimitationsTest.abstractClass":424,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":122,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":96,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":212,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":336}}]
