[{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,6,7,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[6,7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[17,19,178,87,111,113,179,138,180,139,181,157,182,183,184,185,186,187],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[188,116,118,132,133,169],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[9,189,10,11,190,12,191,192,193,193,194,194,195,13,196,197,14,198,199,15,16,200,201,202,203,17,204,18,19,178,205,206,207,208,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,209,43,44,45,46,47,48,210,49,50,211,212,51,52,53,54,213,55,56,57,214,58,215,59,60,61,62,63,64,216,65,217,218,66,219,67,68,6,7,69,70,71,72,73,74,75,76,77,220,78,79,80,81,221,222,223,82,224,83,84,225,226,227,85,86,87,228,88,229,89,90,230,231,232,91,92,233,234,235,236,93,94,95,96,97,98,99,100,101,102,237,103,104,105,106,238,239,240,241,242,107,243,244,245,246,108,247,248,249,250,109,251,188,252,253,254,255,256,257,258,2,111,259,112,113,179,260,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,261,262,263,264,265,266,134,267,135,136,138,180,139,140,268,269,146,147,148,152,153,154,270,271,272,155,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,8,291,292,293,294,295,296,297,298,299,300,156,157,5,301,158,159,302,303,160,304,305,306,307,308,309,310,311,312,313,314,161,162,163,164,165,315,166,167,316,317,168,169,170,318,319,320,321,322,323,324,325,326,182,327,328,329,183,184,330,185,331,332,186,333,334,335,336,337,338,171,339,172,173,174,175,176,177,340,341,342,343,187,344],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:225","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[246,345,346,284,317],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1988","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[109,110,347],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1660","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","key":"defaultValue"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[349,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"this"}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[271,293,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[351],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[101,102,237,352],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[353],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[354],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[355,356,357,358,359,360,361,362,96,100,363],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:89","failures":[218,66,364,82],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"obj"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[9,189,10,11,190,12,191,192,195,13,196,197,14,198,199,365,366,15,16,367,368,369,370,200,371,201,202,203,17,204,18,19,178,205,206,207,208,372,373,374,349,375,20,376,377,378,379,380,381,21,22,23,24,382,25,26,27,28,29,30,383,31,32,33,34,35,36,37,38,39,40,41,42,209,43,44,45,46,47,48,210,49,50,211,212,51,52,53,54,213,55,56,57,354,384,214,58,215,385,59,60,61,62,63,64,216,386,65,387,217,218,66,219,388,389,68,6,7,69,70,71,72,73,74,75,76,77,220,78,79,80,81,221,222,223,390,391,82,224,83,84,225,226,227,85,86,87,228,88,229,89,90,230,231,232,91,92,233,234,235,236,392,393,394,350,395,93,396,397,398,399,400,401,94,95,97,98,363,102,237,402,403,103,404,104,405,406,407,408,105,409,410,411,412,413,106,414,238,239,240,241,415,242,107,243,416,244,245,246,108,247,248,249,250,417,109,251,110,347,188,252,253,254,255,418,256,419,420,421,422,423,424,425,257,258,2,111,259,112,113,179,260,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,261,262,263,264,265,266,134,267,135,136,426,137,427,138,180,139,140,268,428,269,181,429,430,431,432,433,434,435,436,437,141,438,142,439,440,441,345,442,443,444,445,143,144,346,145,446,447,448,449,450,451,452,149,150,151,152,153,154,453,270,271,272,454,455,456,457,458,459,460,461,462,463,155,464,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,8,291,292,293,294,295,296,297,298,299,300,465,466,467,156,157,5,301,158,159,302,303,160,304,305,306,468,307,308,309,310,311,312,313,314,161,162,163,164,165,469,470,315,166,167,316,317,168,169,170,318,319,320,321,322,323,324,325,326,182,327,328,329,183,184,330,185,331,332,186,333,334,335,336,337,338,171,339,172,173,174,175,176,177,471,472,473,474,475,476,477,478,340,341,342,343,479,187,344],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":24,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":156,"org.easymock.tests2.UsageTest.argumentsOrdered":232,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":438,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":229,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":196,"org.easymock.tests2.DelegateToTest.testReturnException":242,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":262,"org.easymock.tests.MockingTest.testPartialClassMocking":146,"org.easymock.tests.MockClassControlTest.testToString":295,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":414,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":389,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":104,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":323,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":16,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":166,"org.easymock.tests2.UsageTest.wrongArguments":228,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":249,"org.easymock.samples.ExampleTest.answerVsDelegate":189,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":459,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":451,"org.easymock.tests2.UsageConstraintsTest.testNull":26,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":62,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":79,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":300,"org.easymock.tests2.CaptureTest.testPrimitive":49,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":168,"org.easymock.tests.UsageTest.moreThanOneArgument":157,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":337,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":61,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":253,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":471,"org.easymock.tests.UsageTest.argumentsOrdered":303,"org.easymock.tests.UsageVarargTest.varargIntAccepted":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":161,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":400,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":431,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":165,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":20,"org.easymock.tests.ReplayStateInvalidUsageTest.times":290,"org.easymock.tests2.DependencyTest.testClassMocking":365,"org.easymock.tests2.AnswerTest.answer":57,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":443,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":208,"org.easymock.tests2.CaptureTest.testAnd":47,"org.easymock.tests2.UsageTest.strictResetToDefault":86,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":217,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":357,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":252,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":135,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":75,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":475,"org.easymock.tests2.DelegateToTest.testDelegate":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":333,"org.easymock.tests.LimitationsTest.mockFinalMethod":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":322,"org.easymock.tests2.DependencyTest.testClassMockingSupport":366,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":428,"org.easymock.tests2.CaptureTest.testCapture1_2446744":50,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":332,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":206,"org.easymock.tests.UsageThrowableTest.throwError":171,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":284,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":458,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":401,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":255,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":361,"org.easymock.samples.PartialClassMockTest.testGetArea":13,"org.easymock.tests.MockingTest.testInterfaceMocking":449,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":285,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":162,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":150,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":407,"org.easymock.tests2.UsageTest.niceToStrict":88,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":82,"org.easymock.tests2.MockBuilderTest.testCreateMock":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":411,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":378,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":184,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":76,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":478,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":273,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":247,"org.easymock.tests.UsageOverloadedMethodTest.overloading":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":413,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":35,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":343,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":125,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":34,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":53,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":468,"org.easymock.tests2.EasyMockSupportClassTest.testAll":103,"org.easymock.tests.MockClassControlTest.testEquals":299,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":251,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":335,"org.easymock.tests2.CaptureTest.testCaptureAll":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":207,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":320,"org.easymock.tests.MockNameTest.defaultName":470,"org.easymock.tests2.UsageConstraintsTest.testMatches":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":254,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":282,"org.easymock.samples.ExampleTest.voteForRemovals":12,"org.easymock.tests.UsageVarargTest.allKinds":314,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":138,"org.easymock.samples.BasicClassMockTest.testPrintContent":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":321,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":176,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":202,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":416,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":266,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":424,"org.easymock.tests2.UsageConstraintsTest.greaterThan":38,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":267,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":219,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":425,"org.easymock.samples.ExampleTest.voteForRemoval":10,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":388,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":6,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":460,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":216,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":85,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":436,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":73,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":261,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":415,"org.easymock.tests2.CaptureTest.testCaptureFirst":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":435,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":74,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":92,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":344,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":121,"org.easymock.tests2.CaptureTest.testCapture2_2446744":55,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":69,"org.easymock.tests2.UsageTest.moreThanOneArgument":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":444,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":226,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":313,"org.easymock.tests.GenericTest.testBridgedEquals":347,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":280,"org.easymock.tests.UsageExpectAndReturnTest.longType":117,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":318,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":336,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":469,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":209,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":334,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":466,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":188,"org.easymock.tests.UsageCallCountTest.tooManyCalls":281,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":412,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":380,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":327,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":175,"org.easymock.tests.MockingTest.testNiceClassMocking":452,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":95,"org.easymock.tests.MockingTest.testClassMocking":447,"org.easymock.tests2.UsageConstraintsTest.testContains":33,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":274,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":364,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":235,"org.easymock.tests2.UsageConstraintsTest.testFind":25,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":154,"org.easymock.tests.MockTypeTest.fromEasyMockClass":457,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":201,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":257,"org.easymock.tests.UsageExpectAndReturnTest.object":124,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":379,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":78,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":308,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":272,"org.easymock.tests.UsageTest.exactCallCountByLastCall":160,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":472,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":426,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":355,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":130,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":304,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":393,"org.easymock.tests.MockClassControlTest.testHashCode":298,"org.easymock.tests2.EasyMockSupportTest.testVerify":221,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":473,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":477,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":340,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":205,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":385,"org.easymock.tests.UsageVarargTest.varargCharAccepted":307,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":418,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":145,"org.easymock.tests2.UsageTest.openCallCountByLastCall":89,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":81,"org.easymock.tests.DefaultClassInstantiatorTest.object":256,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":476,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":408,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":329,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":173,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":392,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":218,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":328,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":131,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":106,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":296,"org.easymock.tests2.UsageTest.resumeIfFailure":91,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":264,"org.easymock.tests2.StubTest.stubWithReturnValue":108,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":358,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":123,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":43,"org.easymock.tests2.SerializationTest.testAllMockedMethod":237,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":442,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.samples.SupportTest.voteForRemovals":14,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":417,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":350,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":331,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":352,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":346,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":354,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":427,"org.easymock.tests.UsageExpectAndThrowTest.object":330,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":41,"org.easymock.tests2.DelegateToTest.testWrongClass":243,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":170,"org.easymock.tests.UsageStrictMockTest.range":112,"org.easymock.samples.ConstructorCalledMockTest.testTax":193,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":369,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":220,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":94,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":185,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":402,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":291,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":248,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":151,"org.easymock.tests2.CaptureTest.testCaptureNone":52,"org.easymock.tests.UsageUnorderedTest.message":338,"org.easymock.tests.UsageVerifyTest.twoReturns":139,"org.easymock.tests.UsageVarargTest.varargByteAccepted":312,"org.easymock.tests2.ThreadingTest.testThreadSafe":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":409,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":278,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":454,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":198,"org.easymock.tests2.CaptureTest.testCapture_2617107":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":143,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":317,"org.easymock.tests2.UsageConstraintsTest.any":31,"org.easymock.tests2.StubTest.stub":246,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":289,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":263,"org.easymock.tests.UsageExpectAndThrowTest.longType":326,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":422,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":288,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":204,"org.easymock.tests2.SerializationTest.testClass":101,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":93,"org.easymock.tests.LimitationsTest.mockNativeMethod":155,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":133,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":110,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":374,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":178,"org.easymock.tests2.NameTest.nameForMocksControl":241,"org.easymock.tests2.MockedExceptionTest.testMockedException":234,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":404,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":159,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":182,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":148,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":371,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":59,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":84,"org.easymock.tests.MockingTest.testNicePartialClassMocking":147,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":64,"org.easymock.tests2.CaptureTest.testCaptureLast":51,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":372,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":269,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":100,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":29,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":42,"org.easymock.tests.MockingTest.testTwoMocks":448,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":363,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":183,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":231,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":45,"org.easymock.samples.ExampleTest.removeNonExistingDocument":191,"org.easymock.tests.UsageStrictMockTest.differentMethods":113,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":286,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":377,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":394,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":420,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":7,"org.easymock.tests2.MockBuilderTest.testCreateMockString":227,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":405,"org.easymock.tests.UsageExpectAndThrowTest.floatType":325,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":37,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":214,"org.easymock.tests.UsageVerifyTest.twoThrows":180,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":105,"org.easymock.samples.ExampleTest.voteAgainstRemoval":11,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":142,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":66,"org.easymock.tests.LimitationsTest.privateConstructor":463,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":362,"org.easymock.tests2.UsageConstraintsTest.testNotNull":44,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":177,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":233,"org.easymock.tests2.UsageTest.defaultResetToNice":230,"org.easymock.samples.ExampleTest.voteAgainstRemovals":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":129,"org.easymock.tests.UsageVarargTest.differentLength":309,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":373,"org.easymock.tests2.CallbackTest.callback":245,"org.easymock.tests2.UsageConstraintsTest.equals":382,"org.easymock.tests.UsageTest.openCallCountByLastCall":158,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":316,"org.easymock.tests.UsageCallCountTest.tooFewCalls":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":97,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":250,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":348,"org.easymock.tests.UsageThrowableTest.throwCheckedException":174,"org.easymock.tests.MockingTest.testStrictClassMocking":446,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":99,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":268,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":376,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":8,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":98,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":215,"org.easymock.tests.ObjectMethodsTest.testHashCode":271,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":70,"org.easymock.tests2.NameTest.nameForNiceMock":240,"org.easymock.tests2.DependencyTest.testInterfaceMocking":15,"org.easymock.samples.ExampleTest.addDocument":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":410,"org.easymock.tests2.DelegateToTest.testStubDelegate":107,"org.easymock.tests2.AnswerTest.stubAnswer":58,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":111,"org.easymock.tests.UsageVarargTest.varargLongAccepted":311,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":141,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":132,"org.easymock.tests.UsageExpectAndReturnTest.floatType":116,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":67,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":194,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":479,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":399,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":39,"org.easymock.tests.UsageThrowableTest.noUpperLimit":339,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":22,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":367,"org.easymock.tests2.SerializationTest.test":102,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":211,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":419,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":115,"org.easymock.tests2.UsageConstraintsTest.testSame":27,"org.easymock.samples.SupportTest.addDocument":197,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":406,"org.easymock.tests.GenericTest.testPackageScope":109,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":398,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":450,"org.easymock.tests2.NameTest.nameForMock":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":126,"org.easymock.tests2.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":360,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":387,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":118,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":186,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":453,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":136,"org.easymock.tests2.MockedExceptionTest.testRealException":236,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":440,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":167,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":292,"org.easymock.tests2.NameTest.nameForStrictMock":239,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":391,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":200,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":63,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":368,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":421,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":40,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":223,"org.easymock.tests2.UsageStrictMockTest.range":18,"org.easymock.tests2.UsageConstraintsTest.lessThan":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":395,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":437,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":72,"org.easymock.tests2.CaptureTest.testCaptureRightOne":54,"org.easymock.tests2.UsageConstraintsTest.testOr":28,"org.easymock.tests.UsageRangeTest.combination":134,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":60,"org.easymock.tests.UsageTest.wrongArguments":301,"org.easymock.tests2.MockBuilderTest.testWithConstructor":356,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":294,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":127,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":423,"org.easymock.tests.UsageVarargTest.varargShortAccepted":310,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":279,"org.easymock.tests2.UsageConstraintsTest.cmpTo":32,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":432,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":90,"org.easymock.tests2.CaptureTest.testCaptureFromStub":213,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":283,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":390,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":277,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":359,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":128,"org.easymock.tests2.CaptureTest.testCapture":351,"org.easymock.tests2.UsageConstraintsTest.constraints":23,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":259,"org.easymock.samples.ExampleTest.addAndChangeDocument":192,"org.easymock.tests.UsageStrictMockTest.testVerify":260,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":195,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":319,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":163,"org.easymock.tests.LimitationsTest.abstractClass":462,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":120,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":77,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":305}}]
