[{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[0,1],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[34,35,36,37,38,39,2,40,41,42,43,44,45,46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[47,34,36,30,48,49,39,50,51,52,53,45,54,55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[57,58],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[47,34,36,30,48,49,39,50,51,52,45,54,55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[74],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[61,75,76,77,66,78,79,80,81,82,83,84,85,86,87,88,89,90],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[91,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[93,94,95,96,97,98,99,100,101,102,103,59,59,60,60,104,105,106,61,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,107,108,109,110,62,63,64,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,23,151,152,153,154,155,156,157,158,75,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,24,185,186,25,26,27,28,29,187,188,189,190,191,192,193,194,195,196,197,34,35,198,36,37,199,38,200,30,48,201,202,203,204,205,206,207,208,31,209,210,211,212,213,214,215,49,216,217,218,219,220,221,222,92,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,39,50,243,244,51,52,245,246,247,248,32,249,250,53,251,2,252,40,253,41,66,254,42,67,68,43,255,69,70,256,257,71,72,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,0,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,73,299,300,301,302,303,304,78,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,79,81,83,84,85,86,87,88,90,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,44,339,45,46,340,341,342,33,58,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,54,362,363,364,365,366,55,56,367,368],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[369,370,371,34,242,39,50,51,52,372,373,374,375,361,54,55,56],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[267,273,284,376],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[93,94,95,96,97,98,99,100,101,102,103,59,59,60,60,104,105,106,61,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,109,62,63,64,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,148,149,150,23,151,157,158,159,160,161,162,166,167,168,170,171,172,173,176,177,178,179,180,181,182,183,184,24,185,186,25,26,27,28,29,187,188,189,190,191,192,193,194,195,196,197,34,35,198,36,37,199,38,200,30,48,202,203,204,205,206,207,208,31,209,210,211,212,213,214,215,49,216,217,218,219,220,221,222,92,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,39,50,243,244,51,52,245,246,248,32,250,53,251,2,252,40,253,41,66,254,42,67,68,43,255,69,70,256,257,71,72,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,0,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,73,299,300,301,302,303,304,78,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,79,81,83,84,85,86,87,88,90,321,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,44,339,45,46,340,342,33,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,54,362,363,364,365,366,55,56,367,368],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[152],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[65,377],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[378,379,380,381,382,383,384],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[385],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[377],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[93,94,95,96,97,98,99,100,101,103,59,59,60,60,104,105,106,61,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,386,387,388,389,390,391,392,393,394,395,57,396,397,398,399,400,107,91,401,402,403,404,108,405,62,63,64,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,23,151,153,154,157,158,75,159,160,161,162,163,164,165,166,167,168,169,176,177,178,179,180,181,182,183,184,24,185,186,25,26,27,28,29,187,196,197,34,35,198,36,37,199,38,200,30,48,201,205,206,207,208,31,209,210,49,227,229,230,231,232,234,235,236,237,238,239,240,241,242,50,243,244,51,52,245,246,248,32,250,251,2,252,40,253,41,254,67,68,43,255,69,70,256,257,71,72,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,0,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,73,299,300,301,302,303,304,78,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,81,83,85,86,88,321,322,323,324,325,326,331,332,333,334,335,336,337,338,44,339,45,46,340,342,33,58,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,54,362,363,364,365,366,55,56,367,368],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[406,78,305,306],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[261],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[178,269],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[59,59,60,60,104,105,61,110,62,63,64,157,158,75,187,189,210,76,77,251,2,40,253,41,66,254,42,67,68,43,255,69,70,256,71,72,407,408,409,285,300,78,306,79,80,81,82,83,84,85,86,87,88,89,90,348,349,350,351],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[253,275,363],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"position":"org.easymock.internal.RecordState:324","failures":[26,27,30],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[113,115,129,130,176,180],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[275],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[406,78,305,306],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"failures":[116,117,118,121,122,123,124,125,148,149,151,159,160,161,162,164,165,167,168,169,178,182,184,24,186,25,26,27,28,29,35,36,37,200,48,201,239,241,242,243,244,245,250,2,253,254,67,68,43,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,0,276,277,278,279,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,300,78,305,307,308,310,311,314,315,316,317,318,319,320,83,321,331,332,333,335,336,44,45,46,33,356,357,358,359,360,361,362,364,365,366,367,368],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1277","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[47,34,36,30,48,49,39,50,51,52,45,54,55,56],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[260,266,307,309,317],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[322],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[260,261,263,265,266,268,277,282,307,309,317],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":261,"org.easymock.tests2.UsageTest.argumentsOrdered":56,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":241,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":57,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":363,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":106,"org.easymock.tests2.DelegateToTest.testReturnException":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":206,"org.easymock.tests.MockingTest.testPartialClassMocking":62,"org.easymock.tests.MockClassControlTest.testToString":190,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":3,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":349,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":358,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":378,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":267,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":148,"org.easymock.tests2.UsageTest.wrongArguments":54,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":172,"org.easymock.samples.ExampleTest.answerVsDelegate":97,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":77,"org.easymock.tests2.UsageConstraintsTest.testNull":263,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":40,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":195,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":295,"org.easymock.tests2.CaptureTest.testPrimitive":310,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":151,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":22,"org.easymock.tests.UsageTest.moreThanOneArgument":242,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":182,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":152,"org.easymock.tests.UsageTest.argumentsOrdered":52,"org.easymock.tests.UsageVarargTest.varargIntAccepted":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":400,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":236,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":79,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":382,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":240,"org.easymock.tests.ReplayStateInvalidUsageTest.times":223,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":336,"org.easymock.tests2.AnswerTest.answer":321,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":91,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":330,"org.easymock.tests2.CaptureTest.testAnd":307,"org.easymock.tests2.UsageTest.strictResetToDefault":360,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":42,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":181,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":161,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":290,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":156,"org.easymock.tests2.DelegateToTest.testDelegate":347,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":215,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":174,"org.easymock.tests2.CaptureTest.testCapture1_2446744":311,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":16,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":328,"org.easymock.tests.UsageThrowableTest.throwError":24,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":184,"org.easymock.samples.PartialClassMockTest.testGetArea":61,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":219,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":237,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":164,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":4,"org.easymock.tests2.UsageTest.niceToStrict":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":83,"org.easymock.tests2.MockBuilderTest.testCreateMock":87,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":12,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":372,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":291,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":147,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":227,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":170,"org.easymock.tests.UsageOverloadedMethodTest.overloading":167,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":32,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":273,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":166,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":122,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":272,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":316,"org.easymock.tests.MockClassControlTest.testEquals":194,"org.easymock.tests2.EasyMockSupportClassTest.testAll":348,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":158,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":20,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":373,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":407,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":213,"org.easymock.tests2.CaptureTest.testCaptureAll":308,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":329,"org.easymock.tests2.UsageConstraintsTest.testMatches":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":183,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":216,"org.easymock.samples.ExampleTest.voteForRemovals":101,"org.easymock.tests.UsageVarargTest.allKinds":141,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":200,"org.easymock.samples.BasicClassMockTest.testPrintContent":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":214,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":28,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":209,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":346,"org.easymock.tests2.UsageConstraintsTest.greaterThan":0,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":160,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":43,"org.easymock.samples.ExampleTest.voteForRemoval":98,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":332,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":74,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":66,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":187,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":288,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":205,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":58,"org.easymock.tests2.CaptureTest.testCaptureFirst":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":289,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":368,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":53,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":118,"org.easymock.tests2.CaptureTest.testCapture2_2446744":319,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":334,"org.easymock.tests2.UsageTest.moreThanOneArgument":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":401,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":88,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":140,"org.easymock.tests.GenericTest.testBridgedEquals":377,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":234,"org.easymock.tests.UsageExpectAndReturnTest.longType":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":211,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":21,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":89,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":169,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":280,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":19,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":180,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":143,"org.easymock.tests.UsageCallCountTest.tooManyCalls":235,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":229,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":119,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":8,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":27,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":69,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":80,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":228,"org.easymock.tests2.UsageConstraintsTest.testContains":271,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":300,"org.easymock.tests2.UsageConstraintsTest.testFind":262,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":168,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":196,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":303,"org.easymock.tests.UsageExpectAndReturnTest.object":121,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":294,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":379,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":204,"org.easymock.tests.UsageTest.exactCallCountByLastCall":245,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":153,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":371,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":383,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":131,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":127,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":248,"org.easymock.tests.MockClassControlTest.testHashCode":193,"org.easymock.tests2.EasyMockSupportTest.testVerify":298,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":154,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":146,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":327,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":341,"org.easymock.tests.UsageVarargTest.varargCharAccepted":134,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":405,"org.easymock.tests2.UsageTest.openCallCountByLastCall":364,"org.easymock.tests.DefaultClassInstantiatorTest.object":109,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":297,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":145,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":202,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":47,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":10,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":25,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":67,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":192,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":128,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":142,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":351,"org.easymock.tests2.UsageTest.resumeIfFailure":367,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":208,"org.easymock.tests2.StubTest.stubWithReturnValue":33,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":384,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":120,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":281,"org.easymock.tests2.SerializationTest.testAllMockedMethod":306,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":107,"org.easymock.samples.SupportTest.voteForRemovals":95,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":374,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":65,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":15,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":406,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":108,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":322,"org.easymock.tests.UsageExpectAndThrowTest.object":13,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":278,"org.easymock.tests2.DelegateToTest.testWrongClass":345,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":176,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":177,"org.easymock.tests.UsageStrictMockTest.range":36,"org.easymock.samples.ConstructorCalledMockTest.testTax":59,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":293,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":255,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":14,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":85,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":51,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":171,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":369,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":165,"org.easymock.tests2.CaptureTest.testCaptureNone":315,"org.easymock.tests.UsageUnorderedTest.message":49,"org.easymock.tests.UsageVerifyTest.twoReturns":48,"org.easymock.tests.UsageVarargTest.varargByteAccepted":139,"org.easymock.tests2.ThreadingTest.testThreadSafe":331,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":232,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":104,"org.easymock.tests2.CaptureTest.testCapture_2617107":309,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":403,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":23,"org.easymock.tests2.UsageConstraintsTest.any":269,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":92,"org.easymock.tests2.StubTest.stub":342,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndThrowTest.longType":6,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":207,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":222,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":339,"org.easymock.tests2.SerializationTest.testClass":78,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":356,"org.easymock.tests.LimitationsTest.mockNativeMethod":210,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":130,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":75,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":409,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":340,"org.easymock.tests2.NameTest.nameForMocksControl":355,"org.easymock.tests2.MockedExceptionTest.testMockedException":299,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":244,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":7,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":64,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":251,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":86,"org.easymock.tests.MockingTest.testNicePartialClassMocking":63,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":41,"org.easymock.tests2.CaptureTest.testCaptureLast":314,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":175,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":72,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":266,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":279,"org.easymock.tests.MockingTest.testTwoMocks":110,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":11,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":55,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":283,"org.easymock.samples.ExampleTest.removeNonExistingDocument":102,"org.easymock.tests.UsageStrictMockTest.differentMethods":37,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":220,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":333,"org.easymock.tests2.MockBuilderTest.testCreateMockString":90,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":188,"org.easymock.tests.UsageExpectAndThrowTest.floatType":5,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":275,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":324,"org.easymock.tests.UsageVerifyTest.twoThrows":30,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":350,"org.easymock.samples.ExampleTest.voteAgainstRemoval":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":396,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":163,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":68,"org.easymock.tests2.UsageConstraintsTest.testNotNull":282,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":29,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":73,"org.easymock.tests2.UsageTest.defaultResetToNice":366,"org.easymock.samples.ExampleTest.voteAgainstRemovals":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":397,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":126,"org.easymock.tests.UsageVarargTest.differentLength":136,"org.easymock.tests2.CallbackTest.callback":304,"org.easymock.tests.UsageTest.openCallCountByLastCall":243,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":258,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":150,"org.easymock.tests.UsageCallCountTest.tooFewCalls":230,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":256,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":173,"org.easymock.tests.UsageThrowableTest.throwCheckedException":26,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":370,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":179,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":71,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":70,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":224,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":257,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":326,"org.easymock.tests.ObjectMethodsTest.testHashCode":203,"org.easymock.tests2.CompareToTest.testGreateOrEqual":376,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":381,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":335,"org.easymock.tests2.NameTest.nameForNiceMock":354,"org.easymock.tests2.DependencyTest.testInterfaceMocking":357,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":380,"org.easymock.samples.ExampleTest.addDocument":100,"org.easymock.tests2.DelegateToTest.testStubDelegate":344,"org.easymock.tests2.AnswerTest.stubAnswer":325,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":35,"org.easymock.tests.UsageVarargTest.varargLongAccepted":138,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":395,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":129,"org.easymock.tests.UsageExpectAndReturnTest.floatType":113,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":285,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":60,"org.easymock.tests.UsageThrowableTest.noUpperLimit":185,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":249,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":276,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":259,"org.easymock.tests2.SerializationTest.test":305,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":312,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":112,"org.easymock.tests2.UsageConstraintsTest.testSame":264,"org.easymock.samples.SupportTest.addDocument":94,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":221,"org.easymock.tests.GenericTest.testPackageScope":157,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":390,"org.easymock.tests2.NameTest.nameForMock":352,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":123,"org.easymock.tests2.UsageStrictMockTest.differentMethods":46,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":115,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":17,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":162,"org.easymock.tests2.MockedExceptionTest.testRealException":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":398,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":149,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":226,"org.easymock.tests2.NameTest.nameForStrictMock":353,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":302,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":253,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":277,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":81,"org.easymock.tests2.UsageStrictMockTest.range":45,"org.easymock.tests2.UsageConstraintsTest.lessThan":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":394,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":287,"org.easymock.tests2.CaptureTest.testCaptureRightOne":317,"org.easymock.tests2.UsageConstraintsTest.testOr":265,"org.easymock.tests.UsageRangeTest.combination":159,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":2,"org.easymock.tests.UsageTest.wrongArguments":50,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":387,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":124,"org.easymock.tests.UsageVarargTest.varargShortAccepted":137,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":233,"org.easymock.tests2.UsageConstraintsTest.cmpTo":270,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":389,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":365,"org.easymock.tests2.CaptureTest.testCaptureFromStub":318,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":217,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":82,"org.easymock.tests.UsageTest.unexpectedCallWithArray":39,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":34,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":231,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":125,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.tests2.UsageConstraintsTest.constraints":260,"org.easymock.samples.ExampleTest.addAndChangeDocument":103,"org.easymock.tests.UsageStrictMockTest.testVerify":38,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":93,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":197,"org.easymock.tests2.CompareToTest.testGreateThan":1,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":212,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":313,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":238,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":239,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":250,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":292}}]
