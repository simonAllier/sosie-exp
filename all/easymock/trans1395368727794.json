[{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[3],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:201","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[4,5],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((this.java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + (org.easymock.Capture<T>.getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[62,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[64,65,66,67,68,69,70,71,72,11,12,13,14,15,17,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,19,19,20,20,21,26,28,30,31,33,135,136,137,138,139,37,38,39,40,140,141,142,143,144,145,146,147,148,149,150,151,41,42,152,43,44,45,47,49,50,51,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,52,194,1,53,195,54,196,56,57,58,59,197,60,61,198,199,200,201,202,203,204,205,206,207,208,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[54,196,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[210,211,212,9,64,213,65,214,66,67,68,69,70,71,215,216,217,72,11,12,13,14,218,219,220,221,222,223,15,17,224,73,74,75,76,77,78,79,80,62,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,81,248,82,83,84,85,86,4,63,249,250,251,252,253,254,255,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,256,117,118,119,120,257,258,121,122,123,124,125,126,127,128,129,130,259,131,132,133,260,134,19,19,20,20,21,26,28,30,31,33,135,136,137,138,139,37,38,39,40,261,262,263,140,141,142,143,144,145,146,147,148,149,150,151,41,42,152,43,44,45,47,49,50,51,264,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,52,194,265,0,266,267,1,2,268,269,53,270,195,54,196,56,57,58,59,197,60,61,271,272,198,273,274,275,199,200,201,202,203,204,205,206,207,208,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[225,249],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[276,54,196,55],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[277,278,279],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[280],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[281,182,189,193],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[282,283,284,285,286,287,64,213,65,66,67,68,69,70,71,215,288,216,217,72,289,11,12,13,14,218,219,220,221,222,223,15,224,290,291,292,293,294,76,77,295,296,78,79,297,298,80,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,299,300,301,82,302,83,84,303,304,85,86,305,306,307,4,308,309,310,280,5,311,312,313,314,315,316,317,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,256,117,119,120,121,318,18,319,320,321,322,323,324,122,123,124,125,126,127,128,129,130,259,132,325,19,19,20,20,21,24,28,29,30,31,32,33,35,135,136,137,138,139,326,327,328,329,37,38,39,40,140,141,142,143,144,145,330,146,147,148,149,331,332,150,151,41,42,152,43,44,45,46,47,48,49,50,51,153,154,155,156,157,158,159,160,161,162,163,164,333,334,165,335,166,167,336,281,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,52,194,265,1,2,268,269,53,270,195,54,196,56,57,58,59,197,60,61,272,198,273,275,199,201,202,205,206,207,208],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[224,77,296,297,298,301,82,84,256,117,337,338,339,340,145,330,331,332,165,167],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"equalsMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,341,36,342,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:82","failures":[199,343,201,202,344,345,203,205,346,206,207,209],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1877","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.CompareEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[47,179],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[312,347,44,184],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[177],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":171,"org.easymock.tests2.UsageTest.argumentsOrdered":332,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":76,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":221,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":347,"org.easymock.tests2.StubTest.stubWithReturnValue":140,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":96,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":190,"org.easymock.tests2.SerializationTest.testAllMockedMethod":55,"org.easymock.tests2.DelegateToTest.testReturnException":272,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":219,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":210,"org.easymock.tests.MockingTest.testPartialClassMocking":11,"org.easymock.samples.SupportTest.voteForRemovals":134,"org.easymock.tests.MockClassControlTest.testToString":319,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":81,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":239,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":227,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":211,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":38,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":0,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":248,"org.easymock.tests.UsageExpectAndThrowTest.object":237,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":142,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":188,"org.easymock.tests2.DelegateToTest.testWrongClass":273,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":85,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":86,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":177,"org.easymock.tests2.UsageTest.wrongArguments":330,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":119,"org.easymock.tests.UsageStrictMockTest.range":83,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":286,"org.easymock.samples.ExampleTest.answerVsDelegate":259,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":160,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":56,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":8,"org.easymock.tests2.UsageConstraintsTest.testNull":173,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":238,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":43,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":324,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":30,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":162,"org.easymock.tests2.CaptureTest.testPrimitive":201,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":121,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":316,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":297,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":246,"org.easymock.tests.UsageTest.moreThanOneArgument":77,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":285,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":124,"org.easymock.tests2.CaptureTest.testCaptureNone":204,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":75,"org.easymock.tests.UsageUnorderedTest.message":224,"org.easymock.tests.UsageVerifyTest.twoReturns":117,"org.easymock.tests2.ThreadingTest.testThreadSafe":135,"org.easymock.tests.UsageTest.argumentsOrdered":298,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":251,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":22,"org.easymock.tests2.CaptureTest.testCapture_2617107":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":111,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":24,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":258,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":29,"org.easymock.tests2.UsageConstraintsTest.any":178,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":313,"org.easymock.tests2.StubTest.stub":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":115,"org.easymock.tests.UsageExpectAndThrowTest.longType":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":220,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":277,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":312,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":335,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":195,"org.easymock.tests2.SerializationTest.testClass":54,"org.easymock.tests.ReplayStateInvalidUsageTest.times":314,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":194,"org.easymock.tests.LimitationsTest.mockNativeMethod":14,"org.easymock.tests2.AnswerTest.answer":265,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":17,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":106,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":329,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":342,"org.easymock.tests2.CaptureTest.testAnd":199,"org.easymock.tests2.UsageTest.strictResetToDefault":144,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":336,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":48,"org.easymock.tests2.NameTest.nameForMocksControl":340,"org.easymock.tests2.MockedExceptionTest.testMockedException":269,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":123,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":157,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":79,"org.easymock.tests2.DelegateToTest.testDelegate":275,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":231,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":13,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":41,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":31,"org.easymock.tests.MockingTest.testNicePartialClassMocking":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":242,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":45,"org.easymock.tests2.CompareToTest.testNotComparable":3,"org.easymock.tests2.CaptureTest.testCaptureLast":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":222,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":61,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":176,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":294,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":189,"org.easymock.tests.MockingTest.testTwoMocks":10,"org.easymock.tests2.CaptureTest.testCapture1_2446744":202,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":87,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":240,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":327,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":235,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":331,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":192,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":310,"org.easymock.tests.UsageThrowableTest.throwError":65,"org.easymock.samples.ExampleTest.removeNonExistingDocument":325,"org.easymock.tests.UsageStrictMockTest.differentMethods":84,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":5,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":137,"org.easymock.tests2.MockBuilderTest.testCreateMockString":35,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":318,"org.easymock.tests.UsageExpectAndThrowTest.floatType":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":126,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":184,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":267,"org.easymock.tests.UsageVerifyTest.twoThrows":256,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":39,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":280,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":112,"org.easymock.samples.ExampleTest.voteAgainstRemoval":132,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":74,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":73,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":228,"org.easymock.tests2.UsageTest.niceToStrict":146,"org.easymock.tests2.UsageConstraintsTest.testNotNull":191,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":268,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":71,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":28,"org.easymock.tests2.MockBuilderTest.testCreateMock":32,"org.easymock.tests2.UsageTest.defaultResetToNice":149,"org.easymock.samples.ExampleTest.voteAgainstRemovals":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":102,"org.easymock.tests2.CallbackTest.callback":264,"org.easymock.tests.UsageTest.openCallCountByLastCall":78,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":236,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":158,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":168,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":226,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":284,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":257,"org.easymock.tests.UsageOverloadedMethodTest.overloading":128,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":217,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":182,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":59,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":98,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":127,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":278,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":181,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":205,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":287,"org.easymock.tests.UsageThrowableTest.throwCheckedException":68,"org.easymock.tests.MockClassControlTest.testEquals":323,"org.easymock.tests2.EasyMockSupportClassTest.testAll":37,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":16,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":244,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":341,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":328,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":292,"org.easymock.tests2.CaptureTest.testCaptureAll":200,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":213,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":60,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":58,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":315,"org.easymock.tests2.UsageConstraintsTest.testMatches":183,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":197,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":2,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":125,"org.easymock.tests.ObjectMethodsTest.testHashCode":306,"org.easymock.samples.ExampleTest.voteForRemovals":133,"org.easymock.tests2.NameTest.nameForNiceMock":339,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":139,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":116,"org.easymock.tests2.DependencyTest.testInterfaceMocking":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":293,"org.easymock.samples.BasicClassMockTest.testPrintContent":23,"org.easymock.tests2.DelegateToTest.testStubDelegate":198,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":70,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":334,"org.easymock.tests2.AnswerTest.stubAnswer":1,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":274,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":223,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":82,"org.easymock.tests2.UsageConstraintsTest.greaterThan":185,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":108,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":51,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":303,"org.easymock.samples.ExampleTest.voteForRemoval":131,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":136,"org.easymock.tests.UsageExpectAndReturnTest.floatType":89,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":105,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":52,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":46,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests.UsageThrowableTest.noUpperLimit":214,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":186,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":9,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":143,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":169,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":344,"org.easymock.tests2.SerializationTest.test":196,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":155,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":66,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":88,"org.easymock.tests2.UsageConstraintsTest.testSame":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":218,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":271,"org.easymock.tests2.CaptureTest.testCaptureFirst":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":156,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":151,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":311,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":289,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":94,"org.easymock.tests.GenericTest.testPackageScope":15,"org.easymock.tests2.CaptureTest.testCapture2_2446744":208,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":138,"org.easymock.tests2.UsageTest.moreThanOneArgument":145,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":254,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":33,"org.easymock.tests2.NameTest.nameForMock":337,"org.easymock.tests.UsageExpectAndReturnTest.longType":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":290,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":153,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":245,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":34,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":99,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":118,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":243,"org.easymock.tests2.UsageStrictMockTest.differentMethods":167,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":122,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":91,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":241,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":110,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":212,"org.easymock.tests2.MockedExceptionTest.testRealException":270,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":95,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":232,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":165,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":69,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":120,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":57,"org.easymock.tests2.NameTest.nameForStrictMock":338,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":282,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":25,"org.easymock.tests2.UsageConstraintsTest.testContains":180,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":53,"org.easymock.tests2.UsageConstraintsTest.testFind":172,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":129,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":261,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":44,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":300,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":262,"org.easymock.tests.UsageExpectAndReturnTest.object":97,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":187,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":47,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":26,"org.easymock.tests2.UsageStrictMockTest.range":166,"org.easymock.tests2.UsageConstraintsTest.lessThan":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":161,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":307,"org.easymock.tests.UsageTest.exactCallCountByLastCall":80,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":64,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":154,"org.easymock.tests2.CaptureTest.testCaptureRightOne":206,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":252,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":247,"org.easymock.tests2.UsageConstraintsTest.testOr":175,"org.easymock.tests.UsageRangeTest.combination":107,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":42,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":103,"org.easymock.tests.UsageTest.wrongArguments":296,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":216,"org.easymock.tests.MockClassControlTest.testHashCode":322,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":18,"org.easymock.tests2.EasyMockSupportTest.testVerify":333,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":100,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":253,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":225,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":215,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":326,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":283,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":281,"org.easymock.tests2.UsageConstraintsTest.cmpTo":179,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":266,"org.easymock.tests2.UsageTest.openCallCountByLastCall":147,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":148,"org.easymock.tests.DefaultClassInstantiatorTest.object":299,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":164,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":62,"org.easymock.tests2.CaptureTest.testCaptureFromStub":207,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":309,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":27,"org.easymock.tests.UsageTest.unexpectedCallWithArray":295,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":305,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":234,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":67,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":101,"org.easymock.tests2.CaptureTest.testCapture":346,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":321,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":302,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":49,"org.easymock.tests2.UsageConstraintsTest.constraints":170,"org.easymock.samples.ExampleTest.addAndChangeDocument":260,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":233,"org.easymock.tests.UsageStrictMockTest.testVerify":304,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":104,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":63,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":291,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":345,"org.easymock.tests2.UsageTest.resumeIfFailure":150,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":36,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":113,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":93,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":7,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":114,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":159}}]
