[{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:190","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,4,84,85,86,87,88,89,90,91,92,93,94,95,96,97,1,2,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[126,127,128,129,130,131],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[51,103],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:105","sourceCode":"java.lang.StringBuffer.append(\"(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[133,134,135],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[12,44,46],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[136,137],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[138,139],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"delegateTo","this":"this"}},{"position":"org.easymock.internal.MocksControl:105","failures":[140,141,5,142,6,7,8,126,143,9,10,144,145,11,146,12,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,13,200,201,202,203,14,15,16,17,204,205,206,207,208,18,209,210,19,20,211,212,213,214,21,22,215,216,23,24,217,25,218,219,220,221,222,26,27,28,223,224,29,30,31,32,33,225,226,227,228,229,34,230,35,36,37,38,39,40,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,129,41,290,42,43,291,292,293,294,295,44,45,46,296,297,298,299,300,301,302,303,47,304,305,306,307,308,309,310,311,312,313,314,315,316,48,49,50,317,51,318,52,53,54,319,320,55,56,58,59,321,66,67,68,69,322,70,71,72,73,74,75,323,76,77,78,79,80,81,82,83,4,84,85,86,324,87,88,89,90,91,325,326,327,328,329,330,331,332,333,334,335,92,336,337,338,339,93,94,95,340,96,341,342,343,344,345,346,97,347,348,349,350,351,352,138,353,139,354,355,356,2,98,99,100,101,102,103,104,105,106,107,108,109,357,358,359,360,361,362,363,364,365,366,367,368,369,110,370,371,372,373,374,375,376,377,111,378,112,113,379,380,114,381,382,383,115,116,384,117,118,385,386,119,120,121,122,123,124,125],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[8,126,143,144,145,127,133,128,387,388,389,390,205,208,18,209,211,212,214,24,217,25,129,41,42,43,391,130,392,134,135,393,394,395,131,396,397,50,317,319,320,82,111,112,113],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[7,10,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,207,20,216,217,34,35,36,37,38,39,40,240,48,53,114],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"classConstructor"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[8,18,213,24,217,25,41,43,291,50,111,113,379],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[322],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[398],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[399,400,401,402,403,404,405,1,406,407],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[399,401,402,403,408,409,407],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[155,156,157,216],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[126,143,144,145,390,209,214,217,25,129,42,317,319,320,112],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[410,411,412,413,414,415,416,417,418,419,398,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,444,445,445,446,447,448,449,450,451,57,452,453,454,400,455,456,457,458,60,459,61,460,461,62,462,463,464,63,64,65,465,466,334,335,92,1,3,406,407,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockClass":"toMock","this":"enhancer"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[140,141,5,142,6,7,8,126,143,9,10,144,145,11,12,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,183,184,185,186,187,188,189,412,190,192,193,194,195,196,197,198,13,200,415,14,15,16,17,204,205,206,207,208,18,209,210,19,20,211,212,214,21,22,215,216,23,24,217,25,218,219,220,221,222,26,27,28,223,224,29,30,31,32,33,225,226,227,228,229,34,230,35,36,37,38,39,40,231,232,233,234,235,236,237,238,239,240,241,270,276,278,279,280,281,288,289,129,41,290,42,43,291,292,293,294,295,44,45,46,296,297,298,299,300,301,302,303,47,304,305,306,307,308,309,310,311,312,314,315,316,48,49,50,317,51,318,52,53,54,319,320,55,56,58,59,321,66,67,68,69,70,71,72,73,74,75,323,76,77,78,79,80,81,82,83,4,84,85,86,324,87,88,89,90,91,325,326,327,328,329,330,331,332,333,334,335,92,336,337,339,93,94,95,340,96,341,97,138,353,139,354,355,356,1,2,98,99,100,101,102,103,104,105,106,107,108,109,357,359,360,361,362,110,376,377,111,378,112,113,379,380,114,382,115,116,384,117,118,385,386,119,120,121,122,123,124,125],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[90,500],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[305,306,342,343,344,345,346,347,348,349,350,351,352,365,366,367,368,369,370,371,372,373,374,375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":69,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":7,"org.easymock.tests2.UsageTest.argumentsOrdered":320,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":264,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":318,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":306,"org.easymock.tests2.DelegateToTest.testReturnException":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":237,"org.easymock.tests.MockingTest.testPartialClassMocking":416,"org.easymock.tests.MockClassControlTest.testToString":437,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":358,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":12,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":479,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":475,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":158,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":59,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":401,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":21,"org.easymock.tests2.UsageTest.wrongArguments":317,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":280,"org.easymock.samples.ExampleTest.answerVsDelegate":308,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":411,"org.easymock.tests2.UsageConstraintsTest.testNull":71,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":203,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":459,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":442,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":107,"org.easymock.tests2.CaptureTest.testPrimitive":117,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":23,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":177,"org.easymock.tests.UsageTest.moreThanOneArgument":8,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":5,"org.easymock.tests.UsageTest.argumentsOrdered":145,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":296,"org.easymock.tests.UsageVarargTest.varargIntAccepted":180,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":269,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":301,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":448,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":409,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":351,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":304,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":135,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":110,"org.easymock.tests.ReplayStateInvalidUsageTest.times":250,"org.easymock.tests2.AnswerTest.answer":91,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":333,"org.easymock.tests2.CaptureTest.testAnd":115,"org.easymock.tests2.UsageTest.strictResetToDefault":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":464,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":141,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":102,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":16,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":300,"org.easymock.tests2.DelegateToTest.testDelegate":356,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":173,"org.easymock.tests.LimitationsTest.mockFinalMethod":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":235,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":211,"org.easymock.tests2.CaptureTest.testCapture1_2446744":118,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":171,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":331,"org.easymock.tests.UsageThrowableTest.throwError":34,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":244,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":149,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":352,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":493,"org.easymock.samples.PartialClassMockTest.testGetArea":443,"org.easymock.tests.MockingTest.testInterfaceMocking":201,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":245,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":302,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":480,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":159,"org.easymock.tests2.UsageTest.niceToStrict":51,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":287,"org.easymock.tests2.ThreadingTest.testChangeDefault":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":254,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":57,"org.easymock.tests2.MockBuilderTest.testCreateMock":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":488,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":372,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":167,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":130,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":103,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":157,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":190,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":278,"org.easymock.tests.UsageOverloadedMethodTest.overloading":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":484,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":80,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":207,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":30,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":210,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":79,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":121,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":181,"org.easymock.tests2.EasyMockSupportClassTest.testAll":472,"org.easymock.tests.MockClassControlTest.testEquals":441,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":421,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":394,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":175,"org.easymock.tests2.CaptureTest.testCaptureAll":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":233,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":332,"org.easymock.tests.MockNameTest.defaultName":199,"org.easymock.tests2.UsageConstraintsTest.testMatches":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":142,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":242,"org.easymock.samples.ExampleTest.voteForRemovals":312,"org.easymock.tests.UsageVarargTest.allKinds":189,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":24,"org.easymock.samples.BasicClassMockTest.testPrintContent":447,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":234,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":39,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":348,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":355,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":405,"org.easymock.tests2.UsageConstraintsTest.greaterThan":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":473,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":15,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":65,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":434,"org.easymock.samples.ExampleTest.voteForRemoval":309,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":465,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":94,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":461,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":412,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":48,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":100,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":236,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":138,"org.easymock.tests2.CaptureTest.testCaptureFirst":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":101,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":56,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":209,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":28,"org.easymock.tests2.CaptureTest.testCapture2_2446744":124,"org.easymock.tests2.UsageTest.moreThanOneArgument":50,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":340,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":272,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":188,"org.easymock.tests.GenericTest.testBridgedEquals":423,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":197,"org.easymock.tests.UsageExpectAndReturnTest.longType":221,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":176,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":46,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":324,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":174,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":140,"org.easymock.tests.UsageCallCountTest.tooManyCalls":198,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":133,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":489,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":223,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":374,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":163,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":38,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":495,"org.easymock.tests.MockingTest.testNiceClassMocking":419,"org.easymock.tests.MockingTest.testClassMocking":414,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":191,"org.easymock.tests2.UsageConstraintsTest.testContains":78,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":92,"org.easymock.tests2.UsageConstraintsTest.testFind":70,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":20,"org.easymock.tests.MockTypeTest.fromEasyMockClass":148,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":288,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":339,"org.easymock.tests.UsageExpectAndReturnTest.object":29,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":106,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":402,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":183,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":285,"org.easymock.tests.UsageTest.exactCallCountByLastCall":11,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":259,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":146,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":297,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":389,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":407,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":226,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":206,"org.easymock.tests.MockClassControlTest.testHashCode":440,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":343,"org.easymock.tests2.EasyMockSupportTest.testVerify":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":482,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":134,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":298,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":156,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":204,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":330,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":381,"org.easymock.tests.UsageVarargTest.varargCharAccepted":182,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":277,"org.easymock.tests2.UsageTest.openCallCountByLastCall":52,"org.easymock.tests.DefaultClassInstantiatorTest.object":428,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":109,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":155,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":283,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":483,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":165,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":342,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":439,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":63,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":164,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":227,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":491,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":438,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":393,"org.easymock.tests2.UsageTest.resumeIfFailure":55,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":239,"org.easymock.tests2.StubTest.stubWithReturnValue":114,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":399,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":87,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":224,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":270,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":131,"org.easymock.samples.SupportTest.voteForRemovals":316,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":398,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":345,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":170,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":276,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":325,"org.easymock.tests.UsageExpectAndThrowTest.object":168,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":147,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":85,"org.easymock.tests2.DelegateToTest.testWrongClass":354,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":293,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":294,"org.easymock.samples.ConstructorCalledMockTest.testTax":444,"org.easymock.tests.UsageStrictMockTest.range":42,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":363,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":105,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":494,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":169,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":469,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":144,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":252,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":279,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":127,"org.easymock.tests2.CaptureTest.testCaptureNone":120,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":45,"org.easymock.tests.UsageUnorderedTest.message":214,"org.easymock.tests.UsageVerifyTest.twoReturns":25,"org.easymock.tests.UsageVarargTest.varargByteAccepted":187,"org.easymock.tests2.ThreadingTest.testThreadSafe":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":486,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":195,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":446,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":286,"org.easymock.tests2.CaptureTest.testCapture_2617107":384,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":397,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":213,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":274,"org.easymock.tests2.UsageConstraintsTest.any":76,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":249,"org.easymock.tests2.StubTest.stub":380,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":154,"org.easymock.tests.UsageExpectAndThrowTest.longType":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":275,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":432,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":248,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":378,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":97,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests.LimitationsTest.mockNativeMethod":426,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":422,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":229,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":367,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":379,"org.easymock.tests2.NameTest.nameForMocksControl":362,"org.easymock.tests2.MockedExceptionTest.testMockedException":335,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":474,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":10,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":418,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":162,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":338,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":458,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":454,"org.easymock.tests.MockingTest.testNicePartialClassMocking":417,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":460,"org.easymock.tests2.CaptureTest.testCaptureLast":119,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":365,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":212,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":499,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":74,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":86,"org.easymock.tests.MockingTest.testTwoMocks":415,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":383,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":218,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":166,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":319,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":89,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":136,"org.easymock.samples.ExampleTest.removeNonExistingDocument":313,"org.easymock.tests.UsageStrictMockTest.differentMethods":43,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":344,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":430,"org.easymock.tests2.ConstraintsToStringTest.andToString":395,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":95,"org.easymock.tests2.MockBuilderTest.testCreateMockString":457,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":476,"org.easymock.tests.UsageExpectAndThrowTest.floatType":160,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":471,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":327,"org.easymock.tests.UsageVerifyTest.twoThrows":217,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":485,"org.easymock.samples.ExampleTest.voteAgainstRemoval":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":265,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":295,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":64,"org.easymock.tests.LimitationsTest.privateConstructor":425,"org.easymock.tests2.UsageConstraintsTest.testNotNull":88,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":40,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":334,"org.easymock.tests2.UsageTest.defaultResetToNice":54,"org.easymock.samples.ExampleTest.voteAgainstRemovals":307,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":266,"org.easymock.tests.UsageVarargTest.differentLength":184,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":366,"org.easymock.tests2.CallbackTest.callback":341,"org.easymock.tests2.UsageConstraintsTest.equals":322,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":462,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":387,"org.easymock.tests.UsageTest.openCallCountByLastCall":9,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":66,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":215,"org.easymock.tests.UsageCallCountTest.tooFewCalls":193,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":497,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":281,"org.easymock.tests.UsageThrowableTest.throwCheckedException":37,"org.easymock.tests.MockingTest.testStrictClassMocking":413,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":128,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":498,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":200,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":496,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":370,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":251,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":382,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":329,"org.easymock.tests.ObjectMethodsTest.testHashCode":284,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":408,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":96,"org.easymock.tests2.NameTest.nameForNiceMock":361,"org.easymock.tests2.DependencyTest.testInterfaceMocking":58,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":403,"org.easymock.samples.ExampleTest.addDocument":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":492,"org.easymock.tests2.DelegateToTest.testStubDelegate":139,"org.easymock.tests2.AnswerTest.stubAnswer":328,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":41,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":132,"org.easymock.tests.UsageVarargTest.varargLongAccepted":186,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":263,"org.easymock.tests.UsageExpectAndReturnTest.floatType":220,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":228,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":406,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":445,"org.easymock.tests2.ConstraintsToStringTest.orToString":391,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":4,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":208,"org.easymock.tests.UsageThrowableTest.noUpperLimit":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":350,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":67,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":467,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":385,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":429,"org.easymock.tests2.UsageConstraintsTest.testSame":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":219,"org.easymock.samples.SupportTest.addDocument":315,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":477,"org.easymock.tests.GenericTest.testPackageScope":420,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":258,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":349,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":202,"org.easymock.tests2.NameTest.nameForMock":359,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":31,"org.easymock.tests2.UsageStrictMockTest.differentMethods":113,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":463,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":222,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":172,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":282,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":17,"org.easymock.tests2.MockedExceptionTest.testRealException":336,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":268,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":364,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":388,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":267,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":22,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":253,"org.easymock.tests2.NameTest.nameForStrictMock":360,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":451,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":337,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":61,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":468,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":431,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":84,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":449,"org.easymock.tests2.UsageStrictMockTest.range":112,"org.easymock.tests2.UsageConstraintsTest.lessThan":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":346,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":404,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":481,"org.easymock.tests2.CaptureTest.testCaptureRightOne":122,"org.easymock.tests2.UsageConstraintsTest.testOr":73,"org.easymock.tests.UsageRangeTest.combination":14,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":60,"org.easymock.tests.UsageTest.wrongArguments":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":478,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":436,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":26,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":255,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":433,"org.easymock.tests.UsageVarargTest.varargShortAccepted":185,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":196,"org.easymock.tests2.UsageConstraintsTest.cmpTo":77,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":326,"org.easymock.tests2.CompareToTest.testLessThan":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":257,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":53,"org.easymock.tests2.CaptureTest.testCaptureFromStub":123,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":243,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":450,"org.easymock.tests.UsageTest.unexpectedCallWithArray":126,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":129,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":194,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":33,"org.easymock.tests2.UsageConstraintsTest.constraints":68,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":290,"org.easymock.samples.ExampleTest.addAndChangeDocument":314,"org.easymock.tests2.ConstraintsToStringTest.notToString":392,"org.easymock.tests.UsageStrictMockTest.testVerify":292,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":305,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":289,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":232,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":386,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":303,"org.easymock.tests.LimitationsTest.abstractClass":424,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":27,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":47,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":18,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":104}}]
