[{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[8,9,10,2,11,12,13,7,14,15,16,17,18],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[20,21,22,23,19,24,25,26,27,28,29],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1988","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1052","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,8,197,198,9,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,0,1,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,10,328,329,330,2,11,12,331,13,332,333,334,335,336,337,338,339,340,341,342,343,344,7,345,346,347,14,348,349,15,350,351,20,21,352,353,22,354,23,19,355,24,356,357,358,359,360,361,362,363,364,25,365,366,367,368,26,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,16,419,420,17,18,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,27,501,28,502,503,504,505,506,507,508,29,509,510,511],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[92,104,105,133,134,135,136,137,138,204,205,265,266,272,273,291,292,293,294,295,296,344,346,350,351,20,21,353,22,354,23,19,355,24,356,357,358,359,360,361,362,363,364,25,365,366,367,368,26,369,370,377,391,393,394,398,400,484,485,491,27,501,28,502,503,504,505,506,507,508,29,509,510,511],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[21,23],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[37,512,513,265,514,515],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[37,265,266,268,269,271,337,339,341,346,348,484,486,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[226,516,517],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[404,473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[93,106,107,108,109,110,112,115,8,197,198,199,206,207,208,209,222,223,224,225,226,227,228,283,284,285,286,287,288,289,290,297,0,1,307,308,336,337,339,340,341,342,344,345,346,347,14,348,349,15,387,388,389,420,439,442,445,448,450,452,453,456,459,462,463,466,492,493,494,495,498,499],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[223,227],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[27,28,502,503,504,505,506,508,518,29,509,511],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:332","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","value":"shouldBeUsedInOneThread"}},{"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[519,518],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,8,197,198,9,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,0,1,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,10,328,329,330,2,11,12,331,13,332,333,334,335,336,337,338,339,340,341,342,343,344,7,345,346,347,14,348,349,15,350,351,20,21,352,353,22,354,23,19,355,24,356,357,358,359,360,361,362,363,364,25,365,366,367,368,26,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,16,419,420,17,18,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,27,501,28,502,503,504,505,506,507,508,29,509,510,511],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[218,241,245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[37,38,41,42,520,133,140,141,265,268,314,320,321,486],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[37,512,513,265,514,515],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,96,97,98,99,100,101,102,104,105,109,110,112,116,118,119,120,122,123,126,127,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,208,253,254,255,256,263,264,265,266,267,268,269,270,272,273,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,0,1,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,10,328,329,330,12,331,13,334,335,336,337,338,339,340,341,342,344,346,347,14,348,350,351,20,21,353,22,354,23,19,355,356,357,358,359,360,361,362,363,364,25,365,366,367,368,26,369,370,377,380,381,382,383,384,385,386,387,388,389,390,391,393,394,396,397,398,399,400,406,414,415,416,418,16,419,420,17,421,422,423,424,425,426,427,428,429,430,431,432,433,448,451,461,467,475,482,483,484,485,486,487,488,489,490,492,493,494,495,497,498,499,27,501,28,502,503,504,505,506,507,508,29,509,510,511],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[37,512,513,265,514,515],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[521],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[522],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[222,223,224,225,227,228],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[58,59,60],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[235,378,381,382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[523,16,419,420],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[363,524],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[36,37,38,41,42,47,50,51,52,53,54,103,130,131,133,139,140,141,258,261,262,265,266,268,269,285,286,287,313,314,320,321,324,326,329,330,331,13,337,346,348,15,406,407,424,427,429,435,436,437,438,475,476,484,486,487,493,494,498,499],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[20,355,360,370],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":21,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests2.UsageTest.argumentsOrdered":321,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":431,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":239,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":316,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":298,"org.easymock.tests2.DelegateToTest.testReturnException":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":201,"org.easymock.tests.MockingTest.testPartialClassMocking":109,"org.easymock.tests.MockClassControlTest.testToString":285,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":434,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":45,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":455,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":451,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":61,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":335,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":183,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":355,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":134,"org.easymock.tests2.UsageTest.wrongArguments":314,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":481,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":255,"org.easymock.samples.ExampleTest.answerVsDelegate":300,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":52,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":114,"org.easymock.tests2.UsageConstraintsTest.testNull":22,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":339,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":430,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":290,"org.easymock.tests2.CaptureTest.testPrimitive":502,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":138,"org.easymock.tests.UsageTest.moreThanOneArgument":36,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":80,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":32,"org.easymock.tests.UsageTest.argumentsOrdered":42,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":278,"org.easymock.tests.UsageVarargTest.varargIntAccepted":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":291,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":324,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":441,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":411,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":295,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":167,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":475,"org.easymock.tests.ReplayStateInvalidUsageTest.times":218,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":6,"org.easymock.tests2.DependencyTest.testClassMocking":332,"org.easymock.tests2.AnswerTest.answer":377,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":386,"org.easymock.tests2.CaptureTest.testAnd":27,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":49,"org.easymock.tests2.UsageTest.strictResetToDefault":312,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":31,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":425,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":118,"org.easymock.tests2.DelegateToTest.testDelegate":418,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":282,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":76,"org.easymock.tests.LimitationsTest.mockFinalMethod":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":196,"org.easymock.tests2.DependencyTest.testClassMockingSupport":333,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":130,"org.easymock.tests2.CaptureTest.testCapture1_2446744":503,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":74,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":384,"org.easymock.tests.UsageThrowableTest.throwError":184,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":212,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":51,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":412,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":34,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":170,"org.easymock.samples.PartialClassMockTest.testGetArea":297,"org.easymock.tests.MockingTest.testInterfaceMocking":111,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":292,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":456,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":62,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":262,"org.easymock.tests2.UsageTest.niceToStrict":315,"org.easymock.tests2.ThreadingTest.testChangeDefault":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":229,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":10,"org.easymock.tests2.MockBuilderTest.testCreateMock":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":464,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":478,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":514,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":70,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":426,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":48,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":60,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":94,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":253,"org.easymock.tests.UsageOverloadedMethodTest.overloading":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":460,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":123,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":360,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":153,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":127,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":516,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":359,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":508,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":84,"org.easymock.tests2.EasyMockSupportClassTest.testAll":448,"org.easymock.tests.MockClassControlTest.testEquals":289,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":198,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":78,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":522,"org.easymock.tests2.CaptureTest.testCaptureAll":501,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":385,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":194,"org.easymock.tests.MockNameTest.defaultName":103,"org.easymock.tests2.UsageConstraintsTest.testMatches":361,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":33,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":210,"org.easymock.samples.ExampleTest.voteForRemovals":304,"org.easymock.tests.UsageVarargTest.allKinds":92,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":195,"org.easymock.samples.BasicClassMockTest.testPrintContent":308,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":190,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":482,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":417,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":205,"org.easymock.tests2.UsageConstraintsTest.greaterThan":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":449,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":117,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":348,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":171,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":228,"org.easymock.samples.ExampleTest.voteForRemoval":301,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":396,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":349,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":53,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":342,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":163,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":93,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":311,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":423,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":200,"org.easymock.tests2.CaptureTest.testCaptureFirst":511,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":424,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":323,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":126,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":149,"org.easymock.tests2.CaptureTest.testCapture2_2446744":510,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":398,"org.easymock.tests2.UsageTest.moreThanOneArgument":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":247,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":331,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":91,"org.easymock.tests.GenericTest.testBridgedEquals":199,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":101,"org.easymock.tests.UsageExpectAndReturnTest.longType":145,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":421,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":79,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":277,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":367,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":77,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":30,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":56,"org.easymock.tests.UsageCallCountTest.tooManyCalls":102,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":465,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":480,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":66,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":189,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":493,"org.easymock.tests.MockingTest.testNiceClassMocking":115,"org.easymock.tests.MockingTest.testClassMocking":107,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":95,"org.easymock.tests2.UsageConstraintsTest.testContains":358,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":389,"org.easymock.tests2.UsageConstraintsTest.testFind":353,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":129,"org.easymock.tests.MockTypeTest.fromEasyMockClass":50,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":393,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":263,"org.easymock.tests.UsageExpectAndReturnTest.object":152,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":344,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":479,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":429,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":86,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":260,"org.easymock.tests.UsageTest.exactCallCountByLastCall":43,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":234,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":44,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":158,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":81,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":122,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":402,"org.easymock.tests.MockClassControlTest.testHashCode":288,"org.easymock.tests2.EasyMockSupportTest.testVerify":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":458,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":280,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":120,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":59,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":383,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":491,"org.easymock.tests.UsageVarargTest.varargCharAccepted":85,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":252,"org.easymock.tests2.UsageTest.openCallCountByLastCall":317,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":432,"org.easymock.tests.DefaultClassInstantiatorTest.object":222,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":58,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":258,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":520,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":459,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":68,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":473,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":401,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":169,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":287,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":67,"org.easymock.tests.CapturesMatcherTest.test":519,"org.easymock.tests.ReplayStateInvalidCallsTest.times":175,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":159,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":55,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":467,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":286,"org.easymock.tests2.UsageTest.resumeIfFailure":322,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":47,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":203,"org.easymock.tests2.StubTest.stubWithReturnValue":490,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":151,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":368,"org.easymock.tests2.SerializationTest.testAllMockedMethod":420,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":245,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":515,"org.easymock.samples.SupportTest.voteForRemovals":310,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":8,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":404,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":73,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":523,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":251,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":378,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":46,"org.easymock.tests.UsageExpectAndThrowTest.object":71,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":365,"org.easymock.tests2.DelegateToTest.testWrongClass":416,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":173,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":272,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":273,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":268,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":443,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":428,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":492,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":72,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":445,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":41,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":220,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":254,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":512,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":165,"org.easymock.tests2.CaptureTest.testCaptureNone":507,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":276,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":372,"org.easymock.tests.UsageUnorderedTest.message":133,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":521,"org.easymock.tests.UsageVerifyTest.twoReturns":141,"org.easymock.tests.UsageVarargTest.varargByteAccepted":90,"org.easymock.tests2.ThreadingTest.testThreadSafe":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":462,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":99,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":261,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":307,"org.easymock.tests2.CaptureTest.testCapture_2617107":28,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":249,"org.easymock.tests2.UsageConstraintsTest.any":356,"org.easymock.tests2.StubTest.stub":489,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":217,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":57,"org.easymock.tests.UsageExpectAndThrowTest.longType":64,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":250,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":226,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":216,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":485,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":406,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests.LimitationsTest.mockNativeMethod":208,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":161,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":9,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":472,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":181,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":488,"org.easymock.tests2.NameTest.nameForMocksControl":438,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":373,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":474,"org.easymock.tests2.MockedExceptionTest.testMockedException":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":450,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":40,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":392,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":112,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":65,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":336,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":330,"org.easymock.tests.MockingTest.testNicePartialClassMocking":110,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":341,"org.easymock.tests2.CaptureTest.testCaptureLast":506,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":470,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":131,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":499,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":180,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":19,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":366,"org.easymock.tests.MockingTest.testTwoMocks":108,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":177,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":500,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":142,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":69,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":320,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":369,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":376,"org.easymock.samples.ExampleTest.removeNonExistingDocument":305,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":477,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":214,"org.easymock.tests.UsageStrictMockTest.differentMethods":269,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":403,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":224,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":375,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":397,"org.easymock.tests2.MockBuilderTest.testCreateMockString":13,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":452,"org.easymock.tests.UsageExpectAndThrowTest.floatType":63,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":447,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":380,"org.easymock.tests.UsageVerifyTest.twoThrows":140,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":461,"org.easymock.samples.ExampleTest.voteAgainstRemoval":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":240,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":274,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":14,"org.easymock.tests.LimitationsTest.privateConstructor":207,"org.easymock.tests2.UsageConstraintsTest.testNotNull":26,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":387,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":191,"org.easymock.tests2.UsageTest.defaultResetToNice":319,"org.easymock.samples.ExampleTest.voteAgainstRemovals":299,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":241,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":471,"org.easymock.tests.UsageVarargTest.differentLength":87,"org.easymock.tests2.CallbackTest.callback":400,"org.easymock.tests2.UsageConstraintsTest.equals":352,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":7,"org.easymock.tests.UsageTest.openCallCountByLastCall":39,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":350,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":136,"org.easymock.tests.UsageCallCountTest.tooFewCalls":97,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":495,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":256,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":374,"org.easymock.tests.UsageThrowableTest.throwCheckedException":188,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":513,"org.easymock.tests.MockingTest.testStrictClassMocking":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":498,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":105,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":494,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":476,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":497,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":382,"org.easymock.tests.ObjectMethodsTest.testHashCode":259,"org.easymock.tests2.NameTest.nameForNiceMock":437,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":399,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":179,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":174,"org.easymock.tests2.DependencyTest.testInterfaceMocking":334,"org.easymock.samples.ExampleTest.addDocument":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":468,"org.easymock.tests2.DelegateToTest.testStubDelegate":415,"org.easymock.tests2.AnswerTest.stubAnswer":381,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":266,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":2,"org.easymock.tests.UsageVarargTest.varargLongAccepted":89,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":238,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":160,"org.easymock.tests.UsageExpectAndReturnTest.floatType":144,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":17,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":410,"org.easymock.tests.UsageThrowableTest.noUpperLimit":185,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":124,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":364,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":351,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":439,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":504,"org.easymock.tests2.SerializationTest.test":419,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":517,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":223,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":143,"org.easymock.tests2.UsageConstraintsTest.testSame":354,"org.easymock.samples.SupportTest.addDocument":309,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":496,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":164,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":453,"org.easymock.tests.GenericTest.testPackageScope":197,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":233,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":409,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":113,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":162,"org.easymock.tests2.NameTest.nameForMock":435,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":154,"org.easymock.tests2.UsageStrictMockTest.differentMethods":487,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":4,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":345,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":146,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":75,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":257,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":119,"org.easymock.tests2.MockedExceptionTest.testRealException":390,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":54,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":243,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":242,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":135,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":221,"org.easymock.tests2.NameTest.nameForStrictMock":436,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":327,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":391,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":340,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":442,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":25,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":225,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":325,"org.easymock.tests2.UsageStrictMockTest.range":486,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":168,"org.easymock.tests2.UsageConstraintsTest.lessThan":370,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":405,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":457,"org.easymock.tests2.CaptureTest.testCaptureRightOne":29,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":371,"org.easymock.tests2.UsageConstraintsTest.testOr":23,"org.easymock.tests.UsageRangeTest.combination":116,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":337,"org.easymock.tests.UsageTest.wrongArguments":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":454,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":230,"org.easymock.tests.UsageVarargTest.varargShortAccepted":88,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":227,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":100,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":182,"org.easymock.tests2.UsageConstraintsTest.cmpTo":357,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":379,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":232,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":318,"org.easymock.tests2.CaptureTest.testCaptureFromStub":509,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":211,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":326,"org.easymock.tests.UsageTest.unexpectedCallWithArray":37,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":178,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":265,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":98,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":3,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":156,"org.easymock.tests2.CaptureTest.testCapture":518,"org.easymock.tests2.UsageConstraintsTest.constraints":20,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":267,"org.easymock.samples.ExampleTest.addAndChangeDocument":306,"org.easymock.tests.UsageStrictMockTest.testVerify":271,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":296,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":264,"org.easymock.tests2.CompareToTest.testGreateThan":524,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":193,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":505,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":293,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":148,"org.easymock.tests.LimitationsTest.abstractClass":206,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":125,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":427,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":82}}]
