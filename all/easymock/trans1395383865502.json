[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[118,119,120],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[121,122,123],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[124,125],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[126,127],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:733","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[128],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[129,130],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,0,1,1,2,3,4,5,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,27,28,29,30,35,36,39,43,44,45,47,49,50,53,59,62,72,78,94,95,96,100,104,105,106,107,110,117],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[131,132,133,134,135,136,137,138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[139,140,141,142,143,121,144,145,146,147,148,149],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[150],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[86,151,152],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[27,32,153],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[131,154,155,156,157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[158,159,132,160,161,162,163,145,164,165,166,167,168,169,170],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl() : org.easymock.EasyMockSupport.createStrictControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1013","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[26,171],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[172],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[86,151,152],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:159","sourceCode":"final java.lang.ClassCastException java.lang.ClassCastException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[173,174,175,176],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[176],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[158,177,159,178,142,179,180,181,160,161,182,163,149,164,165,168,169],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[183,184,141,158,177,159,178,132,174,185,142,179,186,180,181,160,161,182,187,163,188,147,149,164,165,168,169],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[189],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":14,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":12,"org.easymock.tests2.UsageTest.argumentsOrdered":181,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":137,"org.easymock.tests2.CompareToTest.testGreateOrEqual":189,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":186,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":46,"org.easymock.tests2.NameTest.nameForNiceMock":153,"org.easymock.tests2.SerializationTest.testAllMockedMethod":9,"org.easymock.tests2.DelegateToTest.testReturnException":154,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":143,"org.easymock.tests.MockingTest.testPartialClassMocking":105,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":159,"org.easymock.samples.BasicClassMockTest.testPrintContent":4,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":93,"org.easymock.tests.MockClassControlTest.testToString":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":79,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":32,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":66,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":62,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":145,"org.easymock.tests2.UsageConstraintsTest.greaterThan":130,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":60,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":30,"org.easymock.tests2.DelegateToTest.testWrongClass":155,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":147,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":89,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":31,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":128,"org.easymock.tests2.UsageTest.wrongArguments":179,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":5,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":23,"org.easymock.samples.ExampleTest.answerVsDelegate":131,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":10,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":92,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":117,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":54,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":20,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":116,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":45,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":48,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":152,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":83,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":168,"org.easymock.tests.UsageTest.moreThanOneArgument":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":56,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":57,"org.easymock.tests.UsageUnorderedTest.message":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":64,"org.easymock.tests.GenericTest.testPackageScope":94,"org.easymock.tests2.UsageTest.moreThanOneArgument":142,"org.easymock.tests.UsageVerifyTest.twoReturns":144,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":50,"org.easymock.tests.UsageTest.argumentsOrdered":169,"org.easymock.tests.GenericTest.testBridgedEquals":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":73,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":3,"org.easymock.tests2.CaptureTest.testCapture_2617107":173,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":178,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":36,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":52,"org.easymock.tests2.UsageStrictMockTest.differentMethods":140,"org.easymock.tests2.UsageConstraintsTest.any":124,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":51,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":26,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":119,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":86,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":184,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":120,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests.LimitationsTest.mockNativeMethod":100,"org.easymock.tests2.AnswerTest.answer":135,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":76,"org.easymock.tests2.UsageTest.strictResetToDefault":171,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":141,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":27,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":139,"org.easymock.tests2.MockedExceptionTest.testMockedException":34,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":123,"org.easymock.tests.MockingTest.testNiceClassMocking":108,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":11,"org.easymock.tests.MockingTest.testClassMocking":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":61,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":167,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":38,"org.easymock.tests2.DelegateToTest.testDelegate":156,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":107,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":35,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":47,"org.easymock.tests.MockingTest.testNicePartialClassMocking":106,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":22,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":42,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":133,"org.easymock.tests.LimitationsTest.mockFinalMethod":101,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":21,"org.easymock.tests2.CompareToTest.testCompareEqual":150,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":187,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":134,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":55,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":176,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":175,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":126,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":15,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":85,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":24,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":39,"org.easymock.tests.MockingTest.testTwoMocks":104,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":162,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":16,"org.easymock.tests.UsageTest.exactCallCountByLastCall":170,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":180,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":125,"org.easymock.tests.UsageStrictMockTest.differentMethods":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":68,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":182,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":6,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":19,"org.easymock.tests.UsageTest.wrongArguments":165,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":157,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":84,"org.easymock.tests2.MockBuilderTest.testWithConstructor":37,"org.easymock.tests2.MockBuilderTest.testCreateMockString":53,"org.easymock.tests.MockClassControlTest.testHashCode":114,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":65,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":63,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":58,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":69,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":118,"org.easymock.tests.UsageVerifyTest.twoThrows":121,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":7,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":138,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":72,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":81,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":67,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":90,"org.easymock.tests.LimitationsTest.privateConstructor":99,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":33,"org.easymock.tests.DefaultClassInstantiatorTest.object":82,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":43,"org.easymock.tests2.MockBuilderTest.testCreateMock":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":75,"org.easymock.tests2.CallbackTest.callback":132,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":40,"org.easymock.tests.UsageTest.unexpectedCallWithArray":164,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":25,"org.easymock.tests.UsageTest.openCallCountByLastCall":166,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":70,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":163,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":188,"org.easymock.tests2.UsageConstraintsTest.constraints":174,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":113,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":77,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":13,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":151,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":78,"org.easymock.tests2.CompareToTest.testGreateThan":129,"org.easymock.tests.UsageThrowableTest.throwCheckedException":122,"org.easymock.tests.MockClassControlTest.testEquals":115,"org.easymock.tests2.EasyMockSupportClassTest.testAll":59,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":17,"org.easymock.tests.LimitationsTest.abstractClass":98,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":91,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":95,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":172,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":161,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":148,"org.easymock.tests.MockingTest.testStrictClassMocking":102}}]
