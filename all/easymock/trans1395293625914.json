[{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,0,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,180,181,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[316,318,319,320,321,322,323,325,330,326,327,329],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,346,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,347,56,57,348,349,350,58,59,351,60,352,353,354,61,62,63,64,65,66,67,68,355,69,70,71,72,73,356,74,357,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,358,117,118,359,360,119,120,121,122,123,124,361,362,125,363,126,127,128,129,130,131,132,133,134,135,136,137,138,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,139,140,141,142,394,143,144,145,395,396,146,147,0,148,149,150,151,152,153,154,155,397,398,399,400,401,402,403,404,405,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,180,181,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,406,407,201,202,203,204,408,205,206,207,409,410,208,209,210,211,212,213,214,215,216,411,217,412,413,218,219,220,221,414,415,222,223,224,225,416,226,227,228,229,230,231,417,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,418,419,250,251,252,253,254,255,256,257,258,259,260,261,420,262,263,264,265,266,267,268,421,422,423,424,425,269,426,427,428,429,430,431,432,270,271,272,433,273,274,275,276,277,434,278,279,280,281,282,283,284,285,286,287,288,289,290,435,291,292,293,294,436,437,438,439,440,441,442,295,443,444,296,445,446,447,448,449,450,451,452,453,297,454,455,456,457,458,298,459,460,461,462,463,464,465,299,466,467,468,469,470,471,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[8,9,12,13,472,75,82,83,0,150,189,195,196,304],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[341,344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[8,9,12,13,472,70,75,82,83,0,150,189,195,196,304],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[417],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[180,181,473,474,475,408,476,477,478,479,480,412,274,277,434],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[6,82,123,373,186,308],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[248,481],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[356],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[482,483],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,331,332,333,334,484,485,335,336,337,338,339,340,341,342,343,344,345,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,346,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,347,56,57,348,349,350,58,59,351,60,352,353,354,61,62,63,64,65,66,67,68,355,69,70,71,72,73,356,74,357,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,358,117,118,359,360,119,120,121,122,123,124,361,362,125,363,126,127,128,129,130,131,132,133,134,135,136,137,486,138,364,365,366,367,368,487,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,139,140,141,142,394,143,144,145,395,396,146,147,0,148,149,150,151,152,153,154,155,397,398,399,400,401,402,403,404,405,488,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,473,200,406,474,407,201,202,203,475,204,489,408,205,206,477,207,409,410,208,209,210,211,212,213,214,215,216,411,217,412,413,218,219,220,221,414,415,222,223,224,225,416,226,227,228,229,230,231,417,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,418,419,250,251,252,253,254,255,256,257,258,259,260,261,420,262,263,264,265,266,267,268,421,422,423,424,425,269,426,427,428,429,430,431,432,270,271,272,433,273,274,275,276,277,434,490,278,279,280,281,282,283,284,285,286,287,288,289,290,435,291,292,293,294,436,491,492,493,437,438,439,440,441,442,295,443,444,296,445,446,447,448,449,450,451,452,453,297,454,455,456,457,458,298,459,460,461,462,463,464,465,299,466,467,468,469,470,471,300,301,302,303,304,305,306,307,308,494,309,310,311,312,495,313,314,315,496,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:183","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[456],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[497],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[370,374,375,384,389],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[332,71,117,359,397,398,399],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[329],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[8,499,500,0,501,502],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[119,120,121,122,123,124,377,308],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:29","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResults>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:73","sourceCode":"try {\n    java.lang.Object = java.lang.reflect.Field.get(java.lang.Object);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[367,503,504],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[505],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"failures":[506,316,317,318,319,320,321,322,323,325,326,327,328,329],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[507],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[56,232],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[473,474,475,477,508,482,509,510,511,512,434,513,311,315,496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[206,415],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[514,274,275,276],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[483],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":225,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":6,"org.easymock.tests2.UsageTest.argumentsOrdered":196,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":288,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":380,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":191,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":171,"org.easymock.tests2.DelegateToTest.testReturnException":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":120,"org.easymock.tests.MockingTest.testPartialClassMocking":58,"org.easymock.tests.MockClassControlTest.testToString":158,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":435,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":332,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":448,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":15,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":296,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":209,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":231,"org.easymock.tests2.UsageTest.wrongArguments":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":76,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":471,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":141,"org.easymock.samples.ExampleTest.answerVsDelegate":173,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":337,"org.easymock.tests2.UsageConstraintsTest.testNull":227,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":353,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":213,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":163,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":287,"org.easymock.tests2.CaptureTest.testPrimitive":319,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":34,"org.easymock.tests.UsageTest.moreThanOneArgument":7,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":3,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":401,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageVarargTest.varargIntAccepted":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":385,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":164,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":199,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":492,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":430,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":168,"org.easymock.tests.ReplayStateInvalidUsageTest.times":134,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":299,"org.easymock.tests2.DependencyTest.testClassMocking":409,"org.easymock.tests2.AnswerTest.answer":249,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":387,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":256,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":485,"org.easymock.tests2.CaptureTest.testAnd":316,"org.easymock.tests2.UsageTest.strictResetToDefault":187,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":474,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":2,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":63,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":282,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":405,"org.easymock.tests2.DelegateToTest.testDelegate":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":30,"org.easymock.tests.LimitationsTest.mockFinalMethod":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":116,"org.easymock.tests2.DependencyTest.testClassMockingSupport":410,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":356,"org.easymock.tests2.CaptureTest.testCapture1_2446744":320,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":411,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":254,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":128,"org.easymock.tests.UsageThrowableTest.throwError":104,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":336,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":488,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":5,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":478,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":460,"org.easymock.samples.PartialClassMockTest.testGetArea":170,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":129,"org.easymock.tests.MockingTest.testInterfaceMocking":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":449,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":396,"org.easymock.tests2.UsageTest.niceToStrict":190,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":16,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":201,"org.easymock.tests2.MockBuilderTest.testCreateMock":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":456,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":468,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":24,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":283,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":484,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":47,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":139,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":510,"org.easymock.tests.UsageOverloadedMethodTest.overloading":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":453,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":68,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":236,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":71,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":95,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":503,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":235,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":325,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":346,"org.easymock.tests.MockClassControlTest.testEquals":162,"org.easymock.tests2.EasyMockSupportClassTest.testAll":295,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":118,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":32,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":498,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":114,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":255,"org.easymock.tests2.CaptureTest.testCaptureAll":317,"org.easymock.tests.MockNameTest.defaultName":347,"org.easymock.tests2.UsageConstraintsTest.testMatches":237,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":126,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":4,"org.easymock.samples.ExampleTest.voteForRemovals":177,"org.easymock.tests.UsageVarargTest.allKinds":45,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":81,"org.easymock.samples.BasicClassMockTest.testPrintContent":183,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":115,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":110,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":300,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":433,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":124,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":487,"org.easymock.tests2.UsageConstraintsTest.greaterThan":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":443,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":62,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":221,"org.easymock.samples.ExampleTest.voteForRemoval":174,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":369,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":414,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":264,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":497,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":338,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":493,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":216,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":186,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":46,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":280,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":119,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":432,"org.easymock.tests2.CaptureTest.testCaptureFirst":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":376,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":281,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":198,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":70,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":91,"org.easymock.tests2.UsageTest.moreThanOneArgument":188,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":266,"org.easymock.tests2.CaptureTest.testCapture2_2446744":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":388,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":206,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":44,"org.easymock.tests.GenericTest.testBridgedEquals":360,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":511,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":54,"org.easymock.tests.UsageExpectAndReturnTest.longType":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":112,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":278,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":33,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":400,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":244,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":1,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":341,"org.easymock.tests.UsageCallCountTest.tooManyCalls":55,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":457,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":470,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":310,"org.easymock.tests.MockingTest.testNiceClassMocking":354,"org.easymock.tests.MockingTest.testClassMocking":349,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":48,"org.easymock.tests2.UsageConstraintsTest.testContains":234,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":259,"org.easymock.tests2.UsageConstraintsTest.testFind":226,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":73,"org.easymock.tests.MockTypeTest.fromEasyMockClass":335,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":146,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":262,"org.easymock.tests.UsageExpectAndReturnTest.object":94,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":217,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":469,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":286,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":39,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":145,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":512,"org.easymock.tests.UsageTest.exactCallCountByLastCall":14,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":402,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":331,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":434,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":100,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":35,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":67,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":422,"org.easymock.tests.MockClassControlTest.testHashCode":161,"org.easymock.tests2.EasyMockSupportTest.testVerify":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":451,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":403,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":65,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":344,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":253,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":494,"org.easymock.tests.UsageVarargTest.varargCharAccepted":38,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":486,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":393,"org.easymock.tests2.UsageTest.openCallCountByLastCall":192,"org.easymock.tests.DefaultClassInstantiatorTest.object":138,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":289,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":343,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":143,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":452,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":464,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":421,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":160,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":219,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":21,"org.easymock.tests.CapturesMatcherTest.test":506,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":101,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":340,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":298,"org.easymock.tests2.UsageTest.resumeIfFailure":197,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":334,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":491,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":122,"org.easymock.tests2.StubTest.stubWithReturnValue":308,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":475,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":93,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":245,"org.easymock.tests2.SerializationTest.testAllMockedMethod":276,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":386,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":480,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":502,"org.easymock.samples.SupportTest.voteForRemovals":185,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":358,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":424,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":27,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":514,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":392,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":418,"org.easymock.tests.UsageExpectAndThrowTest.object":25,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":333,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":242,"org.easymock.tests2.DelegateToTest.testWrongClass":272,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":154,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":155,"org.easymock.samples.ConstructorCalledMockTest.testTax":180,"org.easymock.tests.UsageStrictMockTest.range":150,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":438,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":309,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":509,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":26,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":440,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":136,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":140,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":499,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":399,"org.easymock.tests2.CaptureTest.testCaptureNone":324,"org.easymock.tests.UsageUnorderedTest.message":75,"org.easymock.tests.UsageVerifyTest.twoReturns":83,"org.easymock.tests.UsageVarargTest.varargByteAccepted":43,"org.easymock.tests2.ThreadingTest.testThreadSafe":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":454,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":52,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":395,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":182,"org.easymock.tests2.CaptureTest.testCapture_2617107":318,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":390,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":79,"org.easymock.tests2.UsageConstraintsTest.any":232,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":133,"org.easymock.tests2.StubTest.stub":307,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":121,"org.easymock.tests.UsageExpectAndThrowTest.longType":18,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":367,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":132,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":303,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":269,"org.easymock.tests2.SerializationTest.testClass":274,"org.easymock.tests.LimitationsTest.mockNativeMethod":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":103,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":359,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":463,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":306,"org.easymock.tests2.NameTest.nameForMocksControl":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":465,"org.easymock.tests2.MockedExceptionTest.testMockedException":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":444,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":11,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":420,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":19,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":60,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":210,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":204,"org.easymock.tests.MockingTest.testNicePartialClassMocking":59,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":215,"org.easymock.tests2.CompareToTest.testNotComparable":505,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":461,"org.easymock.tests2.CaptureTest.testCaptureLast":323,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":74,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":230,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":315,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":243,"org.easymock.tests.MockingTest.testTwoMocks":350,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":496,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":23,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":195,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":247,"org.easymock.samples.ExampleTest.removeNonExistingDocument":178,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":467,"org.easymock.tests.UsageStrictMockTest.differentMethods":151,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":130,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":423,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":365,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":265,"org.easymock.tests2.MockBuilderTest.testCreateMockString":207,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":445,"org.easymock.tests.UsageExpectAndThrowTest.floatType":17,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":442,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":250,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":490,"org.easymock.tests.UsageVerifyTest.twoThrows":82,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":297,"org.easymock.samples.ExampleTest.voteAgainstRemoval":175,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":381,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":220,"org.easymock.tests.LimitationsTest.privateConstructor":362,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":482,"org.easymock.tests2.UsageConstraintsTest.testNotNull":246,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":111,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":257,"org.easymock.tests2.UsageTest.defaultResetToNice":194,"org.easymock.samples.ExampleTest.voteAgainstRemovals":172,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":382,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":462,"org.easymock.tests.UsageVarargTest.differentLength":40,"org.easymock.tests2.CallbackTest.callback":268,"org.easymock.tests2.UsageConstraintsTest.equals":416,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":412,"org.easymock.tests.UsageTest.openCallCountByLastCall":10,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":222,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":78,"org.easymock.tests.UsageCallCountTest.tooFewCalls":50,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":312,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":142,"org.easymock.tests.UsageThrowableTest.throwCheckedException":108,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":500,"org.easymock.tests.MockingTest.testStrictClassMocking":348,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":57,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":314,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":466,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":311,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":135,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":313,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":252,"org.easymock.tests2.CompareToTest.testGreateOrEqual":507,"org.easymock.tests.ObjectMethodsTest.testHashCode":144,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":267,"org.easymock.tests2.NameTest.nameForNiceMock":293,"org.easymock.tests2.DependencyTest.testInterfaceMocking":208,"org.easymock.samples.ExampleTest.addDocument":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":459,"org.easymock.tests2.DelegateToTest.testStubDelegate":271,"org.easymock.tests2.AnswerTest.stubAnswer":251,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":148,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":489,"org.easymock.tests.UsageVarargTest.varargLongAccepted":42,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":379,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":102,"org.easymock.tests.UsageExpectAndReturnTest.floatType":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":277,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":429,"org.easymock.tests.UsageThrowableTest.noUpperLimit":105,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":240,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":355,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":223,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":436,"org.easymock.tests2.SerializationTest.test":275,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":321,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":504,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":364,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":85,"org.easymock.tests2.UsageConstraintsTest.testSame":228,"org.easymock.samples.SupportTest.addDocument":184,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":495,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":446,"org.easymock.tests.GenericTest.testPackageScope":117,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":428,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":352,"org.easymock.tests2.NameTest.nameForMock":291,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":96,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":477,"org.easymock.tests2.UsageStrictMockTest.differentMethods":305,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":413,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":88,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":29,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":394,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":64,"org.easymock.tests2.MockedExceptionTest.testRealException":260,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":339,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":479,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":383,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":137,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":77,"org.easymock.tests2.NameTest.nameForStrictMock":292,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":407,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":513,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":261,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":214,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":437,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":241,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":366,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":200,"org.easymock.tests2.UsageStrictMockTest.range":304,"org.easymock.tests2.UsageConstraintsTest.lessThan":248,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":425,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":450,"org.easymock.tests2.CaptureTest.testCaptureRightOne":326,"org.easymock.tests2.UsageConstraintsTest.testOr":229,"org.easymock.tests.UsageRangeTest.combination":61,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":211,"org.easymock.tests.UsageTest.wrongArguments":9,"org.easymock.tests2.MockBuilderTest.testWithConstructor":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":447,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":371,"org.easymock.tests.UsageVarargTest.varargShortAccepted":41,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":368,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":53,"org.easymock.tests2.UsageConstraintsTest.cmpTo":233,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":419,"org.easymock.tests2.CompareToTest.testLessThan":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":373,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":193,"org.easymock.tests2.CaptureTest.testCaptureFromStub":327,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":127,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":406,"org.easymock.tests.UsageTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":51,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":476,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":98,"org.easymock.tests2.CaptureTest.testCapture":330,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":149,"org.easymock.tests2.UsageConstraintsTest.constraints":224,"org.easymock.samples.ExampleTest.addAndChangeDocument":179,"org.easymock.tests.UsageStrictMockTest.testVerify":153,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":169,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":113,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":166,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":90,"org.easymock.tests.LimitationsTest.abstractClass":361,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":167,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":69,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":36,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":284}}]
