[{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"this.org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[28,29,30,31],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[32,33,34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[36,12,37,38,39,40,41,42,13,14,15,43,16,44,17,45,46,20,21,47,24,25,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[49,50],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[51,52],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[53],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"failures":[54,55,56,57,58,59,60,61,62],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[63,64,65,66,67,68,69,70,36,71,12,37,72,54,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,38,39,40,41,88,89,90,48,91,51,92,93,94,95,96,97,98,99,100,101,102,103,104,105,9,10,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,42,13,49,166,167,168,169,14,15,170,171,61,172,173,174,175,176,177,178,179,1,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,196,197,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,2,3,4,5,6,7,216,217,218,219,220,221,222,16,44,223,17,45,224,225,226,227,228,229,230,231,232,233,234,235,236,28,29,237,238,239,240,241,242,243,244,245,246,247,248,249,250,30,31,251,252,253,254,255,256,257,18,258,259,260,261,262,263,264,265,266,46,20,21,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,52,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,22,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,47,23,24,334,335,25,26,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[63,64,65,66,67,68,69,70,36,71,12,37,72,54,73,74,377,378,379,380,381,75,382,383,384,385,386,387,76,77,78,79,80,388,389,390,81,391,392,82,393,394,395,396,397,398,399,400,401,83,402,403,404,405,406,84,407,408,85,409,86,87,410,38,39,40,41,88,89,90,48,411,91,51,92,93,94,95,96,97,98,99,100,101,102,103,104,105,9,10,106,107,108,109,110,111,112,113,412,413,114,115,116,117,60,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,414,415,416,417,418,136,419,420,421,422,423,424,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,425,426,427,428,160,161,162,163,164,165,42,13,49,166,167,168,169,14,15,170,171,61,62,172,173,174,175,176,177,178,179,1,180,181,182,183,184,185,186,429,187,430,50,188,189,190,191,431,432,433,434,192,193,194,195,196,196,197,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,2,3,4,5,6,7,216,217,218,435,436,437,438,439,440,441,8,442,443,444,445,446,447,448,449,219,450,451,452,453,454,220,455,221,222,16,44,223,17,45,224,225,226,227,228,229,456,230,231,232,233,234,235,236,28,29,237,457,458,459,460,461,462,238,239,240,241,242,243,244,245,246,247,248,249,250,30,31,463,464,251,465,252,253,254,255,256,257,18,466,258,467,468,469,470,471,472,473,259,260,261,262,263,264,265,266,46,20,21,267,268,269,270,271,272,273,274,275,276,474,277,278,279,475,280,281,282,476,283,284,285,286,287,288,289,52,477,290,291,292,478,479,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,22,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,47,23,24,334,335,25,26,336,337,338,339,340,341,342,343,480,344,345,346,347,348,349,350,351,352,353,354,355,481,482,356,357,358,483,359,484,485,486,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[487,488,489],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[64,67,68,441],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[85,409],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[154,444],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[63,66,67,68,70,36,71,12,37,72,54,73,74,76,77,78,79,80,85,86,87,88,89,90,48,91,51,92,93,94,95,97,98,99,100,101,102,103,104,105,9,10,106,107,108,109,110,111,112,114,115,122,123,124,125,126,127,128,129,130,131,132,133,134,135,150,151,152,153,155,156,157,159,160,161,162,163,164,165,42,13,49,166,167,168,169,14,15,170,171,61,173,174,177,178,179,1,180,181,182,183,184,185,186,187,188,190,192,201,202,203,204,205,206,208,211,212,213,214,215,2,3,4,5,6,7,216,217,218,222,16,44,223,17,45,224,226,227,228,229,230,232,234,235,242,251,252,254,255,257,262,263,264,265,266,46,20,21,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,286,287,288,289,52,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,22,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,47,24,334,335,25,26,336,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,362,363,364,365,367,368],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[48],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[154,158],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":48,"org.easymock.tests2.UsageTest.argumentsOrdered":15,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":333,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":444,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":166,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":195,"org.easymock.tests2.DelegateToTest.testReturnException":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":3,"org.easymock.tests.MockingTest.testPartialClassMocking":357,"org.easymock.tests.MockClassControlTest.testToString":371,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":410,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":313,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":43,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":55,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":95,"org.easymock.tests2.UsageTest.wrongArguments":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":262,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":387,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":228,"org.easymock.samples.ExampleTest.answerVsDelegate":202,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":471,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":485,"org.easymock.tests2.UsageConstraintsTest.testNull":51,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":183,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":146,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":376,"org.easymock.tests2.CaptureTest.testPrimitive":125,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":266,"org.easymock.tests.UsageTest.moreThanOneArgument":47,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":332,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":182,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":269,"org.easymock.tests.UsageTest.argumentsOrdered":26,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":337,"org.easymock.tests.UsageVarargTest.varargIntAccepted":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":449,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":211,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":423,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":215,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":488,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":75,"org.easymock.tests.ReplayStateInvalidUsageTest.times":246,"org.easymock.tests2.DependencyTest.testClassMocking":433,"org.easymock.tests2.AnswerTest.answer":63,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":450,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":163,"org.easymock.tests2.CaptureTest.testAnd":122,"org.easymock.tests2.UsageTest.strictResetToDefault":165,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":141,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":234,"org.easymock.tests2.DelegateToTest.testDelegate":159,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":341,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":328,"org.easymock.tests.LimitationsTest.mockFinalMethod":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":276,"org.easymock.tests2.DependencyTest.testClassMockingSupport":434,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":342,"org.easymock.tests2.CaptureTest.testCapture1_2446744":126,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":429,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":161,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":240,"org.easymock.tests.UsageThrowableTest.throwError":346,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":470,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":424,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":408,"org.easymock.samples.PartialClassMockTest.testGetArea":194,"org.easymock.tests.MockingTest.testInterfaceMocking":483,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":241,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":212,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":260,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":397,"org.easymock.tests2.UsageTest.niceToStrict":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":114,"org.easymock.tests2.MockBuilderTest.testCreateMock":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":404,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":384,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":322,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":142,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":29,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":226,"org.easymock.tests.UsageOverloadedMethodTest.overloading":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":401,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":101,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":255,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":304,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":100,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":131,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":476,"org.easymock.tests2.EasyMockSupportClassTest.testAll":81,"org.easymock.tests.MockClassControlTest.testEquals":375,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":162,"org.easymock.tests2.CaptureTest.testCaptureAll":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":274,"org.easymock.tests.MockNameTest.defaultName":456,"org.easymock.tests2.UsageConstraintsTest.testMatches":102,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":270,"org.easymock.samples.ExampleTest.voteForRemovals":206,"org.easymock.tests.UsageVarargTest.allKinds":52,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":46,"org.easymock.samples.BasicClassMockTest.testPrintContent":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":275,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":352,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":69,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":420,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":7,"org.easymock.tests2.UsageConstraintsTest.greaterThan":104,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":391,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":233,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":191,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":462,"org.easymock.samples.ExampleTest.voteForRemoval":203,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":431,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":77,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":472,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":186,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":164,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":230,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":139,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":2,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":154,"org.easymock.tests2.CaptureTest.testCaptureFirst":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":140,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":18,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":300,"org.easymock.tests2.CaptureTest.testCapture2_2446744":134,"org.easymock.tests2.UsageTest.moreThanOneArgument":42,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":451,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":119,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":289,"org.easymock.tests.GenericTest.testBridgedEquals":475,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":367,"org.easymock.tests.UsageExpectAndReturnTest.longType":296,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":272,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":331,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":107,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":231,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":329,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":30,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":267,"org.easymock.tests.UsageCallCountTest.tooManyCalls":368,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":489,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":405,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":318,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":351,"org.easymock.tests.MockingTest.testNiceClassMocking":486,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":173,"org.easymock.tests.MockingTest.testClassMocking":482,"org.easymock.tests2.UsageConstraintsTest.testContains":99,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":361,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":152,"org.easymock.tests2.UsageConstraintsTest.testFind":91,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":218,"org.easymock.tests.MockTypeTest.fromEasyMockClass":469,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":86,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":221,"org.easymock.tests.UsageExpectAndReturnTest.object":303,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":145,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":56,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":284,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":292,"org.easymock.tests.UsageTest.exactCallCountByLastCall":336,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":466,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":338,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":62,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":280,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":309,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":254,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":415,"org.easymock.tests.MockClassControlTest.testHashCode":374,"org.easymock.tests2.EasyMockSupportTest.testVerify":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":399,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":487,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":28,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":252,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":160,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":121,"org.easymock.tests.UsageVarargTest.varargCharAccepted":283,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":33,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":455,"org.easymock.tests2.UsageTest.openCallCountByLastCall":167,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":148,"org.easymock.tests.DefaultClassInstantiatorTest.object":237,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":236,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":290,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":400,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":320,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":349,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":414,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":189,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":373,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":319,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":310,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":84,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":372,"org.easymock.tests2.UsageTest.resumeIfFailure":170,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":5,"org.easymock.tests2.StubTest.stubWithReturnValue":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":59,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":302,"org.easymock.tests2.SerializationTest.testAllMockedMethod":74,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":219,"org.easymock.samples.SupportTest.voteForRemovals":199,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":474,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":417,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":325,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":220,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":64,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":467,"org.easymock.tests.UsageExpectAndThrowTest.object":323,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":10,"org.easymock.tests2.DelegateToTest.testWrongClass":157,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":344,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":345,"org.easymock.tests.UsageStrictMockTest.range":17,"org.easymock.samples.ConstructorCalledMockTest.testTax":196,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":427,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":144,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":172,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":324,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":388,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":248,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":227,"org.easymock.tests2.CaptureTest.testCaptureNone":130,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":261,"org.easymock.tests.UsageUnorderedTest.message":22,"org.easymock.tests.UsageVerifyTest.twoReturns":21,"org.easymock.tests.UsageVarargTest.varargByteAccepted":288,"org.easymock.tests2.ThreadingTest.testThreadSafe":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":402,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":365,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":478,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":209,"org.easymock.tests2.CaptureTest.testCapture_2617107":124,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":265,"org.easymock.tests2.UsageConstraintsTest.any":97,"org.easymock.tests2.StubTest.stub":179,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":245,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":4,"org.easymock.tests.UsageExpectAndThrowTest.longType":316,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":460,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":244,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":71,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":136,"org.easymock.tests2.SerializationTest.testClass":54,"org.easymock.tests.LimitationsTest.mockNativeMethod":251,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":279,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":312,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":379,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":72,"org.easymock.tests2.NameTest.nameForMocksControl":41,"org.easymock.tests2.MockedExceptionTest.testMockedException":151,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":392,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":335,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":409,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":317,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":359,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":180,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":117,"org.easymock.tests.MockingTest.testNicePartialClassMocking":358,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":185,"org.easymock.tests2.CaptureTest.testCaptureLast":129,"org.easymock.tests2.CompareToTest.testCompareEqual":0,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":377,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":343,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":178,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":94,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":106,"org.easymock.tests.MockingTest.testTwoMocks":356,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":321,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":110,"org.easymock.samples.ExampleTest.removeNonExistingDocument":207,"org.easymock.tests.UsageStrictMockTest.differentMethods":45,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":242,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":416,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":458,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":78,"org.easymock.tests2.MockBuilderTest.testCreateMockString":120,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":393,"org.easymock.tests.UsageExpectAndThrowTest.floatType":315,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":390,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":66,"org.easymock.tests.UsageVerifyTest.twoThrows":20,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":83,"org.easymock.samples.ExampleTest.voteAgainstRemoval":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":445,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":259,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":190,"org.easymock.tests.LimitationsTest.privateConstructor":464,"org.easymock.tests2.UsageConstraintsTest.testNotNull":109,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":150,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":353,"org.easymock.tests2.UsageTest.defaultResetToNice":169,"org.easymock.samples.ExampleTest.voteAgainstRemovals":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":308,"org.easymock.tests.UsageVarargTest.differentLength":285,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":378,"org.easymock.tests2.CallbackTest.callback":87,"org.easymock.tests2.UsageConstraintsTest.equals":411,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":430,"org.easymock.tests.UsageTest.openCallCountByLastCall":334,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":264,"org.easymock.tests.UsageCallCountTest.tooFewCalls":363,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":175,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":229,"org.easymock.tests.UsageThrowableTest.throwCheckedException":350,"org.easymock.tests.MockingTest.testStrictClassMocking":481,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":177,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":355,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":174,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":382,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":247,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":176,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":68,"org.easymock.tests.ObjectMethodsTest.testHashCode":291,"org.easymock.tests2.NameTest.nameForNiceMock":40,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":80,"org.easymock.tests2.DependencyTest.testInterfaceMocking":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":57,"org.easymock.samples.ExampleTest.addDocument":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":407,"org.easymock.tests2.DelegateToTest.testStubDelegate":156,"org.easymock.tests2.AnswerTest.stubAnswer":67,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":44,"org.easymock.tests.UsageVarargTest.varargLongAccepted":287,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.floatType":295,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":311,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":61,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":422,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":105,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":256,"org.easymock.tests.UsageThrowableTest.noUpperLimit":347,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":89,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":425,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":127,"org.easymock.tests2.SerializationTest.test":73,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":457,"org.easymock.tests2.UsageConstraintsTest.testSame":92,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":294,"org.easymock.samples.SupportTest.addDocument":198,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":32,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":394,"org.easymock.tests.GenericTest.testPackageScope":277,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":421,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":484,"org.easymock.tests2.NameTest.nameForMock":38,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":305,"org.easymock.tests2.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":50,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":327,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":477,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":235,"org.easymock.tests2.MockedExceptionTest.testRealException":153,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":447,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":36,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":249,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":263,"org.easymock.tests2.NameTest.nameForStrictMock":39,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":413,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":85,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":184,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":426,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":459,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":113,"org.easymock.tests2.UsageStrictMockTest.range":12,"org.easymock.tests2.UsageConstraintsTest.lessThan":111,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":398,"org.easymock.tests2.CaptureTest.testCaptureRightOne":132,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":35,"org.easymock.tests2.UsageConstraintsTest.testOr":93,"org.easymock.tests.UsageRangeTest.combination":232,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":181,"org.easymock.tests.UsageTest.wrongArguments":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":395,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":370,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":306,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":461,"org.easymock.tests.UsageVarargTest.varargShortAccepted":286,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":366,"org.easymock.tests2.UsageConstraintsTest.cmpTo":98,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":438,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":168,"org.easymock.tests2.CaptureTest.testCaptureFromStub":133,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":239,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":412,"org.easymock.tests.UsageTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":364,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":53,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":307,"org.easymock.tests2.UsageConstraintsTest.constraints":90,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":223,"org.easymock.samples.ExampleTest.addAndChangeDocument":208,"org.easymock.tests2.ConstraintsToStringTest.containsToString":27,"org.easymock.tests.UsageStrictMockTest.testVerify":225,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":200,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":273,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":213,"org.easymock.tests.LimitationsTest.abstractClass":463,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":214,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":143,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":281}}]
