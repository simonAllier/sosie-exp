[{"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[1,2,4,5,8,9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[11,12,13,14,15],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:110","sourceCode":"return ((org.easymock.internal.Invocation.(getMockAndMethodName()) + \"(\") + org.easymock.internal.ArgumentToString.(org.easymock.internal.ArgumentToString.argumentsToString(java.lang.Object[]))) + \")\"","type":"CtReturnImpl"},"failures":[47,19,20,23,24,25,48,29,31,32,35,36,37,38,39,49,50,43,44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1,18,53,54,55,56,30,57,58,59,60,42,44],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[61],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[62],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[64,27],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[65,66,67,68,69,70,71,72,73,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[75],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[76,77],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[78],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"failures":[79],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[18,19,20,22,23,24,25,81,82,83,84,29,30,31,32,34,36,37,38,39,42,43,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[1,85,2,3,86,4,5,87,88,89,90,91,92,93,94,47,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,80,120,17,121,51,16,122,123,124,125,18,126,19,20,127,53,128,22,23,129,130,54,55,131,24,25,11,56,132,133,134,0,135,136,137,138,139,140,78,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,6,7,158,159,160,161,162,163,164,165,76,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,26,186,187,188,189,190,191,192,193,194,195,196,197,198,199,199,200,200,201,202,203,8,204,205,206,207,208,209,210,211,212,213,214,215,9,216,52,217,218,219,48,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,27,28,265,29,30,266,31,32,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,57,34,35,36,58,59,37,38,60,39,291,13,14,15,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,42,43,44,325,326,327,328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[107,108,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,138,78],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[76,77],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:52","failures":[19,20,31,32,299,300,42],"status":-1,"binaryOperator":"(int) == (int)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":57,"org.easymock.tests2.UsageTest.argumentsOrdered":25,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":306,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":130,"org.easymock.tests2.StubTest.stubWithReturnValue":198,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":72,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":277,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":154,"org.easymock.tests2.SerializationTest.testAllMockedMethod":329,"org.easymock.tests2.DelegateToTest.testReturnException":51,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":304,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":228,"org.easymock.tests.MockingTest.testPartialClassMocking":262,"org.easymock.samples.SupportTest.voteForRemovals":202,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":75,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":312,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":233,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":229,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":159,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":85,"org.easymock.tests.UsageExpectAndThrowTest.object":243,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":151,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":163,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":65,"org.easymock.tests2.DelegateToTest.testWrongClass":122,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":325,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":326,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":140,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":292,"org.easymock.tests2.UsageTest.wrongArguments":23,"org.easymock.samples.ConstructorCalledMockTest.testTax":199,"org.easymock.tests.UsageStrictMockTest.range":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":315,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":21,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":102,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":186,"org.easymock.tests2.UsageConstraintsTest.testNull":136,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":244,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":112,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":91,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":104,"org.easymock.tests2.CaptureTest.testPrimitive":171,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":252,"org.easymock.tests.UsageTest.moreThanOneArgument":34,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":37,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":314,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":213,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":290,"org.easymock.tests2.CaptureTest.testCaptureNone":176,"org.easymock.tests.UsageUnorderedTest.message":39,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":49,"org.easymock.tests.UsageVerifyTest.twoReturns":44,"org.easymock.tests2.ThreadingTest.testThreadSafe":164,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":298,"org.easymock.tests.UsageTest.argumentsOrdered":38,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":41,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":220,"org.easymock.tests2.CaptureTest.testCapture_2617107":170,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":87,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":295,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":90,"org.easymock.tests2.UsageConstraintsTest.any":141,"org.easymock.tests2.StubTest.stub":197,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":224,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":305,"org.easymock.tests.UsageExpectAndThrowTest.longType":236,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":126,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":17,"org.easymock.tests2.SerializationTest.testClass":107,"org.easymock.tests.LimitationsTest.mockNativeMethod":297,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":26,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":63,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":287,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":227,"org.easymock.tests2.AnswerTest.answer":1,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":12,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":185,"org.easymock.tests2.CaptureTest.testAnd":168,"org.easymock.tests2.UsageTest.strictResetToDefault":128,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":117,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":127,"org.easymock.tests2.NameTest.nameForMocksControl":84,"org.easymock.tests2.MockedExceptionTest.testMockedException":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":212,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":14,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":99,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":59,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":302,"org.easymock.tests2.DelegateToTest.testDelegate":124,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":264,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":237,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":109,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":92,"org.easymock.tests.MockingTest.testNicePartialClassMocking":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":248,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":114,"org.easymock.tests2.CaptureTest.testCaptureLast":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":307,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":28,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":192,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":321,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":152,"org.easymock.tests.MockingTest.testTwoMocks":261,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":27,"org.easymock.tests2.CaptureTest.testCapture1_2446744":172,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":268,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":241,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":183,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":156,"org.easymock.tests.UsageThrowableTest.throwError":253,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":64,"org.easymock.tests.UsageStrictMockTest.differentMethods":32,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":76,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":50,"org.easymock.tests2.MockBuilderTest.testCreateMockString":47,"org.easymock.tests.UsageExpectAndThrowTest.floatType":235,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":215,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":147,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":3,"org.easymock.tests.UsageVerifyTest.twoThrows":43,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":160,"org.easymock.samples.PartialClassMockTest.testGetArea":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":221,"org.easymock.samples.ExampleTest.voteAgainstRemoval":205,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":289,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":288,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":234,"org.easymock.tests2.UsageTest.niceToStrict":129,"org.easymock.tests2.UsageConstraintsTest.testNotNull":155,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":260,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":193,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":89,"org.easymock.tests2.MockBuilderTest.testCreateMock":93,"org.easymock.tests2.UsageTest.defaultResetToNice":131,"org.easymock.samples.ExampleTest.voteAgainstRemovals":203,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":283,"org.easymock.tests2.CallbackTest.callback":5,"org.easymock.tests.UsageTest.openCallCountByLastCall":58,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":242,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":100,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":62,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":132,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":232,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":313,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":294,"org.easymock.tests.UsageOverloadedMethodTest.overloading":323,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":217,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":145,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":279,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":189,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":61,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":144,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":177,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":316,"org.easymock.tests.UsageThrowableTest.throwCheckedException":257,"org.easymock.tests2.EasyMockSupportClassTest.testAll":158,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":319,"org.easymock.tests2.CaptureTest.testCaptureAll":169,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":184,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":210,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":191,"org.easymock.tests.MockNameTest.defaultName":33,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":188,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":77,"org.easymock.tests2.UsageConstraintsTest.testMatches":146,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":190,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":4,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":214,"org.easymock.samples.ExampleTest.voteForRemovals":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":69,"org.easymock.tests2.NameTest.nameForNiceMock":83,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":167,"org.easymock.tests.UsageVarargTest.allKinds":328,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":42,"org.easymock.tests2.DependencyTest.testInterfaceMocking":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":320,"org.easymock.tests2.DelegateToTest.testStubDelegate":16,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":259,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":125,"org.easymock.tests2.AnswerTest.stubAnswer":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":308,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":123,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":30,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":71,"org.easymock.tests2.UsageConstraintsTest.greaterThan":148,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":13,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":80,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":267,"org.easymock.samples.ExampleTest.voteForRemoval":204,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":165,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":286,"org.easymock.tests.UsageExpectAndReturnTest.floatType":270,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":115,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":120,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":200,"org.easymock.tests.UsageThrowableTest.noUpperLimit":254,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":218,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":149,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":225,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":53,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":133,"org.easymock.tests2.SerializationTest.test":108,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":97,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":269,"org.easymock.tests2.UsageConstraintsTest.testSame":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":303,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":121,"org.easymock.tests2.CaptureTest.testCaptureFirst":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":98,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":56,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":48,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":275,"org.easymock.tests.GenericTest.testPackageScope":226,"org.easymock.tests2.UsageTest.moreThanOneArgument":22,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":166,"org.easymock.tests2.CaptureTest.testCapture2_2446744":180,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":301,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":94,"org.easymock.tests2.NameTest.nameForMock":81,"org.easymock.tests.UsageExpectAndReturnTest.longType":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":317,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":95,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":280,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":251,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":327,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":153,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":249,"org.easymock.tests2.UsageStrictMockTest.differentMethods":20,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":211,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":272,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":247,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":15,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":208,"org.easymock.tests2.MockedExceptionTest.testRealException":196,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":276,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":46,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":73,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":238,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":293,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":258,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":187,"org.easymock.tests2.NameTest.nameForStrictMock":82,"org.easymock.tests2.UsageConstraintsTest.testContains":143,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":195,"org.easymock.tests2.UsageConstraintsTest.testFind":135,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":324,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":6,"org.easymock.tests.MockTypeTest.fromEasyMockClass":45,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":113,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":265,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":7,"org.easymock.tests.UsageExpectAndReturnTest.object":278,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":150,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":116,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":88,"org.easymock.tests2.UsageStrictMockTest.range":19,"org.easymock.tests2.UsageConstraintsTest.lessThan":157,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":66,"org.easymock.tests.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":209,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":68,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":96,"org.easymock.tests2.CaptureTest.testCaptureRightOne":178,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":299,"org.easymock.tests2.UsageConstraintsTest.testOr":138,"org.easymock.tests.UsageRangeTest.combination":291,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":74,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":284,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":110,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":52,"org.easymock.tests.UsageTest.wrongArguments":36,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":281,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":300,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":231,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":9,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":79,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":182,"org.easymock.tests2.UsageConstraintsTest.cmpTo":142,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":2,"org.easymock.tests2.UsageTest.openCallCountByLastCall":54,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":55,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":106,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":230,"org.easymock.tests2.CaptureTest.testCaptureFromStub":179,"org.easymock.tests.UsageTest.unexpectedCallWithArray":35,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":40,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":240,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":256,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":29,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":282,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":266,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":118,"org.easymock.tests2.UsageConstraintsTest.constraints":134,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":239,"org.easymock.samples.ExampleTest.addAndChangeDocument":207,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":285,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":318,"org.easymock.tests2.UsageTest.resumeIfFailure":11,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":174,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":222,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":274,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":223,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":219,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":101}}]
