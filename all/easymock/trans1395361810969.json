[{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:71","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[28,28,29,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[130,131,132,133,27,134],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[35,135,36,136],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[137],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[138,139],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[140,141,142,143,144],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[145,146,147,148,149,30,150,151,152,153,154,155,156,157,33,0,158,159,35,135,37,38,39,40,160,41,42,161,162,163,164,165,166,167,168,169,170,43,44,171,45,46,47,49,53,54,55,60,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1,2,3,186,187,4,5,6,7,188,189,190,191,8,192,9,10,193,11,12,194,195,196,197,13,14,15,198,199,62,65,67,68,71,200,201,202,203,204,205,206,207,208,78,81,91,97,209,210,211,212,213,16,17,18,19,20,214,215,216,217,218,219,220,221,21,222,223,112,114,130,131,224,225,226,227,228,229,132,230,231,232,233,234,235,133,236,237,238,239,240,117,22,23,24,25,241,242,243,26,27,120,121,122,140,141,142,143,144,244,245,246,247,248,249,250,251,252],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[188],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[253,186,188,194],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[254,145,146,255,147,148,256,149,257,258,28,28,29,29,259,30,31,32,260,150,151,152,153,154,261,262,263,264,265,155,266,267,268,269,270,271,272,273,156,157,33,34,274,275,0,276,158,159,277,35,135,36,278,37,38,39,40,160,41,42,161,162,253,163,164,279,280,165,166,167,168,281,169,170,43,44,171,45,46,47,48,282,49,50,51,52,53,54,55,56,57,283,137,284,58,59,60,285,286,287,288,289,290,172,291,292,293,294,295,296,297,298,299,300,301,302,173,303,304,305,174,175,176,177,178,179,180,181,182,183,184,185,306,307,1,2,3,186,187,308,4,5,6,7,188,189,309,190,191,8,192,9,10,193,11,12,194,195,196,310,197,13,14,15,311,312,313,314,315,198,316,317,318,199,319,61,62,63,64,65,66,67,68,69,70,71,72,73,74,320,321,200,201,202,322,203,323,204,205,206,324,325,207,208,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,326,209,210,211,327,328,329,330,212,331,213,16,17,18,19,20,332,214,333,334,335,336,215,337,216,217,218,219,220,221,338,339,340,21,341,222,223,342,343,344,345,346,101,102,103,104,105,106,108,347,348,349,350,351,352,353,354,355,356,357,358,109,359,360,110,361,362,363,364,365,366,367,368,369,370,371,111,112,113,114,115,130,131,224,225,226,227,228,229,132,230,231,232,233,234,235,133,236,237,238,239,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,240,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,139,116,410,117,118,411,412,413,414,415,22,416,417,418,419,420,421,422,23,24,423,424,25,241,242,243,425,426,427,428,429,430,431,432,433,434,435,436,26,27,437,438,439,134,440,441,442,119,120,121,443,122,444,445,446,123,124,125,126,127,447,448,128,129,449,450,451,452,453,454,455,456,457,458,459,460,140,461,141,462,463,464,465,466,467,468,469,142,143,470,144,244,245,246,247,248,249,471,472,250,251,473,474,252],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[170],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"value","capture":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[105,475,476],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[58,59,60,285,1,353,354,355,356,357,358,416],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[188,189],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[5,309,194,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"prefix","key":"prefix"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1051","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[196],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[0,158,159,312,313,314,315,202,322,324,325,331,213,340,21,222,223,139,249,472,473,474],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[477,478,479,480,340,471],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"failures":[481,139],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[34,35,483,484,485,486,487,488,489,490],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[381],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1080","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[44,57,311,312],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[161,253,168,186,187,5,6,7,309,194,13,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":187,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":248,"org.easymock.tests2.UsageTest.argumentsOrdered":325,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":184,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":461,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":323,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":259,"org.easymock.tests2.DelegateToTest.testReturnException":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":354,"org.easymock.tests.MockingTest.testPartialClassMocking":120,"org.easymock.tests.MockClassControlTest.testToString":125,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":311,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":390,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":81,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":484,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":23,"org.easymock.tests2.UsageTest.wrongArguments":322,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":271,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":329,"org.easymock.samples.ExampleTest.answerVsDelegate":255,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":110,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":445,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":45,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":183,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":128,"org.easymock.tests2.CaptureTest.testPrimitive":163,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":25,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":409,"org.easymock.tests.UsageTest.moreThanOneArgument":249,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":171,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":439,"org.easymock.tests.UsageTest.argumentsOrdered":474,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":411,"org.easymock.tests.UsageVarargTest.varargIntAccepted":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":465,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":488,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":61,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":295,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":454,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":20,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":155,"org.easymock.tests.ReplayStateInvalidUsageTest.times":380,"org.easymock.tests2.DependencyTest.testClassMocking":272,"org.easymock.tests2.AnswerTest.answer":198,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":300,"org.easymock.tests2.CaptureTest.testAnd":161,"org.easymock.tests2.UsageTest.strictResetToDefault":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":178,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":246,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":415,"org.easymock.tests2.DelegateToTest.testDelegate":305,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":405,"org.easymock.tests.LimitationsTest.mockFinalMethod":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":357,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":422,"org.easymock.tests2.DependencyTest.testClassMockingSupport":273,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":334,"org.easymock.tests2.CaptureTest.testCapture1_2446744":164,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":282,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":403,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":298,"org.easymock.tests.UsageThrowableTest.throwError":215,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":374,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":360,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":99,"org.easymock.samples.PartialClassMockTest.testGetArea":30,"org.easymock.tests.MockingTest.testInterfaceMocking":443,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":17,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":210,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":86,"org.easymock.tests2.UsageTest.niceToStrict":203,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":65,"org.easymock.tests2.MockBuilderTest.testCreateMock":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":94,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":268,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":477,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":399,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":179,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":451,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":327,"org.easymock.tests.UsageOverloadedMethodTest.overloading":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":90,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":387,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":9,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":232,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":241,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":475,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":192,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":167,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":428,"org.easymock.tests.MockClassControlTest.testEquals":448,"org.easymock.tests2.EasyMockSupportClassTest.testAll":78,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":113,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":407,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":420,"org.easymock.tests2.CaptureTest.testCaptureAll":162,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":299,"org.easymock.tests.MockNameTest.defaultName":417,"org.easymock.tests2.UsageConstraintsTest.testMatches":10,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":134,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":372,"org.easymock.samples.ExampleTest.voteForRemovals":149,"org.easymock.tests.UsageVarargTest.allKinds":436,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":421,"org.easymock.samples.BasicClassMockTest.testPrintContent":32,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":220,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":274,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":292,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":358,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":489,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":107,"org.easymock.tests2.UsageConstraintsTest.greaterThan":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":79,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":245,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":55,"org.easymock.samples.ExampleTest.voteForRemoval":147,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":108,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":151,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":56,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":361,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":48,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":129,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":200,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":459,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":176,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":353,"org.easymock.tests2.CaptureTest.testCaptureFirst":170,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":177,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":208,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":389,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":229,"org.easymock.tests2.CaptureTest.testCapture2_2446744":169,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":153,"org.easymock.tests2.UsageTest.moreThanOneArgument":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":468,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":71,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":435,"org.easymock.tests.GenericTest.testBridgedEquals":115,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":370,"org.easymock.tests.UsageExpectAndReturnTest.longType":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":418,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":174,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":408,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":310,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":406,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":437,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":345,"org.easymock.tests.UsageCallCountTest.tooManyCalls":371,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":95,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":132,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":270,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":395,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":219,"org.easymock.tests.MockingTest.testNiceClassMocking":446,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":38,"org.easymock.tests.MockingTest.testClassMocking":442,"org.easymock.tests2.UsageConstraintsTest.testContains":8,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":364,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":60,"org.easymock.tests2.UsageConstraintsTest.testFind":4,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":243,"org.easymock.tests.MockTypeTest.fromEasyMockClass":359,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":284,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":338,"org.easymock.tests.UsageExpectAndReturnTest.object":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":485,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":430,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":350,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":482,"org.easymock.tests.UsageTest.exactCallCountByLastCall":252,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":412,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":332,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":34,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":425,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":236,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":386,"org.easymock.tests.MockClassControlTest.testHashCode":447,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":287,"org.easymock.tests2.EasyMockSupportTest.testVerify":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":88,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":413,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":450,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":384,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":297,"org.easymock.tests.UsageVarargTest.varargCharAccepted":429,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":100,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":144,"org.easymock.tests2.UsageTest.openCallCountByLastCall":204,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":185,"org.easymock.tests.DefaultClassInstantiatorTest.object":101,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":449,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":348,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":89,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":217,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":264,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":286,"org.easymock.tests2.ConstraintsToStringTest.anyToString":481,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":127,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":53,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":396,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":237,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":344,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":97,"org.easymock.tests2.UsageTest.resumeIfFailure":207,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":356,"org.easymock.tests2.StubTest.stubWithReturnValue":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":490,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":197,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":230,"org.easymock.tests2.SerializationTest.testAllMockedMethod":36,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":466,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":478,"org.easymock.samples.SupportTest.voteForRemovals":145,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":111,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":289,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":402,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":136,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":470,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":316,"org.easymock.tests.UsageExpectAndThrowTest.object":400,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":333,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":195,"org.easymock.tests2.DelegateToTest.testWrongClass":303,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":26,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":27,"org.easymock.samples.ConstructorCalledMockTest.testTax":28,"org.easymock.tests.UsageStrictMockTest.range":222,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":320,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":181,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":37,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":401,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":67,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":75,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":328,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":479,"org.easymock.tests2.CaptureTest.testCaptureNone":166,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":211,"org.easymock.tests.UsageUnorderedTest.message":139,"org.easymock.tests.UsageVerifyTest.twoReturns":213,"org.easymock.tests.UsageVarargTest.varargByteAccepted":434,"org.easymock.tests2.ThreadingTest.testThreadSafe":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":92,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":368,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":31,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":351,"org.easymock.tests2.CaptureTest.testCapture_2617107":253,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":142,"org.easymock.tests2.UsageConstraintsTest.any":190,"org.easymock.tests2.StubTest.stub":307,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":379,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":346,"org.easymock.tests.UsageExpectAndThrowTest.longType":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":143,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":355,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":105,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":378,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":276,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":172,"org.easymock.tests2.SerializationTest.testClass":35,"org.easymock.tests.LimitationsTest.mockNativeMethod":117,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":114,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":239,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":263,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":277,"org.easymock.tests2.NameTest.nameForMocksControl":315,"org.easymock.tests2.MockedExceptionTest.testMockedException":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":80,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":251,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":394,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":137,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":122,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":43,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":68,"org.easymock.tests.MockingTest.testNicePartialClassMocking":121,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":47,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":483,"org.easymock.tests2.CaptureTest.testCaptureLast":165,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":261,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":335,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":188,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":42,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":196,"org.easymock.tests.MockingTest.testTwoMocks":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":130,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":398,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":324,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":14,"org.easymock.samples.ExampleTest.removeNonExistingDocument":257,"org.easymock.tests.UsageStrictMockTest.differentMethods":223,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":267,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":288,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":103,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":152,"org.easymock.tests2.MockBuilderTest.testCreateMockString":72,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":123,"org.easymock.tests.UsageExpectAndThrowTest.floatType":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":82,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":77,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":318,"org.easymock.tests.UsageVerifyTest.twoThrows":331,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":91,"org.easymock.samples.ExampleTest.voteAgainstRemoval":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":141,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":209,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":54,"org.easymock.tests.LimitationsTest.privateConstructor":410,"org.easymock.tests2.UsageConstraintsTest.testNotNull":13,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":221,"org.easymock.tests2.UsageTest.defaultResetToNice":206,"org.easymock.samples.ExampleTest.voteAgainstRemovals":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":133,"org.easymock.tests.UsageVarargTest.differentLength":431,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":262,"org.easymock.tests2.CallbackTest.callback":278,"org.easymock.tests2.UsageConstraintsTest.equals":308,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":50,"org.easymock.tests.UsageTest.openCallCountByLastCall":250,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":423,"org.easymock.tests.UsageCallCountTest.tooFewCalls":366,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":40,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":330,"org.easymock.tests.UsageThrowableTest.throwCheckedException":218,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":480,"org.easymock.tests.MockingTest.testStrictClassMocking":441,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":416,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":41,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":266,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":381,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":160,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":319,"org.easymock.tests.ObjectMethodsTest.testHashCode":349,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":487,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":154,"org.easymock.tests2.NameTest.nameForNiceMock":314,"org.easymock.tests2.DependencyTest.testInterfaceMocking":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":486,"org.easymock.samples.ExampleTest.addDocument":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":93,"org.easymock.tests2.DelegateToTest.testStubDelegate":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":98,"org.easymock.tests2.AnswerTest.stubAnswer":199,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":21,"org.easymock.tests.UsageVarargTest.varargLongAccepted":433,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":140,"org.easymock.tests.UsageExpectAndReturnTest.floatType":224,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":238,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":33,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":29,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":12,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":294,"org.easymock.tests.UsageThrowableTest.noUpperLimit":337,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":3,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":73,"org.easymock.tests2.SerializationTest.test":135,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":279,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":476,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":131,"org.easymock.tests2.UsageConstraintsTest.testSame":6,"org.easymock.samples.SupportTest.addDocument":254,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":83,"org.easymock.tests.GenericTest.testPackageScope":112,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":293,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":444,"org.easymock.tests2.NameTest.nameForMock":312,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":233,"org.easymock.tests2.UsageStrictMockTest.differentMethods":159,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":226,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":404,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":347,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":247,"org.easymock.tests2.MockedExceptionTest.testRealException":285,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":463,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":24,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":383,"org.easymock.tests2.NameTest.nameForStrictMock":313,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":64,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":283,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":46,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":74,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":138,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":104,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":194,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":62,"org.easymock.tests2.UsageStrictMockTest.range":158,"org.easymock.tests2.UsageConstraintsTest.lessThan":15,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":460,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":175,"org.easymock.tests2.CaptureTest.testCaptureRightOne":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":87,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests.UsageRangeTest.combination":244,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":44,"org.easymock.tests.UsageTest.wrongArguments":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":84,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":124,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":234,"org.easymock.tests.UsageVarargTest.varargShortAccepted":432,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":106,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":369,"org.easymock.tests2.UsageConstraintsTest.cmpTo":191,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":455,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":205,"org.easymock.tests2.CaptureTest.testCaptureFromStub":281,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":373,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":63,"org.easymock.tests.UsageTest.unexpectedCallWithArray":471,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":340,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":367,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":235,"org.easymock.tests2.UsageConstraintsTest.constraints":186,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":341,"org.easymock.samples.ExampleTest.addAndChangeDocument":258,"org.easymock.tests.UsageStrictMockTest.testVerify":343,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":260,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":419,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":280,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":18,"org.easymock.tests.LimitationsTest.abstractClass":116,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":228,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":19,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":426,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":180}}]
