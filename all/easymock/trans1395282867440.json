[{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,20,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,0,1,2,3,4,5,6,7,9,207,208,209,210,211,212,213,214,10,11,215,216,217,12,13,218,21,219,14,15,16,17,220,221,222,223,224,225,18,19,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[22,23,24,25,26,27,28,29,252,30,31,32,33,34,35,36,37,38,39,253,40,41,42,43,44,45,46,254,254,47,48,49,50,51,52,53,54,55,255,56,57,58,59,60,20,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,256,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,257,258,259,260,261,262,157,158,159,160,161,162,163,263,264,265,266,164,165,166,167,168,169,170,171,172,173,174,175,176,267,177,268,178,269,179,180,181,182,183,184,185,186,187,188,270,271,272,273,274,275,276,277,278,279,280,281,282,283,189,190,284,285,191,192,193,286,194,195,287,288,289,290,291,196,197,198,199,200,292,201,202,203,204,205,206,0,1,2,3,4,5,6,7,9,207,208,209,210,211,212,213,214,10,11,215,216,217,12,13,218,21,219,14,15,16,17,220,221,222,223,224,225,18,19,226,227,293,294,295,296,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,297,298,249,250,251],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[24,60,20,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,115,119,123,124,133,137,145,146,147,148,149,150,155,201,202,203,204,219,235,242],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:108","failures":[20,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,115,117,119,120,121,122,123,124,133,137,142,149,155,219,235,242],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,3,5,6,8,10,12,14,16,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[299,300,301,302,303,304,305,306,249],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[198],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.RecordState:217","failures":[22,307,308,309,310,311,312,313,314,23,24,25,26,27,28,29,252,30,31,32,33,34,35,36,37,38,39,315,253,40,41,42,43,44,45,46,316,317,318,319,47,48,49,50,320,321,322,323,324,51,325,326,52,53,54,55,255,56,57,58,59,60,20,61,327,328,329,62,63,330,64,331,65,66,332,333,334,335,336,337,67,338,339,340,341,342,343,344,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,345,108,109,110,111,112,113,114,115,116,346,347,348,117,118,119,120,121,122,123,124,349,350,125,126,127,128,129,130,131,132,133,134,256,135,136,137,138,139,140,141,142,143,351,144,145,146,147,148,149,150,352,353,354,151,152,153,355,154,155,356,156,257,258,259,260,261,262,157,158,159,160,161,162,357,163,263,263,264,264,265,266,164,358,359,165,166,167,168,169,170,171,172,173,174,175,176,267,177,268,178,269,179,180,181,182,183,184,185,186,187,188,270,271,272,273,274,275,276,277,278,279,280,281,282,283,189,190,284,285,191,192,193,286,194,195,287,288,289,290,291,196,360,361,362,363,364,197,198,199,365,200,292,366,201,202,203,204,205,206,0,1,2,3,4,5,6,7,8,9,207,208,209,210,211,212,213,214,10,11,215,216,217,12,13,218,21,219,14,15,16,17,220,221,222,223,224,225,18,19,226,227,293,294,295,296,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,297,298,249,250,251],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[22,41,42,44,45,134,135,138,139,141,142,143,156,180,182,183,360,361,362,363,237,238,244,245],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[367,205,0,213,217],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[22,307,308,309,310,311,312,313,314,23,24,25,26,27,28,29,252,30,31,32,33,34,35,36,37,38,39,253,40,41,42,43,44,45,46,316,317,318,319,47,48,49,50,51,325,326,52,53,54,55,255,56,57,58,59,60,20,61,62,63,64,331,65,66,334,335,336,337,67,338,339,340,341,342,343,344,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,349,125,126,127,128,129,130,131,132,133,134,256,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,257,258,259,260,261,262,157,158,159,160,161,162,357,163,263,264,265,266,164,165,166,167,168,169,170,171,172,173,174,175,176,267,177,268,178,269,179,180,181,182,183,184,185,186,187,188,270,271,272,273,274,275,276,277,278,279,280,281,282,283,189,190,284,285,191,192,193,286,194,195,287,288,289,290,291,196,360,361,362,363,197,198,199,200,292,201,202,203,204,205,206,0,1,2,3,4,5,6,7,9,207,208,209,210,211,212,213,214,10,11,215,216,217,12,13,218,21,219,14,15,16,17,220,221,222,223,224,225,18,19,226,227,293,294,295,296,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,297,298,249,250,251],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[368,62,63,330,369],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[370,249,250,251],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[22,42,44,45,371,372,373,374,134,141,142,143,180,182,183,237],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[41,375,376,256,377,378],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[379,380,381],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[379,380,382,383,384,385,386,381],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[174,387,193,195,201],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[22,307,308,309,310,311,312,313,314,23,24,25,26,27,388,28,29,252,30,31,32,33,34,35,36,37,38,39,389,315,390,253,40,41,42,43,44,45,46,316,391,317,318,319,392,393,394,47,48,49,50,320,321,322,323,324,395,396,397,398,399,400,401,402,51,325,326,52,53,54,55,255,56,57,58,59,60,20,61,327,328,329,368,62,63,330,369,64,331,65,66,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,332,419,420,421,422,423,333,424,334,335,336,337,67,338,339,340,341,342,343,344,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,345,108,109,110,111,112,113,114,115,447,448,116,449,346,347,348,117,118,119,120,121,122,123,124,349,450,451,452,453,454,455,456,457,350,125,126,458,127,459,460,461,128,129,130,131,132,133,134,256,135,136,137,138,139,140,141,142,143,351,144,462,145,146,147,148,149,150,352,353,354,151,152,153,355,154,155,356,156,257,258,259,260,261,262,157,158,159,160,161,162,357,163,263,264,265,266,164,358,359,165,166,167,168,169,170,171,172,173,174,463,175,464,465,176,267,177,268,466,387,178,269,179,180,181,182,183,184,467,468,469,470,471,185,186,187,188,270,271,272,273,274,275,276,277,278,279,280,281,282,283,189,190,284,472,285,191,192,473,193,286,474,475,194,195,287,288,476,300,289,290,291,196,301,477,360,361,362,363,364,197,198,199,365,200,478,479,480,481,482,292,483,484,485,486,487,488,366,201,202,203,204,205,206,0,1,489,2,3,4,5,6,7,8,9,207,208,209,210,211,212,213,214,10,11,215,216,217,12,13,218,21,219,14,15,16,17,220,221,222,223,224,225,18,19,226,227,490,491,492,293,493,494,294,495,496,497,498,499,500,501,502,503,295,504,505,506,507,508,296,509,510,228,511,229,230,512,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,513,514,515,516,517,518,519,520,248,297,521,522,523,524,525,298,526,527,528,529,530,531,249,250,251],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[36,111,450,454,170,285,364,197,198,199,365,200,201,202,203,204,233],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[254,14,15,16,17,220,221,222,223,224,225,18,19,226,227],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:509","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:519","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[260,262,263,264,273,280,281,294,295,296,297],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[532],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[0,1,3,5,6,8,10,12,14,16,18],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[367,205,213,217],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[22,41,42,44,45,317,392,394,398,402,134,256,135,138,139,141,142,143,351,144,180,182,183,292,237,238,244,245,517,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[254,14,15,16,17,220,221,222,223,224,225,18,19,226,227],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[22,23,24,25,26,27,28,29,252,30,31,32,33,34,35,36,37,38,39,253,40,41,42,43,44,45,46,316,321,322,51,325,52,53,54,55,56,57,58,59,60,20,61,62,63,64,331,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,134,135,136,137,138,139,140,141,142,143,149,151,152,153,154,155,156,258,259,260,261,262,157,158,159,160,161,162,163,265,266,164,165,166,167,168,169,170,171,172,173,175,267,177,268,178,269,179,180,181,182,183,184,270,271,272,273,274,275,276,277,278,279,280,281,282,283,189,190,284,285,191,192,286,194,287,288,290,196,360,361,362,363,197,198,199,200,292,203,205,206,0,1,2,3,4,5,6,7,8,9,207,208,209,210,211,212,213,214,10,11,215,216,217,12,13,218,21,219,14,15,16,17,220,221,222,223,224,225,18,226,227,293,294,295,296,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,297,298,249,250,251],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[370,249,250,251],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[41,375,376,256,377,378],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[3,8,10,12],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[416,165,178,228,229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":133,"org.easymock.tests2.UsageTest.argumentsOrdered":245,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":413,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":240,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":258,"org.easymock.tests2.DelegateToTest.testReturnException":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":146,"org.easymock.tests.MockingTest.testPartialClassMocking":125,"org.easymock.tests.MockClassControlTest.testToString":309,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":477,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":498,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":68,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":294,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":371,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":297,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":446,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":302,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":58,"org.easymock.tests2.UsageTest.wrongArguments":238,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":531,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":49,"org.easymock.samples.ExampleTest.answerVsDelegate":158,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":400,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":460,"org.easymock.tests2.UsageConstraintsTest.testNull":3,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":171,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":279,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":314,"org.easymock.tests2.CaptureTest.testPrimitive":17,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":61,"org.easymock.tests.UsageTest.moreThanOneArgument":134,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":87,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":170,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":130,"org.easymock.tests.UsageTest.argumentsOrdered":139,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":320,"org.easymock.tests.UsageVarargTest.varargIntAccepted":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":35,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":306,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":515,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":487,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":39,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":430,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":298,"org.easymock.tests.ReplayStateInvalidUsageTest.times":341,"org.easymock.tests2.DependencyTest.testClassMocking":519,"org.easymock.tests2.AnswerTest.answer":164,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":419,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":188,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":397,"org.easymock.tests2.CaptureTest.testAnd":14,"org.easymock.tests2.UsageTest.strictResetToDefault":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":176,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":129,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":65,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":274,"org.easymock.tests2.DelegateToTest.testDelegate":200,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":324,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":429,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":83,"org.easymock.tests.LimitationsTest.mockFinalMethod":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":112,"org.easymock.tests2.DependencyTest.testClassMockingSupport":520,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":351,"org.easymock.tests2.CaptureTest.testCapture1_2446744":220,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":81,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":186,"org.easymock.tests.UsageThrowableTest.throwError":117,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":336,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":399,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":488,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":510,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":433,"org.easymock.samples.PartialClassMockTest.testGetArea":260,"org.easymock.tests.MockingTest.testInterfaceMocking":458,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":337,"org.easymock.tests2.CompareToTest.testLessOrEqual":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":36,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":499,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":393,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":69,"org.easymock.tests2.UsageTest.niceToStrict":239,"org.easymock.tests2.ThreadingTest.testChangeDefault":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":381,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":194,"org.easymock.tests2.MockBuilderTest.testCreateMock":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":506,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":528,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":77,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":377,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":275,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":396,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":329,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":325,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":47,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":384,"org.easymock.tests.UsageOverloadedMethodTest.overloading":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":503,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":155,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":210,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":113,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":99,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":209,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":225,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":388,"org.easymock.tests2.EasyMockSupportClassTest.testAll":293,"org.easymock.tests.MockClassControlTest.testEquals":313,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":63,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":85,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":110,"org.easymock.tests2.CaptureTest.testCaptureAll":15,"org.easymock.tests.MockNameTest.defaultName":394,"org.easymock.tests2.UsageConstraintsTest.testMatches":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":131,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":334,"org.easymock.samples.ExampleTest.voteForRemovals":162,"org.easymock.tests.UsageVarargTest.allKinds":34,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":111,"org.easymock.samples.BasicClassMockTest.testPrintContent":266,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":123,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":269,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":484,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":150,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":365,"org.easymock.tests2.UsageConstraintsTest.greaterThan":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":493,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":331,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":268,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":434,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":455,"org.easymock.samples.ExampleTest.voteForRemoval":159,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":466,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":231,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":401,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":174,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":426,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":51,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":235,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":272,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":491,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":145,"org.easymock.tests2.CaptureTest.testCaptureFirst":227,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":273,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":247,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":95,"org.easymock.tests2.CaptureTest.testCapture2_2446744":226,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":233,"org.easymock.tests2.UsageTest.moreThanOneArgument":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":420,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":290,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":33,"org.easymock.tests.GenericTest.testBridgedEquals":369,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":385,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":56,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":382,"org.easymock.tests.UsageExpectAndReturnTest.longType":91,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":108,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":270,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":86,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":216,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":345,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":128,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":347,"org.easymock.tests.UsageCallCountTest.tooManyCalls":57,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":507,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":530,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":73,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":122,"org.easymock.tests.MockingTest.testNiceClassMocking":461,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":189,"org.easymock.tests.MockingTest.testClassMocking":457,"org.easymock.tests2.UsageConstraintsTest.testContains":208,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":326,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":203,"org.easymock.tests2.UsageConstraintsTest.testFind":2,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":115,"org.easymock.tests.MockTypeTest.fromEasyMockClass":398,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":229,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":253,"org.easymock.tests.UsageExpectAndReturnTest.object":98,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":175,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":529,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":278,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":303,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":319,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":386,"org.easymock.tests.UsageTest.exactCallCountByLastCall":140,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":408,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":389,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":321,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":301,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":104,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":25,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":154,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":479,"org.easymock.tests.MockClassControlTest.testHashCode":312,"org.easymock.tests2.EasyMockSupportTest.testVerify":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":501,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":322,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":153,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":328,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":185,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":366,"org.easymock.tests.UsageVarargTest.varargCharAccepted":28,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":424,"org.easymock.tests2.UsageTest.openCallCountByLastCall":241,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":281,"org.easymock.tests.DefaultClassInstantiatorTest.object":349,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":379,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":327,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":502,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":524,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":478,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":432,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":267,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":311,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":74,"org.easymock.tests.CapturesMatcherTest.test":254,"org.easymock.tests.ReplayStateInvalidCallsTest.times":438,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":105,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":346,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":296,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":310,"org.easymock.tests2.UsageTest.resumeIfFailure":246,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":514,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":148,"org.easymock.tests2.StubTest.stubWithReturnValue":219,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":299,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":97,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":217,"org.easymock.tests2.SerializationTest.testAllMockedMethod":251,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":332,"org.easymock.samples.SupportTest.voteForRemovals":262,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":378,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":368,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":481,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":80,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":370,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":333,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":358,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":390,"org.easymock.tests.UsageExpectAndThrowTest.object":78,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":11,"org.easymock.tests2.DelegateToTest.testWrongClass":199,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":436,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":151,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":152,"org.easymock.tests.UsageStrictMockTest.range":44,"org.easymock.samples.ConstructorCalledMockTest.testTax":263,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":517,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":277,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":283,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":383,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":79,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":490,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":138,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":48,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":375,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":428,"org.easymock.tests2.CaptureTest.testCaptureNone":224,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":354,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":468,"org.easymock.tests.UsageUnorderedTest.message":22,"org.easymock.tests.UsageVerifyTest.twoReturns":143,"org.easymock.tests.UsageVarargTest.varargByteAccepted":32,"org.easymock.tests2.ThreadingTest.testThreadSafe":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":504,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":55,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":392,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":265,"org.easymock.tests2.CaptureTest.testCapture_2617107":16,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":20,"org.easymock.tests2.UsageConstraintsTest.any":9,"org.easymock.tests2.StubTest.stub":21,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":340,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":147,"org.easymock.tests.UsageExpectAndThrowTest.longType":71,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":453,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":339,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":181,"org.easymock.tests2.SerializationTest.testClass":249,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":292,"org.easymock.tests.LimitationsTest.mockNativeMethod":116,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":107,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":330,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":523,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":444,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":184,"org.easymock.tests2.NameTest.nameForMocksControl":363,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":525,"org.easymock.tests2.MockedExceptionTest.testMockedException":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":494,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":137,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":511,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":127,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":72,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":168,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":288,"org.easymock.tests.MockingTest.testNicePartialClassMocking":126,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":173,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":521,"org.easymock.tests2.CaptureTest.testCaptureLast":223,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":144,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":443,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":6,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":192,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":215,"org.easymock.tests.MockingTest.testTwoMocks":350,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":440,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":88,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":76,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":244,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":13,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":471,"org.easymock.samples.ExampleTest.removeNonExistingDocument":357,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":527,"org.easymock.tests.UsageStrictMockTest.differentMethods":45,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":67,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":480,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":470,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":451,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":232,"org.easymock.tests2.MockBuilderTest.testCreateMockString":291,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":495,"org.easymock.tests.UsageExpectAndThrowTest.floatType":70,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":492,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":165,"org.easymock.tests.UsageVerifyTest.twoThrows":142,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":295,"org.easymock.samples.ExampleTest.voteAgainstRemoval":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":414,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":352,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":177,"org.easymock.tests.LimitationsTest.privateConstructor":448,"org.easymock.tests2.UsageConstraintsTest.testNotNull":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":124,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":201,"org.easymock.tests2.UsageTest.defaultResetToNice":243,"org.easymock.samples.ExampleTest.voteAgainstRemovals":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":103,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":522,"org.easymock.tests.UsageVarargTest.differentLength":252,"org.easymock.tests2.CallbackTest.callback":178,"org.easymock.tests2.UsageConstraintsTest.equals":489,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":464,"org.easymock.tests.UsageTest.openCallCountByLastCall":136,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":60,"org.easymock.tests.UsageCallCountTest.tooFewCalls":53,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":284,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":50,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":469,"org.easymock.tests.UsageThrowableTest.throwCheckedException":121,"org.easymock.tests.MockingTest.testStrictClassMocking":456,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":376,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":191,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":526,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":190,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":342,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":285,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":167,"org.easymock.tests.ObjectMethodsTest.testHashCode":318,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":305,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":442,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":234,"org.easymock.tests2.NameTest.nameForNiceMock":362,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":437,"org.easymock.tests2.DependencyTest.testInterfaceMocking":248,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":304,"org.easymock.samples.ExampleTest.addDocument":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":509,"org.easymock.tests2.DelegateToTest.testStubDelegate":198,"org.easymock.tests2.AnswerTest.stubAnswer":166,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":42,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":476,"org.easymock.tests.UsageVarargTest.varargLongAccepted":31,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":412,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":106,"org.easymock.tests.UsageExpectAndReturnTest.floatType":90,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":196,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":264,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":486,"org.easymock.tests.UsageThrowableTest.noUpperLimit":118,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":214,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":206,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":513,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":221,"org.easymock.tests2.SerializationTest.test":250,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":450,"org.easymock.tests2.UsageConstraintsTest.testSame":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":89,"org.easymock.samples.SupportTest.addDocument":261,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":472,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":427,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":496,"org.easymock.tests.GenericTest.testPackageScope":62,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":485,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":459,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":425,"org.easymock.tests2.NameTest.nameForMock":360,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":100,"org.easymock.tests2.UsageStrictMockTest.differentMethods":183,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":465,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":92,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":82,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":391,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":66,"org.easymock.tests2.MockedExceptionTest.testRealException":204,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":402,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":416,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":180,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":59,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":344,"org.easymock.tests2.NameTest.nameForStrictMock":361,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":475,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":228,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":380,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":172,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":516,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":452,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":10,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":372,"org.easymock.tests.ErrorMessageTest.testGetters":373,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":286,"org.easymock.tests2.UsageStrictMockTest.range":182,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":431,"org.easymock.tests2.UsageConstraintsTest.lessThan":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":411,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":500,"org.easymock.tests2.CaptureTest.testCaptureRightOne":18,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":467,"org.easymock.tests2.UsageConstraintsTest.testOr":5,"org.easymock.tests.UsageRangeTest.combination":64,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":169,"org.easymock.tests.UsageTest.wrongArguments":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":497,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":101,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":454,"org.easymock.tests.UsageVarargTest.varargShortAccepted":30,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":255,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":445,"org.easymock.tests2.UsageConstraintsTest.cmpTo":207,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":359,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":406,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":242,"org.easymock.tests2.CaptureTest.testCaptureFromStub":19,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":335,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":474,"org.easymock.tests.UsageTest.unexpectedCallWithArray":256,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":441,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":41,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":54,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":102,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":43,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.samples.ExampleTest.addAndChangeDocument":163,"org.easymock.tests2.ConstraintsToStringTest.containsToString":532,"org.easymock.tests.UsageStrictMockTest.testVerify":316,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":259,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":109,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":37,"org.easymock.tests.LimitationsTest.abstractClass":447,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":94,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":38,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":26,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":276,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":374}}]
