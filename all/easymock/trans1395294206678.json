[{"position":"org.easymock.internal.RecordState:274","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[25,26,26,27,27,28,0,29,30,31,32,33,34,35,36,37,38,39,11,40,41,42,43,1,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,3,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,4,5,6,7,8,9,169,170,171,172,173,174,175,24,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,10,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:34","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>.getName(), java.lang.Byte.java.lang.Class<java.lang.Byte>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"prefix","key":"prefix"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[25,26,26,27,27,11,343,76,77,344,78,80,81,83,345,84,100,105,108,109,110,346,347,348,349,350,165,166,167,168,24,222,223,224,252,277,279,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[299],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[351],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[61,103,126,352],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[46,47,49,51,52,54,64,69,85,87,95],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[24,176,177,353],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[253],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1647","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[11,12,13,14,18,19,20,23,24],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:148","sourceCode":"final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[47,52,64],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[124,130,131,173,235,354,245,246,249,250,263,319,320,333,336],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[112,113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[24,176,177,353],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[203,205,219,220,225,329],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[40,41,42,43,46,61,76,77,344,80,81,82,83,84,100,107,110,355,120,356,121,123,124,125,126,130,131,132,133,3,136,357,146,147,150,151,153,155,157,158,160,161,169,171,172,173,174,175,358,359,360,361,362,363,230,233,234,235,236,237,239,243,244,245,246,249,250,251,263,364,290,365,366,367,368,369,370,318,319,320,321,322,323,326,327,328,331,333,334,335,336,337,338],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[371],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,67,78,86,87,90,91,92,93,98,124,126,130,131,155,161,162,163,164,170,172,173,174,175,177,236,237,246,249,250,252,263,270,278,285,286,287,288,289,291,292,293,294,295,299,323,324,325,327,328,332,333,335,336,337,338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).endsWith(java.lang.String))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[372,373,374,375,123,124,130,131,376,377,378,244,245,246,249,250,333],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Invocation:99","failures":[25,29,30,32,33,39,55,78,161,163,379,239],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[380,381],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[25,26,27,28,0,29,30,31,32,382,33,34,35,36,37,38,39,11,12,383,384,40,41,42,43,1,351,2,44,45,46,47,385,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,386,77,344,387,388,78,79,80,13,81,389,14,82,83,390,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,391,106,392,393,107,108,109,110,394,355,111,112,113,114,115,116,117,118,119,395,396,397,398,399,120,356,400,401,402,403,404,121,122,123,124,125,126,127,128,129,130,131,132,133,405,406,134,135,3,407,408,409,410,411,412,136,357,413,414,415,416,417,137,138,139,140,141,142,418,419,420,421,422,423,424,143,144,145,146,147,148,425,149,150,151,426,152,153,154,155,156,157,158,159,160,161,162,163,164,427,428,429,165,430,431,166,432,433,434,435,436,437,438,439,440,167,441,442,443,444,445,168,446,447,4,5,6,7,8,9,169,170,171,172,173,174,175,24,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,448,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,449,450,221,222,223,451,224,452,453,454,455,456,457,458,459,460,352,461,462,463,464,465,225,226,227,228,229,358,466,467,359,360,361,362,363,10,230,231,232,233,234,235,236,237,468,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,469,470,471,472,473,474,475,476,477,263,264,265,266,267,268,364,269,270,271,272,273,274,275,276,371,277,278,279,478,280,281,282,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,283,495,496,497,498,499,284,500,285,286,287,501,288,289,290,291,292,293,294,295,502,503,365,366,367,504,505,506,507,508,296,509,297,298,299,300,301,302,303,304,305,306,307,308,309,310,510,311,511,512,368,513,514,369,370,312,313,314,315,316,317,318,319,320,321,515,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[11,12,13,14,18,19,20,23,24],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[516,86,97,98,517],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[372,374,376,377,333],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[26,26,27,27,44,45,48,49,50,51,57,59,60,62,63,69,70,71,96,171,225,226,227,228,229,267,297,298,301,306,307,308,309,310,329,330,334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[80,418,147,150,448,361,365,366,367,370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":47,"org.easymock.tests2.UsageTest.argumentsOrdered":131,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":243,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":162,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":489,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":126,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":34,"org.easymock.tests2.DelegateToTest.testReturnException":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":313,"org.easymock.tests.MockingTest.testPartialClassMocking":222,"org.easymock.tests.MockClassControlTest.testToString":365,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":384,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":497,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":435,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":178,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":166,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":18,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":53,"org.easymock.tests2.UsageTest.wrongArguments":124,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":297,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":417,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":304,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":361,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":453,"org.easymock.tests2.UsageConstraintsTest.testNull":49,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":102,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":506,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":161,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":346,"org.easymock.tests2.CaptureTest.testPrimitive":88,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":301,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":197,"org.easymock.tests.UsageTest.moreThanOneArgument":244,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":101,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":227,"org.easymock.tests.UsageTest.argumentsOrdered":250,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":253,"org.easymock.tests.UsageVarargTest.varargIntAccepted":287,"org.easymock.tests.InvocationTest.testEquals":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":494,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":306,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":22,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":76,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":420,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":403,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":481,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":310,"org.easymock.tests.ReplayStateInvalidUsageTest.times":462,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":136,"org.easymock.tests2.DependencyTest.testClassMocking":405,"org.easymock.tests2.AnswerTest.answer":4,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":495,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":75,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":467,"org.easymock.tests2.CaptureTest.testAnd":85,"org.easymock.tests2.UsageTest.strictResetToDefault":122,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":107,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":156,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":241,"org.easymock.tests2.DelegateToTest.testDelegate":142,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":193,"org.easymock.tests.LimitationsTest.mockFinalMethod":509,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":262,"org.easymock.tests2.DependencyTest.testClassMockingSupport":406,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":236,"org.easymock.tests2.CaptureTest.testCapture1_2446744":89,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":391,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":191,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":73,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":457,"org.easymock.tests.UsageThrowableTest.throwError":269,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":360,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":448,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":447,"org.easymock.samples.PartialClassMockTest.testGetArea":25,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":458,"org.easymock.tests.MockingTest.testInterfaceMocking":451,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":307,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":436,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":179,"org.easymock.tests2.UsageTest.niceToStrict":125,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":479,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":78,"org.easymock.tests2.MockBuilderTest.testCreateMock":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":443,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":414,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":187,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":372,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":157,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":466,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":266,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":321,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":302,"org.easymock.tests.UsageOverloadedMethodTest.overloading":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":440,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":59,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":232,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":212,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":280,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":58,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":94,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":501,"org.easymock.tests.MockClassControlTest.testEquals":505,"org.easymock.tests2.EasyMockSupportClassTest.testAll":165,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":195,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":373,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":347,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":74,"org.easymock.tests2.CaptureTest.testCaptureAll":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":260,"org.easymock.tests.MockNameTest.defaultName":364,"org.easymock.tests2.UsageConstraintsTest.testMatches":60,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":455,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":228,"org.easymock.samples.ExampleTest.voteForRemovals":32,"org.easymock.tests.UsageVarargTest.allKinds":295,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":318,"org.easymock.samples.BasicClassMockTest.testPrintContent":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":261,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":275,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":169,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":400,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":317,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":476,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":23,"org.easymock.tests2.UsageConstraintsTest.greaterThan":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":430,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":240,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":110,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":477,"org.easymock.samples.ExampleTest.voteForRemoval":29,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":394,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":112,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":345,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":362,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":421,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":105,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":121,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":252,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":486,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":154,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":428,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":312,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":137,"org.easymock.tests2.CaptureTest.testCaptureFirst":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":485,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":155,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":133,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":235,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":208,"org.easymock.tests2.UsageTest.moreThanOneArgument":123,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":114,"org.easymock.tests2.CaptureTest.testCapture2_2446744":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":496,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":83,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":294,"org.easymock.tests.GenericTest.testBridgedEquals":478,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":327,"org.easymock.tests.UsageExpectAndReturnTest.longType":204,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":258,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":196,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":67,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":238,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":194,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":225,"org.easymock.tests.UsageCallCountTest.tooManyCalls":328,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":209,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":416,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":183,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":274,"org.easymock.tests.MockingTest.testNiceClassMocking":454,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":146,"org.easymock.tests.MockingTest.testClassMocking":450,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":515,"org.easymock.tests2.UsageConstraintsTest.testContains":57,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":118,"org.easymock.tests2.UsageConstraintsTest.testFind":48,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":282,"org.easymock.tests.MockTypeTest.fromEasyMockClass":359,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":2,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":331,"org.easymock.tests.UsageExpectAndReturnTest.object":211,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":106,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":19,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":289,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":514,"org.easymock.tests.UsageTest.exactCallCountByLastCall":251,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":484,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":510,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":254,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":378,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":217,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":285,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":231,"org.easymock.tests.MockClassControlTest.testHashCode":504,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":396,"org.easymock.tests2.EasyMockSupportTest.testVerify":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":438,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":255,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":10,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":72,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":407,"org.easymock.tests.UsageVarargTest.varargCharAccepted":288,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":469,"org.easymock.tests2.CaptureTest.testCaptureMultiple":516,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":500,"org.easymock.tests2.UsageTest.openCallCountByLastCall":127,"org.easymock.tests.DefaultClassInstantiatorTest.object":470,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":163,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":264,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":368,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":439,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":272,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":350,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":411,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":395,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":108,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":367,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":184,"org.easymock.tests.CapturesMatcherTest.test":517,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":218,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":168,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":366,"org.easymock.tests2.UsageTest.resumeIfFailure":132,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":358,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":315,"org.easymock.tests2.StubTest.stubWithReturnValue":144,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":13,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":68,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":210,"org.easymock.tests2.SerializationTest.testAllMockedMethod":177,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":283,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":16,"org.easymock.samples.SupportTest.voteForRemovals":39,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":374,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":371,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":398,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":190,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":353,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":284,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":5,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":511,"org.easymock.tests.UsageExpectAndThrowTest.object":188,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":65,"org.easymock.tests2.DelegateToTest.testWrongClass":140,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":329,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":330,"org.easymock.samples.ConstructorCalledMockTest.testTax":26,"org.easymock.tests.UsageStrictMockTest.range":336,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":423,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":159,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":189,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":80,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":427,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":249,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":303,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":376,"org.easymock.tests2.CaptureTest.testCaptureNone":93,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":342,"org.easymock.tests.UsageUnorderedTest.message":263,"org.easymock.tests.UsageVerifyTest.twoReturns":320,"org.easymock.tests.UsageVarargTest.varargByteAccepted":293,"org.easymock.tests2.ThreadingTest.testThreadSafe":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":441,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":325,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":35,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":369,"org.easymock.tests2.CaptureTest.testCapture_2617107":87,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":375,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":498,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":300,"org.easymock.tests2.UsageConstraintsTest.any":55,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":461,"org.easymock.tests2.StubTest.stub":143,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":499,"org.easymock.tests.UsageExpectAndThrowTest.longType":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":314,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":474,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":352,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":172,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":120,"org.easymock.tests2.SerializationTest.testClass":24,"org.easymock.tests.LimitationsTest.mockNativeMethod":296,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":220,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":410,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":349,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":175,"org.easymock.tests2.NameTest.nameForMocksControl":43,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":412,"org.easymock.tests2.MockedExceptionTest.testMockedException":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":431,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":248,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":182,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":224,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":351,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":99,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":81,"org.easymock.tests.MockingTest.testNicePartialClassMocking":223,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":104,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":408,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":17,"org.easymock.tests2.CaptureTest.testCaptureLast":92,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":237,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":151,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":52,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":66,"org.easymock.tests.MockingTest.testTwoMocks":221,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":426,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":201,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":186,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":130,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":70,"org.easymock.samples.ExampleTest.removeNonExistingDocument":382,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":459,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":413,"org.easymock.tests.UsageStrictMockTest.differentMethods":337,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":397,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":472,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":381,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":113,"org.easymock.tests2.MockBuilderTest.testCreateMockString":84,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":432,"org.easymock.tests.UsageExpectAndThrowTest.floatType":180,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":429,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":7,"org.easymock.tests.UsageVerifyTest.twoThrows":319,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":383,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":167,"org.easymock.samples.ExampleTest.voteAgainstRemoval":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":490,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":340,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":109,"org.easymock.tests.LimitationsTest.privateConstructor":508,"org.easymock.tests2.UsageConstraintsTest.testNotNull":69,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":116,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":276,"org.easymock.tests2.UsageTest.defaultResetToNice":129,"org.easymock.samples.ExampleTest.voteAgainstRemovals":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":491,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":216,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":409,"org.easymock.tests.UsageVarargTest.differentLength":290,"org.easymock.tests2.CallbackTest.callback":3,"org.easymock.tests2.UsageConstraintsTest.equals":385,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":392,"org.easymock.tests.UsageTest.openCallCountByLastCall":247,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":299,"org.easymock.tests.UsageCallCountTest.tooFewCalls":323,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":148,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":305,"org.easymock.tests.UsageThrowableTest.throwCheckedException":273,"org.easymock.tests.MockingTest.testStrictClassMocking":449,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":377,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":150,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":268,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":147,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":357,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":463,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":149,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":9,"org.easymock.tests.ObjectMethodsTest.testHashCode":513,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":21,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":115,"org.easymock.tests2.NameTest.nameForNiceMock":42,"org.easymock.tests2.DependencyTest.testInterfaceMocking":134,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":20,"org.easymock.samples.ExampleTest.addDocument":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":446,"org.easymock.tests2.DelegateToTest.testStubDelegate":139,"org.easymock.tests2.AnswerTest.stubAnswer":8,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":334,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":389,"org.easymock.tests.UsageVarargTest.varargLongAccepted":292,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":488,"org.easymock.tests.UsageExpectAndReturnTest.floatType":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":27,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":402,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":63,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":233,"org.easymock.tests.UsageThrowableTest.noUpperLimit":270,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":45,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":418,"org.easymock.tests2.SerializationTest.test":176,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":90,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":471,"org.easymock.tests2.UsageConstraintsTest.testSame":50,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":202,"org.easymock.samples.SupportTest.addDocument":38,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":425,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":433,"org.easymock.tests.GenericTest.testPackageScope":277,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":483,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":401,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":452,"org.easymock.tests2.NameTest.nameForMock":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":213,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":390,"org.easymock.tests2.UsageStrictMockTest.differentMethods":174,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":393,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":205,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":192,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":512,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":242,"org.easymock.tests2.MockedExceptionTest.testRealException":119,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":493,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":424,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":492,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":171,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":465,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":298,"org.easymock.tests2.NameTest.nameForStrictMock":41,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":388,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":1,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":103,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":422,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":473,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":64,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":77,"org.easymock.tests2.UsageStrictMockTest.range":173,"org.easymock.tests2.UsageConstraintsTest.lessThan":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":399,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":487,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":437,"org.easymock.tests2.CaptureTest.testCaptureRightOne":95,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":380,"org.easymock.tests2.UsageConstraintsTest.testOr":51,"org.easymock.tests.UsageRangeTest.combination":239,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":100,"org.easymock.tests.UsageTest.wrongArguments":246,"org.easymock.tests2.MockBuilderTest.testWithConstructor":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":434,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":503,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":214,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":475,"org.easymock.tests.UsageVarargTest.varargShortAccepted":291,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":326,"org.easymock.tests2.UsageConstraintsTest.cmpTo":56,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":482,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":128,"org.easymock.tests2.CaptureTest.testCaptureFromStub":96,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":456,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":344,"org.easymock.tests.UsageTest.unexpectedCallWithArray":245,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":333,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":324,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":215,"org.easymock.tests2.UsageConstraintsTest.constraints":46,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":335,"org.easymock.samples.ExampleTest.addAndChangeDocument":33,"org.easymock.tests.UsageStrictMockTest.testVerify":339,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":37,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":332,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":259,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":308,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":348,"org.easymock.tests.LimitationsTest.abstractClass":507,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":207,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":158,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":286}}]
