[{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (this.org.easymock.Capture<T>.hasCaptured()) {\n    this.org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"capture"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[14,15],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[16,17,18,19],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[20,21,22,23,24,25,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,16,17,18,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,14,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,0,1,2,3,5,6,7,89,8,9,12,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[227],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[228,37,38,229,230,42,231,232,233,234,235,236,237,59,70,238,78,86,87,9,94,125,239,240,241,128,242,243,158,244,245,246,247,248,249,193,199],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[250,251,252,253,254,255,256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[257,258],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[259,260],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[261],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[262],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[42,242,243,244,245,246,247,248,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,264,265,266,267,199,205],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[228,229,230,268,269,239,240,241,270,271,272,273,274,199,200],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[16,17,18,19],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:105","sourceCode":"if ((java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)) {\n    throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\");\n} ","type":"CtIfImpl"},"failures":[275],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[276,272],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[277],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"message","methodName":"message"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[276,278,269,279,280,272],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1764","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[27,28,29,30,31,32,281,33,282,283,284,285,286,35,36,228,37,38,287,288,39,229,230,40,289,290,41,42,291,292,293,294,295,296,297,298,43,44,45,46,47,48,17,18,299,231,232,233,234,300,237,301,302,303,304,49,50,305,306,51,52,53,54,55,56,57,58,59,60,61,307,62,63,64,65,14,66,67,68,69,70,71,72,308,73,74,75,76,238,77,78,309,268,79,80,81,85,310,311,86,87,88,0,1,2,3,4,5,6,7,89,8,9,10,11,12,90,91,92,93,94,312,313,314,315,316,102,317,318,319,320,321,103,322,104,105,106,107,323,108,324,109,325,326,327,111,112,328,329,113,114,330,115,116,117,118,119,331,120,121,122,123,124,332,125,126,333,127,269,239,334,335,240,241,336,128,129,337,242,130,270,338,339,340,131,341,342,343,344,134,135,136,137,345,346,347,263,348,349,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,350,351,352,353,354,355,356,357,358,359,360,361,243,158,159,244,245,246,247,248,160,161,162,163,164,165,362,363,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,364,365,264,265,266,186,187,188,189,190,191,366,367,368,249,192,272,193,369,273,194,195,196,370,371,372,267,373,197,274,198,199,200,374,375,376,377,378,379,380,381,382,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,383,384,385,386,387,388,389,390,391,392,393,394,216,217,218,219,220,395,221,222,223,224,225,396,397,398,399,400,401,226,402,403,404,405,406,407],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[376,380],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[227,345],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[16,17,18,19],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[35,324],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[65],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[408],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:36","failures":[36,78,268,79,409,276,410,411,412,413,414,278,415,127,269,270,279,416,280,417,271,346,347,272,193,273,194,198,199,200],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[284,285,418,250,250,251,251,34,20,419,420,291,421,422,292,423,293,294,424,295,425,426,427,428,429,296,430,431,432,297,433,434,298,435,436,437,43,44,45,16,18,438,95,96,313,97,98,99,439,440,441,442,100,101,443,444,445,446,447,448,449,318,319,103,322,105,106,107,450,108,256,324,109,325,110,326,327,451,114,330,452,115,453,338,339,340,131,132,133,344,227,136,137,454,345,455,456,375,376,377,378,379,380,382,457,401,226,402,403,404,405,406,407],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"m":"result","methodName":"name"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[284,285,418,250,250,251,251,34,458,420,459,292,294,431,435,45,16,18,438,95,96,313,97,98,99,439,440,441,100,101,443,444,446,447,448,449,103,322,105,106,107,450,108,109,325,110,326,114,115,340,131,132,133,136,137,454,455,456,226],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[311,460],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"shouldBeUsedInOneThread"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[281,39,41,43,44,299,300,303,90,91,92,93,312,99,101,446,449,450,109,461,116,117,118,119,120,121,122,123,124,269,350,351,352,353,354,355,356,357,358,359,360,361,187,366,196,274,375,397,398,399,401,226,402,403,404,405,406,407],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":55,"org.easymock.tests2.UsageTest.argumentsOrdered":230,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":333,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":301,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":38,"org.easymock.tests2.DelegateToTest.testReturnException":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":202,"org.easymock.tests.MockingTest.testPartialClassMocking":131,"org.easymock.tests.MockClassControlTest.testToString":402,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":331,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":426,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":166,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":294,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":317,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":21,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":61,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":128,"org.easymock.tests2.UsageTest.wrongArguments":228,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":118,"org.easymock.samples.ExampleTest.answerVsDelegate":28,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":456,"org.easymock.tests2.UsageConstraintsTest.testNull":57,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":343,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":105,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":407,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":237,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":185,"org.easymock.tests.UsageTest.moreThanOneArgument":127,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":162,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":390,"org.easymock.tests.UsageTest.argumentsOrdered":241,"org.easymock.tests.UsageVarargTest.varargIntAccepted":218,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":207,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":25,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":101,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":211,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":412,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":461,"org.easymock.tests.ReplayStateInvalidUsageTest.times":358,"org.easymock.tests2.DependencyTest.testClassMocking":315,"org.easymock.tests2.AnswerTest.answer":85,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":307,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":93,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":35,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":161,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":233,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":394,"org.easymock.tests2.DelegateToTest.testDelegate":51,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":181,"org.easymock.tests.LimitationsTest.mockFinalMethod":453,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":124,"org.easymock.tests2.DependencyTest.testClassMockingSupport":316,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":346,"org.easymock.tests2.CaptureTest.testCapture1_2446744":4,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":323,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":179,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":91,"org.easymock.tests.UsageThrowableTest.throwError":243,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":352,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":437,"org.easymock.samples.PartialClassMockTest.testGetArea":418,"org.easymock.tests.MockingTest.testInterfaceMocking":341,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":208,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":387,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":427,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":167,"org.easymock.tests2.UsageTest.niceToStrict":37,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":100,"org.easymock.tests2.MockBuilderTest.testCreateMock":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":433,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":175,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":276,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":234,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":266,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":186,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":116,"org.easymock.tests.UsageOverloadedMethodTest.overloading":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":298,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":14,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":149,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":332,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":65,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":259,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":8,"org.easymock.tests.MockClassControlTest.testEquals":406,"org.easymock.tests2.EasyMockSupportClassTest.testAll":292,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":137,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":183,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":458,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":122,"org.easymock.tests2.CaptureTest.testCaptureAll":1,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":92,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":254,"org.easymock.tests.MockNameTest.defaultName":363,"org.easymock.tests2.UsageConstraintsTest.testMatches":66,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":163,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":350,"org.easymock.samples.ExampleTest.voteForRemovals":32,"org.easymock.tests.UsageVarargTest.allKinds":225,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":123,"org.easymock.samples.BasicClassMockTest.testPrintContent":285,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":247,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":206,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":306,"org.easymock.tests2.UsageConstraintsTest.greaterThan":68,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":423,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":213,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":326,"org.easymock.samples.ExampleTest.voteForRemoval":29,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":382,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":112,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":327,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":450,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":114,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":286,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":445,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":232,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":201,"org.easymock.tests2.CaptureTest.testCaptureFirst":12,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":304,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":289,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":274,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":145,"org.easymock.tests2.UsageTest.moreThanOneArgument":36,"org.easymock.tests2.CaptureTest.testCapture2_2446744":11,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":329,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":447,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":224,"org.easymock.tests.GenericTest.testBridgedEquals":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":367,"org.easymock.tests.UsageExpectAndReturnTest.longType":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":120,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":299,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":448,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":184,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":389,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":308,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":182,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":160,"org.easymock.tests.UsageCallCountTest.tooManyCalls":368,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":416,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":434,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":146,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":246,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":95,"org.easymock.tests.MockingTest.testNiceClassMocking":344,"org.easymock.tests.MockingTest.testClassMocking":339,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":439,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":187,"org.easymock.tests2.UsageConstraintsTest.testContains":64,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":45,"org.easymock.tests2.UsageConstraintsTest.testFind":56,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":126,"org.easymock.tests.MockTypeTest.fromEasyMockClass":364,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":48,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":249,"org.easymock.tests.UsageExpectAndReturnTest.object":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":108,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":22,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":220,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":399,"org.easymock.tests.UsageTest.exactCallCountByLastCall":336,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":165,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":391,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":20,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":154,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":216,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":372,"org.easymock.tests.MockClassControlTest.testHashCode":405,"org.easymock.tests2.EasyMockSupportTest.testVerify":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":429,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":411,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":392,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":265,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":370,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":90,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":290,"org.easymock.tests.UsageVarargTest.varargCharAccepted":219,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":374,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":77,"org.easymock.tests2.UsageTest.openCallCountByLastCall":287,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":302,"org.easymock.tests.DefaultClassInstantiatorTest.object":375,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":264,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":397,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":271,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":296,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":244,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":404,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":172,"org.easymock.tests.CapturesMatcherTest.test":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":155,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":435,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":413,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":403,"org.easymock.tests2.UsageTest.resumeIfFailure":40,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":204,"org.easymock.tests2.StubTest.stubWithReturnValue":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":26,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":147,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":73,"org.easymock.tests2.SerializationTest.testAllMockedMethod":18,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":348,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":278,"org.easymock.samples.SupportTest.voteForRemovals":283,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":227,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":178,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":19,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":349,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":310,"org.easymock.tests.UsageExpectAndThrowTest.object":176,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":71,"org.easymock.tests2.DelegateToTest.testWrongClass":305,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":134,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":135,"org.easymock.samples.ConstructorCalledMockTest.testTax":250,"org.easymock.tests.UsageStrictMockTest.range":273,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":320,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":300,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":438,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":177,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":443,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":291,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":117,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":279,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":388,"org.easymock.tests2.CaptureTest.testCaptureNone":89,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":261,"org.easymock.tests.UsageUnorderedTest.message":270,"org.easymock.tests.UsageVerifyTest.twoReturns":200,"org.easymock.tests.UsageVarargTest.varargByteAccepted":223,"org.easymock.tests2.ThreadingTest.testThreadSafe":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":432,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":191,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":400,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":284,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":263,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":242,"org.easymock.tests2.UsageConstraintsTest.any":62,"org.easymock.tests2.StubTest.stub":41,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":357,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":385,"org.easymock.tests.UsageExpectAndThrowTest.longType":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":203,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":379,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":356,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":309,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":312,"org.easymock.tests.LimitationsTest.mockNativeMethod":115,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":454,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":157,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":459,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":80,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":408,"org.easymock.tests2.NameTest.nameForMocksControl":84,"org.easymock.tests2.MockedExceptionTest.testMockedException":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":293,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":335,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":170,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":133,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":103,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":444,"org.easymock.tests.MockingTest.testNicePartialClassMocking":132,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":107,"org.easymock.tests2.CaptureTest.testCaptureLast":7,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":347,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":98,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":60,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":72,"org.easymock.tests.MockingTest.testTwoMocks":340,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":275,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":138,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":174,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":229,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":75,"org.easymock.samples.ExampleTest.removeNonExistingDocument":281,"org.easymock.tests.UsageStrictMockTest.differentMethods":194,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":354,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":258,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":377,"org.easymock.tests2.ConstraintsToStringTest.andToString":414,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":328,"org.easymock.tests2.MockBuilderTest.testCreateMockString":449,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":424,"org.easymock.tests.UsageExpectAndThrowTest.floatType":168,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":86,"org.easymock.tests.UsageVerifyTest.twoThrows":199,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":431,"org.easymock.samples.ExampleTest.voteAgainstRemoval":30,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":386,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":110,"org.easymock.tests.LimitationsTest.privateConstructor":452,"org.easymock.tests2.UsageConstraintsTest.testNotNull":74,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":43,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":248,"org.easymock.tests2.UsageTest.defaultResetToNice":39,"org.easymock.samples.ExampleTest.voteAgainstRemovals":27,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":153,"org.easymock.tests.UsageVarargTest.differentLength":395,"org.easymock.tests2.CallbackTest.callback":94,"org.easymock.tests2.UsageConstraintsTest.equals":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":256,"org.easymock.tests.UsageTest.openCallCountByLastCall":334,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":337,"org.easymock.tests.UsageCallCountTest.tooFewCalls":189,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":313,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":119,"org.easymock.tests.UsageThrowableTest.throwCheckedException":245,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":280,"org.easymock.tests.MockingTest.testStrictClassMocking":338,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":97,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":362,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":96,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":359,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":314,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":88,"org.easymock.tests.ObjectMethodsTest.testHashCode":398,"org.easymock.tests2.CompareToTest.testGreateOrEqual":15,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":24,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":113,"org.easymock.tests2.NameTest.nameForNiceMock":83,"org.easymock.tests2.DependencyTest.testInterfaceMocking":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":23,"org.easymock.samples.ExampleTest.addDocument":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":436,"org.easymock.tests2.DelegateToTest.testStubDelegate":50,"org.easymock.tests2.AnswerTest.stubAnswer":87,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":193,"org.easymock.tests.UsageVarargTest.varargLongAccepted":222,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":195,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":156,"org.easymock.tests.UsageExpectAndReturnTest.floatType":140,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":34,"org.easymock.tests2.ConstraintsToStringTest.orToString":409,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":251,"org.easymock.tests.UsageThrowableTest.noUpperLimit":158,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":69,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":53,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":318,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":5,"org.easymock.tests2.SerializationTest.test":17,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":260,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":376,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":139,"org.easymock.tests2.UsageConstraintsTest.testSame":58,"org.easymock.samples.SupportTest.addDocument":282,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":295,"org.easymock.tests.GenericTest.testPackageScope":136,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":393,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":342,"org.easymock.tests2.NameTest.nameForMock":81,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":150,"org.easymock.tests2.UsageStrictMockTest.differentMethods":79,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":255,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":324,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":142,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":180,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":396,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":215,"org.easymock.tests2.MockedExceptionTest.testRealException":46,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":365,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":321,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":460,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":129,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":361,"org.easymock.tests2.NameTest.nameForStrictMock":82,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":442,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":47,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":106,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":319,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":70,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":378,"org.easymock.tests.ErrorMessageTest.testGetters":277,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":440,"org.easymock.tests2.UsageStrictMockTest.range":268,"org.easymock.tests2.UsageConstraintsTest.lessThan":76,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":419,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":428,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":257,"org.easymock.tests2.UsageConstraintsTest.testOr":59,"org.easymock.tests.UsageRangeTest.combination":212,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":322,"org.easymock.tests.UsageTest.wrongArguments":239,"org.easymock.tests2.MockBuilderTest.testWithConstructor":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":425,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":151,"org.easymock.tests.UsageVarargTest.varargShortAccepted":221,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":380,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":366,"org.easymock.tests2.UsageConstraintsTest.cmpTo":63,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":311,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":288,"org.easymock.tests2.CaptureTest.testCaptureFromStub":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":351,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":441,"org.easymock.tests.UsageTest.unexpectedCallWithArray":269,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":272,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":190,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":253,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":152,"org.easymock.tests2.UsageConstraintsTest.constraints":54,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":369,"org.easymock.samples.ExampleTest.addAndChangeDocument":33,"org.easymock.tests2.ConstraintsToStringTest.notToString":410,"org.easymock.tests.UsageStrictMockTest.testVerify":196,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":121,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":6,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":209,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":144,"org.easymock.tests.LimitationsTest.abstractClass":330,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":197,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":210,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":217,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":235}}]
