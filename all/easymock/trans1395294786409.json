[{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[6,7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.ConstructorArgs:60","failures":[8,9,10,11,12,13,14,15,16,17,18],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,35,36,36,37,38,39,40,41,8,42,43,9,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[74,75],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[21,29,30,37,46,76,47,48,49,50,51,52,53,54,77,78,55,65,72],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[79,80,81],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,44,128],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[129,130],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[84,92,93,131,99,101,102,103,106,108,109,110,111,113,114,115,116,118,119,120,121,122,123,124,125],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[132,133,134,135],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[136,0,137,138,3,139,140,141,142,122,143,144,145,146,147],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[148,149,150,151,152],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[66,153,154,155,156,157,158,132,133,159,134,160,161,162,163,135],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[164,72,165,73],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[136,85,166,87,88,89,90,91,141,167,122,168,147,61,69,169,170,171,172,173,174,133,175,176,177,161,162,163],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[178,179,180,181,182,183,184,185,186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[187,188],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[86,92,93,122,124,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[189,190,191,192,193,11,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[164,72,165,73],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[70],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"shouldBeUsedInOneThread"}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,35,35,36,36,211,212,158,213,214,215,216,217,218,134,219,160,220,221,222,135],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[223,224],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:126","failures":[148,149,150,151,152],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[189,190,191,225,226,45,11,14,227,72],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:212","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[194,82,228,229,230,231,232,233,19,20,234,195,196,83,84,197,136,235,22,236,237,0,198,238,137,239,240,241,85,166,86,87,88,89,90,91,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,92,262,139,263,93,140,141,264,23,199,200,201,202,203,265,148,94,266,267,268,269,270,271,272,273,274,275,276,277,278,95,96,97,98,99,100,279,280,204,205,281,282,283,167,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,284,285,286,287,122,143,206,207,208,209,210,288,149,289,290,291,292,293,294,295,38,39,296,297,298,299,300,301,302,211,303,144,304,305,306,123,40,42,307,124,308,309,145,310,168,311,125,146,147,312,313,126,127,44,128,314,315,6,316,317,56,60,61,318,62,63,64,66,70,319,320,321,322,323,324,325,150,326,151,152,327,328,329,330,331,332,333,334,335,336,169,212,337,338,339,340,341,170,342,343,344,345,346,171,172,347,348,158,213,132,173,214,215,216,217,174,133,175,159,218,176,134,219,349,160,220,177,161,162,350,163,221,222,135,165,73,351],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":173,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":92,"org.easymock.tests2.UsageTest.argumentsOrdered":147,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":98,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":168,"org.easymock.tests2.StubTest.stubWithReturnValue":123,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":14,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":294,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":251,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":163,"org.easymock.tests2.SerializationTest.testAllMockedMethod":73,"org.easymock.tests2.DelegateToTest.testReturnException":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":96,"org.easymock.tests.MockingTest.testPartialClassMocking":26,"org.easymock.samples.SupportTest.voteForRemovals":297,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.tests.MockClassControlTest.testToString":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":223,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":178,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":71,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":114,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":164,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":102,"org.easymock.tests.UsageExpectAndThrowTest.object":112,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":300,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":161,"org.easymock.tests2.DelegateToTest.testWrongClass":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":189,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":204,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":205,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":195,"org.easymock.tests2.UsageTest.wrongArguments":145,"org.easymock.samples.ConstructorCalledMockTest.testTax":35,"org.easymock.tests.UsageStrictMockTest.range":137,"org.easymock.samples.ExampleTest.answerVsDelegate":149,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":30,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":40,"org.easymock.tests2.UsageConstraintsTest.testNull":215,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":113,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":346,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":282,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":51,"org.easymock.tests2.CaptureTest.testPrimitive":330,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":197,"org.easymock.tests.UsageTest.moreThanOneArgument":262,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":121,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":140,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":208,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":1,"org.easymock.tests2.CaptureTest.testCaptureNone":335,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":186,"org.easymock.tests.UsageUnorderedTest.message":136,"org.easymock.tests.UsageVerifyTest.twoReturns":143,"org.easymock.tests.UsageVarargTest.varargByteAccepted":274,"org.easymock.tests2.ThreadingTest.testThreadSafe":314,"org.easymock.tests.UsageTest.argumentsOrdered":141,"org.easymock.tests.UsageVarargTest.varargIntAccepted":268,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":231,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":38,"org.easymock.tests2.CaptureTest.testCapture_2617107":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":199,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":193,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":181,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":50,"org.easymock.tests2.UsageConstraintsTest.any":175,"org.easymock.tests2.StubTest.stub":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":97,"org.easymock.tests.UsageExpectAndThrowTest.longType":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":182,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":79,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":303,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":298,"org.easymock.tests2.SerializationTest.testClass":72,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":348,"org.easymock.tests.LimitationsTest.mockNativeMethod":22,"org.easymock.tests2.DependencyTest.testClassMocking":187,"org.easymock.tests2.AnswerTest.answer":319,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":261,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":21,"org.easymock.tests2.CaptureTest.testAnd":327,"org.easymock.tests2.UsageTest.strictResetToDefault":308,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":305,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":67,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":13,"org.easymock.tests2.MockedExceptionTest.testMockedException":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":342,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":285,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":93,"org.easymock.tests2.DelegateToTest.testDelegate":152,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":324,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":28,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":106,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":52,"org.easymock.tests.MockingTest.testNicePartialClassMocking":27,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":117,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":64,"org.easymock.tests2.CaptureTest.testCaptureLast":334,"org.easymock.tests2.CompareToTest.testCompareEqual":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":99,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":9,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":174,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":162,"org.easymock.tests.MockingTest.testTwoMocks":25,"org.easymock.tests2.DependencyTest.testClassMockingSupport":188,"org.easymock.tests2.CaptureTest.testCapture1_2446744":331,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":10,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":242,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":115,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":110,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":146,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":222,"org.easymock.tests.UsageThrowableTest.throwError":85,"org.easymock.tests.UsageStrictMockTest.differentMethods":239,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":130,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":6,"org.easymock.tests2.MockBuilderTest.testCreateMockString":55,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":210,"org.easymock.tests.UsageExpectAndThrowTest.floatType":104,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":349,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":320,"org.easymock.tests.UsageVerifyTest.twoThrows":122,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":58,"org.easymock.samples.PartialClassMockTest.testGetArea":37,"org.easymock.tests2.CompareToTest.testLessOrEqual":157,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":200,"org.easymock.samples.ExampleTest.voteAgainstRemoval":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":180,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":184,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":185,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":69,"org.easymock.tests2.UsageTest.niceToStrict":310,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":103,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":18,"org.easymock.tests2.UsageConstraintsTest.testNotNull":221,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":91,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":126,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":49,"org.easymock.tests2.MockBuilderTest.testCreateMock":53,"org.easymock.samples.ExampleTest.voteAgainstRemovals":288,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":257,"org.easymock.tests.UsageVarargTest.differentLength":271,"org.easymock.tests2.CallbackTest.callback":351,"org.easymock.tests.UsageTest.openCallCountByLastCall":263,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":111,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":343,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":158,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":83,"org.easymock.tests.UsageCallCountTest.tooFewCalls":229,"org.easymock.tests.UsageOverloadedMethodTest.overloading":167,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":94,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":134,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":283,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":42,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":80,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":176,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":336,"org.easymock.tests.UsageThrowableTest.throwCheckedException":88,"org.easymock.tests.MockClassControlTest.testEquals":281,"org.easymock.tests2.EasyMockSupportClassTest.testAll":56,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":20,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":2,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":119,"org.easymock.tests2.CaptureTest.testCaptureAll":328,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":82,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":43,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":8,"org.easymock.tests2.UsageConstraintsTest.testMatches":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":307,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":322,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":235,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":209,"org.easymock.tests2.CompareToTest.testGreateOrEqual":156,"org.easymock.samples.ExampleTest.voteForRemovals":292,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":192,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":317,"org.easymock.tests.UsageVarargTest.allKinds":276,"org.easymock.tests2.DependencyTest.testInterfaceMocking":299,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":191,"org.easymock.samples.BasicClassMockTest.testPrintContent":39,"org.easymock.samples.ExampleTest.addDocument":291,"org.easymock.tests2.DelegateToTest.testStubDelegate":326,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":90,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":301,"org.easymock.tests2.AnswerTest.stubAnswer":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":100,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":198,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":226,"org.easymock.tests2.UsageConstraintsTest.greaterThan":160,"org.easymock.tests.UsageVarargTest.varargLongAccepted":273,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":70,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":240,"org.easymock.samples.ExampleTest.voteForRemoval":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":179,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":315,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":7,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":260,"org.easymock.tests.UsageExpectAndReturnTest.floatType":244,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":77,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":65,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":45,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":36,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":220,"org.easymock.tests.UsageThrowableTest.noUpperLimit":166,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":213,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":23,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":124,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":332,"org.easymock.tests2.SerializationTest.test":165,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":227,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":81,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":341,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":74,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":86,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":243,"org.easymock.tests2.UsageConstraintsTest.testSame":216,"org.easymock.samples.SupportTest.addDocument":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":95,"org.easymock.tests2.CaptureTest.testCaptureFirst":338,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":170,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":313,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":142,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":249,"org.easymock.tests.GenericTest.testPackageScope":19,"org.easymock.tests2.CaptureTest.testCapture2_2446744":337,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":316,"org.easymock.tests2.UsageTest.moreThanOneArgument":309,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":54,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":275,"org.easymock.tests.GenericTest.testBridgedEquals":234,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":232,"org.easymock.tests.UsageExpectAndReturnTest.longType":245,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":339,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":254,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":78,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":120,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":350,"org.easymock.tests2.UsageStrictMockTest.differentMethods":304,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":16,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":206,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":246,"org.easymock.tests.UsageCallCountTest.tooManyCalls":233,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":116,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":277,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":286,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":228,"org.easymock.tests2.MockedExceptionTest.testRealException":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":250,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":211,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":196,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":89,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":41,"org.easymock.tests2.UsageConstraintsTest.testContains":218,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":76,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":44,"org.easymock.tests2.UsageConstraintsTest.testFind":214,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":101,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":323,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":63,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":325,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":236,"org.easymock.tests.UsageExpectAndReturnTest.object":252,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":177,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":66,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":47,"org.easymock.tests2.UsageStrictMockTest.range":144,"org.easymock.tests2.UsageConstraintsTest.lessThan":135,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":345,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":270,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":190,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":278,"org.easymock.tests.UsageTest.exactCallCountByLastCall":264,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":194,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":340,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":225,"org.easymock.tests2.CaptureTest.testCaptureRightOne":169,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":279,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":129,"org.easymock.tests2.UsageConstraintsTest.testOr":217,"org.easymock.tests.UsageRangeTest.combination":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":11,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":266,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":61,"org.easymock.tests.UsageTest.wrongArguments":139,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":148,"org.easymock.tests2.MockBuilderTest.testWithConstructor":12,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":31,"org.easymock.tests2.EasyMockSupportTest.testVerify":347,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":247,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":255,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":280,"org.easymock.tests.UsageVarargTest.varargShortAccepted":272,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":265,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":75,"org.easymock.tests2.UsageConstraintsTest.cmpTo":159,"org.easymock.tests.UsageVarargTest.varargCharAccepted":269,"org.easymock.tests2.CompareToTest.testLessThan":153,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":183,"org.easymock.tests2.UsageTest.openCallCountByLastCall":311,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":125,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":172,"org.easymock.tests2.CaptureTest.testCaptureFromStub":212,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":48,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":138,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":109,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":87,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":224,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":15,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":256,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":238,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":68,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":34,"org.easymock.tests2.UsageConstraintsTest.constraints":132,"org.easymock.samples.ExampleTest.addAndChangeDocument":293,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":259,"org.easymock.tests.UsageStrictMockTest.testVerify":241,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":295,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":59,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":33,"org.easymock.tests2.CompareToTest.testGreateThan":154,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":333,"org.easymock.tests2.UsageTest.resumeIfFailure":312,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":201,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":248,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":29,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":344,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":267}}]
