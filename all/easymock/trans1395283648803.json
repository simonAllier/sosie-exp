[{"position":"org.easymock.ConstructorArgs:77","failures":[0,1],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[15,16,16,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,10,11,12,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[120],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[94,121,122,123,124,125,126,112,118,119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"ret","clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[127],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[94,128,95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:320","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = org.easymock.internal.ExpectedInvocation.getMethod().getExceptionTypes()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[129,130,131,132,133,134,135,120,136,137,138],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:93","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[94,121,122,123,124,125,126,112,118,119],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[121,122,123,157,158,126,119],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[129,159,130,160,131,161,132,133,162,134,163,135,120,164,136,165,137,166,138,167],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[168,169,170,171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[173],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[174],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[175],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[15,176,177,178,179,180,181,182,183,184,185,186,16,17,18,19,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,20,21,22,23,24,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,2,241,242,243,244,245,246,25,247,26,27,28,29,30,31,248,32,249,250,251,252,253,254,255,256,257,258,259,168,169,33,260,34,35,36,37,38,39,261,262,263,264,265,266,267,268,269,270,3,271,272,273,274,275,40,276,277,278,279,41,280,281,282,143,144,145,283,284,146,147,285,4,5,6,7,8,9,286,287,288,289,290,291,292,293,294,148,295,296,297,298,299,300,42,43,44,45,46,301,47,302,303,48,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,49,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,170,171,368,369,370,371,372,373,374,375,376,377,378,379,380,381,50,51,52,53,382,383,384,54,55,385,56,57,58,59,386,60,61,62,63,64,65,66,67,68,129,159,130,160,387,388,389,390,391,392,131,161,393,394,395,396,397,398,399,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,400,10,11,12,13,175,401,402,403,404,405,94,128,95,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,98,99,100,101,431,432,102,103,139,433,434,435,436,437,438,439,173,440,441,172,104,442,105,106,443,107,108,109,110,126,111,444,112,113,114,445,115,116,446,447,448,117,449,450,451,452,153,154,453,454,455,456,457,155,156,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,14,476,477,478,479,480,481,482,483,484,485,486,487,488,489,132,133,490,162,134,163,135,120,164,136,165,491,492,493,494,495,496,497,498,137,166,499,500,501,138,167,502,503,504,505,506,118,119,507],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[121,122,123,157,158,126,119],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[500,138,504,506],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[384],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[132,120],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[120],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[57,454,496],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[133,135,136],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,2,168,169,261,263,264,265,266,267,268,3,271,274,282,284,4,5,6,7,8,9,289,339,170,171,10,11,12,13,451,456,14],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[15,23,40,41,59,94,508,104,509,105,106,108,109,110,111,113,114,510,115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[211,213,355,398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[15,176,177,178,179,180,181,182,183,184,185,186,16,17,18,19,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,20,21,22,23,24,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,2,241,242,243,244,245,246,25,26,27,28,29,30,31,32,250,251,252,253,254,255,256,257,258,259,168,169,33,260,34,35,36,37,38,39,261,262,263,264,265,266,267,268,269,270,3,271,272,273,274,275,40,276,277,278,279,41,280,281,282,143,144,145,283,284,146,147,285,4,5,6,7,8,9,286,287,288,289,290,291,292,293,294,148,295,296,297,298,299,300,42,43,44,45,46,301,47,302,303,48,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,49,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,170,171,368,369,370,371,372,373,374,375,376,377,378,379,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,380,381,50,51,52,53,382,383,384,533,534,535,536,537,538,54,55,385,56,57,58,59,386,60,61,62,63,64,65,66,67,68,129,159,130,160,387,388,389,390,391,392,131,161,393,394,395,539,396,397,398,399,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,400,10,11,12,13,175,401,402,403,404,405,94,128,95,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,98,99,100,101,431,432,102,103,139,433,434,435,436,437,438,439,173,440,441,172,104,105,106,107,108,109,110,111,444,112,113,114,115,116,446,447,117,449,450,451,452,153,154,453,454,455,456,457,155,156,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,14,476,477,478,479,480,481,482,483,484,485,486,487,488,489,132,133,490,162,134,163,135,120,164,136,165,491,492,493,494,495,496,497,498,137,166,499,500,501,138,167,502,503,504,505,506,118,119],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"failures":[133,120,137],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[15,176,177,178,179,180,181,182,183,184,185,186,16,17,18,19,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,20,21,22,23,24,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,2,241,242,243,244,245,246,25,26,27,28,29,30,31,32,250,251,252,253,254,255,256,257,258,259,168,169,33,260,34,35,36,37,38,39,261,262,263,264,265,266,267,268,269,270,3,271,272,273,274,275,40,278,279,41,280,281,282,143,144,145,283,284,146,147,285,4,5,6,7,8,9,286,287,288,289,290,291,292,293,294,148,295,296,297,298,299,300,42,43,44,45,46,301,47,302,303,48,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,49,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,170,171,368,369,370,371,372,373,374,375,376,377,378,379,380,381,50,51,52,53,382,383,384,54,55,385,56,57,58,59,386,60,61,62,63,64,65,66,67,68,129,159,130,160,387,388,389,390,391,392,131,161,393,394,395,396,397,398,399,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,400,10,11,12,13,175,401,402,403,404,405,94,128,95,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,98,99,100,101,432,102,103,433,434,435,436,437,438,439,173,440,441,172,104,105,106,107,108,109,110,111,112,113,114,115,116,117,449,450,451,452,153,154,453,454,455,456,457,155,156,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,14,476,477,478,479,480,481,482,483,484,485,486,487,488,489,132,133,490,162,134,163,135,120,164,136,165,491,492,493,494,495,496,497,498,137,166,499,500,501,138,167,502,504,505,506,118,119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":133,"org.easymock.tests2.UsageTest.argumentsOrdered":156,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":282,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":416,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":314,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":454,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":187,"org.easymock.tests2.DelegateToTest.testReturnException":439,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":5,"org.easymock.tests.MockingTest.testPartialClassMocking":45,"org.easymock.tests.MockClassControlTest.testToString":34,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":433,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":212,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":188,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":75,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":474,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":532,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":121,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":164,"org.easymock.tests2.UsageTest.wrongArguments":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":269,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":430,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":252,"org.easymock.samples.ExampleTest.answerVsDelegate":177,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":41,"org.easymock.tests2.UsageConstraintsTest.testNull":134,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":303,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":56,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":415,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":39,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":96,"org.easymock.tests2.CaptureTest.testPrimitive":160,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":272,"org.easymock.tests.UsageTest.moreThanOneArgument":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":207,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":385,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":342,"org.easymock.tests.UsageTest.argumentsOrdered":147,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":242,"org.easymock.tests.UsageVarargTest.varargIntAccepted":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":362,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":158,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":486,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":447,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":366,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":516,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":424,"org.easymock.tests.ReplayStateInvalidUsageTest.times":358,"org.easymock.tests2.DependencyTest.testClassMocking":471,"org.easymock.tests2.AnswerTest.answer":175,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":470,"org.easymock.tests2.CaptureTest.testAnd":129,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":277,"org.easymock.tests2.UsageTest.strictResetToDefault":452,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":443,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":410,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":238,"org.easymock.tests2.DelegateToTest.testDelegate":172,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":246,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":515,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":203,"org.easymock.tests.LimitationsTest.mockFinalMethod":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":8,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":258,"org.easymock.tests2.DependencyTest.testClassMockingSupport":472,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":382,"org.easymock.tests2.CaptureTest.testCapture1_2446744":387,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":468,"org.easymock.tests.UsageThrowableTest.throwError":261,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":352,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":279,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":487,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":93,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":519,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.MockingTest.testInterfaceMocking":301,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":363,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":209,"org.easymock.tests2.UsageTest.niceToStrict":453,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":189,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":80,"org.easymock.tests2.ThreadingTest.testChangeDefault":539,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":304,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":108,"org.easymock.tests2.MockBuilderTest.testCreateMock":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":88,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":427,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":149,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":197,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":411,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":276,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":171,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":328,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":250,"org.easymock.tests.UsageOverloadedMethodTest.overloading":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":90,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":494,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":289,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":227,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":337,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":493,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":174,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":392,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":371,"org.easymock.tests.MockClassControlTest.testEquals":38,"org.easymock.tests2.EasyMockSupportClassTest.testAll":72,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":22,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":150,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":205,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":469,"org.easymock.tests2.CaptureTest.testCaptureAll":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":256,"org.easymock.tests.MockNameTest.defaultName":214,"org.easymock.tests2.UsageConstraintsTest.testMatches":495,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":343,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":350,"org.easymock.samples.ExampleTest.voteForRemovals":181,"org.easymock.tests.UsageVarargTest.allKinds":379,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":273,"org.easymock.samples.BasicClassMockTest.testPrintContent":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":257,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":267,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":460,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":483,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":9,"org.easymock.tests2.UsageConstraintsTest.greaterThan":497,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":125,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":73,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":237,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":66,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":520,"org.easymock.samples.ExampleTest.voteForRemoval":178,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":32,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":396,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":67,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":280,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":448,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":59,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":512,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":451,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":25,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":408,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":4,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":438,"org.easymock.tests2.CaptureTest.testCaptureFirst":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":409,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":459,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":292,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":223,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":398,"org.easymock.tests2.CaptureTest.testCapture2_2446744":393,"org.easymock.tests2.UsageTest.moreThanOneArgument":153,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":322,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":378,"org.easymock.tests.GenericTest.testBridgedEquals":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":335,"org.easymock.tests.UsageExpectAndReturnTest.longType":219,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":406,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":254,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":510,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":206,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":500,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":241,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":204,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":340,"org.easymock.tests.UsageCallCountTest.tooManyCalls":336,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":89,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":429,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":193,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":266,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":99,"org.easymock.tests.MockingTest.testNiceClassMocking":48,"org.easymock.tests.MockingTest.testClassMocking":43,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":509,"org.easymock.tests2.UsageConstraintsTest.testContains":492,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":329,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":12,"org.easymock.tests2.UsageConstraintsTest.testFind":162,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":339,"org.easymock.tests.MockTypeTest.fromEasyMockClass":278,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":506,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":293,"org.easymock.tests.UsageExpectAndReturnTest.object":226,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":414,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":122,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":373,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":348,"org.easymock.tests.UsageTest.exactCallCountByLastCall":285,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":211,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":243,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":142,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":119,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":232,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":368,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":288,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":477,"org.easymock.tests.MockClassControlTest.testHashCode":37,"org.easymock.tests2.EasyMockSupportTest.testVerify":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":82,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":244,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":170,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":286,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":467,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":503,"org.easymock.tests.UsageVarargTest.varargCharAccepted":372,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":247,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":327,"org.easymock.tests2.UsageTest.openCallCountByLastCall":455,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":417,"org.easymock.tests.DefaultClassInstantiatorTest.object":26,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":367,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":83,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":195,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":97,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":422,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":476,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":518,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":36,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":64,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":194,"org.easymock.tests.ReplayStateInvalidCallsTest.times":524,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":259,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":525,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":91,"org.easymock.tests2.UsageTest.resumeIfFailure":458,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":40,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":7,"org.easymock.tests2.StubTest.stubWithReturnValue":14,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":126,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":501,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":225,"org.easymock.tests2.SerializationTest.testAllMockedMethod":95,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":320,"org.easymock.samples.SupportTest.voteForRemovals":185,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":151,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":20,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":200,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":326,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":401,"org.easymock.tests.UsageExpectAndThrowTest.object":198,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":213,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":166,"org.easymock.tests2.DelegateToTest.testWrongClass":440,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":522,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":380,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":381,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests.UsageStrictMockTest.range":297,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":449,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":413,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":98,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":199,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":110,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":69,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":251,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":140,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":514,"org.easymock.tests2.CaptureTest.testCaptureNone":391,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":210,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":534,"org.easymock.tests.UsageUnorderedTest.message":215,"org.easymock.tests.UsageVerifyTest.twoReturns":275,"org.easymock.tests.UsageVarargTest.varargByteAccepted":377,"org.easymock.tests2.ThreadingTest.testThreadSafe":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":86,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":333,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":18,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":349,"org.easymock.tests2.CaptureTest.testCapture_2617107":130,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":152,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":324,"org.easymock.tests2.UsageConstraintsTest.any":165,"org.easymock.tests2.StubTest.stub":475,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":357,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":169,"org.easymock.tests.UsageExpectAndThrowTest.longType":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":325,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":30,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":356,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":463,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":481,"org.easymock.tests2.SerializationTest.testClass":94,"org.easymock.tests.LimitationsTest.mockNativeMethod":52,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":23,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":235,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":421,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":530,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":466,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":535,"org.easymock.tests2.NameTest.nameForMocksControl":437,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":423,"org.easymock.tests2.MockedExceptionTest.testMockedException":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":74,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":284,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":505,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":47,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":192,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":54,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":111,"org.easymock.tests.MockingTest.testNicePartialClassMocking":46,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":58,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":419,"org.easymock.tests2.CaptureTest.testCaptureLast":390,"org.easymock.tests2.CompareToTest.testCompareEqual":127,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":383,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":529,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":120,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":103,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":499,"org.easymock.tests.MockingTest.testTwoMocks":44,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":526,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":139,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":196,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":155,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":167,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":538,"org.easymock.samples.ExampleTest.removeNonExistingDocument":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":426,"org.easymock.tests.UsageStrictMockTest.differentMethods":298,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":354,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":478,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":537,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":28,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":397,"org.easymock.tests2.MockBuilderTest.testCreateMockString":115,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":33,"org.easymock.tests.UsageExpectAndThrowTest.floatType":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":76,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":71,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":403,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":507,"org.easymock.tests.UsageVerifyTest.twoThrows":274,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":85,"org.easymock.samples.ExampleTest.voteAgainstRemoval":179,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":315,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":65,"org.easymock.tests.LimitationsTest.privateConstructor":51,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":0,"org.easymock.tests2.UsageConstraintsTest.testNotNull":138,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":10,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":268,"org.easymock.tests2.UsageTest.defaultResetToNice":457,"org.easymock.samples.ExampleTest.voteAgainstRemovals":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":316,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":420,"org.easymock.tests.UsageVarargTest.differentLength":374,"org.easymock.tests2.CallbackTest.callback":400,"org.easymock.tests2.UsageConstraintsTest.equals":490,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":61,"org.easymock.tests.UsageTest.openCallCountByLastCall":283,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":488,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":3,"org.easymock.tests.UsageCallCountTest.tooFewCalls":331,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":101,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":253,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":536,"org.easymock.tests.UsageThrowableTest.throwCheckedException":265,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":141,"org.easymock.tests.MockingTest.testStrictClassMocking":42,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":102,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":2,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":425,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":100,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":359,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":432,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":405,"org.easymock.tests.ObjectMethodsTest.testHashCode":347,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":157,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":528,"org.easymock.tests2.NameTest.nameForNiceMock":436,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":399,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":523,"org.easymock.tests2.DependencyTest.testInterfaceMocking":473,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":123,"org.easymock.samples.ExampleTest.addDocument":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":87,"org.easymock.tests2.DelegateToTest.testStubDelegate":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":92,"org.easymock.tests2.AnswerTest.stubAnswer":404,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":295,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":444,"org.easymock.tests.UsageVarargTest.varargLongAccepted":376,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":313,"org.easymock.tests.UsageExpectAndReturnTest.floatType":218,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":118,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":498,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":485,"org.easymock.tests.UsageThrowableTest.noUpperLimit":262,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":489,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":116,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":388,"org.easymock.tests2.SerializationTest.test":128,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":27,"org.easymock.tests2.UsageConstraintsTest.testSame":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":217,"org.easymock.samples.SupportTest.addDocument":184,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":431,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":513,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":77,"org.easymock.tests.GenericTest.testPackageScope":21,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":308,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":484,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":302,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":511,"org.easymock.tests2.NameTest.nameForMock":434,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":228,"org.easymock.tests2.UsageStrictMockTest.differentMethods":465,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":445,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":62,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":220,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":202,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":345,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":239,"org.easymock.tests2.MockedExceptionTest.testRealException":13,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":281,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":270,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":361,"org.easymock.tests2.NameTest.nameForStrictMock":435,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":107,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":504,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":57,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":117,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":137,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":29,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":105,"org.easymock.tests2.UsageStrictMockTest.range":464,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":517,"org.easymock.tests2.UsageConstraintsTest.lessThan":502,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":480,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":407,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":312,"org.easymock.tests2.CaptureTest.testCaptureRightOne":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":81,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":533,"org.easymock.tests2.UsageConstraintsTest.testOr":135,"org.easymock.tests.UsageRangeTest.combination":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":55,"org.easymock.tests.UsageTest.wrongArguments":145,"org.easymock.tests2.MockBuilderTest.testWithConstructor":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":78,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":221,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":305,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":31,"org.easymock.tests.UsageVarargTest.varargShortAccepted":375,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":334,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":531,"org.easymock.tests2.UsageConstraintsTest.cmpTo":491,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":402,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":521,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":307,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":456,"org.easymock.tests2.CaptureTest.testCaptureFromStub":161,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":351,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":106,"org.easymock.tests.UsageTest.unexpectedCallWithArray":144,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":527,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":148,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":332,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":230,"org.easymock.tests2.UsageConstraintsTest.constraints":132,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.samples.ExampleTest.addAndChangeDocument":183,"org.easymock.tests.UsageStrictMockTest.testVerify":300,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":186,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":294,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":255,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":389,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":508,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":364,"org.easymock.tests.LimitationsTest.abstractClass":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":222,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":291,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":412,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":369}}]
