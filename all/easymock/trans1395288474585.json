[{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,0,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[37,38],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[47,49,440,441,443],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.EasyMock:2124","failures":[3,161,162,163,200,203,204],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[136,137],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[197,198,199,488],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[166],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[1,10,25,26,27,28,29,30,31,32,33,34,35,36,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[22,23,197,489,490,491,492,493,214,217],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[129,130,132,133,134,135,136,137,138,139,148,149,153,154,170,171,172,173,180,181],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[129,130,133,135,136,138,148,153,170,172,180],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[494,495,303,312,496,497],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[498,499],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[273,500],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[22,23,197,501,489,490,491,502,503,493,214,217,504,505],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,16,17,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,39,40,43,44,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,96,97,100,102,103,105,106,109,110,111,112,113,115,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,191,193,194,195,196,197,198,199,200,201,202,203,204,205,208,211,212,213,0,217,218,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,261,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,476,477,478,479,480,481,483,485,486,487],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[153],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[168],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:217","failures":[64,75,87,200,275,276,304,318,407],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[253,257],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[253,254,255,256,257],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"candidateMethod","bridgeMethod":"candidateMethod"}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl() : org.easymock.EasyMockSupport.createStrictControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[64,66,67,77,78,84,85,157,158,159,160,273,274,275,276,303,304,306,307,311,313,316,317,353],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,0,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[148],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[480,506,507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[201,204,205,283],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[1,10,25,31,50,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[80,145,226],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[508,509,510,511],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[345],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[512,508,513],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:79","sourceCode":"return java.util.List<java.lang.reflect.Field>","type":"CtReturnImpl"},"failures":[1,10,25,26,27,28,29,30,31,32,33,34,35,36,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[62,65,66,67,74,75,78,79,80,84,85,86,87,129,145,185,189,190,193,208,218,219,221,223,234,236,246,273,275,276,301,303,305,306,307,310,312,313,316,317,318,514,515,398,453,454,455,516,484],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":130,"org.easymock.tests2.UsageTest.argumentsOrdered":85,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":310,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":194,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":287,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":80,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":1,"org.easymock.tests2.DelegateToTest.testReturnException":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":324,"org.easymock.tests.MockingTest.testPartialClassMocking":440,"org.easymock.tests.MockClassControlTest.testToString":458,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":156,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":465,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":107,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":414,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":103,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":489,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":137,"org.easymock.tests2.UsageTest.wrongArguments":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":355,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":36,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":244,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":263,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":445,"org.easymock.tests2.UsageConstraintsTest.testNull":133,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":225,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":463,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":193,"org.easymock.tests2.CaptureTest.testPrimitive":173,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":359,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":433,"org.easymock.tests.UsageTest.moreThanOneArgument":311,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":469,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":385,"org.easymock.tests.UsageTest.argumentsOrdered":317,"org.easymock.tests.UsageVarargTest.varargIntAccepted":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":360,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":503,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":206,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":60,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":92,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":364,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":30,"org.easymock.tests.ReplayStateInvalidUsageTest.times":344,"org.easymock.tests2.DependencyTest.testClassMocking":37,"org.easymock.tests2.AnswerTest.answer":200,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":73,"org.easymock.tests2.CaptureTest.testAnd":170,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":260,"org.easymock.tests2.UsageTest.strictResetToDefault":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":210,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":233,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":468,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":188,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":248,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":389,"org.easymock.tests2.DelegateToTest.testDelegate":169,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":429,"org.easymock.tests.LimitationsTest.mockFinalMethod":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":270,"org.easymock.tests2.DependencyTest.testClassMockingSupport":38,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":485,"org.easymock.tests2.CaptureTest.testCapture1_2446744":174,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":427,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":71,"org.easymock.tests.UsageThrowableTest.throwError":405,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":338,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":262,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":484,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":61,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":121,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.MockingTest.testInterfaceMocking":442,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":361,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":435,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":108,"org.easymock.tests2.UsageTest.niceToStrict":79,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":335,"org.easymock.tests2.ThreadingTest.testChangeDefault":499,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":277,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":212,"org.easymock.tests2.MockBuilderTest.testCreateMock":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":116,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":33,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":494,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":423,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":189,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":259,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":252,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":447,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":242,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":509,"org.easymock.tests.UsageOverloadedMethodTest.overloading":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":112,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":143,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":351,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":239,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":376,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":506,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":142,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":179,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":395,"org.easymock.tests.MockClassControlTest.testEquals":462,"org.easymock.tests2.EasyMockSupportClassTest.testAll":100,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":255,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":431,"org.easymock.tests2.CaptureTest.testCaptureAll":171,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":268,"org.easymock.tests.MockNameTest.defaultName":404,"org.easymock.tests2.UsageConstraintsTest.testMatches":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":470,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":336,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":403,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":274,"org.easymock.samples.BasicClassMockTest.testPrintContent":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":269,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":411,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":62,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":168,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":328,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":493,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":482,"org.easymock.tests2.UsageConstraintsTest.greaterThan":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":101,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":247,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":236,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":483,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":123,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":237,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":264,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":228,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":75,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":329,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":186,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":98,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":323,"org.easymock.tests2.CaptureTest.testCaptureFirst":183,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":187,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":87,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":354,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":372,"org.easymock.tests2.CaptureTest.testCapture2_2446744":182,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":125,"org.easymock.tests2.UsageTest.moreThanOneArgument":77,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":295,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":402,"org.easymock.tests.GenericTest.testBridgedEquals":257,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":510,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":454,"org.easymock.tests.UsageExpectAndReturnTest.longType":368,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":266,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":432,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":413,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":151,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":430,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":473,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":467,"org.easymock.tests.UsageCallCountTest.tooManyCalls":455,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":117,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":373,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":35,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":419,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":410,"org.easymock.tests.MockingTest.testNiceClassMocking":446,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":42,"org.easymock.tests.MockingTest.testClassMocking":438,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":448,"org.easymock.tests2.UsageConstraintsTest.testContains":141,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":20,"org.easymock.tests2.UsageConstraintsTest.testFind":132,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":241,"org.easymock.tests.MockTypeTest.fromEasyMockClass":261,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":163,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":301,"org.easymock.tests.UsageExpectAndReturnTest.object":375,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":34,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":490,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":397,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":333,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":511,"org.easymock.tests.UsageTest.exactCallCountByLastCall":318,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":282,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":464,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":386,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":23,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":392,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":381,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":350,"org.easymock.tests.MockClassControlTest.testHashCode":461,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":51,"org.easymock.tests2.EasyMockSupportTest.testVerify":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":110,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":387,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":251,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":348,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":514,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":70,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":69,"org.easymock.tests.UsageVarargTest.varargCharAccepted":396,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":475,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":300,"org.easymock.tests2.UsageTest.openCallCountByLastCall":81,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":512,"org.easymock.tests.DefaultClassInstantiatorTest.object":476,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":195,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":250,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":331,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":515,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":408,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":28,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":50,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":460,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":234,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":420,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":382,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":472,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":119,"org.easymock.tests2.UsageTest.resumeIfFailure":86,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":258,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":91,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":326,"org.easymock.tests2.StubTest.stubWithReturnValue":89,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":214,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":152,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":374,"org.easymock.tests2.SerializationTest.testAllMockedMethod":199,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":293,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":505,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":495,"org.easymock.samples.SupportTest.voteForRemovals":14,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":253,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":53,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":426,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":488,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":299,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":201,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":466,"org.easymock.tests.UsageExpectAndThrowTest.object":424,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":149,"org.easymock.tests2.DelegateToTest.testWrongClass":167,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":271,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":272,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests.UsageStrictMockTest.range":306,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":95,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":191,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":41,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":425,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":97,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":316,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":243,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":496,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":436,"org.easymock.tests2.CaptureTest.testCaptureNone":178,"org.easymock.tests.UsageUnorderedTest.message":273,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":516,"org.easymock.tests.UsageVerifyTest.twoReturns":276,"org.easymock.tests.UsageVarargTest.varargByteAccepted":401,"org.easymock.tests2.ThreadingTest.testThreadSafe":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":114,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":452,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":11,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":334,"org.easymock.tests2.CaptureTest.testCapture_2617107":172,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":297,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":358,"org.easymock.tests2.UsageConstraintsTest.any":139,"org.easymock.tests2.StubTest.stub":88,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":343,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":474,"org.easymock.tests.UsageExpectAndThrowTest.longType":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":325,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":480,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":342,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":65,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":55,"org.easymock.tests2.SerializationTest.testClass":197,"org.easymock.tests.LimitationsTest.mockNativeMethod":321,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":384,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":256,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":27,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":68,"org.easymock.tests2.NameTest.nameForMocksControl":160,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":29,"org.easymock.tests2.MockedExceptionTest.testMockedException":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":102,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":315,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":443,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":418,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":162,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":222,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":215,"org.easymock.tests.MockingTest.testNicePartialClassMocking":441,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":227,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":501,"org.easymock.tests2.CaptureTest.testCaptureLast":177,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":25,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":486,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":136,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":48,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":150,"org.easymock.tests.MockingTest.testTwoMocks":439,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":365,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":422,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":84,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":154,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":498,"org.easymock.samples.ExampleTest.removeNonExistingDocument":8,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":32,"org.easymock.tests.UsageStrictMockTest.differentMethods":307,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":340,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":52,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":478,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":124,"org.easymock.tests2.MockBuilderTest.testCreateMockString":221,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":456,"org.easymock.tests.UsageExpectAndThrowTest.floatType":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":104,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":99,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":24,"org.easymock.tests.UsageVerifyTest.twoThrows":275,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":113,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":288,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":235,"org.easymock.tests.LimitationsTest.privateConstructor":320,"org.easymock.tests2.UsageConstraintsTest.testNotNull":153,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":412,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":18,"org.easymock.tests2.UsageTest.defaultResetToNice":83,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":380,"org.easymock.tests.UsageVarargTest.differentLength":398,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":26,"org.easymock.tests2.CallbackTest.callback":74,"org.easymock.tests2.UsageConstraintsTest.equals":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":231,"org.easymock.tests.UsageTest.openCallCountByLastCall":314,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":127,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":357,"org.easymock.tests.UsageCallCountTest.tooFewCalls":450,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":245,"org.easymock.tests.UsageThrowableTest.throwCheckedException":409,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":497,"org.easymock.tests.MockingTest.testStrictClassMocking":437,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":391,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":47,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":43,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":31,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":345,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":46,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":205,"org.easymock.tests.ObjectMethodsTest.testHashCode":332,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":502,"org.easymock.tests2.NameTest.nameForNiceMock":159,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":126,"org.easymock.tests2.DependencyTest.testInterfaceMocking":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":491,"org.easymock.samples.ExampleTest.addDocument":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":115,"org.easymock.tests2.DelegateToTest.testStubDelegate":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":120,"org.easymock.tests2.AnswerTest.stubAnswer":204,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":304,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":216,"org.easymock.tests.UsageVarargTest.varargLongAccepted":400,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":286,"org.easymock.tests.UsageExpectAndReturnTest.floatType":367,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":383,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":22,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests.UsageThrowableTest.noUpperLimit":406,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":59,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":128,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":90,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":175,"org.easymock.tests2.SerializationTest.test":198,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":507,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":477,"org.easymock.tests2.UsageConstraintsTest.testSame":134,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":366,"org.easymock.samples.SupportTest.addDocument":13,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":45,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":105,"org.easymock.tests.GenericTest.testPackageScope":254,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":281,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":58,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":444,"org.easymock.tests2.NameTest.nameForMock":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":377,"org.easymock.tests2.UsageStrictMockTest.differentMethods":67,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":220,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":232,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":369,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":428,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":330,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":249,"org.easymock.tests2.MockedExceptionTest.testRealException":21,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":265,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":291,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":504,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":290,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":347,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":356,"org.easymock.tests2.NameTest.nameForStrictMock":158,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":508,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":161,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":226,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":94,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":500,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":479,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":148,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":208,"org.easymock.tests2.UsageStrictMockTest.range":66,"org.easymock.tests2.UsageConstraintsTest.lessThan":155,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":54,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":492,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":285,"org.easymock.tests2.CaptureTest.testCaptureRightOne":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":109,"org.easymock.tests2.UsageConstraintsTest.testOr":135,"org.easymock.tests.UsageRangeTest.combination":246,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":223,"org.easymock.tests.UsageTest.wrongArguments":313,"org.easymock.tests2.MockBuilderTest.testWithConstructor":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":106,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":457,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":378,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":481,"org.easymock.tests.UsageVarargTest.varargShortAccepted":399,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":453,"org.easymock.tests2.UsageConstraintsTest.cmpTo":140,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":280,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":82,"org.easymock.tests2.CaptureTest.testCaptureFromStub":181,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":337,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":209,"org.easymock.tests.UsageTest.unexpectedCallWithArray":312,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":303,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":451,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":379,"org.easymock.tests2.UsageConstraintsTest.constraints":129,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":305,"org.easymock.samples.ExampleTest.addAndChangeDocument":9,"org.easymock.tests.UsageStrictMockTest.testVerify":309,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":10,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":302,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":267,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":362,"org.easymock.tests.LimitationsTest.abstractClass":319,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":371,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":363,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":190}}]
