[{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[18,19],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[21,21,22,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,2,61,62,63,64,65,66,67,68,69],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[21,21,22,22,23,24,25,26,27,70,71,72,73,74,75,76,28,77,78,29,79,80,81,82,83,84,85,86,87,30,88,89,90,91,92,31,93,94,32,33,34,95,35,36,37,38,96,39,40,41,42,43,44,45,46,47,48,97,98,49,50,51,52,99,100,53,54,55,56,57,58,101,102,60,103,0,1,2,104,105,106,107,108,109,110,111,112,61,62,63,64,113,114,115,116,117,118,119,120,121,122,65,66,67,123,68,124,125,126,127,69,128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[130],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[26,131,27,132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"argType":"primitiveType","paramType":"primitiveType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[122],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[21,21,22,22,133,134,135,136,137,138,139,140,23,24,141,142,25,143,144,145,26,131,27,28,29,30,31,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,18,210,211,212,213,214,215,216,217,218,219,220,221,222,19,223,224,225,226,227,228,229,32,33,35,36,37,38,39,40,41,42,43,230,44,45,46,47,48,49,50,51,52,53,54,55,56,231,57,58,232,233,234,235,236,237,238,60,239,0,1,2,3,240,241,242,243,244,245,246,247,4,248,249,250,251,252,5,104,62,63,64,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,114,115,116,117,118,119,120,121,65,66,280,281,282,283,284,285,286,287,288,289,290,291,292,68,293,294,295,296,297,298,20,299,300,301,6,302,303,304,7,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,69,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,12,13,14,15,16,17,375,376,377,378,379,380,381,382,383,384,385,386,387,388],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[122,123],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:200","sourceCode":"if (!java.lang.Character.(java.lang.Character.isJavaIdentifierPart(char))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[389,390],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[206,212,0,1,2,3,4,5,7,305,307,312,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,338,340,8,9,10,342,344,345,346,347,348,349,352,391,392,393,12,13,14,15,16,17],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1051","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[169],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[153,394,167,172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[395,396],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[199,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[104,105,106,107,109,110],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[26,131,27],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[70,37,55,57,397,116,117,118,390,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"position":"org.easymock.Capture:134","failures":[398,399],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[133,135,136,137,138,140,23,24,141,142,143,144,27,170,184,185,188,189,190,191,196,209,210,214,215,221,226,227,228,229,35,241,243,244,245,246,400,401,66,280,281,282,283,284,286,287,288,289,290,68,7,310,313,314,343,365,367,368,370,371,372,373,383,384,385,387,388],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[402],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[49],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[398],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[122,123],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[403,293,404,405,406,407,408],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[301],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[49],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":151,"org.easymock.tests2.UsageTest.argumentsOrdered":215,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":307,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":227,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":210,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":142,"org.easymock.tests2.DelegateToTest.testReturnException":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":13,"org.easymock.tests.MockingTest.testPartialClassMocking":62,"org.easymock.tests.MockClassControlTest.testToString":116,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":408,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":82,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":316,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":233,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":157,"org.easymock.tests2.UsageTest.wrongArguments":209,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":250,"org.easymock.samples.ExampleTest.answerVsDelegate":134,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":125,"org.easymock.tests2.UsageConstraintsTest.testNull":153,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":44,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":121,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":226,"org.easymock.tests2.CaptureTest.testPrimitive":186,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":306,"org.easymock.tests.UsageTest.moreThanOneArgument":308,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":335,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":377,"org.easymock.tests.UsageTest.argumentsOrdered":314,"org.easymock.tests.UsageVarargTest.varargIntAccepted":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":355,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":32,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":72,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":36,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":359,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":234,"org.easymock.tests.ReplayStateInvalidUsageTest.times":300,"org.easymock.tests2.DependencyTest.testClassMocking":101,"org.easymock.tests2.AnswerTest.answer":175,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":394,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":182,"org.easymock.tests2.CaptureTest.testAnd":183,"org.easymock.tests2.UsageTest.strictResetToDefault":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":376,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":222,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":278,"org.easymock.tests2.DelegateToTest.testDelegate":205,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":331,"org.easymock.tests.LimitationsTest.mockFinalMethod":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":16,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":364,"org.easymock.tests2.DependencyTest.testClassMockingSupport":102,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":400,"org.easymock.tests2.CaptureTest.testCapture1_2446744":187,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":329,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":180,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":295,"org.easymock.tests.UsageThrowableTest.throwError":342,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":390,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":94,"org.easymock.samples.PartialClassMockTest.testGetArea":25,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":356,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":397,"org.easymock.tests2.UsageTest.niceToStrict":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":35,"org.easymock.tests2.MockBuilderTest.testCreateMock":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":90,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":325,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":19,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":393,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":248,"org.easymock.tests.UsageOverloadedMethodTest.overloading":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":92,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":162,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":352,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":264,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":336,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":161,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":192,"org.easymock.tests.MockClassControlTest.testEquals":120,"org.easymock.tests2.EasyMockSupportClassTest.testAll":28,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":66,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":333,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":59,"org.easymock.tests2.CaptureTest.testCaptureAll":184,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":362,"org.easymock.tests2.UsageConstraintsTest.testMatches":163,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":378,"org.easymock.samples.ExampleTest.voteForRemovals":138,"org.easymock.tests.UsageVarargTest.allKinds":290,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":339,"org.easymock.samples.BasicClassMockTest.testPrintContent":24,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":363,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":348,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":17,"org.easymock.tests2.UsageConstraintsTest.greaterThan":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":77,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":277,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":52,"org.easymock.samples.ExampleTest.voteForRemoval":135,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":110,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":99,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":198,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":47,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":68,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":206,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":11,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":220,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":12,"org.easymock.tests2.CaptureTest.testCaptureFirst":196,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":221,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":217,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":354,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":260,"org.easymock.tests2.CaptureTest.testCapture2_2446744":195,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":200,"org.easymock.tests2.UsageTest.moreThanOneArgument":208,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":40,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":289,"org.easymock.tests.GenericTest.testBridgedEquals":123,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":387,"org.easymock.tests.UsageExpectAndReturnTest.longType":256,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":218,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":360,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":396,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":334,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":403,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":170,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":332,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":9,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":375,"org.easymock.tests.UsageCallCountTest.tooManyCalls":388,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":91,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":261,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":321,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":347,"org.easymock.tests.MockingTest.testNiceClassMocking":113,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":54,"org.easymock.tests.MockingTest.testClassMocking":112,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":395,"org.easymock.tests2.UsageConstraintsTest.testContains":160,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":381,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":2,"org.easymock.tests2.UsageConstraintsTest.testFind":152,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":338,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":147,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":366,"org.easymock.tests.UsageExpectAndReturnTest.object":263,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":225,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":284,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":275,"org.easymock.tests.UsageTest.exactCallCountByLastCall":315,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":103,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":269,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":280,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":351,"org.easymock.tests.MockClassControlTest.testHashCode":119,"org.easymock.tests2.EasyMockSupportTest.testVerify":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":85,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":392,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":350,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":179,"org.easymock.tests.UsageVarargTest.varargCharAccepted":283,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":241,"org.easymock.tests2.UsageTest.openCallCountByLastCall":211,"org.easymock.tests.DefaultClassInstantiatorTest.object":104,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":228,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":391,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":86,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":323,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":345,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":118,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":50,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":322,"org.easymock.tests.CapturesMatcherTest.test":399,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":270,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":8,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":31,"org.easymock.tests2.UsageTest.resumeIfFailure":216,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":124,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":15,"org.easymock.tests2.StubTest.stubWithReturnValue":4,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":171,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":262,"org.easymock.tests2.SerializationTest.testAllMockedMethod":27,"org.easymock.samples.SupportTest.voteForRemovals":144,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":328,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":132,"org.easymock.tests.UsageExpectAndThrowTest.object":326,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":168,"org.easymock.tests2.DelegateToTest.testWrongClass":204,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":291,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":292,"org.easymock.samples.ConstructorCalledMockTest.testTax":21,"org.easymock.tests.UsageStrictMockTest.range":371,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":224,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":53,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":327,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":37,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":74,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":313,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":249,"org.easymock.tests2.CaptureTest.testCaptureNone":191,"org.easymock.tests.UsageUnorderedTest.message":365,"org.easymock.tests.UsageVerifyTest.twoReturns":341,"org.easymock.tests.UsageVarargTest.varargByteAccepted":288,"org.easymock.tests2.ThreadingTest.testThreadSafe":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":88,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":385,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":23,"org.easymock.tests2.CaptureTest.testCapture_2617107":185,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":305,"org.easymock.tests2.UsageConstraintsTest.any":158,"org.easymock.tests2.StubTest.stub":247,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":299,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":14,"org.easymock.tests.UsageExpectAndThrowTest.longType":319,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":108,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":20,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":243,"org.easymock.tests2.SerializationTest.testClass":26,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":239,"org.easymock.tests.LimitationsTest.mockNativeMethod":69,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":67,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":272,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":246,"org.easymock.tests2.NameTest.nameForMocksControl":238,"org.easymock.tests2.MockedExceptionTest.testMockedException":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":78,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":312,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":129,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":64,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":320,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":42,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":38,"org.easymock.tests.MockingTest.testNicePartialClassMocking":63,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":46,"org.easymock.tests2.CaptureTest.testCaptureLast":190,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":401,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":156,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":58,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":169,"org.easymock.tests.MockingTest.testTwoMocks":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":324,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":214,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":173,"org.easymock.samples.ExampleTest.removeNonExistingDocument":139,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":297,"org.easymock.tests.UsageStrictMockTest.differentMethods":372,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":106,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":199,"org.easymock.tests2.MockBuilderTest.testCreateMockString":41,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":79,"org.easymock.tests.UsageExpectAndThrowTest.floatType":318,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":76,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":176,"org.easymock.tests.UsageVerifyTest.twoThrows":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":30,"org.easymock.samples.ExampleTest.voteAgainstRemoval":136,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":51,"org.easymock.tests.LimitationsTest.privateConstructor":127,"org.easymock.tests2.UsageConstraintsTest.testNotNull":172,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":0,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":349,"org.easymock.tests2.UsageTest.defaultResetToNice":213,"org.easymock.samples.ExampleTest.voteAgainstRemovals":133,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":268,"org.easymock.tests.UsageVarargTest.differentLength":285,"org.easymock.tests2.CallbackTest.callback":145,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":97,"org.easymock.tests.UsageTest.openCallCountByLastCall":311,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":148,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":7,"org.easymock.tests.UsageCallCountTest.tooFewCalls":383,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":56,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":251,"org.easymock.tests.UsageThrowableTest.throwCheckedException":346,"org.easymock.tests.MockingTest.testStrictClassMocking":111,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":5,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":57,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":55,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":301,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":231,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":178,"org.easymock.tests.ObjectMethodsTest.testHashCode":274,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":201,"org.easymock.tests2.NameTest.nameForNiceMock":237,"org.easymock.tests2.DependencyTest.testInterfaceMocking":232,"org.easymock.samples.ExampleTest.addDocument":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":93,"org.easymock.tests2.DelegateToTest.testStubDelegate":203,"org.easymock.tests2.AnswerTest.stubAnswer":177,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":369,"org.easymock.tests.UsageVarargTest.varargLongAccepted":287,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":373,"org.easymock.tests.UsageExpectAndReturnTest.floatType":255,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":271,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":60,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":22,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":166,"org.easymock.tests.UsageThrowableTest.noUpperLimit":343,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":149,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":70,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":188,"org.easymock.tests2.SerializationTest.test":131,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":105,"org.easymock.tests2.UsageConstraintsTest.testSame":154,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":254,"org.easymock.samples.SupportTest.addDocument":143,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":80,"org.easymock.tests.GenericTest.testPackageScope":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.NameTest.nameForMock":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":265,"org.easymock.tests2.UsageStrictMockTest.differentMethods":245,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":98,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":257,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":330,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":279,"org.easymock.tests2.MockedExceptionTest.testRealException":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":242,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":302,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":304,"org.easymock.tests2.NameTest.nameForStrictMock":236,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":95,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":146,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":45,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":73,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":167,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":107,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":33,"org.easymock.tests2.UsageStrictMockTest.range":244,"org.easymock.tests2.UsageConstraintsTest.lessThan":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":402,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":84,"org.easymock.tests2.CaptureTest.testCaptureRightOne":193,"org.easymock.tests2.UsageConstraintsTest.testOr":155,"org.easymock.tests.UsageRangeTest.combination":276,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":43,"org.easymock.tests.UsageTest.wrongArguments":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":81,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":258,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":266,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":109,"org.easymock.tests.UsageVarargTest.varargShortAccepted":286,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":386,"org.easymock.tests2.UsageConstraintsTest.cmpTo":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":130,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":212,"org.easymock.tests2.CaptureTest.testCaptureFromStub":194,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":294,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":34,"org.easymock.tests.UsageTest.unexpectedCallWithArray":309,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":368,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":384,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":267,"org.easymock.tests2.CaptureTest.testCapture":398,"org.easymock.tests2.UsageConstraintsTest.constraints":150,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":370,"org.easymock.samples.ExampleTest.addAndChangeDocument":140,"org.easymock.tests.UsageStrictMockTest.testVerify":374,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":141,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":367,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":361,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":357,"org.easymock.tests.LimitationsTest.abstractClass":126,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":259,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":223,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":281}}]
