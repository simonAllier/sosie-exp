[{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[32,33,34,35],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,8,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,15,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,33,110,111,112,113,26,114,115,116,27,28,29,30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"failMessage"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[117,118,119],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[120,0,39,40,41,42,43,45,46,47,48,49,50,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,1,140,141,142,143,144,2,145,146,147,148,149,3,150,151,152,4,153,5,154,53,155,54,55,56,57,156,157,158,159,160,161,162,163,164,165,166,167,9,168,169,170,171,172,173,174,175,10,176,177,178,179,180,11,181,182,183,184,185,12,186,187,188,13,189,14,190,63,65,68,69,70,71,191,192,193,194,195,196,197,72,74,77,198,78,79,80,81,15,199,16,200,87,201,202,203,91,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,17,18,226,227,228,229,230,20,98,99,100,101,231,119,21,102,232,104,105,108,109,22,233,234,235,236,32,237,238,239,240,110,241,242,243,23,244,245,24,246,34,247,248,112,35,249,25,250,251,252,113,253,26,114,254,115,116,27,28,255,256,29,30,31],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[257,36,258,259,260,64,65,261,262,203],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[263,264,265,266],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[267,268,269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[270,271,251],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[235,239,34],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[272,20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[273,274,275,276,277,278,279,225],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[280],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[281,223,224],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[282,0,257,36,283,284,37,38,285,39,40,41,42,43,44,45,46,47,48,49,50,121,51,52,122,123,125,126,127,128,129,130,131,132,286,286,287,288,289,290,135,136,137,138,139,1,140,141,142,143,144,2,145,146,147,148,149,3,150,151,152,4,153,5,154,54,55,56,57,291,58,59,156,157,158,159,8,160,161,162,163,164,165,166,292,167,9,168,169,170,171,293,172,173,174,175,10,176,177,178,179,180,11,181,182,183,184,185,12,186,187,188,13,189,14,190,62,63,64,65,66,67,68,69,294,71,191,295,296,297,298,299,192,193,194,195,196,197,72,74,75,76,300,301,77,198,78,79,80,81,15,82,83,302,84,85,303,199,16,86,200,87,304,305,201,88,89,202,306,203,90,91,204,307,308,309,92,310,311,205,206,312,313,207,208,209,314,210,211,212,213,315,214,215,316,216,317,318,319,320,321,322,323,217,218,219,220,221,222,223,224,225,17,18,19,324,226,227,228,229,230,325,326,327,93,328,329,330,331,332,94,95,96,97,20,231,119,333,21,102,232,103,104,105,106,107,108,109,22,233,234,235,236,32,237,238,239,240,110,241,242,243,23,244,245,24,246,34,247,248,111,112,35,249,25,250,334,251,252,113,253,26,114,254,335,115,116,27,28,255,256,336,337,29,30,31],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[50,121,122,160,161,162,163,164,165,166,171,65,192,193,194,195,196,300,300,301,301,105,22,233,236,32,237,238,242,23,244,24,246,34,35,249,25,336],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[234,235,236,32,237,238,239,240,33,110,34,247,35,249,253,26,114,254,256,336],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[300,301,338,339,340,270,341,342,343,344,271,345,225,346,251],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,257,36,37,38,258,259,347,64,16,86,88,89,261,348,262,349],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[282,0,283,284,285,50,121,122,123,124,125,126,131,287,288,289,134,1,140,141,142,143,144,2,145,146,147,148,149,3,150,151,152,4,153,5,154,156,157,158,159,160,161,292,167,9,168,169,170,171,293,10,176,177,178,179,180,11,181,182,183,184,185,12,186,187,188,13,189,14,190,65,67,68,294,191,295,296,297,298,299,192,193,194,195,196,197,76,77,198,78,79,81,302,303,199,16,200,304,305,201,202,306,90,91,307,308,92,311,205,206,312,313,207,208,209,314,210,211,212,213,214,316,216,317,318,319,320,321,322,323,221,223,224,225,17,18,19,324,226,229,325,326,327,93,328,329,330,331,332,94,95,96,20,231,119,333,21,232,105,107,108,22,233,234,235,236,32,237,238,239,240,110,241,242,243,23,244,245,24,246,34,247,248,111,112,35,249,25,250,334,251,252,253,26,114,254,335,27,28,255,256,337,29,30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[350,351],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[352,353,354,355],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[300,301,302,216,320,321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[353,282,0,257,36,283,284,37,38,285,39,40,41,42,43,45,46,47,48,49,50,121,51,52,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,1,140,141,142,143,144,2,145,146,147,148,149,3,150,151,152,4,153,5,154,53,155,54,55,56,57,156,157,158,159,8,160,161,162,163,164,165,166,167,9,168,169,170,357,171,293,172,173,174,175,10,176,177,178,179,180,11,181,182,183,184,185,12,186,187,188,13,189,14,190,62,63,64,65,66,67,68,69,70,294,71,191,295,296,297,298,299,192,193,194,195,196,197,72,74,77,198,78,79,80,81,15,303,199,16,86,200,87,304,305,201,88,89,202,306,203,91,204,92,310,205,206,207,208,209,314,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,356,225,17,18,19,324,226,227,228,229,230,20,98,99,100,101,231,119,333,21,102,232,103,104,105,106,107,108,109,22,233,234,235,236,32,237,238,239,240,110,241,242,243,23,244,245,24,246,34,247,248,112,35,249,25,250,251,252,113,253,26,114,254,335,115,116,27,28,255,256,336,337,29,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.RecordState:217","failures":[352,353,282,0,257,36,283,284,37,38,285,39,40,41,42,43,44,45,46,47,48,49,50,121,51,52,122,123,124,125,126,127,128,129,130,131,132,358,133,359,360,361,362,363,364,287,354,288,289,355,134,290,365,366,367,368,135,136,137,138,139,369,370,371,372,373,374,1,140,141,142,143,144,2,145,146,147,148,149,3,150,151,152,4,153,5,154,53,155,54,55,56,57,291,58,59,7,375,260,156,157,158,159,8,160,161,162,163,164,165,166,292,167,9,376,168,169,170,377,378,379,380,357,381,382,383,384,385,386,387,171,293,172,173,174,175,388,60,61,389,390,10,176,177,178,179,180,11,181,182,183,184,185,12,186,187,188,13,189,14,190,62,63,64,65,66,67,68,69,70,391,294,71,191,295,296,297,298,299,192,193,194,195,196,197,72,392,73,393,394,74,75,76,300,300,301,301,77,198,78,79,80,81,395,15,82,83,302,84,85,303,199,16,86,200,87,304,305,201,88,89,202,306,203,90,91,204,307,308,309,92,310,311,205,206,312,313,207,208,209,314,210,211,212,213,315,214,215,316,216,317,318,319,320,321,322,323,217,218,219,220,221,281,396,222,223,224,356,225,17,18,19,324,226,227,228,229,230,325,326,327,93,328,329,330,331,332,94,95,96,97,20,98,99,100,101,118,231,119,333,397,21,102,232,103,104,105,106,107,108,109,22,233,234,235,236,32,237,238,239,240,33,110,241,242,243,23,244,245,24,246,34,247,248,111,112,35,249,25,250,334,251,252,113,253,26,114,254,335,115,116,27,28,255,256,336,337,29,30,31],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[398,399,400,401,402,403,404,405,352,353,120,282,0,257,36,283,284,37,38,285,39,40,41,406,42,43,44,45,46,47,48,49,50,121,51,52,122,123,124,125,126,127,128,129,130,131,132,358,133,359,360,361,362,363,364,287,354,288,289,355,134,290,365,366,367,407,368,408,135,136,137,138,139,369,370,371,409,372,373,374,410,411,1,140,141,142,143,144,2,145,146,147,148,149,3,150,151,152,4,153,5,154,53,155,54,55,56,57,291,58,59,412,413,414,415,416,417,418,419,420,421,117,422,6,272,423,424,7,425,426,427,428,429,375,430,260,431,432,156,433,157,158,159,8,160,161,162,163,164,165,166,292,167,9,434,435,376,168,169,436,170,437,438,439,377,378,379,380,357,381,382,383,384,385,386,387,171,293,172,173,174,175,440,388,60,61,389,390,10,176,177,178,179,180,11,181,182,183,184,185,12,186,187,188,13,189,14,190,62,63,64,65,66,67,68,69,70,441,391,442,443,444,445,446,447,448,294,71,191,295,296,297,298,299,192,193,194,195,196,449,197,72,392,450,451,73,393,394,74,75,76,300,301,77,198,78,79,80,81,395,15,82,83,302,84,85,303,199,16,86,200,87,304,305,201,88,89,202,306,452,453,454,455,456,457,458,203,338,90,459,339,460,91,204,307,340,308,461,270,309,92,342,310,311,205,206,312,462,313,207,208,463,209,314,210,211,212,213,315,464,214,345,465,215,316,216,317,466,467,468,469,470,471,472,318,473,474,475,476,477,478,479,280,480,319,481,482,320,483,484,485,486,487,488,489,490,491,321,492,493,494,495,496,322,497,498,499,500,501,502,503,323,504,505,506,507,508,509,217,218,219,220,221,281,396,222,223,224,356,225,346,510,17,18,19,324,226,227,228,229,230,325,326,327,93,328,329,330,331,332,94,95,96,97,20,511,98,99,100,101,118,231,119,333,397,21,102,232,103,104,105,106,107,108,109,22,233,234,235,512,236,32,237,238,239,240,33,110,241,242,243,23,244,245,24,246,34,247,248,111,112,35,249,25,513,514,250,334,251,252,113,253,26,114,254,335,115,116,27,28,255,256,336,337,29,30,515,31],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[235],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:381","sourceCode":"while (java.lang.Class<?> != null) {\n    for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n        final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n        if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n            java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[33,110],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":235,"org.easymock.tests2.UsageTest.argumentsOrdered":89,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":282,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":117,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":87,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":85,"org.easymock.tests2.DelegateToTest.testReturnException":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":128,"org.easymock.tests.MockingTest.testPartialClassMocking":168,"org.easymock.tests.MockClassControlTest.testToString":359,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":511,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":368,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":486,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":10,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":320,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":334,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":274,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":240,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":50,"org.easymock.tests2.UsageTest.wrongArguments":86,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":478,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":174,"org.easymock.samples.ExampleTest.answerVsDelegate":198,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":403,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":438,"org.easymock.tests2.UsageConstraintsTest.testNull":32,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":211,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":94,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":364,"org.easymock.tests2.CaptureTest.testPrimitive":254,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":190,"org.easymock.tests.UsageTest.moreThanOneArgument":0,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":164,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":388,"org.easymock.tests.UsageTest.argumentsOrdered":38,"org.easymock.tests.UsageVarargTest.varargIntAccepted":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":192,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":278,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":508,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":454,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":196,"org.easymock.tests.ReplayStateInvalidUsageTest.times":384,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":318,"org.easymock.tests2.DependencyTest.testClassMocking":513,"org.easymock.tests2.AnswerTest.answer":221,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":425,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":220,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":400,"org.easymock.tests2.CaptureTest.testAnd":253,"org.easymock.tests2.UsageTest.strictResetToDefault":199,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":215,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":163,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":328,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":390,"org.easymock.tests2.DelegateToTest.testDelegate":21,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":188,"org.easymock.tests.LimitationsTest.mockFinalMethod":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":139,"org.easymock.tests2.DependencyTest.testClassMockingSupport":514,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":352,"org.easymock.tests2.CaptureTest.testCapture1_2446744":335,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":464,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":186,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":218,"org.easymock.tests.UsageThrowableTest.throwError":294,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":379,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":402,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":509,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":451,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":166,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":498,"org.easymock.samples.PartialClassMockTest.testGetArea":302,"org.easymock.tests.MockingTest.testInterfaceMocking":436,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":193,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":487,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":411,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":176,"org.easymock.tests2.UsageTest.niceToStrict":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":91,"org.easymock.tests2.MockBuilderTest.testCreateMock":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":494,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":475,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":183,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":261,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":329,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":399,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":371,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":172,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":263,"org.easymock.tests.UsageOverloadedMethodTest.overloading":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":491,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":23,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":289,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":149,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":292,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":243,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":255,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":406,"org.easymock.tests2.EasyMockSupportClassTest.testAll":319,"org.easymock.tests.MockClassControlTest.testEquals":363,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":72,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":189,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":348,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":137,"org.easymock.tests2.CaptureTest.testCaptureAll":26,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":219,"org.easymock.tests.MockNameTest.defaultName":440,"org.easymock.tests2.UsageConstraintsTest.testMatches":244,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":165,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":377,"org.easymock.samples.ExampleTest.voteForRemovals":81,"org.easymock.tests.UsageVarargTest.allKinds":49,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":138,"org.easymock.samples.BasicClassMockTest.testPrintContent":83,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":298,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":505,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":132,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":447,"org.easymock.tests2.UsageConstraintsTest.greaterThan":24,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":481,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":124,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":317,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":448,"org.easymock.samples.ExampleTest.voteForRemoval":78,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":466,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":18,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":404,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":455,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":315,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":74,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":303,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":327,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":127,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":118,"org.easymock.tests2.CaptureTest.testCaptureFirst":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":93,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":306,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":145,"org.easymock.tests2.UsageTest.moreThanOneArgument":16,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":324,"org.easymock.tests2.CaptureTest.testCapture2_2446744":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":426,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":92,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":48,"org.easymock.tests.GenericTest.testBridgedEquals":450,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":264,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":58,"org.easymock.tests.UsageExpectAndReturnTest.longType":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":135,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":325,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":14,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":351,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":111,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":162,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":366,"org.easymock.tests.UsageCallCountTest.tooManyCalls":59,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":495,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":477,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":180,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":297,"org.easymock.tests.MockingTest.testNiceClassMocking":439,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":205,"org.easymock.tests.MockingTest.testClassMocking":435,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":155,"org.easymock.tests2.UsageConstraintsTest.testContains":242,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":350,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":229,"org.easymock.tests2.UsageConstraintsTest.testFind":236,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":9,"org.easymock.tests.MockTypeTest.fromEasyMockClass":401,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":31,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":62,"org.easymock.tests.UsageExpectAndReturnTest.object":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":214,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":476,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":332,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":43,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":275,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":374,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":265,"org.easymock.tests.UsageTest.exactCallCountByLastCall":285,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":407,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":60,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":347,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":346,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":39,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":4,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":288,"org.easymock.tests.ResultTest.createThrowResultToString":269,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":500,"org.easymock.tests.MockClassControlTest.testHashCode":362,"org.easymock.tests2.EasyMockSupportTest.testVerify":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":489,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":61,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":287,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":370,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":217,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":356,"org.easymock.tests.UsageVarargTest.varargCharAccepted":42,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":441,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":430,"org.easymock.tests2.UsageTest.openCallCountByLastCall":304,"org.easymock.tests.DefaultClassInstantiatorTest.object":391,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":96,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":369,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":490,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":181,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":295,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":471,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":499,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":316,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":361,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":11,"org.easymock.tests.CapturesMatcherTest.test":286,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":153,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":322,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":360,"org.easymock.tests2.UsageTest.resumeIfFailure":202,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":398,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":453,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":130,"org.easymock.tests2.StubTest.stubWithReturnValue":232,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":340,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":147,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":112,"org.easymock.tests2.SerializationTest.testAllMockedMethod":113,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":7,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":271,"org.easymock.samples.SupportTest.voteForRemovals":76,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":262,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":449,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":502,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":12,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":375,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":281,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":408,"org.easymock.tests.UsageExpectAndThrowTest.object":184,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":247,"org.easymock.tests2.DelegateToTest.testWrongClass":333,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":160,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":161,"org.easymock.tests.UsageStrictMockTest.range":67,"org.easymock.samples.ConstructorCalledMockTest.testTax":300,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":457,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":331,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":311,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":185,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":479,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":386,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":37,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":173,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":258,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":394,"org.easymock.tests2.CaptureTest.testCaptureNone":28,"org.easymock.tests.UsageUnorderedTest.message":8,"org.easymock.tests.UsageVerifyTest.twoReturns":159,"org.easymock.tests.UsageVarargTest.varargByteAccepted":47,"org.easymock.tests2.ThreadingTest.testThreadSafe":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":492,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":57,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":410,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":82,"org.easymock.tests2.CaptureTest.testCapture_2617107":114,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":349,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":428,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":52,"org.easymock.tests2.UsageConstraintsTest.any":110,"org.easymock.tests2.StubTest.stub":102,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":383,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":429,"org.easymock.tests.UsageExpectAndThrowTest.longType":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":129,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":445,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":382,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":106,"org.easymock.tests2.SerializationTest.testClass":251,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":323,"org.easymock.tests.LimitationsTest.mockNativeMethod":156,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":392,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":154,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":470,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":109,"org.easymock.tests2.NameTest.nameForMocksControl":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":472,"org.easymock.tests2.MockedExceptionTest.testMockedException":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":482,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":284,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":515,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":179,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":170,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":209,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":308,"org.easymock.tests.MockingTest.testNicePartialClassMocking":169,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":213,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":468,"org.easymock.tests2.CaptureTest.testCaptureLast":27,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":273,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":353,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":208,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":239,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":248,"org.easymock.tests.MockingTest.testTwoMocks":376,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":463,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":1,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":182,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":88,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":249,"org.easymock.samples.ExampleTest.removeNonExistingDocument":395,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":474,"org.easymock.tests.UsageStrictMockTest.differentMethods":68,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":501,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":443,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":19,"org.easymock.tests2.MockBuilderTest.testCreateMockString":310,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":483,"org.easymock.tests.UsageExpectAndThrowTest.floatType":177,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":480,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":222,"org.easymock.tests.ResultTest.createReturnResultToString":268,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":510,"org.easymock.tests.UsageVerifyTest.twoThrows":158,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":321,"org.easymock.tests.ResultTest.createDelegateResultToString":267,"org.easymock.samples.ExampleTest.voteAgainstRemoval":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":422,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":73,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":216,"org.easymock.tests.LimitationsTest.privateConstructor":432,"org.easymock.tests2.UsageConstraintsTest.testNotNull":35,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":227,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":299,"org.easymock.tests2.UsageTest.defaultResetToNice":201,"org.easymock.samples.ExampleTest.voteAgainstRemovals":77,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":6,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":469,"org.easymock.tests.UsageVarargTest.differentLength":44,"org.easymock.tests2.CallbackTest.callback":20,"org.easymock.tests2.UsageConstraintsTest.equals":512,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":345,"org.easymock.tests.UsageTest.openCallCountByLastCall":283,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":51,"org.easymock.tests.UsageCallCountTest.tooFewCalls":55,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":312,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":175,"org.easymock.tests.UsageThrowableTest.throwCheckedException":296,"org.easymock.tests.MockingTest.testStrictClassMocking":434,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":259,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":207,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":293,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":473,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":206,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":385,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":313,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":224,"org.easymock.tests.ObjectMethodsTest.testHashCode":373,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":277,"org.easymock.tests2.NameTest.nameForNiceMock":100,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":226,"org.easymock.tests2.DependencyTest.testInterfaceMocking":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":276,"org.easymock.samples.ExampleTest.addDocument":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":497,"org.easymock.tests2.DelegateToTest.testStubDelegate":119,"org.easymock.tests2.AnswerTest.stubAnswer":223,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":65,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":461,"org.easymock.tests.UsageVarargTest.varargLongAccepted":46,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":421,"org.easymock.tests.UsageExpectAndReturnTest.floatType":141,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":5,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":225,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":301,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":507,"org.easymock.tests.UsageThrowableTest.noUpperLimit":71,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":246,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":355,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":233,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":452,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":115,"org.easymock.tests2.SerializationTest.test":252,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":442,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":140,"org.easymock.tests2.UsageConstraintsTest.testSame":237,"org.easymock.samples.SupportTest.addDocument":75,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":462,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":484,"org.easymock.tests.GenericTest.testPackageScope":197,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":506,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":437,"org.easymock.tests2.NameTest.nameForMock":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":3,"org.easymock.tests2.UsageStrictMockTest.differentMethods":108,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":342,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":465,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":143,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":187,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":409,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":126,"org.easymock.tests2.MockedExceptionTest.testRealException":230,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":405,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":344,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":272,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":387,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":121,"org.easymock.tests2.NameTest.nameForStrictMock":99,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":460,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":30,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":266,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":212,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":456,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":444,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":34,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":90,"org.easymock.tests2.UsageStrictMockTest.range":107,"org.easymock.tests2.UsageConstraintsTest.lessThan":25,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":488,"org.easymock.tests2.CaptureTest.testCaptureRightOne":256,"org.easymock.tests2.UsageConstraintsTest.testOr":238,"org.easymock.tests.UsageRangeTest.combination":123,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":314,"org.easymock.tests.UsageTest.wrongArguments":36,"org.easymock.tests2.MockBuilderTest.testWithConstructor":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":485,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":150,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":446,"org.easymock.tests.UsageVarargTest.varargShortAccepted":45,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":291,"org.easymock.tests2.UsageConstraintsTest.cmpTo":241,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":415,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":305,"org.easymock.tests2.CaptureTest.testCaptureFromStub":336,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":378,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":459,"org.easymock.tests.UsageTest.unexpectedCallWithArray":257,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":64,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":56,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":341,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":151,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":66,"org.easymock.tests2.UsageConstraintsTest.constraints":234,"org.easymock.samples.ExampleTest.addAndChangeDocument":15,"org.easymock.tests.UsageStrictMockTest.testVerify":70,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":84,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":136,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":194,"org.easymock.tests.LimitationsTest.abstractClass":431,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":2,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":195,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":330}}]
