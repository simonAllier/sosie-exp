[{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[8,9,10,11,12,13,14,270,271,272,273,274,17,18,19,275,276,277,278,20,279,22,23,24,25,26,27,28,280,29,281,282,283,284,285,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,94,96,97,98,99,100,101,102,286,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,287,288,289,290,131,132,133,134,135,136,137,291,292,152,293,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,294,199,200,201,203,204,205,206,207,208,209,295,296,297,298,299,211,300,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,301,241,302,243,246,247,250,251,252,253,254,260,261,262,263,264,265],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[303,304,305,306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,94,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,131,132,133,134,135,136,137,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,211,212,213,215,216,217,218,219,220,221,222,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,245,246,247,248,249,250,251,253,254,260,261,262,263,264,265,266,267,268,269],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[171,307],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[308,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[310],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[311,26,27,28,312,313,314,315,33,316,35,38,39,40,80,81,87,94,130,132,134,135,136,140,144,145,148,155,170,210,317,214,318,215,218,219,220,224,225,226,227,236,242,244,254,259,262,263,264],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[21,22,23,34,79,80,81,319,133,136,137,217,255,256,257,258,261,264,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[320,321,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[228,323],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.Capture:134","failures":[324,325],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"equalsMethod","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[316,132,135,136,263,264],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[291,299,300,301,326],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:360","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[275,276,277,278,20,279,42,100,291,292,152,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[153,171,174,307],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:114","sourceCode":"if (int != int) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arguments":"objs","length":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[284,54,55,62,69,125],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[95,96,97,327,226],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[1,19,51,52,53,75,185,207,210,211,212,213,214,228,235,237,238,240,245,246,247,248,249,250,251,266,267,268,269],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[1,7,8,10,11,13,17,19,30,31,32,33,34,36,37,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,94,95,96,97,98,99,102,124,125,129,133,135,136,328,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,195,196,197,198,199,200,201,202,203,204,207,210,211,212,213,214,215,216,217,219,221,222,223,226,227,228,229,231,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,253,261,263,264,266,267,268,269],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[7,8,10,11,13,270,76],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":156,"org.easymock.tests2.UsageTest.argumentsOrdered":225,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":33,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":278,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":220,"org.easymock.tests2.StubTest.stubWithReturnValue":253,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":63,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":4,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":177,"org.easymock.tests2.SerializationTest.testAllMockedMethod":205,"org.easymock.tests2.DelegateToTest.testReturnException":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":276,"org.easymock.tests.MockingTest.testPartialClassMocking":51,"org.easymock.samples.SupportTest.voteForRemovals":7,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":326,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":116,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":309,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":267,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":104,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":310,"org.easymock.tests.UsageExpectAndThrowTest.object":114,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":202,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":174,"org.easymock.tests2.DelegateToTest.testWrongClass":208,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":124,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":125,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":162,"org.easymock.tests2.UsageTest.wrongArguments":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":98,"org.easymock.tests.UsageStrictMockTest.range":135,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":289,"org.easymock.samples.ExampleTest.answerVsDelegate":9,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":146,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":245,"org.easymock.tests2.UsageConstraintsTest.testNull":158,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":238,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":115,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":212,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":148,"org.easymock.tests2.CaptureTest.testPrimitive":191,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":102,"org.easymock.tests.UsageTest.moreThanOneArgument":34,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":38,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":288,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":283,"org.easymock.tests2.CaptureTest.testCaptureNone":196,"org.easymock.tests.UsageUnorderedTest.message":28,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":314,"org.easymock.tests.UsageVerifyTest.twoReturns":81,"org.easymock.tests.UsageVarargTest.varargByteAccepted":90,"org.easymock.tests2.ThreadingTest.testThreadSafe":182,"org.easymock.tests.UsageTest.argumentsOrdered":39,"org.easymock.tests.UsageVarargTest.varargIntAccepted":84,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":25,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":74,"org.easymock.tests2.CaptureTest.testCapture_2617107":190,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":299,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":319,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":101,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":300,"org.easymock.tests2.UsageConstraintsTest.any":164,"org.easymock.tests2.StubTest.stub":252,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":78,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":277,"org.easymock.tests.UsageExpectAndThrowTest.longType":107,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":262,"org.easymock.tests2.SerializationTest.testClass":203,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":181,"org.easymock.tests.LimitationsTest.mockNativeMethod":19,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":187,"org.easymock.tests2.AnswerTest.answer":229,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":73,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":327,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":298,"org.easymock.tests2.CaptureTest.testAnd":188,"org.easymock.tests2.UsageTest.strictResetToDefault":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":302,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":265,"org.easymock.tests2.NameTest.nameForMocksControl":258,"org.easymock.tests2.MockedExceptionTest.testMockedException":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":282,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":96,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":143,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":37,"org.easymock.tests2.DelegateToTest.testDelegate":209,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":53,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":108,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":235,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":213,"org.easymock.tests.MockingTest.testNicePartialClassMocking":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":119,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":240,"org.easymock.tests2.CaptureTest.testCaptureLast":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":20,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":286,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":251,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":274,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":175,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":103,"org.easymock.tests2.CaptureTest.testCapture1_2446744":192,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":54,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":117,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":296,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":112,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":224,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":179,"org.easymock.tests.UsageThrowableTest.throwError":43,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":280,"org.easymock.tests.UsageStrictMockTest.differentMethods":136,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":184,"org.easymock.tests2.MockBuilderTest.testCreateMockString":318,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":315,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":285,"org.easymock.tests.UsageExpectAndThrowTest.floatType":106,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":170,"org.easymock.tests.ResultTest.createReturnResultToString":321,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":230,"org.easymock.tests.UsageVerifyTest.twoThrows":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":268,"org.easymock.samples.PartialClassMockTest.testGetArea":1,"org.easymock.tests.ResultTest.createDelegateResultToString":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":75,"org.easymock.samples.ExampleTest.voteAgainstRemoval":11,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":243,"org.easymock.tests2.UsageTest.niceToStrict":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":105,"org.easymock.tests2.UsageConstraintsTest.testNotNull":178,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":291,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":50,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":211,"org.easymock.tests2.MockBuilderTest.testCreateMock":317,"org.easymock.tests2.UsageTest.defaultResetToNice":223,"org.easymock.samples.ExampleTest.voteAgainstRemovals":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":69,"org.easymock.tests.UsageVarargTest.differentLength":87,"org.easymock.tests2.CallbackTest.callback":254,"org.easymock.tests2.UsageConstraintsTest.equals":0,"org.easymock.tests.UsageTest.openCallCountByLastCall":36,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":113,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":144,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":153,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":304,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":21,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":287,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":100,"org.easymock.tests.UsageCallCountTest.tooFewCalls":23,"org.easymock.tests.UsageOverloadedMethodTest.overloading":31,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":128,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":168,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":65,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":30,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":167,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":197,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":290,"org.easymock.tests.UsageThrowableTest.throwCheckedException":47,"org.easymock.tests2.EasyMockSupportClassTest.testAll":266,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":18,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":297,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":272,"org.easymock.tests2.CaptureTest.testCaptureAll":189,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":250,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":42,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":247,"org.easymock.tests2.UsageConstraintsTest.testMatches":169,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":249,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":284,"org.easymock.samples.ExampleTest.voteForRemovals":13,"org.easymock.tests2.NameTest.nameForNiceMock":257,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":186,"org.easymock.tests.UsageVarargTest.allKinds":92,"org.easymock.tests2.DependencyTest.testInterfaceMocking":201,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":273,"org.easymock.samples.BasicClassMockTest.testPrintContent":3,"org.easymock.samples.ExampleTest.addDocument":12,"org.easymock.tests2.DelegateToTest.testStubDelegate":207,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":49,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":259,"org.easymock.tests2.AnswerTest.stubAnswer":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":279,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":133,"org.easymock.tests2.UsageConstraintsTest.greaterThan":171,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":95,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":244,"org.easymock.tests.UsageVarargTest.varargLongAccepted":89,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":137,"org.easymock.samples.ExampleTest.voteForRemoval":10,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":72,"org.easymock.tests.UsageExpectAndReturnTest.floatType":56,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":301,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":228,"org.easymock.tests.UsageThrowableTest.noUpperLimit":44,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":172,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":215,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":29,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":154,"org.easymock.tests2.SerializationTest.test":204,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":141,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":45,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":55,"org.easymock.tests2.UsageConstraintsTest.testSame":159,"org.easymock.samples.SupportTest.addDocument":6,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":275,"org.easymock.tests2.CaptureTest.testCaptureFirst":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":142,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":227,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":61,"org.easymock.tests.GenericTest.testPackageScope":17,"org.easymock.tests2.UsageTest.moreThanOneArgument":217,"org.easymock.tests2.CaptureTest.testCapture2_2446744":199,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":185,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":214,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":91,"org.easymock.tests2.NameTest.nameForMock":255,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":26,"org.easymock.tests.UsageExpectAndReturnTest.longType":57,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":270,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":139,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":66,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":122,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":176,"org.easymock.tests2.UsageStrictMockTest.differentMethods":264,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":120,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":305,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":281,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":58,"org.easymock.tests.UsageCallCountTest.tooManyCalls":27,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":118,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":97,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":22,"org.easymock.tests2.MockedExceptionTest.testRealException":293,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":62,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":261,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":109,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":99,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":246,"org.easymock.tests2.NameTest.nameForStrictMock":256,"org.easymock.tests2.UsageConstraintsTest.testContains":166,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":152,"org.easymock.tests2.UsageConstraintsTest.testFind":157,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":32,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":233,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":239,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":234,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":130,"org.easymock.tests.UsageExpectAndReturnTest.object":64,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":173,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":241,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":210,"org.easymock.tests2.UsageStrictMockTest.range":263,"org.easymock.tests2.UsageConstraintsTest.lessThan":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":147,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":86,"org.easymock.tests.UsageTest.exactCallCountByLastCall":40,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":41,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":140,"org.easymock.tests2.CaptureTest.testCaptureRightOne":198,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":15,"org.easymock.tests2.UsageConstraintsTest.testOr":160,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":323,"org.easymock.tests.UsageRangeTest.combination":94,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":236,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":82,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":70,"org.easymock.tests.UsageTest.wrongArguments":35,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":127,"org.easymock.tests.ResultTest.createThrowResultToString":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":59,"org.easymock.tests2.EasyMockSupportTest.testVerify":151,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":67,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":16,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":303,"org.easymock.tests.UsageVarargTest.varargShortAccepted":88,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":126,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":312,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":311,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":295,"org.easymock.tests2.UsageConstraintsTest.cmpTo":165,"org.easymock.tests.UsageVarargTest.varargCharAccepted":85,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":260,"org.easymock.tests2.UsageTest.openCallCountByLastCall":221,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":222,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":150,"org.easymock.tests2.CaptureTest.testCaptureFromStub":294,"org.easymock.tests.UsageTest.unexpectedCallWithArray":316,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":328,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":313,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":46,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":132,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":24,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":68,"org.easymock.tests2.CaptureTest.testCapture":325,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":242,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":134,"org.easymock.tests2.UsageConstraintsTest.constraints":155,"org.easymock.samples.ExampleTest.addAndChangeDocument":14,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":110,"org.easymock.tests.CapturesMatcherTest.test":324,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":71,"org.easymock.tests.UsageStrictMockTest.testVerify":138,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":269,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":131,"org.easymock.tests2.CompareToTest.testGreateThan":307,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":271,"org.easymock.tests2.UsageTest.resumeIfFailure":226,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":76,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":60,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":77,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":129,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":83,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":145}}]
