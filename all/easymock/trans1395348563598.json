[{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).startsWith(java.lang.String))","type":"CtReturnImpl"},"failures":[5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"argType"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"failures":[13,6,14,15,16,17,18,19,20,21,22],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[23],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[24,25,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,8,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,12,208,209,210,211,212,213,214,215,216,13,6,23,14,217,15,16,218,219,220,221,222,223,224,225,226,227,18,228,229,230,231,19,5,232,233,234,235,236,237,238,239,240,241,2,3,4,242,243,244,245,246,247,248,249,20,250,21,251,252,253,254,255,256,257,22,258,259,260],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,27,28,29,30,287,31,32,288,289,290,291,24,292,293,294,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,295,49,50,296,51,297,298,299,300,52,53,301,54,302,303,304,305,306,55,307,56,57,58,59,60,61,62,63,64,308,65,66,309,67,68,69,70,71,310,72,73,311,312,74,75,76,77,78,79,313,314,315,80,81,316,82,83,84,85,86,87,317,318,319,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,320,321,322,323,324,325,326,327,328,329,330,108,109,110,111,112,113,114,331,115,116,332,333,334,335,336,337,338,117,339,340,341,342,343,344,345,346,347,118,348,349,350,351,352,353,354,355,356,357,358,359,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,360,140,141,142,143,144,145,146,147,148,149,361,150,151,152,153,154,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,155,156,157,158,159,160,161,162,163,164,165,166,167,168,392,169,393,394,395,396,397,398,399,400,401,170,402,403,404,8,171,405,406,407,408,409,410,411,172,412,173,174,175,176,177,178,179,180,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,181,0,182,183,184,438,439,440,441,442,443,444,185,445,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,446,206,447,448,207,11,12,449,450,451,208,452,453,454,455,456,457,458,459,460,461,462,463,464,465,209,210,211,212,213,214,466,467,468,469,470,471,472,473,474,475,476,477,478,215,216,13,6,479,23,14,217,15,16,218,17,219,220,221,222,223,224,225,226,227,18,228,229,230,231,19,5,232,233,480,481,482,483,484,485,486,25,487,488,489,490,491,234,492,493,235,236,237,238,239,240,241,494,495,496,497,498,499,26,500,501,502,503,504,2,3,4,505,242,243,506,507,508,244,245,509,510,246,247,248,511,249,20,250,21,251,252,253,254,255,256,257,22,258,259,260],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[512,513,514,515,516],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[285,286,27,28,29,30,287,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,295,49,50,51,297,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,309,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,316,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,323,330,108,109,110,111,112,113,114,331,115,116,333,334,335,117,344,345,346,347,118,348,349,350,351,352,353,354,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,360,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,362,363,364,365,366,367,368,369,155,156,157,158,159,160,161,162,163,164,165,166,167,168,392,169,393,394,395,396,396,397,397,398,399,400,401,170,402,8,171,405,406,409,410,411,172,173,174,175,176,177,178,179,180,416,419,429,435,181,182,183,184,439,440,441,442,185,445,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,11,12,449,208,452,453,454,455,456,457,458,459,460,461,462,463,464,465,209,210,211,212,213,214,215,216,13,6,23,14,217,15,16,218,219,220,221,222,223,224,225,226,227,18,228,229,230,231,19,5,232,233,486,234,235,236,237,238,239,240,241,499,2,3,4,505,242,243,506,508,244,245,246,247,248,249,20,250,21,251,252,253,254,255,256,257,22,258,259,260],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[285,286,27,28,29,30,287,31,32,288,291,24,292,293,294,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,295,49,50,51,297,298,299,52,53,301,54,302,303,304,55,56,57,58,59,60,61,62,63,64,65,66,309,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,316,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,323,330,108,109,110,111,112,113,114,331,115,116,333,334,335,117,339,344,345,346,347,118,348,349,350,351,352,353,354,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,360,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,362,363,364,365,366,367,368,369,155,156,157,158,159,160,161,162,163,164,165,166,167,168,392,169,170,402,403,404,8,171,409,410,411,172,173,174,175,176,177,178,179,180,181,182,183,184,439,440,441,442,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,448,207,11,12,449,450,208,465,209,210,211,212,213,214,467,468,517,469,471,478,215,216,13,6,23,14,217,15,16,218,219,220,221,222,223,224,225,226,227,18,228,229,230,231,19,5,232,233,234,235,236,237,238,239,240,241,2,3,4,242,243,244,245,246,247,248,249,20,250,21,251,252,253,254,255,256,257,22,258,259,260],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[515,218,223,232],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[80,83,84,87,110,147,149,186,192,193,198,210,234],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[288,292,37,300,52,53,54,55,72,73,311,312,337,362,363,364,365,366,367,368,369,396,396,397,397,399,400,401,170,402,403,8,171,405,406,409,410,411,416,419,429,435,199,200,202,203,204,205,206,207,11,12,449,451,233,240,2,4,505,242,243,506,244,245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[13,6,16,218,20,250,21,251,22,258],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[288,292,37,298,299,300,52,53,54,304,305,306,55,307,310,72,73,311,312,323,324,325,326,327,328,329,337,362,363,364,365,366,367,368,369,396,396,397,397,399,400,401,1,170,7,402,403,404,8,171,405,406,408,409,410,518,519,411,520,9,521,522,10,523,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,199,200,202,203,204,205,206,447,448,207,11,12,449,450,451,466,469,233,480,238,239,240,2,4,505,242,243,506,244,245],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result","paramTypes":"paramTypes","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[524],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[407],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[310,72,73,311,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":6,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":80,"org.easymock.tests2.UsageTest.argumentsOrdered":196,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":462,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":271,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":191,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":398,"org.easymock.tests2.DelegateToTest.testReturnException":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":57,"org.easymock.tests.MockingTest.testPartialClassMocking":52,"org.easymock.tests.MockClassControlTest.testToString":364,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":438,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":321,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":423,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":419,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":88,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":445,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":391,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":218,"org.easymock.tests2.UsageTest.wrongArguments":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":150,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":491,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":35,"org.easymock.samples.ExampleTest.answerVsDelegate":164,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":292,"org.easymock.tests2.UsageConstraintsTest.testNull":14,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":303,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":202,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":461,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":369,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":520,"org.easymock.tests2.CaptureTest.testPrimitive":251,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":154,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":107,"org.easymock.tests.UsageTest.moreThanOneArgument":81,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":157,"org.easymock.tests.UsageTest.argumentsOrdered":86,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":355,"org.easymock.tests.UsageVarargTest.varargIntAccepted":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":142,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":503,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":468,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":146,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":375,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":486,"org.easymock.tests.ReplayStateInvalidUsageTest.times":351,"org.easymock.tests2.DependencyTest.testClassMocking":443,"org.easymock.tests2.AnswerTest.answer":234,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":180,"org.easymock.tests2.CaptureTest.testAnd":20,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":290,"org.easymock.tests2.UsageTest.strictResetToDefault":187,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":456,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":140,"org.easymock.tests2.DelegateToTest.testDelegate":249,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":359,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":103,"org.easymock.tests.LimitationsTest.mockFinalMethod":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":79,"org.easymock.tests2.DependencyTest.testClassMockingSupport":444,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":338,"org.easymock.tests2.CaptureTest.testCapture1_2446744":252,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":446,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":101,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":178,"org.easymock.tests.UsageThrowableTest.throwError":40,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":346,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":24,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":504,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":437,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":378,"org.easymock.samples.PartialClassMockTest.testGetArea":399,"org.easymock.tests.MockingTest.testInterfaceMocking":301,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":347,"org.easymock.tests2.CompareToTest.testLessOrEqual":516,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":143,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":424,"org.easymock.tests2.UsageTest.niceToStrict":190,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":89,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":337,"org.easymock.tests2.ThreadingTest.testChangeDefault":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":261,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":8,"org.easymock.tests2.MockBuilderTest.testCreateMock":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":432,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":488,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":97,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":457,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":289,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":319,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":285,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":33,"org.easymock.tests.UsageOverloadedMethodTest.overloading":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":428,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":50,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":223,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":130,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":222,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":257,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":308,"org.easymock.tests2.EasyMockSupportClassTest.testAll":416,"org.easymock.tests.MockClassControlTest.testEquals":368,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":73,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":105,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":9,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":77,"org.easymock.tests2.CaptureTest.testCaptureAll":250,"org.easymock.tests.MockNameTest.defaultName":343,"org.easymock.tests2.UsageConstraintsTest.testMatches":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":158,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":344,"org.easymock.samples.ExampleTest.voteForRemovals":168,"org.easymock.tests.UsageVarargTest.allKinds":71,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":147,"org.easymock.samples.BasicClassMockTest.testPrintContent":401,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":78,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":46,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":465,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":511,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":500,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":61,"org.easymock.tests2.UsageConstraintsTest.greaterThan":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":360,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":449,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":379,"org.easymock.samples.ExampleTest.voteForRemoval":165,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":329,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":450,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":173,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":518,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":293,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":517,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":205,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":371,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":186,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":37,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":454,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":56,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":510,"org.easymock.tests2.CaptureTest.testCaptureFirst":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":455,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":198,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":297,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":126,"org.easymock.tests2.UsageTest.moreThanOneArgument":188,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":175,"org.easymock.tests2.CaptureTest.testCapture2_2446744":259,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":279,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":70,"org.easymock.tests.GenericTest.testBridgedEquals":312,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":31,"org.easymock.tests.UsageExpectAndReturnTest.longType":122,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":452,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":75,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":519,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":106,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":230,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":155,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":341,"org.easymock.tests.UsageCallCountTest.tooManyCalls":32,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":433,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":127,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":490,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":93,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":45,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":242,"org.easymock.tests.MockingTest.testNiceClassMocking":304,"org.easymock.tests.MockingTest.testClassMocking":299,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":7,"org.easymock.tests2.UsageConstraintsTest.testContains":221,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":286,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":240,"org.easymock.tests2.UsageConstraintsTest.testFind":23,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":162,"org.easymock.tests.MockTypeTest.fromEasyMockClass":291,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":182,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":330,"org.easymock.tests.UsageExpectAndReturnTest.object":129,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":206,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":489,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":460,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":66,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":335,"org.easymock.tests.UsageTest.exactCallCountByLastCall":87,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":266,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":320,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":480,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":135,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":62,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":49,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":495,"org.easymock.tests.MockClassControlTest.testHashCode":367,"org.easymock.tests2.EasyMockSupportTest.testVerify":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":426,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":357,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":48,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":318,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":177,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":478,"org.easymock.tests.UsageVarargTest.varargCharAccepted":65,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":284,"org.easymock.tests2.UsageTest.openCallCountByLastCall":192,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":463,"org.easymock.tests.DefaultClassInstantiatorTest.object":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":317,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":427,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":95,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":523,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":43,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":484,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":494,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":11,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":366,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":377,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":136,"org.easymock.tests.ReplayStateInvalidCallsTest.times":383,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":340,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":435,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":365,"org.easymock.tests2.UsageTest.resumeIfFailure":197,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":288,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":467,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":59,"org.easymock.tests2.StubTest.stubWithReturnValue":184,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":128,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":231,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":277,"org.easymock.samples.SupportTest.voteForRemovals":395,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":310,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":497,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":100,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":283,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":492,"org.easymock.tests.UsageExpectAndThrowTest.object":98,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":322,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":228,"org.easymock.tests2.DelegateToTest.testWrongClass":248,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":115,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":381,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":116,"org.easymock.samples.ConstructorCalledMockTest.testTax":396,"org.easymock.tests.UsageStrictMockTest.range":112,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":470,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":459,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":505,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":99,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":413,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":85,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":34,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":373,"org.easymock.tests2.CaptureTest.testCaptureNone":256,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":315,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":473,"org.easymock.tests.UsageUnorderedTest.message":74,"org.easymock.tests.UsageVerifyTest.twoReturns":149,"org.easymock.tests.UsageVarargTest.varargByteAccepted":69,"org.easymock.tests2.ThreadingTest.testThreadSafe":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":430,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":30,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":400,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":336,"org.easymock.tests2.CaptureTest.testCapture_2617107":21,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":339,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":281,"org.easymock.tests2.UsageConstraintsTest.any":219,"org.easymock.tests2.StubTest.stub":183,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":350,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":58,"org.easymock.tests.UsageExpectAndThrowTest.longType":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":282,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":327,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":349,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":211,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":499,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":55,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":138,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":311,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":483,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":10,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":389,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":214,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":474,"org.easymock.tests2.NameTest.nameForMocksControl":442,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":485,"org.easymock.tests2.MockedExceptionTest.testMockedException":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":418,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":84,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":0,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":92,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":199,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":406,"org.easymock.tests.MockingTest.testNicePartialClassMocking":53,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":204,"org.easymock.tests2.CompareToTest.testNotComparable":524,"org.easymock.tests2.CompareToTest.testCompareEqual":514,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":481,"org.easymock.tests2.CaptureTest.testCaptureLast":255,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":117,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":388,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":16,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":245,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":229,"org.easymock.tests.MockingTest.testTwoMocks":300,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":385,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":509,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":96,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":195,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":5,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":477,"org.easymock.samples.ExampleTest.removeNonExistingDocument":392,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":487,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":118,"org.easymock.tests.UsageStrictMockTest.differentMethods":113,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":496,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":476,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":325,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":174,"org.easymock.tests2.MockBuilderTest.testCreateMockString":411,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":420,"org.easymock.tests.UsageExpectAndThrowTest.floatType":90,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":415,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":235,"org.easymock.tests.UsageVerifyTest.twoThrows":148,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":429,"org.easymock.samples.ExampleTest.voteAgainstRemoval":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":272,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":313,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":12,"org.easymock.tests.LimitationsTest.privateConstructor":306,"org.easymock.tests2.UsageConstraintsTest.testNotNull":19,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":47,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":238,"org.easymock.tests2.UsageTest.defaultResetToNice":194,"org.easymock.samples.ExampleTest.voteAgainstRemovals":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":273,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":482,"org.easymock.tests.UsageVarargTest.differentLength":309,"org.easymock.tests2.CallbackTest.callback":208,"org.easymock.tests2.UsageConstraintsTest.equals":479,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":447,"org.easymock.tests.UsageTest.openCallCountByLastCall":83,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":152,"org.easymock.tests.UsageCallCountTest.tooFewCalls":28,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":506,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":36,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":475,"org.easymock.tests.UsageThrowableTest.throwCheckedException":44,"org.easymock.tests.MockingTest.testStrictClassMocking":298,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":39,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":244,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":25,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":243,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":508,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":237,"org.easymock.tests2.CompareToTest.testGreateOrEqual":515,"org.easymock.tests.ObjectMethodsTest.testHashCode":334,"org.easymock.tests2.NameTest.nameForNiceMock":441,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":387,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":176,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":382,"org.easymock.tests2.DependencyTest.testInterfaceMocking":185,"org.easymock.samples.ExampleTest.addDocument":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":436,"org.easymock.tests2.DelegateToTest.testStubDelegate":247,"org.easymock.tests2.AnswerTest.stubAnswer":236,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":110,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":407,"org.easymock.tests.UsageVarargTest.varargLongAccepted":68,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":270,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":137,"org.easymock.tests.UsageExpectAndReturnTest.floatType":121,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":233,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":397,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":502,"org.easymock.tests.UsageThrowableTest.noUpperLimit":41,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":227,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":296,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":216,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":466,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":253,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":324,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":120,"org.easymock.tests2.UsageConstraintsTest.testSame":217,"org.easymock.samples.SupportTest.addDocument":394,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":507,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":372,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":421,"org.easymock.tests.GenericTest.testPackageScope":72,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":265,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":501,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":302,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":370,"org.easymock.tests2.NameTest.nameForMock":439,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":131,"org.easymock.tests2.UsageStrictMockTest.differentMethods":213,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":448,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":102,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":141,"org.easymock.tests2.MockedExceptionTest.testRealException":241,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":294,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":275,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":274,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":151,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":354,"org.easymock.tests2.NameTest.nameForStrictMock":440,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":404,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":181,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":203,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":469,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":18,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":326,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":402,"org.easymock.tests2.UsageStrictMockTest.range":212,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":376,"org.easymock.tests2.UsageConstraintsTest.lessThan":232,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":521,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":498,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":1,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":425,"org.easymock.tests2.CaptureTest.testCaptureRightOne":22,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":472,"org.easymock.tests2.UsageConstraintsTest.testOr":15,"org.easymock.tests.UsageRangeTest.combination":139,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":200,"org.easymock.tests.UsageTest.wrongArguments":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":422,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":363,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":124,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":262,"org.easymock.tests.UsageVarargTest.varargShortAccepted":67,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":328,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":287,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":390,"org.easymock.tests2.UsageConstraintsTest.cmpTo":220,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":493,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":380,"org.easymock.tests2.CompareToTest.testLessThan":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":264,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":193,"org.easymock.tests2.CaptureTest.testCaptureFromStub":258,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":345,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":403,"org.easymock.tests.UsageTest.unexpectedCallWithArray":316,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":386,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":29,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":133,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":111,"org.easymock.tests2.UsageConstraintsTest.constraints":13,"org.easymock.samples.ExampleTest.addAndChangeDocument":169,"org.easymock.tests.UsageStrictMockTest.testVerify":331,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":393,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":108,"org.easymock.tests2.CompareToTest.testGreateThan":513,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":76,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":254,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":522,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":144,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":125,"org.easymock.tests.LimitationsTest.abstractClass":305,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":145,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":458,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":63}}]
