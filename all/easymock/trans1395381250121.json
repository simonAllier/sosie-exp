[{"position":"org.easymock.internal.EasyMockProperties:133","failures":[0,1,2],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,71,72,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[106,107],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[108,109],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[3,4,8,11,21,27,30,31,32,34,35,36,37,39,40,41,44,47,49,50,51,52,53,54,55,56,57,58,59,60,61,64,65,66,67,69,70,71,71,72,72,73,74,75,86,88,89,91,92,93,110,95,96,97,98,99,100,101,102,103,111],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[112,113,114,115,116,117,118,119,120,121,122,123,3,124,125,126,127,128,129,130,8,11,21,27,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,30,31,34,35,36,37,39,40,41,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,42,43,44,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,47,49,50,51,52,214,53,54,215,216,55,56,217,57,58,59,60,61,64,65,66,67,218,219,70,71,71,72,72,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,109,244,245,246,247,248,249,250,251,252,75,253,254,255,256,257,258,259,260,261,262,263,86,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,91,93,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,95,96,97,98,363,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.internal.RecordState:243","failures":[119,121,122,129,8,11,21,27,31,34,36,37,40,193,47,49,50,51,52,214,53,54,55,56,217,57,58,59,61,65,66,67,218,219,70,220,221,223,224,225,227,228,229,230,231,244,246,247,253,254,255,256,257,86,271,273,275,283,284,285,286,294,295,296,297,298,299,302,303,305,306,307,309,310,311,312,313,351,352,96,97,98],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[112,115,116,117,118,365,119,120,121,122,123,3,124,4,125,126,127,128,129,130,8,11,21,27,131,132,133,366,367,368,369,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,31,34,36,37,40,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,44,192,193,194,196,201,202,203,204,205,206,207,208,209,210,211,212,213,47,49,50,51,52,214,53,54,215,216,55,56,217,57,58,59,61,65,66,67,218,219,70,370,371,220,372,221,222,223,224,373,225,226,73,74,227,228,229,230,231,236,238,239,240,241,243,374,109,244,245,246,247,248,375,75,254,255,256,257,86,264,266,267,269,275,276,277,278,279,280,281,282,91,92,376,377,378,379,380,381,382,383,384,385,293,386,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,338,339,340,341,342,343,345,346,351,352,353,354,355,356,357,358,359,360,361,362,96,97,98,363,364,387,388,389,390,391],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[258,261],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[392],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[90],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[112,116,117,118,119,120,121,122,3,124,125],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"failures":[112,113,114,115,116,117,118,365,119,120,121,122,123,3,124,4,125,126,127,128,129,130,8,11,21,27,131,132,133,366,367,368,369,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,31,34,36,37,40,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,42,43,44,190,191,192,193,194,195,196,201,202,203,204,205,206,207,208,209,210,211,212,213,47,49,50,51,52,214,53,54,215,216,55,56,217,57,58,59,61,65,66,67,218,219,70,370,71,71,72,72,371,220,372,221,222,223,224,373,225,226,73,74,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,374,109,244,245,246,247,248,375,75,253,254,255,256,257,258,259,260,261,262,263,86,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,91,92,93,376,377,378,379,380,381,382,383,384,385,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,95,96,97,98,363,364,387,388,389,390,391],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[191,193,393],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[394,395],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[112,113,114,115,116,117,118,365,119,120,121,122,123,124,4,396,397,398,399,125,400,401,402,403,126,127,128,129,130,5,6,8,10,11,12,13,16,19,21,22,23,24,25,26,27,131,132,133,404,366,367,368,369,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,30,31,32,33,34,35,36,37,39,40,41,405,162,163,164,165,166,167,168,169,170,171,172,173,174,175,406,407,408,409,176,410,411,412,413,177,178,179,180,181,182,183,184,185,186,187,188,189,42,43,44,190,191,192,193,194,195,196,45,46,414,415,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,47,49,50,52,214,392,215,216,55,56,217,57,58,59,60,416,61,63,64,65,66,67,68,69,417,418,218,219,70,370,71,71,371,220,372,221,222,223,224,373,225,419,226,73,74,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,374,109,244,245,246,247,248,375,249,250,251,252,420,75,253,254,255,256,257,258,259,260,76,77,78,79,80,81,82,83,84,421,422,423,424,425,426,427,428,429,430,431,432,261,262,263,85,86,264,265,266,267,268,269,270,271,88,433,434,89,435,436,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,90,91,92,93,94,376,377,378,379,380,381,382,383,384,385,293,437,386,438,439,440,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,441,351,352,353,354,355,356,357,358,359,360,361,362,442,443,95,96,444,445,446,447,363,448,364,387,388,389,449,390,391,99,100,101,102,103,111,450,104],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[112,113,114,115,116,117,118,365,119,120,121,122,123,3,124,4,396,397,398,394,399,125,400,401,402,451,452,403,126,127,128,129,130,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,131,453,132,133,404,366,367,368,369,134,135,136,137,454,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,30,31,32,33,34,35,36,37,38,39,40,41,162,163,164,165,166,167,168,169,170,171,172,173,174,175,406,407,408,395,409,176,410,411,412,455,456,413,177,178,179,180,181,182,183,184,185,186,187,188,189,42,43,44,190,191,192,193,194,195,196,45,46,414,415,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,47,48,49,50,51,52,214,53,54,215,216,55,56,217,57,58,59,60,416,61,62,63,64,65,66,67,68,69,417,418,218,219,70,370,71,71,72,72,371,220,372,221,222,223,224,373,225,419,226,73,74,227,228,229,230,231,232,233,234,235,236,237,238,239,240,457,458,459,460,461,462,463,464,465,466,393,467,468,469,470,471,241,472,473,474,475,476,242,477,243,374,109,244,245,246,247,248,375,249,250,251,252,420,75,253,254,255,256,257,258,259,260,77,78,79,80,81,82,84,421,422,423,424,425,426,427,428,429,430,431,432,261,262,263,85,478,86,87,264,265,266,267,268,269,270,479,271,480,88,433,434,89,435,436,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,90,91,92,93,94,376,377,378,481,379,380,381,382,383,384,385,293,437,386,438,439,440,110,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,441,351,352,353,354,355,356,357,358,359,360,361,362,442,443,95,96,97,444,98,445,446,447,363,448,364,387,388,389,449,390,391,99,100,101,102,103,111,450,104],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":137,"org.easymock.tests2.UsageTest.argumentsOrdered":211,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":335,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":187,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":393,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":206,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":370,"org.easymock.tests2.DelegateToTest.testReturnException":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":233,"org.easymock.tests.MockingTest.testPartialClassMocking":96,"org.easymock.tests.MockClassControlTest.testToString":101,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":404,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":474,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":15,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":11,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":315,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":219,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":143,"org.easymock.tests2.UsageTest.wrongArguments":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":275,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":403,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":251,"org.easymock.samples.ExampleTest.answerVsDelegate":222,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":89,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":446,"org.easymock.tests2.UsageConstraintsTest.testNull":139,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":57,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":186,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":104,"org.easymock.tests2.CaptureTest.testPrimitive":165,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":279,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":334,"org.easymock.tests.UsageTest.moreThanOneArgument":336,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":285,"org.easymock.tests.UsageTest.argumentsOrdered":342,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":344,"org.easymock.tests.UsageVarargTest.varargIntAccepted":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":471,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":227,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":456,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":459,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":231,"org.easymock.tests.ReplayStateInvalidUsageTest.times":429,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":125,"org.easymock.tests2.DependencyTest.testClassMocking":417,"org.easymock.tests2.AnswerTest.answer":112,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":472,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":200,"org.easymock.tests2.CaptureTest.testAnd":162,"org.easymock.tests2.UsageTest.strictResetToDefault":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":181,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":256,"org.easymock.tests2.DelegateToTest.testDelegate":196,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":330,"org.easymock.tests.LimitationsTest.mockFinalMethod":87,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":292,"org.easymock.tests2.DependencyTest.testClassMockingSupport":418,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":349,"org.easymock.tests2.CaptureTest.testCapture1_2446744":166,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":416,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":328,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":198,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":423,"org.easymock.tests.UsageThrowableTest.throwError":353,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":434,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":413,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":29,"org.easymock.samples.PartialClassMockTest.testGetArea":70,"org.easymock.tests.MockingTest.testInterfaceMocking":444,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":228,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":273,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":16,"org.easymock.tests2.UsageTest.niceToStrict":205,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":34,"org.easymock.tests2.MockBuilderTest.testCreateMock":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":24,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":402,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":108,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":324,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":182,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":260,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":249,"org.easymock.tests.UsageOverloadedMethodTest.overloading":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":20,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":149,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":267,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":305,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":148,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":171,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":481,"org.easymock.tests.MockClassControlTest.testEquals":450,"org.easymock.tests2.EasyMockSupportClassTest.testAll":8,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":332,"org.easymock.tests2.CaptureTest.testCaptureAll":163,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":290,"org.easymock.tests.MockNameTest.defaultName":420,"org.easymock.tests2.UsageConstraintsTest.testMatches":150,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":421,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":286,"org.easymock.samples.ExampleTest.voteForRemovals":225,"org.easymock.tests.UsageVarargTest.allKinds":293,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":280,"org.easymock.samples.BasicClassMockTest.testPrintContent":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":291,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":359,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":411,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":237,"org.easymock.tests2.UsageConstraintsTest.greaterThan":152,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":9,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":255,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":67,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":84,"org.easymock.samples.ExampleTest.voteForRemoval":223,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":127,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":68,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":435,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":60,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":75,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":201,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":179,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":6,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":232,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":191,"org.easymock.tests2.CaptureTest.testCaptureFirst":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":463,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":180,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":213,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":270,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":301,"org.easymock.tests2.CaptureTest.testCapture2_2446744":174,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":129,"org.easymock.tests2.UsageTest.moreThanOneArgument":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":473,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":40,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":385,"org.easymock.tests.GenericTest.testBridgedEquals":94,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":390,"org.easymock.tests.UsageExpectAndReturnTest.longType":297,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":333,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":157,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":253,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":331,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":283,"org.easymock.tests.UsageCallCountTest.tooManyCalls":391,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":302,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":452,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":320,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":358,"org.easymock.tests.MockingTest.testNiceClassMocking":447,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":50,"org.easymock.tests.MockingTest.testClassMocking":443,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":448,"org.easymock.tests2.UsageConstraintsTest.testContains":147,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":44,"org.easymock.tests2.UsageConstraintsTest.testFind":138,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":240,"org.easymock.tests.MockTypeTest.fromEasyMockClass":433,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":132,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":243,"org.easymock.tests.UsageExpectAndReturnTest.object":304,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":451,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":185,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":380,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":439,"org.easymock.tests.UsageTest.exactCallCountByLastCall":343,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":479,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":345,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":48,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":310,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":376,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":266,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":407,"org.easymock.tests.MockClassControlTest.testHashCode":111,"org.easymock.tests2.EasyMockSupportTest.testVerify":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":18,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":346,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":259,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":264,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":197,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":405,"org.easymock.tests.UsageVarargTest.varargCharAccepted":379,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":76,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":477,"org.easymock.tests2.UsageTest.openCallCountByLastCall":207,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":188,"org.easymock.tests.DefaultClassInstantiatorTest.object":77,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":258,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":19,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":322,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":356,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":394,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":406,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":103,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":65,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":321,"org.easymock.tests.CapturesMatcherTest.test":107,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":311,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":261,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":27,"org.easymock.tests2.UsageTest.resumeIfFailure":212,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":235,"org.easymock.tests2.StubTest.stubWithReturnValue":216,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":303,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":241,"org.easymock.samples.SupportTest.voteForRemovals":220,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":327,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":242,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":113,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":480,"org.easymock.tests.UsageExpectAndThrowTest.object":325,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":155,"org.easymock.tests2.DelegateToTest.testWrongClass":194,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":351,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":352,"org.easymock.samples.ConstructorCalledMockTest.testTax":71,"org.easymock.tests.UsageStrictMockTest.range":246,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":414,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":184,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":326,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":36,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":5,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":341,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":250,"org.easymock.tests2.CaptureTest.testCaptureNone":170,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":274,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":1,"org.easymock.tests.UsageUnorderedTest.message":314,"org.easymock.tests.UsageVerifyTest.twoReturns":282,"org.easymock.tests.UsageVarargTest.varargByteAccepted":384,"org.easymock.tests2.ThreadingTest.testThreadSafe":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":22,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":389,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":440,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":73,"org.easymock.tests2.CaptureTest.testCapture_2617107":164,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":475,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":278,"org.easymock.tests2.UsageConstraintsTest.any":145,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":428,"org.easymock.tests2.StubTest.stub":215,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":234,"org.easymock.tests.UsageExpectAndThrowTest.longType":318,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":81,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":427,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":120,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":176,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests.LimitationsTest.mockNativeMethod":86,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":93,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":313,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":398,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":123,"org.easymock.tests2.NameTest.nameForMocksControl":369,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":399,"org.easymock.tests2.MockedExceptionTest.testMockedException":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":10,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":340,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":453,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":98,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":319,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":55,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":37,"org.easymock.tests.MockingTest.testNicePartialClassMocking":97,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":59,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":396,"org.easymock.tests2.CaptureTest.testCaptureLast":169,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":350,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":142,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":54,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":156,"org.easymock.tests.MockingTest.testTwoMocks":95,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":323,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":210,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":160,"org.easymock.samples.ExampleTest.removeNonExistingDocument":419,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":425,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":401,"org.easymock.tests.UsageStrictMockTest.differentMethods":247,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":408,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":2,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":79,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":128,"org.easymock.tests2.MockBuilderTest.testCreateMockString":41,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":12,"org.easymock.tests.UsageExpectAndThrowTest.floatType":317,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":7,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":115,"org.easymock.tests.UsageVerifyTest.twoThrows":281,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":21,"org.easymock.samples.ExampleTest.voteAgainstRemoval":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":467,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":272,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":66,"org.easymock.tests.LimitationsTest.privateConstructor":478,"org.easymock.tests2.UsageConstraintsTest.testNotNull":159,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":42,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":360,"org.easymock.tests2.UsageTest.defaultResetToNice":209,"org.easymock.samples.ExampleTest.voteAgainstRemovals":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":309,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":397,"org.easymock.tests.UsageVarargTest.differentLength":381,"org.easymock.tests2.CallbackTest.callback":133,"org.easymock.tests2.UsageConstraintsTest.equals":454,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":62,"org.easymock.tests.UsageTest.openCallCountByLastCall":339,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":277,"org.easymock.tests.UsageCallCountTest.tooFewCalls":387,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":252,"org.easymock.tests.UsageThrowableTest.throwCheckedException":357,"org.easymock.tests.MockingTest.testStrictClassMocking":442,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":53,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":362,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":400,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":51,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":430,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":214,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":117,"org.easymock.tests.ObjectMethodsTest.testHashCode":438,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":130,"org.easymock.tests2.NameTest.nameForNiceMock":368,"org.easymock.tests2.DependencyTest.testInterfaceMocking":218,"org.easymock.samples.ExampleTest.addDocument":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":28,"org.easymock.tests2.DelegateToTest.testStubDelegate":193,"org.easymock.tests2.AnswerTest.stubAnswer":116,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":244,"org.easymock.tests.UsageVarargTest.varargLongAccepted":383,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndReturnTest.floatType":296,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":312,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":47,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":455,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":153,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":268,"org.easymock.tests.UsageThrowableTest.noUpperLimit":354,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":135,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":45,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":167,"org.easymock.tests2.SerializationTest.test":124,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":78,"org.easymock.tests2.UsageConstraintsTest.testSame":140,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":295,"org.easymock.samples.SupportTest.addDocument":371,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":13,"org.easymock.tests.GenericTest.testPackageScope":91,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":412,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":445,"org.easymock.tests2.NameTest.nameForMock":366,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":306,"org.easymock.tests2.UsageStrictMockTest.differentMethods":122,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":63,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":298,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":329,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":437,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":257,"org.easymock.tests2.MockedExceptionTest.testRealException":190,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":470,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":469,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":119,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":432,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":276,"org.easymock.tests2.NameTest.nameForStrictMock":367,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":33,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":58,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":46,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":154,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":80,"org.easymock.tests.ErrorMessageTest.testGetters":105,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":31,"org.easymock.tests2.UsageStrictMockTest.range":121,"org.easymock.tests2.UsageConstraintsTest.lessThan":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":465,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":178,"org.easymock.tests2.CaptureTest.testCaptureRightOne":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":17,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":0,"org.easymock.tests2.UsageConstraintsTest.testOr":141,"org.easymock.tests.UsageRangeTest.combination":254,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":56,"org.easymock.tests.UsageTest.wrongArguments":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":14,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":307,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":82,"org.easymock.tests.UsageVarargTest.varargShortAccepted":382,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":449,"org.easymock.tests2.UsageConstraintsTest.cmpTo":146,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":460,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":208,"org.easymock.tests2.CaptureTest.testCaptureFromStub":173,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":422,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":32,"org.easymock.tests.UsageTest.unexpectedCallWithArray":337,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":388,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":308,"org.easymock.tests2.CaptureTest.testCapture":106,"org.easymock.tests2.UsageConstraintsTest.constraints":136,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":245,"org.easymock.samples.ExampleTest.addAndChangeDocument":226,"org.easymock.tests.UsageStrictMockTest.testVerify":375,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":372,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":374,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":289,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":168,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":229,"org.easymock.tests.LimitationsTest.abstractClass":85,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":230,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":183,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":377}}]
