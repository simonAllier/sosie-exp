[{"position":"org.easymock.internal.RecordState:183","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[222],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[223,224,225,226,227,228],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,229,9,230,230,231,231,10,11,12,13,14,232,15,16,233,17,234,235,236,237,238,18,239,19,240,20,21,241,242,243,244,22,245,23,246,24,25,26,27,28,29,247,248,249,250,30,251,31,32,33,34,252,35,36,37,38,253,254,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,255,54,55,56,57,58,59,256,257,60,61,258,62,63,64,65,66,67,68,69,70,71,72,73,74,259,75,76,77,78,260,261,262,263,79,80,81,82,83,84,85,86,87,88,89,90,91,92,264,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,265,116,117,118,119,120,121,122,123,266,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,267,268,269,270,271,272,273,274,275,276,277,139,278,279,140,141,142,143,280,144,145,146,281,282,147,283,148,149,150,151,152,284,285,153,154,155,156,157,158,159,160,161,162,163,286,223,287,288,289,290,291,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,292,185,186,187,188,189,293,294,295,296,297,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,298,211,212,213,214,299,215,216,300,301,217,218,219,220,302,221],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"position":"org.easymock.ConstructorArgs:60","failures":[303,304,305,306,307,308,309,310,67,71,311],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[4,30,251,33,49,273,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[0,1,3,4,5,6,7,8,9,10,11,12,13,232,233,237,18,19,20,21,24,25,26,27,28,29,30,31,32,34,252,35,36,37,38,253,39,40,41,42,44,45,47,48,49,50,51,56,57,59,60,61,258,62,64,72,73,74,75,76,77,78,263,79,80,81,82,86,88,90,91,107,110,111,112,113,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,267,268,269,270,271,272,273,274,275,139,146,147,148,149,150,151,152,156,157,158,159,160,161,162,163,287,288,289,290,291,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,298,211,212,213,214,215,216,217,218,219,220],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:229","failures":[116],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[313,314,283,315,316,317],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[313,314,283,315,316,317],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[318,319,320,321],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[232,236,238,239,322,241,242,246,26,27,28,252,38,253,40,49,72,259,75,76,261,262,263,79,85,99,323,324,266,280,144,145,282,283,149,150,151,184,188,189,213,315,299,300,301,217,218,325,326],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[230,230,231,231,25,48,256,83,84,87,88,89,90,95,97,98,100,101,107,108,109,129,130,131,132,133,134,135,138,146,148,287,288,289,290,291,327,328,329,330,331,219,220,332],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[2,3,4,6,229,230,230,231,231,14,232,15,16,233,17,234,235,333,236,237,238,18,334,19,240,20,21,322,241,242,243,244,22,245,23,246,25,26,27,28,30,32,33,34,252,35,36,37,38,253,254,39,40,41,42,43,44,45,48,50,53,255,58,59,256,257,61,258,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,260,263,79,80,81,82,335,336,337,338,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,265,116,117,118,129,130,131,132,133,134,135,138,267,268,269,270,271,272,273,274,275,276,339,277,279,280,146,281,282,148,149,150,151,284,340,341,342,343,344,153,154,155,156,158,159,160,161,162,163,223,345,346,347,287,288,289,290,291,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,348,349,350,351,352,353,354,355,184,292,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,298,211,212,213,214,315,215,216,217,218,219,220,302,356,357,358,359,360,361,362,363,364,365,366,221,367,368,369,370],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[371],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[313,314,283,315,316,317],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[103],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:217","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,232,15,16,233,17,235,237,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,252,35,36,37,38,253,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,259,75,76,261,262,79,80,81,82,86,88,91,92,93,94,96,99,102,103,104,105,106,107,110,112,113,265,116,117,118,119,120,121,122,123,124,125,126,127,128,134,135,136,137,273,274,275,276,277,139,141,142,143,144,145,147,283,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,372,286,166,167,169,174,179,184,188,189,192,193,195,200,205,210,298,211,299,300,301,217,218,221],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[373,313,374,375,376,377,25,27,28,74,148,150,151,372,286,187,188,189,214,218,317,378,326],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[379,277,139,380,381],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[232,333,238,382,18,383,334,384,20,21,241,242,25,27,28,247,248,249,250,36,253,39,66,67,70,71,74,259,261,262,82,385,386,283,148,150,151,372,286,345,387,388,350,351,352,187,188,189,214,315,299,300,301,218,389,390,391,392,393,394],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[395,396,397],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.RecordState:85","failures":[0,1,2,3,4,5,6,7,8,229,9,230,230,231,231,10,11,12,13,14,232,15,16,233,17,234,235,333,236,237,238,18,334,239,19,240,20,21,322,241,242,243,244,22,245,23,246,24,25,26,27,28,29,247,248,249,250,30,31,32,33,34,252,35,36,37,38,253,254,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,255,54,55,56,57,58,59,256,257,60,61,258,62,63,64,65,66,67,68,69,70,71,72,73,74,259,75,76,77,78,260,261,262,263,79,80,81,82,335,336,337,338,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,265,116,117,118,119,120,121,122,123,266,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,267,268,269,270,271,272,273,274,275,276,339,277,139,278,279,140,141,142,143,280,144,145,146,281,282,147,283,148,149,150,151,152,284,340,341,342,343,344,153,154,155,156,157,158,159,160,161,162,163,223,345,346,347,287,288,289,290,291,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,348,349,350,351,352,353,354,355,184,292,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,298,211,212,213,214,315,299,215,216,300,301,217,218,219,220,302,356,357,358,359,360,361,362,363,364,365,366,221,367,368,369,370],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[398],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[100,399],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[50,52,59,85,86,90,91,264,102],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[44,45,46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,230,231,10,11,12,13,14,232,15,16,233,17,234,235,333,236,237,238,18,334,239,19,240,20,21,322,241,242,243,244,22,245,23,246,24,25,26,27,28,29,30,31,32,33,34,252,35,36,37,38,253,254,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,255,54,55,56,57,58,59,256,257,60,61,258,63,64,65,66,67,68,69,70,71,72,73,74,259,75,76,77,78,260,261,262,263,79,80,81,82,335,336,337,338,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,265,116,117,118,119,120,121,122,123,266,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,267,268,269,270,271,272,273,274,275,339,277,139,140,141,142,143,280,144,145,146,281,282,147,283,148,149,150,151,152,340,341,342,343,344,153,154,155,156,157,158,159,160,161,162,163,287,288,289,290,291,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,298,211,212,213,214,315,299,215,216,300,301,217,218,219,220,221,367,368,369,370],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[85,92,97,109,400],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[313,314,283,315,316,317],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[223,224,225,226,227,228],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":86,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":213,"org.easymock.tests2.UsageTest.argumentsOrdered":262,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":383,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":76,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":10,"org.easymock.tests2.DelegateToTest.testReturnException":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":268,"org.easymock.tests.MockingTest.testPartialClassMocking":153,"org.easymock.tests.MockClassControlTest.testToString":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":382,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":190,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":116,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":81,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":134,"org.easymock.tests2.UsageTest.wrongArguments":259,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":369,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":392,"org.easymock.tests2.UsageConstraintsTest.testNull":88,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":16,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":40,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":355,"org.easymock.tests2.CaptureTest.testPrimitive":53,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":138,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":209,"org.easymock.tests.UsageTest.moreThanOneArgument":214,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":15,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":289,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":293,"org.easymock.tests.UsageTest.argumentsOrdered":301,"org.easymock.tests.UsageVarargTest.varargIntAccepted":121,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":129,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":334,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":133,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":396,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":82,"org.easymock.tests.ReplayStateInvalidUsageTest.times":363,"org.easymock.tests2.AnswerTest.answer":30,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":264,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":338,"org.easymock.tests2.CaptureTest.testAnd":50,"org.easymock.tests2.UsageTest.strictResetToDefault":73,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":37,"org.easymock.tests2.DelegateToTest.testDelegate":113,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":297,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":344,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":372,"org.easymock.tests2.CaptureTest.testCapture1_2446744":255,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":203,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":336,"org.easymock.tests.UsageThrowableTest.throwError":156,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":357,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":391,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":291,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":309,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":130,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":388,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":191,"org.easymock.tests2.UsageTest.niceToStrict":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":19,"org.easymock.tests2.MockBuilderTest.testCreateMock":322,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":199,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":313,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":38,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":278,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":367,"org.easymock.tests.UsageOverloadedMethodTest.overloading":211,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":97,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":175,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":298,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":96,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":58,"org.easymock.tests2.EasyMockSupportClassTest.testAll":265,"org.easymock.tests.MockClassControlTest.testEquals":354,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":139,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":207,"org.easymock.tests2.CaptureTest.testCaptureAll":51,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":342,"org.easymock.tests.MockNameTest.defaultName":386,"org.easymock.tests2.UsageConstraintsTest.testMatches":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":290,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":302,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":128,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":187,"org.easymock.samples.BasicClassMockTest.testPrintContent":1,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":343,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":162,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":272,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":319,"org.easymock.tests2.UsageConstraintsTest.greaterThan":100,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":292,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":238,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":228,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":258,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":393,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":234,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":72,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":35,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":267,"org.easymock.tests2.CaptureTest.testCaptureFirst":60,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":36,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":79,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":171,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":63,"org.easymock.tests2.UsageTest.moreThanOneArgument":74,"org.easymock.tests2.CaptureTest.testCapture2_2446744":257,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":241,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":127,"org.easymock.tests.GenericTest.testBridgedEquals":381,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":144,"org.easymock.tests.UsageExpectAndReturnTest.longType":167,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":340,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":208,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":105,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":332,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":287,"org.easymock.tests.UsageCallCountTest.tooManyCalls":145,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":397,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":140,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":172,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":195,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":161,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":66,"org.easymock.tests2.UsageConstraintsTest.testContains":95,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":279,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":22,"org.easymock.tests2.UsageConstraintsTest.testFind":87,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":212,"org.easymock.tests.MockTypeTest.fromEasyMockClass":390,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":115,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":282,"org.easymock.tests.UsageExpectAndReturnTest.object":174,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":235,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":39,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":123,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":347,"org.easymock.tests.UsageTest.exactCallCountByLastCall":217,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":180,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":119,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":274,"org.easymock.tests.MockClassControlTest.testHashCode":353,"org.easymock.tests2.EasyMockSupportTest.testVerify":43,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":395,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":295,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":273,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":335,"org.easymock.tests.UsageVarargTest.varargCharAccepted":122,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":24,"org.easymock.tests2.UsageTest.openCallCountByLastCall":77,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":42,"org.easymock.tests.DefaultClassInstantiatorTest.object":223,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":345,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":326,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":197,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":159,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":318,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":236,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":196,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":118,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":351,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":375,"org.easymock.tests2.UsageTest.resumeIfFailure":263,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":270,"org.easymock.tests2.StubTest.stubWithReturnValue":48,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":305,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":173,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":106,"org.easymock.tests2.SerializationTest.testAllMockedMethod":46,"org.easymock.samples.SupportTest.voteForRemovals":13,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":314,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":379,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":202,"org.easymock.tests.UsageExpectAndThrowTest.object":200,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":103,"org.easymock.tests2.DelegateToTest.testWrongClass":112,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":219,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":220,"org.easymock.tests.UsageStrictMockTest.range":150,"org.easymock.samples.ConstructorCalledMockTest.testTax":230,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":254,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":65,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":201,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":20,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":300,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":368,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":316,"org.easymock.tests2.CaptureTest.testCaptureNone":57,"org.easymock.tests.UsageUnorderedTest.message":218,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":323,"org.easymock.tests.UsageVerifyTest.twoReturns":189,"org.easymock.tests.UsageVarargTest.varargByteAccepted":126,"org.easymock.tests2.ThreadingTest.testThreadSafe":61,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":143,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":387,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":0,"org.easymock.tests2.CaptureTest.testCapture_2617107":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":137,"org.easymock.tests2.UsageConstraintsTest.any":93,"org.easymock.tests2.StubTest.stub":47,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":362,"org.easymock.tests.UsageExpectAndThrowTest.longType":193,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":269,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":361,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":26,"org.easymock.tests2.SerializationTest.testClass":44,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":18,"org.easymock.tests.LimitationsTest.mockNativeMethod":221,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":183,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":380,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":29,"org.easymock.tests2.NameTest.nameForMocksControl":250,"org.easymock.tests2.MockedExceptionTest.testMockedException":244,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":216,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":155,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":194,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":14,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":21,"org.easymock.tests.MockingTest.testNicePartialClassMocking":154,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":17,"org.easymock.tests2.CaptureTest.testCaptureLast":56,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":320,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":286,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":71,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":91,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":104,"org.easymock.tests.MockingTest.testTwoMocks":285,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":164,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":198,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":261,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":108,"org.easymock.samples.ExampleTest.removeNonExistingDocument":229,"org.easymock.tests.UsageStrictMockTest.differentMethods":151,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":321,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":359,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":225,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":62,"org.easymock.tests2.ConstraintsToStringTest.andToString":376,"org.easymock.tests2.MockBuilderTest.testCreateMockString":242,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":348,"org.easymock.tests.UsageExpectAndThrowTest.floatType":192,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":99,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":31,"org.easymock.tests.UsageVerifyTest.twoThrows":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":117,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":237,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":310,"org.easymock.tests2.UsageConstraintsTest.testNotNull":107,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":163,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":243,"org.easymock.tests2.UsageTest.defaultResetToNice":260,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":179,"org.easymock.tests.UsageVarargTest.differentLength":266,"org.easymock.tests2.CallbackTest.callback":49,"org.easymock.tests.UsageTest.openCallCountByLastCall":215,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":83,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":136,"org.easymock.tests.UsageCallCountTest.tooFewCalls":141,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":370,"org.easymock.tests.UsageThrowableTest.throwCheckedException":160,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":317,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":70,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":281,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":385,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":67,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":364,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":69,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":33,"org.easymock.tests2.CompareToTest.testGreateOrEqual":400,"org.easymock.tests.ObjectMethodsTest.testHashCode":346,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":64,"org.easymock.tests2.NameTest.nameForNiceMock":249,"org.easymock.tests2.DependencyTest.testInterfaceMocking":80,"org.easymock.samples.ExampleTest.addDocument":7,"org.easymock.tests2.DelegateToTest.testStubDelegate":111,"org.easymock.tests2.AnswerTest.stubAnswer":32,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":148,"org.easymock.tests.UsageVarargTest.varargLongAccepted":125,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":152,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":182,"org.easymock.tests.UsageExpectAndReturnTest.floatType":166,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":23,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":231,"org.easymock.tests2.ConstraintsToStringTest.orToString":373,"org.easymock.tests.UsageThrowableTest.noUpperLimit":157,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":101,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":84,"org.easymock.tests2.SerializationTest.test":45,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":54,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":224,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":165,"org.easymock.tests2.UsageConstraintsTest.testSame":89,"org.easymock.samples.SupportTest.addDocument":12,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":360,"org.easymock.tests.GenericTest.testPackageScope":277,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests2.NameTest.nameForMock":247,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":176,"org.easymock.tests2.UsageStrictMockTest.differentMethods":28,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":307,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":168,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":204,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":186,"org.easymock.tests2.MockedExceptionTest.testRealException":245,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":378,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":135,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":366,"org.easymock.tests2.NameTest.nameForStrictMock":248,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":114,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":233,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":102,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":226,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":239,"org.easymock.tests2.UsageStrictMockTest.range":27,"org.easymock.tests2.UsageConstraintsTest.lessThan":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":398,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":252,"org.easymock.tests2.CaptureTest.testCaptureRightOne":59,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":222,"org.easymock.tests2.UsageConstraintsTest.testOr":90,"org.easymock.tests.UsageRangeTest.combination":184,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":232,"org.easymock.tests.UsageTest.wrongArguments":299,"org.easymock.tests2.MockBuilderTest.testWithConstructor":303,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":169,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":177,"org.easymock.tests.UsageVarargTest.varargShortAccepted":124,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":227,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":280,"org.easymock.tests2.UsageConstraintsTest.cmpTo":94,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":251,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":78,"org.easymock.tests2.CaptureTest.testCaptureFromStub":256,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":356,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":384,"org.easymock.tests.UsageTest.unexpectedCallWithArray":315,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":283,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":142,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":306,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":178,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":149,"org.easymock.tests2.UsageConstraintsTest.constraints":85,"org.easymock.samples.ExampleTest.addAndChangeDocument":9,"org.easymock.tests2.ConstraintsToStringTest.notToString":374,"org.easymock.tests.UsageStrictMockTest.testVerify":284,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":11,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":147,"org.easymock.tests2.CompareToTest.testGreateThan":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":341,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":131,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":132,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":120,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":253}}]
