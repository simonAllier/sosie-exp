[{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,1,489,490,491,492,493,2,494,495,496,497,498,499,500,501,502,503,504,3,505,506,507,508],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[43,207,212,282,509,359,510,360,361,363,364,365,366,369,370,511,371,403,505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[69,512,513,112,514,515],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[41,43,44],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[211,289,290,291,293,295,296,297,300,463,464,465,467,469,470,471,474],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[41,42,43,65,146,188,189,190,192,207,212,219,280,280,281,281,282,285,286,509,320,321,322,323,326,327,344,352,359,510,360,361,363,364,365,366,369,370,511,371,375,378,388,394,397,398,400,401,402,403,405,408,409,410,411,505,507],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[132,157,273,414,416,417,419,420,422,508],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:210","failures":[280,280,281,281,352,353,367,368,406,505],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[435,437,445,481,482,485,487,488,489,498,503],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[264,516,517],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[518,519,520,521,522,352,353,523,368,505],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[524,518,519,520,525,526,522,353,523,505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[261,265],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[261,265],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[462],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[4,5,6,7,8,9,11,41,43,45,46,47,48,49,50,65,67,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,110,111,112,113,114,115,116,117,118,135,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,175,176,177,178,180,181,183,184,185,188,189,190,192,196,197,198,199,200,201,202,203,204,205,206,207,210,211,212,213,214,215,216,217,218,220,221,222,223,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,267,268,269,270,271,272,273,274,275,277,279,280,280,281,281,282,288,294,295,303,304,305,307,308,309,310,311,312,313,320,321,322,323,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,355,359,360,361,363,364,365,366,369,370,371,375,378,388,394,397,398,399,400,401,402,403,405,408,409,410,411,413,414,415,416,417,418,419,420,422,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,468,469,475,476,477,478,479,480,481,482,484,485,486,487,488,1,489,490,491,492,493,2,494,495,496,497,498,499,500,501,502,503,504,3,505,506,508],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[435,437,445,481,482,485,487,488,489,498,503],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[129,429,431],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:183","failures":[4,11,12,13,14,16,17,42,45,46,47,48,49,50,65,68,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,110,111,114,115,118,146,147,148,149,150,151,164,165,166,168,169,171,172,173,174,175,189,190,192,215,216,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,272,273,274,275,276,277,279,282,283,284,285,286,287,288,294,303,304,306,307,308,309,310,311,312,313,320,321,322,323,325,326,327,329,330,331,333,334,335,336,341,344,346,349,350,351,352,363,365,366,378,388,394,397,399,400,402,414,417,418,419,420,422,430,431,432,434,435,436,437,438,440,441,442,443,444,445,448,449,451,452,453,454,457,458,459,460,461,468,479,480,481,482,484,485,486,487,488,1,490,491,492,493,2,494,495,496,497,498,499,500,501,502,503,504,3,505,506,507,508],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[354,355,398,413],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[527],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[4,41,43,45,46,49,65,70,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,110,111,114,115,118,147,148,149,150,151,162,189,190,192,215,216,226,227,228,249,250,251,252,253,255,272,274,275,277,282,288,294,303,304,307,309,310,313,320,321,322,323,325,326,327,329,330,331,333,335,336,337,340,341,344,346,348,349,350,351,352,360,363,365,366,370,375,378,388,394,397,398,399,400,401,402,405,409,410,411,418,431,435,436,438,439,442,443,444,445,447,448,449,450,451,452,453,454,455,456,457,458,459,460,468,479,480,481,482,484,485,486,487,488,1,490,491,492,493,2,494,495,496,497,498,499,500,502,503,504,3,505,506],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[141],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[518,519,520,522,352,353,523,368,505],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[4,45,46,49,51,70,119,123,124,133,138,147,148,149,150,151,185,215,216,267,268,269,270,271,280,280,281,281,307,313,446,479,480,484,485,486,487,492,2,494,496,497,498,503,504,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[69,175,493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:83","failures":[46,49,50,69,70,71,72,73,78,110,111,113,114,115,116,117,118,175,200,228,253,254,255,307,308,309,310,313,329,331,332,335,336,338,339,341,355,356,357,358,414,418,431,436,437,439,440,441,442,443,448,485,490,495,503,508],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[505,506,507],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[482],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":482,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":110,"org.easymock.tests2.UsageTest.argumentsOrdered":339,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":459,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":129,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":334,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":283,"org.easymock.tests2.DelegateToTest.testReturnException":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":197,"org.easymock.tests.MockingTest.testPartialClassMocking":189,"org.easymock.tests.MockClassControlTest.testToString":220,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":354,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":108,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":382,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":229,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":378,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":304,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":518,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":45,"org.easymock.tests2.UsageTest.wrongArguments":332,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":474,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":258,"org.easymock.samples.ExampleTest.answerVsDelegate":273,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":212,"org.easymock.tests2.UsageConstraintsTest.testNull":485,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":400,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":458,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":225,"org.easymock.tests2.CaptureTest.testPrimitive":438,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":49,"org.easymock.tests.UsageTest.moreThanOneArgument":111,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":248,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":399,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":269,"org.easymock.tests.UsageTest.argumentsOrdered":117,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":202,"org.easymock.tests.UsageVarargTest.varargIntAccepted":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":526,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":359,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":299,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":316,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":121,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":151,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":23,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":468,"org.easymock.tests.ReplayStateInvalidUsageTest.times":59,"org.easymock.tests2.DependencyTest.testClassMocking":301,"org.easymock.tests2.AnswerTest.answer":414,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":136,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":478,"org.easymock.tests2.CaptureTest.testAnd":435,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":209,"org.easymock.tests2.UsageTest.strictResetToDefault":330,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":408,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":453,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":251,"org.easymock.tests2.DelegateToTest.testDelegate":434,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":206,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":22,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":244,"org.easymock.tests.LimitationsTest.mockFinalMethod":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":156,"org.easymock.tests2.DependencyTest.testClassMockingSupport":302,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":104,"org.easymock.tests2.CaptureTest.testCapture1_2446744":439,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":404,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":242,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":476,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":53,"org.easymock.tests.UsageThrowableTest.throwError":76,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":211,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":396,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":26,"org.easymock.samples.PartialClassMockTest.testGetArea":282,"org.easymock.tests.MockingTest.testInterfaceMocking":191,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":148,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":177,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":184,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":230,"org.easymock.tests2.UsageTest.niceToStrict":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":383,"org.easymock.tests2.ThreadingTest.testChangeDefault":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":119,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":363,"org.easymock.tests2.MockBuilderTest.testCreateMock":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":391,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":471,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":514,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":238,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":454,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":208,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":9,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":256,"org.easymock.tests.UsageOverloadedMethodTest.overloading":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":387,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":160,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":2,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":95,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":226,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":516,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":493,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":444,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":167,"org.easymock.tests.MockClassControlTest.testEquals":224,"org.easymock.tests2.EasyMockSupportClassTest.testAll":375,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":42,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":477,"org.easymock.tests2.CaptureTest.testCaptureAll":436,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":154,"org.easymock.tests.MockNameTest.defaultName":217,"org.easymock.tests2.UsageConstraintsTest.testMatches":494,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":270,"org.easymock.samples.ExampleTest.voteForRemovals":277,"org.easymock.tests.UsageVarargTest.allKinds":175,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":253,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":155,"org.easymock.samples.BasicClassMockTest.testPrintContent":286,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":82,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":305,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":201,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":296,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":522,"org.easymock.tests2.UsageConstraintsTest.greaterThan":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":376,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":250,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":411,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":27,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":266,"org.easymock.samples.ExampleTest.voteForRemoval":274,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":412,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":348,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":213,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":403,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":19,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":146,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":329,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":451,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":196,"org.easymock.tests2.CaptureTest.testCaptureFirst":448,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":452,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":341,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":163,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":91,"org.easymock.tests2.CaptureTest.testCapture2_2446744":447,"org.easymock.tests2.UsageTest.moreThanOneArgument":331,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":137,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":370,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":174,"org.easymock.tests.GenericTest.testBridgedEquals":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":16,"org.easymock.tests.UsageExpectAndReturnTest.longType":87,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":449,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":152,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":511,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":247,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":501,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":185,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":245,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":267,"org.easymock.tests.UsageCallCountTest.tooManyCalls":17,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":473,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":234,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":81,"org.easymock.tests.MockingTest.testNiceClassMocking":195,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":321,"org.easymock.tests.MockingTest.testClassMocking":187,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":510,"org.easymock.tests2.UsageConstraintsTest.testContains":492,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":10,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":344,"org.easymock.tests2.UsageConstraintsTest.testFind":484,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":228,"org.easymock.tests.MockTypeTest.fromEasyMockClass":210,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":422,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":67,"org.easymock.tests.UsageExpectAndReturnTest.object":94,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":405,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":472,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":457,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":519,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":169,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":182,"org.easymock.tests.UsageTest.exactCallCountByLastCall":118,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":124,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":107,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":353,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":164,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":100,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":159,"org.easymock.tests.MockClassControlTest.testHashCode":223,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":290,"org.easymock.tests2.EasyMockSupportTest.testVerify":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":385,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":204,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":157,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":7,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":475,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":462,"org.easymock.tests.UsageVarargTest.varargCharAccepted":168,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":142,"org.easymock.tests2.UsageTest.openCallCountByLastCall":335,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":460,"org.easymock.tests.DefaultClassInstantiatorTest.object":260,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":6,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":386,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":466,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":289,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":409,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":25,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":222,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":235,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":101,"org.easymock.tests.ReplayStateInvalidCallsTest.times":31,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":143,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":394,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":221,"org.easymock.tests2.UsageTest.resumeIfFailure":340,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":207,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":199,"org.easymock.tests2.StubTest.stubWithReturnValue":313,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":523,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":502,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":93,"org.easymock.tests2.SerializationTest.testAllMockedMethod":507,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":135,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":515,"org.easymock.samples.SupportTest.voteForRemovals":288,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":292,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":241,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":141,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":415,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":109,"org.easymock.tests.UsageExpectAndThrowTest.object":239,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":499,"org.easymock.tests2.DelegateToTest.testWrongClass":432,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":29,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":215,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":216,"org.easymock.tests.UsageStrictMockTest.range":72,"org.easymock.samples.ConstructorCalledMockTest.testTax":280,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":318,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":456,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":320,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":240,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":365,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":116,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":257,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":512,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":21,"org.easymock.tests2.CaptureTest.testCaptureNone":443,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":178,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":424,"org.easymock.tests.UsageUnorderedTest.message":50,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":527,"org.easymock.tests.UsageVerifyTest.twoReturns":255,"org.easymock.tests.UsageVarargTest.varargByteAccepted":173,"org.easymock.tests2.ThreadingTest.testThreadSafe":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":389,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":14,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":183,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":285,"org.easymock.tests2.CaptureTest.testCapture_2617107":437,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":48,"org.easymock.tests2.UsageConstraintsTest.any":490,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":58,"org.easymock.tests2.StubTest.stub":312,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":198,"org.easymock.tests.UsageExpectAndThrowTest.longType":232,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":264,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":57,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":308,"org.easymock.tests2.SerializationTest.testClass":505,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":294,"org.easymock.tests.LimitationsTest.mockNativeMethod":65,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":103,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":43,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":465,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":37,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":311,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":425,"org.easymock.tests2.NameTest.nameForMocksControl":358,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":467,"org.easymock.tests2.MockedExceptionTest.testMockedException":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":377,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":115,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":421,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":233,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":397,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":366,"org.easymock.tests.MockingTest.testNicePartialClassMocking":190,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":402,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":524,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":463,"org.easymock.tests2.CaptureTest.testCaptureLast":442,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":105,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":488,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":36,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":327,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":500,"org.easymock.tests.MockingTest.testTwoMocks":188,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":33,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":328,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":237,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":338,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":504,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":428,"org.easymock.samples.ExampleTest.removeNonExistingDocument":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":470,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":55,"org.easymock.tests.UsageStrictMockTest.differentMethods":73,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":291,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":427,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":262,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":349,"org.easymock.tests2.MockBuilderTest.testCreateMockString":371,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":218,"org.easymock.tests.UsageExpectAndThrowTest.floatType":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":379,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":374,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":417,"org.easymock.tests.UsageVerifyTest.twoThrows":254,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":388,"org.easymock.samples.ExampleTest.voteAgainstRemoval":275,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":130,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":410,"org.easymock.tests.LimitationsTest.privateConstructor":64,"org.easymock.tests2.UsageConstraintsTest.testNotNull":503,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":83,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":342,"org.easymock.tests2.UsageTest.defaultResetToNice":337,"org.easymock.samples.ExampleTest.voteAgainstRemovals":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":131,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":99,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":464,"org.easymock.tests.UsageVarargTest.differentLength":170,"org.easymock.tests2.CallbackTest.callback":508,"org.easymock.tests2.UsageConstraintsTest.equals":483,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":406,"org.easymock.tests.UsageTest.openCallCountByLastCall":114,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":479,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":47,"org.easymock.tests.UsageCallCountTest.tooFewCalls":12,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":259,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":426,"org.easymock.tests.UsageThrowableTest.throwCheckedException":80,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":513,"org.easymock.tests.MockingTest.testStrictClassMocking":186,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":5,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":326,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":469,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":322,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":60,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":325,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":419,"org.easymock.tests.ObjectMethodsTest.testHashCode":181,"org.easymock.tests2.CompareToTest.testGreateOrEqual":0,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":525,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":35,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":351,"org.easymock.tests2.NameTest.nameForNiceMock":357,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":30,"org.easymock.tests2.DependencyTest.testInterfaceMocking":303,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":520,"org.easymock.samples.ExampleTest.addDocument":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":390,"org.easymock.tests2.DelegateToTest.testStubDelegate":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":395,"org.easymock.tests2.AnswerTest.stubAnswer":418,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":70,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":367,"org.easymock.tests.UsageVarargTest.varargLongAccepted":172,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":128,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":102,"org.easymock.tests.UsageExpectAndReturnTest.floatType":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":352,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":281,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":497,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests.UsageThrowableTest.noUpperLimit":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":298,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":480,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":314,"org.easymock.tests2.SerializationTest.test":506,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":440,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":517,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":261,"org.easymock.tests2.UsageConstraintsTest.testSame":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":85,"org.easymock.samples.SupportTest.addDocument":287,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":324,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":20,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":380,"org.easymock.tests.GenericTest.testPackageScope":41,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":123,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":297,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":193,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":18,"org.easymock.tests2.NameTest.nameForMock":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":96,"org.easymock.tests2.UsageStrictMockTest.differentMethods":310,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":407,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":88,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":243,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":179,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":252,"org.easymock.tests2.MockedExceptionTest.testRealException":345,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":133,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":132,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":46,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":62,"org.easymock.tests2.NameTest.nameForStrictMock":356,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":362,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":420,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":401,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":317,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":498,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":263,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":360,"org.easymock.tests2.UsageStrictMockTest.range":309,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":3,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":293,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":521,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":127,"org.easymock.tests2.CaptureTest.testCaptureRightOne":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":384,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":423,"org.easymock.tests2.UsageConstraintsTest.testOr":487,"org.easymock.tests.UsageRangeTest.combination":249,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":398,"org.easymock.tests.UsageTest.wrongArguments":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":381,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":219,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":97,"org.easymock.tests.UsageVarargTest.varargShortAccepted":171,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":265,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":15,"org.easymock.tests2.UsageConstraintsTest.cmpTo":491,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":38,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":416,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":122,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":336,"org.easymock.tests2.CaptureTest.testCaptureFromStub":446,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":52,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":361,"org.easymock.tests.UsageTest.unexpectedCallWithArray":112,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":34,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":69,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":13,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":98,"org.easymock.tests2.UsageConstraintsTest.constraints":481,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":71,"org.easymock.samples.ExampleTest.addAndChangeDocument":279,"org.easymock.tests.UsageStrictMockTest.testVerify":75,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":284,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":68,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":153,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":441,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":509,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":149,"org.easymock.tests.LimitationsTest.abstractClass":63,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":90,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":162,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":455,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":165}}]
