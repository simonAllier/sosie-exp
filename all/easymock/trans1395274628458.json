[{"position":"org.easymock.internal.MockBuilder:235","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[12,15,16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"position":"org.easymock.internal.Range:36","failures":[48],"status":-1,"binaryOperator":"(int <= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[49,50,51,52,53,54,55,56,57,58,59,60,25,61,26,27,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,28,29,107,108,109,110,111,30,31,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,10,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,12,15,16,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,13,13,14,14,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,32,241,33,34,242,243,244,245,246,247,248,249,250,251,36,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,37,276,38,277,278,39,40,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,41,42,43,316,317,318,319,320,321,44,322,323,46,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,47,340,341,342,343,344,345,346],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[49,50,51,52,53,54,59,60,25,61,26,27,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,28,29,107,108,109,110,111,30,31,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,347,136,137,138,139,140,348,141,142,143,144,145,146,147,10,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,12,15,16,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,13,14,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,32,241,33,34,242,247,248,249,250,251,252,253,254,255,258,259,260,261,262,349,350,263,264,265,266,267,268,269,270,271,272,273,274,275,37,276,38,277,278,39,40,279,280,281,282,283,284,285,286,287,288,289,298,300,301,303,41,42,43,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,351,335,336,337,338,339,47,340,341,342,343,344,345,346],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"position":"org.easymock.internal.MocksControl:189","failures":[59,61,26,27,71,72,73,74,91,98,100,104,105,29,107,108,111,30,31,113,116,140,142,143,144,146,147,155,157,158,160,161,238,240,241,33,34,275,276,38,39,40,279,280,281,282,283,42,43,47,342,343,344,345,346],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:163","failures":[51,52],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[352,353,354],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[302,355],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[3,11,356,357,358,359,360],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"exception":"candidateParameter","throwableClass":"candidateParameter"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[12,15,16,17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"primitiveType"}},{"position":"org.easymock.internal.RecordState:217","failures":[49,361,362,50,51,52,53,54,55,56,57,58,59,60,25,61,26,27,62,63,64,65,66,67,68,69,70,71,72,73,74,363,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,28,29,107,108,109,110,111,30,31,112,113,114,115,116,117,118,119,120,121,122,123,364,124,125,126,127,128,129,130,131,132,133,134,135,347,136,137,138,139,140,348,141,142,143,144,145,146,147,10,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,12,15,16,365,167,168,169,366,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,13,13,14,14,192,193,194,367,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,368,369,238,239,240,32,241,33,34,242,243,244,245,246,247,248,249,250,251,35,36,252,253,254,255,370,371,372,373,256,257,258,259,260,261,262,349,350,263,264,265,266,267,268,269,270,271,272,273,274,275,37,276,38,277,278,39,40,279,280,281,282,283,374,375,376,377,48,378,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,355,379,380,381,303,304,305,306,307,308,309,310,311,312,313,314,315,41,42,43,316,317,318,319,320,321,44,322,323,45,46,324,325,326,327,328,329,330,331,332,333,334,351,335,336,337,338,339,47,340,341,382,383,384,342,343,344,345,346],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[137],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[385,386],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[49,361,362,50,51,52,53,54,55,56,57,58,59,60,25,61,26,27,62,63,64,65,66,67,68,69,70,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,28,29,107,108,109,110,111,30,31,112,113,114,115,116,117,118,119,120,121,122,123,364,124,125,126,127,128,129,130,131,132,133,134,135,347,136,137,138,139,140,348,141,143,144,146,10,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,12,15,16,365,167,168,169,366,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,13,13,14,14,192,193,194,367,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,368,369,238,239,240,32,241,33,34,242,243,247,248,249,250,251,35,36,252,253,254,255,370,371,372,373,256,258,259,260,261,349,350,263,264,265,266,267,268,269,270,271,272,273,274,275,37,38,277,278,39,40,279,374,375,376,377,48,378,284,285,286,287,288,289,298,299,300,301,355,379,380,381,303,41,42,43,316,317,318,319,320,321,44,322,323,45,46,324,325,326,327,328,329,330,331,332,333,334,351,335,336,337,338,339,47,340,341,382,383,384,342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[67,68,71,72,73,74,75,91,98,100,104,111,140,142,145,147,153,160,165,190,243,244,245,246,257,262,276,280,281,282,283,290,291,292,293,294,295,296,297,302,304,305,306,307,308,309,310,311,312,313,314,315,324,342,343,344,345,346],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[387],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1688","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:520","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[57,388,389,390,64,391,392,393,394,67,68,69,71,72,73,74,98,100,395,107,140,142,151,155,157,158,161,196,396,397,280,281,282,283,302,342,343,344,345,346],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[26,29,30,31,240,33,276,38,39,40,398,399,42,43,324,47],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[26,29,30,31,240,33,276,38,39,40,399,42,43,324,47],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[400,401,402,388,403,63,389,390,64,404,405,406,407,408,409,391,410,392,65,393,411,412,413,394,66,414,415,67,68,69,92,93,95,96,97,98,99,0,416,100,101,102,103,417,395,140,348,418,419,141,142,143,144,4,145,146,147,10,11,12,16,173,174,175,176,178,179,180,182,183,13,13,14,14,367,195,196,197,420,254,255,370,421,422,266,423,290,291,292,293,294,297,424,302,425,426,427,352,428,429,430,431,432,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"failures":[328,343],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[302,425,426,427,352,428,353,354,430],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[431],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[364,124],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[168],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":117,"org.easymock.tests2.UsageTest.argumentsOrdered":31,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":275,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":163,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":108,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":194,"org.easymock.tests2.DelegateToTest.testReturnException":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":285,"org.easymock.tests.MockingTest.testPartialClassMocking":195,"org.easymock.tests.MockClassControlTest.testToString":292,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":378,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":407,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":218,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":90,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":356,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":123,"org.easymock.tests2.UsageTest.wrongArguments":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":316,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":282,"org.easymock.samples.ExampleTest.answerVsDelegate":185,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":432,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":396,"org.easymock.tests2.UsageConstraintsTest.testNull":119,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":95,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":162,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":297,"org.easymock.tests2.CaptureTest.testPrimitive":78,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":320,"org.easymock.tests.UsageTest.moreThanOneArgument":37,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":237,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":249,"org.easymock.tests.UsageTest.argumentsOrdered":40,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":374,"org.easymock.tests.UsageVarargTest.varargIntAccepted":332,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":23,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":325,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":360,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":142,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":329,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":20,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":104,"org.easymock.tests.ReplayStateInvalidUsageTest.times":312,"org.easymock.tests2.AnswerTest.answer":49,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":364,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":74,"org.easymock.tests2.CaptureTest.testAnd":75,"org.easymock.tests2.UsageTest.strictResetToDefault":106,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":100,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":2,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":157,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":300,"org.easymock.tests2.DelegateToTest.testDelegate":170,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":48,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":233,"org.easymock.tests.LimitationsTest.mockFinalMethod":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":288,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":346,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":35,"org.easymock.tests2.CaptureTest.testCapture1_2446744":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":72,"org.easymock.tests.UsageThrowableTest.throwError":267,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":251,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":415,"org.easymock.samples.PartialClassMockTest.testGetArea":180,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":326,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":408,"org.easymock.tests2.UsageTest.niceToStrict":107,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":219,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":141,"org.easymock.tests2.MockBuilderTest.testCreateMock":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":412,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":227,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":158,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":380,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":256,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":280,"org.easymock.tests.UsageOverloadedMethodTest.overloading":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":128,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":323,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":209,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":263,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":127,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":353,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":84,"org.easymock.tests2.EasyMockSupportClassTest.testAll":63,"org.easymock.tests.MockClassControlTest.testEquals":296,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":255,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":235,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":73,"org.easymock.tests2.CaptureTest.testCaptureAll":76,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":344,"org.easymock.tests2.UsageConstraintsTest.testMatches":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":250,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":304,"org.easymock.samples.ExampleTest.voteForRemovals":189,"org.easymock.tests.UsageVarargTest.allKinds":339,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":41,"org.easymock.samples.BasicClassMockTest.testPrintContent":183,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":345,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":273,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":289,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":366,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":429,"org.easymock.tests2.UsageConstraintsTest.greaterThan":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":389,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":299,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":103,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":430,"org.easymock.samples.ExampleTest.voteForRemoval":186,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":417,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":98,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":105,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":303,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":155,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":284,"org.easymock.tests2.CaptureTest.testCaptureFirst":88,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":156,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":113,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":205,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":151,"org.easymock.tests2.UsageTest.moreThanOneArgument":28,"org.easymock.tests2.CaptureTest.testCapture2_2446744":87,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":146,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":338,"org.easymock.tests.GenericTest.testBridgedEquals":421,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":349,"org.easymock.tests.UsageExpectAndReturnTest.longType":201,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":342,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":236,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":347,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":381,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":247,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":372,"org.easymock.tests.UsageCallCountTest.tooManyCalls":350,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":223,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":272,"org.easymock.tests.MockingTest.testNiceClassMocking":397,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":174,"org.easymock.tests2.UsageConstraintsTest.testContains":126,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":257,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":69,"org.easymock.tests2.UsageConstraintsTest.testFind":118,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":265,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":54,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":238,"org.easymock.tests.UsageExpectAndReturnTest.object":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":99,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":161,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":334,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":357,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":246,"org.easymock.tests.UsageTest.exactCallCountByLastCall":279,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":340,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":375,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":11,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":214,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":330,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":322,"org.easymock.tests.MockClassControlTest.testHashCode":295,"org.easymock.tests2.EasyMockSupportTest.testVerify":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":391,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":376,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":321,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":379,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":398,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":71,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":363,"org.easymock.tests.UsageVarargTest.varargCharAccepted":333,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":424,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":60,"org.easymock.tests2.UsageTest.openCallCountByLastCall":109,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":164,"org.easymock.tests.DefaultClassInstantiatorTest.object":302,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":355,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":244,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":410,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":225,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":270,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":386,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":101,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":294,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":224,"org.easymock.tests.CapturesMatcherTest.test":387,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":215,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":66,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":293,"org.easymock.tests2.UsageTest.resumeIfFailure":112,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":431,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":287,"org.easymock.tests2.StubTest.stubWithReturnValue":172,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":3,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":136,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":207,"org.easymock.tests2.SerializationTest.testAllMockedMethod":16,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":368,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":9,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":22,"org.easymock.samples.SupportTest.voteForRemovals":193,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":420,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":230,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":17,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":369,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":361,"org.easymock.tests.UsageExpectAndThrowTest.object":228,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":134,"org.easymock.tests2.DelegateToTest.testWrongClass":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":252,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":253,"org.easymock.tests.UsageStrictMockTest.range":33,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":160,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":173,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":229,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":402,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":39,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":281,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":384,"org.easymock.tests2.CaptureTest.testCaptureNone":83,"org.easymock.tests.UsageUnorderedTest.message":47,"org.easymock.tests.UsageVerifyTest.twoReturns":43,"org.easymock.tests.UsageVarargTest.varargByteAccepted":337,"org.easymock.tests2.ThreadingTest.testThreadSafe":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":393,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":261,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":182,"org.easymock.tests2.CaptureTest.testCapture_2617107":77,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":319,"org.easymock.tests2.UsageConstraintsTest.any":124,"org.easymock.tests2.StubTest.stub":171,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":311,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":373,"org.easymock.tests.UsageExpectAndThrowTest.longType":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":286,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":352,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":310,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":61,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":91,"org.easymock.tests.LimitationsTest.mockNativeMethod":266,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":217,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":370,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":62,"org.easymock.tests2.NameTest.nameForMocksControl":58,"org.easymock.tests2.MockedExceptionTest.testMockedException":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":390,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":278,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":197,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":222,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":92,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":144,"org.easymock.tests.MockingTest.testNicePartialClassMocking":196,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":97,"org.easymock.tests2.CaptureTest.testCaptureLast":82,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":36,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":179,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":122,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":135,"org.easymock.tests.MockingTest.testTwoMocks":367,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":226,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":30,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":138,"org.easymock.samples.ExampleTest.removeNonExistingDocument":190,"org.easymock.tests.UsageStrictMockTest.differentMethods":34,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":308,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":426,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":150,"org.easymock.tests2.ConstraintsToStringTest.andToString":21,"org.easymock.tests2.MockBuilderTest.testCreateMockString":147,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":404,"org.easymock.tests.UsageExpectAndThrowTest.floatType":220,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":403,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":50,"org.easymock.tests.UsageVerifyTest.twoThrows":42,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":65,"org.easymock.samples.ExampleTest.voteAgainstRemoval":187,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":382,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":102,"org.easymock.tests2.UsageConstraintsTest.testNotNull":137,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":274,"org.easymock.tests2.UsageTest.defaultResetToNice":111,"org.easymock.samples.ExampleTest.voteAgainstRemovals":184,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":213,"org.easymock.tests.UsageVarargTest.differentLength":351,"org.easymock.tests2.CallbackTest.callback":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":0,"org.easymock.tests.UsageTest.openCallCountByLastCall":277,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":318,"org.easymock.tests.UsageCallCountTest.tooFewCalls":259,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":176,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":283,"org.easymock.tests.UsageThrowableTest.throwCheckedException":271,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":178,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":341,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":175,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":313,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":177,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":52,"org.easymock.tests.ObjectMethodsTest.testHashCode":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":359,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":152,"org.easymock.tests2.NameTest.nameForNiceMock":57,"org.easymock.tests2.DependencyTest.testInterfaceMocking":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":358,"org.easymock.samples.ExampleTest.addDocument":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":414,"org.easymock.tests2.DelegateToTest.testStubDelegate":168,"org.easymock.tests2.AnswerTest.stubAnswer":51,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":32,"org.easymock.tests.UsageVarargTest.varargLongAccepted":336,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":242,"org.easymock.tests.UsageExpectAndReturnTest.floatType":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":10,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests2.ConstraintsToStringTest.orToString":18,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":132,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":45,"org.easymock.tests.UsageThrowableTest.noUpperLimit":268,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":115,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":400,"org.easymock.tests2.SerializationTest.test":15,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":80,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":354,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":425,"org.easymock.tests2.UsageConstraintsTest.testSame":120,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":199,"org.easymock.samples.SupportTest.addDocument":192,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":405,"org.easymock.tests.GenericTest.testPackageScope":254,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":377,"org.easymock.tests2.NameTest.nameForMock":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":210,"org.easymock.tests2.UsageStrictMockTest.differentMethods":27,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":6,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":416,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":202,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":301,"org.easymock.tests2.MockedExceptionTest.testRealException":70,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":8,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":315,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":317,"org.easymock.tests2.NameTest.nameForStrictMock":56,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":419,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":53,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":96,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":401,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":427,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":133,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":348,"org.easymock.tests2.UsageStrictMockTest.range":26,"org.easymock.tests2.UsageConstraintsTest.lessThan":139,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":409,"org.easymock.tests2.CaptureTest.testCaptureRightOne":85,"org.easymock.tests2.UsageConstraintsTest.testOr":121,"org.easymock.tests.UsageRangeTest.combination":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":93,"org.easymock.tests.UsageTest.wrongArguments":38,"org.easymock.tests2.MockBuilderTest.testWithConstructor":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":406,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":291,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":211,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":428,"org.easymock.tests.UsageVarargTest.varargShortAccepted":335,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":262,"org.easymock.tests2.UsageConstraintsTest.cmpTo":125,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":362,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":110,"org.easymock.tests2.CaptureTest.testCaptureFromStub":86,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":305,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":418,"org.easymock.tests.UsageTest.unexpectedCallWithArray":276,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":240,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":260,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":5,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":212,"org.easymock.tests2.UsageConstraintsTest.constraints":116,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":241,"org.easymock.samples.ExampleTest.addAndChangeDocument":191,"org.easymock.tests2.ConstraintsToStringTest.notToString":19,"org.easymock.tests.UsageStrictMockTest.testVerify":243,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":181,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":343,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":327,"org.easymock.tests.LimitationsTest.abstractClass":422,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":204,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":159,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":331}}]
