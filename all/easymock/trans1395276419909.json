[{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[0,4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[6,8,17,22,23,24,25,26,27,28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[26,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:85","failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,6,7,8,9,10,11,12,13,14,15,17,18,19,20,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,22,23,92,24,93,25,26,30,94,95,96,97,98,99,100,101,102,28,103,104,105,106,29,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,166,167,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,3,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[68,82,100],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[121],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[45,80,86,87,216,219,258,259,262,263,337,302,303,329],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[103],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[31,32,33,34,35,36,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,6,7,8,9,10,11,12,13,14,15,17,18,19,20,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,22,23,92,24,93,25,26,30,94,95,96,97,98,99,100,101,102,28,103,104,105,106,29,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,21,21,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,226,227,228,229,230,231,232,233,234,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,283,285,286,288,301,302,303,304,305,3,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:233","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()))","type":"CtThrowImpl"},"failures":[338,339],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[120,121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:557","failures":[31,340,341,32,33,34,35,36,43,45,46,48,49,50,51,52,53,54,55,6,7,9,10,13,14,15,17,18,19,20,61,62,63,64,65,66,67,68,69,71,73,74,75,76,77,78,79,81,83,84,85,88,89,90,91,22,23,92,24,93,25,26,30,94,95,96,97,98,99,100,101,102,28,103,104,106,29,107,108,110,111,113,114,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,1,141,142,143,342,144,145,146,147,148,149,150,151,152,153,154,158,159,160,161,163,165,166,166,167,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,343,344,217,219,220,226,227,228,229,230,345,231,232,233,346,347,348,349,237,244,245,246,247,248,249,250,251,252,253,254,255,256,257,260,261,264,350,351,352,353,354,355,356,357,269,270,271,272,273,274,283,284,285,286,358,359,360,361,288,294,301,302,303,304,305,3,306,307,308,309,310,311,313,314,315,316,317,329,330,331,362,363,364],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[23,92],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[31,340,341,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,6,7,8,9,10,11,12,13,14,15,17,18,19,20,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,22,23,92,24,93,25,26,30,27,94,95,96,97,98,99,100,101,102,28,103,104,105,106,29,107,108,109,110,111,113,114,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,1,141,142,143,342,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,166,167,167,168,169,170,365,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,343,344,214,215,216,217,218,219,220,221,222,226,227,228,229,230,366,345,231,232,233,234,346,347,348,349,235,237,238,239,240,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,350,351,352,353,354,356,269,270,271,272,273,274,283,284,285,286,358,359,360,361,288,301,302,303,304,305,3,306,307,308,367,309,310,368,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,362,363,364,332],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[369],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[370,371,372,373,374,375,376,31,340,341,32,33,34,35,377,36,378,37,38,39,40,41,42,43,44,45,46,47,379,380,381,48,382,383,49,384,385,386,387,388,389,390,391,392,50,393,394,395,396,397,51,398,399,52,53,54,55,56,57,58,59,60,6,7,8,9,10,11,12,13,14,15,17,18,19,20,400,401,61,62,402,403,404,405,406,63,338,407,408,409,410,411,64,65,66,67,68,69,70,412,71,413,414,72,73,74,75,415,416,417,418,419,420,421,76,339,422,423,424,425,426,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,22,23,427,92,24,93,25,26,30,27,94,95,96,97,98,99,100,101,102,28,103,104,105,106,29,107,108,109,428,110,429,430,431,111,112,113,432,114,433,434,115,116,435,117,118,436,437,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,1,141,142,143,342,144,145,146,147,148,149,150,438,151,152,153,439,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,440,441,442,365,171,172,443,173,444,445,446,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,447,448,449,450,451,452,453,2,454,455,456,457,458,459,460,461,343,462,463,464,465,466,344,467,214,215,216,217,218,219,220,221,222,468,223,224,225,469,470,226,227,228,229,230,366,345,471,231,232,0,233,234,346,4,347,348,349,235,236,237,238,239,240,241,242,243,244,245,246,472,473,247,474,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,350,351,352,353,354,355,356,357,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,475,287,476,477,478,479,480,481,482,358,359,360,361,483,484,485,486,487,488,489,490,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,3,306,307,308,367,309,310,368,311,312,491,313,314,315,316,317,318,319,320,492,321,322,323,324,325,326,327,328,329,330,331,362,363,364,332,333,334,335,336],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[493,494,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[431],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[496,101],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[49,50,413,74,416,111,433,434,115,117,118,436,138,154,166,167,0,346],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[362],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[142],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[497,498,216,258,499,500],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[432,436,501,502,503,504],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[505,108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[427],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[138,139,140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"position":"org.easymock.internal.RecordState:280","failures":[1,141,142,143,342,144,159,309],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[45,80,86,87,216,219,258,259,262,263,506,337,302,303,312,329],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[31,340,341,32,33,34,35,36,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,6,7,8,9,10,11,12,13,14,15,17,18,19,20,61,62,63,338,64,65,66,67,68,69,70,71,72,73,74,75,416,76,339,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,22,23,92,24,93,25,26,30,27,94,95,96,97,98,99,100,101,102,28,103,104,105,106,29,107,108,109,110,429,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,1,141,142,143,342,144,145,146,147,148,149,150,151,152,153,154,158,159,160,161,163,165,166,166,167,167,169,440,365,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,343,344,214,216,217,218,219,220,221,223,224,469,470,226,227,228,229,230,366,345,231,232,233,346,347,348,349,237,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,350,351,352,353,354,356,269,270,271,272,273,274,275,277,278,279,280,283,284,285,286,358,359,360,361,483,486,487,488,489,490,288,301,302,303,304,305,3,306,307,308,367,309,310,368,311,312,313,314,315,316,317,328,329,330,331,362,363,364,332,333,334,335,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[43,18,90,91,92,24,93,25,96,98,99,101,102,29,107,108,166,166,167,167,217,226,227,228,229,230,231,232,304,305,307,313,314,315,316,317,330],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":23,"org.easymock.tests2.UsageTest.argumentsOrdered":87,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":256,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":134,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":456,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":82,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":170,"org.easymock.tests2.DelegateToTest.testReturnException":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":270,"org.easymock.tests.MockingTest.testPartialClassMocking":171,"org.easymock.tests.MockClassControlTest.testToString":277,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":378,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":387,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":194,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":62,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":501,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":30,"org.easymock.tests2.UsageTest.wrongArguments":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":304,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":426,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":267,"org.easymock.samples.ExampleTest.answerVsDelegate":159,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":488,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":445,"org.easymock.tests2.UsageConstraintsTest.testNull":24,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":67,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":133,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":282,"org.easymock.tests2.CaptureTest.testPrimitive":9,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":307,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":213,"org.easymock.tests.UsageTest.moreThanOneArgument":257,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":66,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":228,"org.easymock.tests.UsageTest.argumentsOrdered":263,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":350,"org.easymock.tests.UsageVarargTest.varargIntAccepted":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":313,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":410,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":372,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":449,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":317,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":76,"org.easymock.tests.ReplayStateInvalidUsageTest.times":297,"org.easymock.tests2.DependencyTest.testClassMocking":400,"org.easymock.tests2.AnswerTest.answer":31,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":462,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":59,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":485,"org.easymock.tests2.CaptureTest.testAnd":6,"org.easymock.tests2.UsageTest.strictResetToDefault":78,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":430,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":128,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":285,"org.easymock.tests2.DelegateToTest.testDelegate":144,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":354,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":209,"org.easymock.tests.LimitationsTest.mockFinalMethod":474,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":273,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":336,"org.easymock.tests2.DependencyTest.testClassMockingSupport":401,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":366,"org.easymock.tests2.CaptureTest.testCapture1_2446744":10,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":412,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":207,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":57,"org.easymock.tests.UsageThrowableTest.throwError":248,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":291,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":487,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":491,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":411,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":399,"org.easymock.samples.PartialClassMockTest.testGetArea":154,"org.easymock.tests.MockingTest.testInterfaceMocking":443,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":314,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":363,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":388,"org.easymock.tests2.UsageTest.niceToStrict":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":195,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":111,"org.easymock.tests2.MockBuilderTest.testCreateMock":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":395,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":423,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":203,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":129,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":484,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":360,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":235,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":265,"org.easymock.tests.UsageOverloadedMethodTest.overloading":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":98,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":185,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":244,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":97,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":15,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":492,"org.easymock.tests2.EasyMockSupportClassTest.testAll":48,"org.easymock.tests.MockClassControlTest.testEquals":281,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":234,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":211,"org.easymock.tests2.CaptureTest.testCaptureAll":7,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":334,"org.easymock.tests.MockNameTest.defaultName":440,"org.easymock.tests2.UsageConstraintsTest.testMatches":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":229,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":289,"org.easymock.samples.ExampleTest.voteForRemovals":163,"org.easymock.tests.UsageVarargTest.allKinds":328,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":301,"org.easymock.samples.BasicClassMockTest.testPrintContent":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":335,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":254,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":274,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":342,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":504,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":481,"org.easymock.tests2.UsageConstraintsTest.greaterThan":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":382,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":284,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":75,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":482,"org.easymock.samples.ExampleTest.voteForRemoval":160,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":415,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":120,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":489,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":373,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":70,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":77,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":288,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":2,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":126,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":380,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":269,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":1,"org.easymock.tests2.CaptureTest.testCaptureFirst":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":127,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":89,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":312,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":181,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":122,"org.easymock.tests2.CaptureTest.testCapture2_2446744":19,"org.easymock.tests2.UsageTest.moreThanOneArgument":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":463,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":116,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":327,"org.easymock.tests.GenericTest.testBridgedEquals":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":242,"org.easymock.tests.UsageExpectAndReturnTest.longType":177,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":332,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":212,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":105,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":226,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":348,"org.easymock.tests.UsageCallCountTest.tooManyCalls":243,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":425,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":199,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":253,"org.easymock.tests.MockingTest.testNiceClassMocking":446,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":148,"org.easymock.tests.MockingTest.testClassMocking":442,"org.easymock.tests2.UsageConstraintsTest.testContains":96,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":236,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":54,"org.easymock.tests2.UsageConstraintsTest.testFind":92,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":246,"org.easymock.tests.MockTypeTest.fromEasyMockClass":486,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":36,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":214,"org.easymock.tests.UsageExpectAndReturnTest.object":184,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":71,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":502,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":322,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":225,"org.easymock.tests.UsageTest.exactCallCountByLastCall":264,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":351,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":355,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":436,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":190,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":318,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":309,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":403,"org.easymock.tests.MockClassControlTest.testHashCode":280,"org.easymock.tests2.EasyMockSupportTest.testVerify":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":390,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":352,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":308,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":359,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":506,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":56,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":60,"org.easymock.tests.UsageVarargTest.varargCharAccepted":321,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":475,"org.easymock.tests2.CaptureTest.testCaptureMultiple":5,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":467,"org.easymock.tests2.UsageTest.openCallCountByLastCall":83,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":493,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":135,"org.easymock.tests.DefaultClassInstantiatorTest.object":287,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":358,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":223,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":391,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":201,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":251,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":420,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":402,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":73,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":279,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":200,"org.easymock.tests.CapturesMatcherTest.test":21,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":51,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":278,"org.easymock.tests2.UsageTest.resumeIfFailure":88,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":483,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":371,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":272,"org.easymock.tests2.StubTest.stubWithReturnValue":146,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":432,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":183,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":106,"org.easymock.tests2.SerializationTest.testAllMockedMethod":140,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":343,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":498,"org.easymock.samples.SupportTest.voteForRemovals":169,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":405,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":206,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":344,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":340,"org.easymock.tests.UsageExpectAndThrowTest.object":204,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":357,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":103,"org.easymock.tests2.DelegateToTest.testWrongClass":143,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":231,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":232,"org.easymock.samples.ConstructorCalledMockTest.testTax":166,"org.easymock.tests.UsageStrictMockTest.range":219,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":375,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":131,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":147,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":205,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":113,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":262,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":266,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":499,"org.easymock.tests2.CaptureTest.testCaptureNone":14,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":364,"org.easymock.tests.UsageUnorderedTest.message":329,"org.easymock.tests.UsageVerifyTest.twoReturns":303,"org.easymock.tests.UsageVarargTest.varargByteAccepted":326,"org.easymock.tests2.ThreadingTest.testThreadSafe":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":393,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":240,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":469,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":156,"org.easymock.tests2.CaptureTest.testCapture_2617107":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":465,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":306,"org.easymock.tests2.UsageConstraintsTest.any":94,"org.easymock.tests2.StubTest.stub":145,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":296,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndThrowTest.longType":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":271,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":479,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":295,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":44,"org.easymock.tests2.SerializationTest.testClass":138,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":63,"org.easymock.tests.LimitationsTest.mockNativeMethod":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":193,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":346,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":419,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":47,"org.easymock.tests2.NameTest.nameForMocksControl":40,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":421,"org.easymock.tests2.MockedExceptionTest.testMockedException":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":383,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":261,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":173,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":198,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":377,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":64,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":114,"org.easymock.tests.MockingTest.testNicePartialClassMocking":172,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":69,"org.easymock.tests2.CompareToTest.testNotComparable":369,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":417,"org.easymock.tests2.CaptureTest.testCaptureLast":13,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":345,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":153,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":26,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":104,"org.easymock.tests.MockingTest.testTwoMocks":365,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":202,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":86,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":107,"org.easymock.samples.ExampleTest.removeNonExistingDocument":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":422,"org.easymock.tests.UsageStrictMockTest.differentMethods":220,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":293,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":404,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":477,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":121,"org.easymock.tests2.MockBuilderTest.testCreateMockString":117,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":384,"org.easymock.tests.UsageExpectAndThrowTest.floatType":196,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":32,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":437,"org.easymock.tests.UsageVerifyTest.twoThrows":302,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":50,"org.easymock.samples.ExampleTest.voteAgainstRemoval":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":362,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":74,"org.easymock.tests.LimitationsTest.privateConstructor":473,"org.easymock.tests2.UsageConstraintsTest.testNotNull":29,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":255,"org.easymock.tests2.UsageTest.defaultResetToNice":85,"org.easymock.samples.ExampleTest.voteAgainstRemovals":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":189,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":418,"org.easymock.tests.UsageVarargTest.differentLength":323,"org.easymock.tests2.CallbackTest.callback":137,"org.easymock.tests2.UsageConstraintsTest.equals":427,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":413,"org.easymock.tests.UsageTest.openCallCountByLastCall":260,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":90,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":3,"org.easymock.tests.UsageCallCountTest.tooFewCalls":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":150,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":268,"org.easymock.tests.UsageThrowableTest.throwCheckedException":252,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":500,"org.easymock.tests.MockingTest.testStrictClassMocking":441,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":152,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":331,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":339,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":298,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":151,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":34,"org.easymock.tests.ObjectMethodsTest.testHashCode":224,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":123,"org.easymock.tests2.NameTest.nameForNiceMock":39,"org.easymock.tests2.DependencyTest.testInterfaceMocking":61,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":503,"org.easymock.samples.ExampleTest.addDocument":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":398,"org.easymock.tests2.DelegateToTest.testStubDelegate":142,"org.easymock.tests2.AnswerTest.stubAnswer":33,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":217,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":433,"org.easymock.tests.UsageVarargTest.varargLongAccepted":325,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndReturnTest.floatType":176,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":192,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":118,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":167,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":409,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":102,"org.easymock.tests.UsageThrowableTest.noUpperLimit":249,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":91,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":370,"org.easymock.tests2.SerializationTest.test":139,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":11,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":476,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":175,"org.easymock.tests2.UsageConstraintsTest.testSame":93,"org.easymock.samples.SupportTest.addDocument":168,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":438,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":385,"org.easymock.tests.GenericTest.testPackageScope":233,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":408,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":444,"org.easymock.tests2.NameTest.nameForMock":37,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":186,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":435,"org.easymock.tests2.UsageStrictMockTest.differentMethods":46,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":414,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":178,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":208,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":468,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":286,"org.easymock.tests2.MockedExceptionTest.testRealException":55,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":459,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":43,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":305,"org.easymock.tests2.NameTest.nameForStrictMock":38,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":431,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":494,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":35,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":68,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":374,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":478,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":28,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":110,"org.easymock.tests2.UsageStrictMockTest.range":45,"org.easymock.tests2.UsageConstraintsTest.lessThan":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":454,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":389,"org.easymock.tests2.CaptureTest.testCaptureRightOne":17,"org.easymock.tests2.UsageConstraintsTest.testOr":25,"org.easymock.tests.UsageRangeTest.combination":283,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":65,"org.easymock.tests.UsageTest.wrongArguments":259,"org.easymock.tests2.MockBuilderTest.testWithConstructor":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":386,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":448,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":187,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":480,"org.easymock.tests.UsageVarargTest.varargShortAccepted":324,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":241,"org.easymock.tests2.UsageConstraintsTest.cmpTo":95,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":341,"org.easymock.tests2.CompareToTest.testLessThan":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":450,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":84,"org.easymock.tests2.CaptureTest.testCaptureFromStub":18,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":290,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":429,"org.easymock.tests.UsageTest.unexpectedCallWithArray":258,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":216,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":239,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":188,"org.easymock.tests2.CaptureTest.testCapture":16,"org.easymock.tests2.UsageConstraintsTest.constraints":22,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":218,"org.easymock.samples.ExampleTest.addAndChangeDocument":165,"org.easymock.tests.UsageStrictMockTest.testVerify":222,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":155,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":215,"org.easymock.tests2.CompareToTest.testGreateThan":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":333,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":315,"org.easymock.tests.LimitationsTest.abstractClass":472,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":180,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":130,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":319}}]
