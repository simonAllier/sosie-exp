[{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[1,2,3,4,5,6,7,8,0,9,10,11],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[12,13,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[15,16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"type"}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[17,18,19,20,21,22,23,23,24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,15,98,99,12,100,101,102,103,104,1,105,3,4,7,106,8,9,10,107,11,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,14,180,181,182,183,184,185,186,187,188,189],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[18,19,20,190,21,191,192,22,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,75,211,76,77,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,94,105,2,5,6,7,106,11,108,237,238,239,125,131,132,133,240,241,242,243,244,143,144,147,245,13,246,247,248,249,157,250,158,159,251,252,253,174,254,185,255,256],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[1,2,9,166,172],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[257,258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[259,120,121,239],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Any:36","failures":[198,55,260,64,65,203,204,66,261,75,89,90,91,92,93,94,95,105,7,106,11,157,171,174],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[262,1,105,2,3,4,5,6,7,106,8,9,10,107,11],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[151],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[264,265,266,267,268,198,32,38,44,48,50,200,69,218,4,107],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[18,269,19,20,190,21,191,192,22,193,194,195,196,270,264,271,272,273,274,275,265,276,277,278,279,280,266,281,282,283,267,284,268,29,197,285,198,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,260,199,200,201,286,287,57,202,58,59,60,61,62,63,64,65,203,204,66,67,288,68,69,70,71,72,206,73,289,290,291,292,261,293,294,295,296,209,75,211,76,77,212,220,221,222,223,224,225,81,82,83,84,85,86,87,88,297,298,89,90,91,92,93,226,227,228,229,230,232,233,234,235,236,94,95,96,97,15,98,99,12,100,101,1,105,2,3,4,5,6,7,106,8,9,10,107,11,108,109,110,111,112,113,237,299,300,117,301,118,238,119,302,121,239,122,123,124,125,126,127,128,130,131,132,133,240,134,135,138,139,303,142,304,305,148,149,150,151,13,152,153,246,155,156,249,157,250,158,159,251,160,161,252,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,14,180,181,182,183,184,254,185,186,187,188,255,256],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[78],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[198,288,68,70,205,206,207,210,75,77,241,242,243,244,150,245,246,247,157,159],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[1,2,9,166,167,169,171,172,253,182,186],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[306,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[15,16],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[307,308,309,310,311,312,313],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[185],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[1,2,9,166,167,169,171,172,253,182,186],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[314,315],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[182],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:112","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[17,23,23,24,24,194,195,29,197,30,201,316,317,318,319,78,79,80,96,97,15,99,12,100,320,101,16,102,103,104,113,114,115,116,117,120,239,321,135,136,137,138,140,141,322,323,143,324,144,325,145,146,326,147,327,328,189],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":167,"org.easymock.tests2.UsageTest.argumentsOrdered":247,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":69,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":292,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":13,"org.easymock.tests2.StubTest.stubWithReturnValue":162,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":312,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":196,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":40,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":185,"org.easymock.tests2.SerializationTest.testAllMockedMethod":239,"org.easymock.tests2.DelegateToTest.testReturnException":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":290,"org.easymock.tests.MockingTest.testPartialClassMocking":78,"org.easymock.samples.SupportTest.voteForRemovals":22,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":306,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":28,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":280,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":259,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":270,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":114,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":258,"org.easymock.tests.UsageExpectAndThrowTest.object":278,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":161,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":307,"org.easymock.tests2.DelegateToTest.testWrongClass":304,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":94,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":95,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":173,"org.easymock.tests2.UsageTest.wrongArguments":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":64,"org.easymock.tests.UsageStrictMockTest.range":76,"org.easymock.samples.ConstructorCalledMockTest.testTax":23,"org.easymock.samples.ExampleTest.answerVsDelegate":269,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":129,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":318,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":135,"org.easymock.tests2.UsageConstraintsTest.testNull":169,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":279,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":99,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":287,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":131,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":145,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":66,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":268,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":206,"org.easymock.tests.UsageTest.moreThanOneArgument":70,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":86,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":27,"org.easymock.tests2.CaptureTest.testCaptureNone":106,"org.easymock.tests.UsageUnorderedTest.message":198,"org.easymock.tests.UsageVerifyTest.twoReturns":68,"org.easymock.tests.UsageVarargTest.varargByteAccepted":234,"org.easymock.tests2.ThreadingTest.testThreadSafe":108,"org.easymock.tests.UsageTest.argumentsOrdered":207,"org.easymock.tests.UsageVarargTest.varargIntAccepted":228,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":223,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":89,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":322,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":311,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":204,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":325,"org.easymock.tests2.UsageConstraintsTest.any":174,"org.easymock.tests2.StubTest.stub":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":93,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":291,"org.easymock.tests.UsageExpectAndThrowTest.longType":272,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":250,"org.easymock.tests2.SerializationTest.testClass":120,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":163,"org.easymock.tests.LimitationsTest.mockNativeMethod":96,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":134,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":50,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":30,"org.easymock.tests2.AnswerTest.answer":118,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":217,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":149,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":251,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":16,"org.easymock.tests2.NameTest.nameForMocksControl":244,"org.easymock.tests2.MockedExceptionTest.testMockedException":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":85,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":126,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":72,"org.easymock.tests2.DelegateToTest.testDelegate":305,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":273,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":80,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":97,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":146,"org.easymock.tests.MockingTest.testNicePartialClassMocking":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":282,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":100,"org.easymock.tests2.CaptureTest.testCaptureLast":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":261,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":141,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":172,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":184,"org.easymock.tests.MockingTest.testTwoMocks":319,"org.easymock.tests2.CaptureTest.testCapture1_2446744":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":276,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":246,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":187,"org.easymock.tests.UsageThrowableTest.throwError":57,"org.easymock.tests.UsageStrictMockTest.differentMethods":77,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":110,"org.easymock.tests2.MockBuilderTest.testCreateMockString":328,"org.easymock.tests.UsageExpectAndThrowTest.floatType":271,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":88,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":14,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":238,"org.easymock.tests.UsageVerifyTest.twoThrows":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":115,"org.easymock.samples.PartialClassMockTest.testGetArea":17,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":90,"org.easymock.samples.ExampleTest.voteAgainstRemoval":20,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":25,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":26,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":264,"org.easymock.tests2.UsageTest.niceToStrict":151,"org.easymock.tests2.UsageConstraintsTest.testNotNull":186,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":299,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":63,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":144,"org.easymock.tests2.MockBuilderTest.testCreateMock":326,"org.easymock.tests2.UsageTest.defaultResetToNice":154,"org.easymock.samples.ExampleTest.voteAgainstRemovals":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":216,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":46,"org.easymock.tests.UsageVarargTest.differentLength":231,"org.easymock.tests2.CallbackTest.callback":237,"org.easymock.tests.UsageTest.openCallCountByLastCall":71,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":277,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":127,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":164,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":219,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":203,"org.easymock.tests.UsageCallCountTest.tooFewCalls":221,"org.easymock.tests.UsageOverloadedMethodTest.overloading":82,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":296,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":178,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":81,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":42,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":138,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":177,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":8,"org.easymock.tests.UsageThrowableTest.throwCheckedException":60,"org.easymock.tests.MockClassControlTest.testEquals":286,"org.easymock.tests2.EasyMockSupportClassTest.testAll":113,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":197,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":267,"org.easymock.tests2.CaptureTest.testCaptureAll":105,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":260,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":140,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":137,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":263,"org.easymock.tests2.UsageConstraintsTest.testMatches":179,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":139,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":87,"org.easymock.samples.ExampleTest.voteForRemovals":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":310,"org.easymock.tests2.NameTest.nameForNiceMock":243,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":112,"org.easymock.tests.UsageVarargTest.allKinds":236,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":67,"org.easymock.tests2.DependencyTest.testInterfaceMocking":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":309,"org.easymock.samples.BasicClassMockTest.testPrintContent":195,"org.easymock.samples.ExampleTest.addDocument":190,"org.easymock.tests2.DelegateToTest.testStubDelegate":142,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":62,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":248,"org.easymock.tests2.AnswerTest.stubAnswer":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":293,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":75,"org.easymock.tests2.UsageConstraintsTest.greaterThan":180,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":52,"org.easymock.tests.UsageVarargTest.varargLongAccepted":233,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":104,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":212,"org.easymock.samples.ExampleTest.voteForRemoval":19,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":49,"org.easymock.tests.UsageExpectAndReturnTest.floatType":33,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":320,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":189,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":24,"org.easymock.tests.UsageThrowableTest.noUpperLimit":202,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":181,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":201,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":148,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":165,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":5,"org.easymock.tests2.SerializationTest.test":121,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":124,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":32,"org.easymock.tests2.UsageConstraintsTest.testSame":170,"org.easymock.samples.SupportTest.addDocument":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":289,"org.easymock.tests2.CaptureTest.testCaptureFirst":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":125,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":156,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":38,"org.easymock.tests.GenericTest.testPackageScope":29,"org.easymock.tests2.CaptureTest.testCapture2_2446744":107,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":111,"org.easymock.tests2.UsageTest.moreThanOneArgument":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":218,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":147,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":235,"org.easymock.tests.GenericTest.testBridgedEquals":285,"org.easymock.tests2.NameTest.nameForMock":241,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":224,"org.easymock.tests.UsageExpectAndReturnTest.longType":34,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":122,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":327,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":43,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":254,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":56,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":283,"org.easymock.tests2.UsageStrictMockTest.differentMethods":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":84,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":35,"org.easymock.tests.UsageCallCountTest.tooManyCalls":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":281,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":297,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":54,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":220,"org.easymock.tests2.MockedExceptionTest.testRealException":301,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":39,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":274,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":65,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":61,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":136,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":323,"org.easymock.tests2.NameTest.nameForStrictMock":242,"org.easymock.tests2.UsageConstraintsTest.testContains":176,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":117,"org.easymock.tests2.UsageConstraintsTest.testFind":168,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":83,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":12,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":256,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":208,"org.easymock.tests.UsageExpectAndReturnTest.object":41,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":182,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":101,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":143,"org.easymock.tests2.UsageStrictMockTest.range":158,"org.easymock.tests2.UsageConstraintsTest.lessThan":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":308,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":230,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":298,"org.easymock.tests.UsageTest.exactCallCountByLastCall":73,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":215,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":123,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":199,"org.easymock.tests2.UsageConstraintsTest.testOr":171,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":313,"org.easymock.tests.UsageRangeTest.combination":51,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":47,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":295,"org.easymock.tests.UsageTest.wrongArguments":205,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":316,"org.easymock.tests2.EasyMockSupportTest.testVerify":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":214,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":44,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":200,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":294,"org.easymock.tests.UsageVarargTest.varargShortAccepted":232,"org.easymock.tests2.UsageConstraintsTest.cmpTo":175,"org.easymock.tests.UsageVarargTest.varargCharAccepted":229,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":249,"org.easymock.tests2.UsageTest.openCallCountByLastCall":152,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":153,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":133,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":315,"org.easymock.tests2.CaptureTest.testCaptureFromStub":10,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":265,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":210,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":59,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":222,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":45,"org.easymock.tests2.CaptureTest.testCapture":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":211,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":102,"org.easymock.tests2.UsageConstraintsTest.constraints":166,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":275,"org.easymock.samples.ExampleTest.addAndChangeDocument":191,"org.easymock.tests.CapturesMatcherTest.test":262,"org.easymock.tests.UsageStrictMockTest.testVerify":213,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":48,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":314,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":193,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":116,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":6,"org.easymock.tests2.UsageTest.resumeIfFailure":155,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":91,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":317,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":92,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":74,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":128}}]
