[{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[2,3,3,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[53],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","i":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:772","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[36,54],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,5,83,84,85,86,87,88,89,90,91,92,93,94,95,6,7,96,8,97,98,99,100,101,102,103,9,10,11,12,13,14,15,16,104,105,106,17,18,107,108,109,110,111,19,20,21,22,23,24,25,112,113,26,114,61,62,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,27,28,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,30,213,214,215,216,217,218,32,219,220,221,222,223,224,225,36,226,227,37,228,229,230,38,39,40,231,41,232,233,234,43,44,47,48,235,236,237,238,239,240,241,242,243,244,245],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[176,197,199,206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[246,81,82,247,248],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[249,250,37,228],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[251,252,253],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[254,255,36,54],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[3,4,256,257,258,259,260,261],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[133],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[2,3,3,4,4,262,69,70,71,72,74,75,263,264,265,0,1,81,247,5,83,84,85,86,87,88,91,55,95,6,7,96,8,97,266,98,99,267,268,100,269,270,271,101,272,273,274,275,276,102,103,277,278,279,280,281,9,10,11,12,13,14,15,16,104,105,106,17,18,107,108,109,110,111,19,20,21,22,23,24,25,112,113,26,114,61,62,126,127,128,129,130,131,282,283,132,284,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,285,27,28,286,287,288,154,289,290,291,160,64,161,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,309,194,195,310,29,196,311,197,198,200,312,203,204,205,206,313,314,207,208,315,209,210,316,212,30,317,318,213,31,32,33,34,35,319,220,221,222,320,321,224,225,322,36,226,250,323,227,37,228,229,230,38,324,39,40,231,41,232,325,234,326,42,43,44,45,46,47,48,235,236,237,243,68,244,49,50,51,52],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[327],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:176","sourceCode":"java.util.Collection<org.easymock.internal.matchers.Captures<?>>.clear()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[30],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[171,172,328,178],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[3,4,6,7,96,8,97,101,24,25,112,113,26,130,131,132,27,28,160,168,169,172,173,174,175,180,182,183,185,186,191,192,193,313,236,243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[176,177],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[329],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":171,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":268,"org.easymock.tests2.UsageTest.argumentsOrdered":67,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":86,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":223,"org.easymock.tests2.StubTest.stubWithReturnValue":236,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":254,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":18,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":190,"org.easymock.tests2.SerializationTest.testAllMockedMethod":211,"org.easymock.tests2.DelegateToTest.testReturnException":212,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":84,"org.easymock.tests.MockingTest.testPartialClassMocking":9,"org.easymock.samples.SupportTest.voteForRemovals":262,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":246,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":146,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":296,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":134,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":250,"org.easymock.tests.UsageExpectAndThrowTest.object":144,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":315,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":188,"org.easymock.tests2.DelegateToTest.testWrongClass":317,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":27,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":28,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":177,"org.easymock.tests2.UsageTest.wrongArguments":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":130,"org.easymock.tests.UsageStrictMockTest.range":64,"org.easymock.samples.ConstructorCalledMockTest.testTax":3,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":157,"org.easymock.samples.ExampleTest.answerVsDelegate":70,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":304,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":42,"org.easymock.tests2.UsageConstraintsTest.testNull":173,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":40,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":145,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":306,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":33,"org.easymock.tests2.CaptureTest.testPrimitive":200,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":132,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":59,"org.easymock.tests.UsageTest.moreThanOneArgument":100,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":153,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":39,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":96,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":294,"org.easymock.tests2.CaptureTest.testCaptureNone":204,"org.easymock.tests.UsageUnorderedTest.message":55,"org.easymock.tests.UsageVerifyTest.twoReturns":62,"org.easymock.tests.UsageVarargTest.varargByteAccepted":122,"org.easymock.tests2.ThreadingTest.testThreadSafe":194,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":263,"org.easymock.tests.UsageTest.argumentsOrdered":60,"org.easymock.tests.UsageVarargTest.varargIntAccepted":117,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":94,"org.easymock.tests2.CaptureTest.testCapture_2617107":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":24,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":218,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":283,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":219,"org.easymock.tests2.UsageConstraintsTest.any":178,"org.easymock.tests2.StubTest.stub":235,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":291,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":85,"org.easymock.tests.UsageExpectAndThrowTest.longType":137,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":251,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":309,"org.easymock.tests2.SerializationTest.testClass":209,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":311,"org.easymock.tests.LimitationsTest.mockNativeMethod":5,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":260,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":247,"org.easymock.tests2.AnswerTest.answer":226,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":23,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":328,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":217,"org.easymock.tests2.CaptureTest.testAnd":197,"org.easymock.tests2.UsageTest.strictResetToDefault":220,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":233,"org.easymock.tests2.NameTest.nameForMocksControl":241,"org.easymock.tests2.MockedExceptionTest.testMockedException":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":301,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":128,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":270,"org.easymock.tests2.DelegateToTest.testDelegate":213,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":1,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":138,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":38,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":34,"org.easymock.tests.MockingTest.testNicePartialClassMocking":10,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":149,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":41,"org.easymock.tests2.CaptureTest.testCaptureLast":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":87,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":284,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":48,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":176,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":80,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":189,"org.easymock.tests2.CaptureTest.testCapture1_2446744":312,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":12,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":147,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":215,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":142,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":66,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":192,"org.easymock.tests.UsageThrowableTest.throwError":276,"org.easymock.tests.UsageStrictMockTest.differentMethods":161,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":97,"org.easymock.tests.UsageExpectAndThrowTest.floatType":136,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":184,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":227,"org.easymock.tests.UsageVerifyTest.twoThrows":61,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":51,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":25,"org.easymock.samples.ExampleTest.voteAgainstRemoval":72,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":293,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":292,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":234,"org.easymock.tests2.UsageTest.niceToStrict":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":135,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":53,"org.easymock.tests2.UsageConstraintsTest.testNotNull":191,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":281,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":164,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":32,"org.easymock.tests2.UsageTest.defaultResetToNice":224,"org.easymock.samples.ExampleTest.voteAgainstRemovals":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":19,"org.easymock.tests2.CallbackTest.callback":237,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":261,"org.easymock.tests.UsageTest.openCallCountByLastCall":269,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":143,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":302,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":168,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":275,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":155,"org.easymock.tests.UsageCallCountTest.tooFewCalls":92,"org.easymock.tests.UsageOverloadedMethodTest.overloading":98,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":288,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":182,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":108,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":252,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":181,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":205,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":158,"org.easymock.tests.UsageThrowableTest.throwCheckedException":278,"org.easymock.tests2.EasyMockSupportClassTest.testAll":49,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":82,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":151,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":216,"org.easymock.tests2.CaptureTest.testCaptureAll":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":78,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":272,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":47,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":44,"org.easymock.tests2.UsageConstraintsTest.testMatches":183,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":46,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":8,"org.easymock.samples.ExampleTest.voteForRemovals":74,"org.easymock.tests2.NameTest.nameForNiceMock":240,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":196,"org.easymock.tests.UsageVarargTest.allKinds":124,"org.easymock.tests2.DependencyTest.testInterfaceMocking":208,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":79,"org.easymock.samples.ExampleTest.addDocument":73,"org.easymock.tests2.DelegateToTest.testStubDelegate":30,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":280,"org.easymock.tests2.AnswerTest.stubAnswer":37,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":88,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":160,"org.easymock.tests2.UsageConstraintsTest.greaterThan":185,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":256,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":127,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":326,"org.easymock.tests.UsageVarargTest.varargLongAccepted":121,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":162,"org.easymock.samples.ExampleTest.voteForRemoval":71,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":195,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":22,"org.easymock.tests.UsageExpectAndReturnTest.floatType":14,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":36,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":4,"org.easymock.tests.UsageThrowableTest.noUpperLimit":102,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":186,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":319,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":95,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":169,"org.easymock.tests2.SerializationTest.test":210,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":201,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":299,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":103,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":13,"org.easymock.tests2.UsageConstraintsTest.testSame":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":83,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":316,"org.easymock.tests2.CaptureTest.testCaptureFirst":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":300,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":322,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":106,"org.easymock.tests.GenericTest.testPackageScope":81,"org.easymock.tests2.CaptureTest.testCapture2_2446744":314,"org.easymock.tests2.UsageTest.moreThanOneArgument":221,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":29,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":0,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":35,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":123,"org.easymock.tests.GenericTest.testBridgedEquals":248,"org.easymock.tests2.NameTest.nameForMock":238,"org.easymock.tests.UsageExpectAndReturnTest.longType":15,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":297,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":76,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":109,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":152,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":285,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":258,"org.easymock.tests2.UsageStrictMockTest.differentMethods":244,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":6,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":16,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":148,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":129,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":91,"org.easymock.tests2.MockedExceptionTest.testRealException":167,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":17,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":255,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":243,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":139,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":279,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":131,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":43,"org.easymock.tests2.NameTest.nameForStrictMock":239,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":90,"org.easymock.tests2.UsageConstraintsTest.testContains":180,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":166,"org.easymock.tests2.UsageConstraintsTest.testFind":172,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":99,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":229,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":231,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":230,"org.easymock.tests.UsageExpectAndReturnTest.object":107,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":187,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":232,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":31,"org.easymock.tests2.UsageStrictMockTest.range":68,"org.easymock.tests2.UsageConstraintsTest.lessThan":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":305,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":119,"org.easymock.tests.UsageTest.exactCallCountByLastCall":271,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":101,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":329,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":298,"org.easymock.tests2.CaptureTest.testCaptureRightOne":206,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":330,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":264,"org.easymock.tests2.UsageConstraintsTest.testOr":175,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":54,"org.easymock.tests.UsageRangeTest.combination":126,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":324,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":20,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":115,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":287,"org.easymock.tests.UsageTest.wrongArguments":58,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":125,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":104,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":110,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":265,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":286,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":274,"org.easymock.tests.UsageVarargTest.varargShortAccepted":120,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":214,"org.easymock.tests2.UsageConstraintsTest.cmpTo":179,"org.easymock.tests.UsageVarargTest.varargCharAccepted":118,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":323,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":242,"org.easymock.tests2.UsageTest.openCallCountByLastCall":320,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":321,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":308,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":273,"org.easymock.tests2.CaptureTest.testCaptureFromStub":313,"org.easymock.tests.UsageTest.unexpectedCallWithArray":57,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":141,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":277,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":63,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":93,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":257,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":111,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":325,"org.easymock.tests2.UsageConstraintsTest.constraints":170,"org.easymock.samples.ExampleTest.addAndChangeDocument":75,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":140,"org.easymock.tests.CapturesMatcherTest.test":327,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":21,"org.easymock.tests.UsageStrictMockTest.testVerify":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":52,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":77,"org.easymock.tests2.UsageTest.resumeIfFailure":225,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":112,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":105,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":113,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":303,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":116}}]
