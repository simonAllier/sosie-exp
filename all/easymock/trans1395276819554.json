[{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[251,252,253,123,254,255],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[256,257,221],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,251,7,8,9,10,11,12,258,259,260,261,262,263,264,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,265,38,39,40,41,42,43,266,44,45,46,47,267,48,49,50,51,268,55,269,56,57,58,270,59,60,271,61,272,62,63,64,273,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,111,112,113,114,115,274,275,118,119,120,121,276,122,123,124,125,126,127,128,277,129,130,278,279,280,281,282,283,284,285,286,131,132,133,134,135,287,288,136,137,138,139,140,141,142,289,290,143,144,145,146,147,148,149,150,151,152,153,154,155,159,291,162,170,171,172,173,174,175,176,177,178,179,292,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,293,294,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,295,296,217,218,219,297,220,221,222,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,225,226,227,228,229,230,231,232,317,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[179,184,196,318],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[199,200],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[6,7,10,11,319,320,321,66,72,73,74,123,124,126,127,145,146,152,153,311,312,313,314,226,228,229],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[5,6,8,9,12,258,50,52,53,54,55,269,56,57,61,62,63,64,67,68,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,108,322,116,323,324,325,326,327,124,126,127,129,130,278,279,280,131,132,133,134,135,328,136,138,139,141,290,143,144,145,147,149,150,151,154,155,329,157,330,331,332,159,291,160,161,162,163,164,165,167,333,169,334,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,199,207,211,212,213,214,215,295,218,221,222,224,298,299,300,301,302,303,304,305,306,307,308,309,335,336,337,338,315,226,228,229,232,339,233,234,340,317,235,236,237,238,240,241,244,245,246,247,249,250],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[341,256,342,343,344,345,346,347,348,349,221,224,350],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,52,53,54,55,269,56,57,67,75,76,77,78,79,80,83,84,86,87,88,90,91,92,93,94,116,124,126,127,129,130,131,132,133,134,135,328,136,138,139,141,290,329,157,330,331,332,159,291,160,161,162,163,164,165,167,333,169,334,214,218,224,335,336,337,338,226,228,229,339,233,234,340,317,235,236],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[351,352],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[147,303],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[354,237,239,240,241,242,243,244,246,355,247,248,250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[156,158,166,356,205,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"t"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[296,297],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[357],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[53,168],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[259,260,261,358,359],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[6,251,7,10,11,360,361,362,273,65,66,72,73,74,363,364,123,124,126,127,145,146,152,153,295,365,315,226,228,229],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[366,221,222,223],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[251,7,10,11,367,272,66,73,74,123,126,146,152,153,228],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","shouldBeUsedInOneThread":"threadSafe","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[351,108,109,322,352],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[368,369,370,371,372,373,374,375,376,377,378,379],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[341,344,345,346,348,380,350],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":173,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests2.UsageTest.argumentsOrdered":153,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":113,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":148,"org.easymock.tests2.StubTest.stubWithReturnValue":232,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":341,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":288,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":193,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":84,"org.easymock.tests2.SerializationTest.testAllMockedMethod":223,"org.easymock.tests2.DelegateToTest.testReturnException":217,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":274,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":111,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":257,"org.easymock.tests.MockingTest.testPartialClassMocking":52,"org.easymock.samples.SupportTest.voteForRemovals":290,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":255,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":351,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":25,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":366,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":336,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":275,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":13,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":293,"org.easymock.tests.UsageExpectAndThrowTest.object":23,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":319,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":291,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":190,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":344,"org.easymock.tests2.DelegateToTest.testWrongClass":219,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":129,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":130,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":67,"org.easymock.tests2.UsageTest.wrongArguments":146,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":379,"org.easymock.tests.UsageStrictMockTest.range":126,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":120,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":365,"org.easymock.samples.ExampleTest.answerVsDelegate":137,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":305,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":339,"org.easymock.tests2.UsageConstraintsTest.testNull":175,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":24,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":163,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":330,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":307,"org.easymock.tests2.CaptureTest.testPrimitive":240,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":71,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":358,"org.easymock.tests.UsageTest.moreThanOneArgument":6,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":32,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":119,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":162,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":2,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":280,"org.easymock.tests2.CaptureTest.testCaptureNone":245,"org.easymock.tests.UsageUnorderedTest.message":66,"org.easymock.tests.UsageVerifyTest.twoReturns":74,"org.easymock.tests.UsageVarargTest.varargByteAccepted":40,"org.easymock.tests2.ThreadingTest.testThreadSafe":211,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":282,"org.easymock.tests.UsageTest.argumentsOrdered":11,"org.easymock.tests.UsageVarargTest.varargIntAccepted":35,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":47,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":364,"org.easymock.tests2.CaptureTest.testCapture_2617107":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":380,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":325,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":70,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":158,"org.easymock.tests2.UsageConstraintsTest.any":180,"org.easymock.tests2.StubTest.stub":231,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":261,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":326,"org.easymock.tests.UsageExpectAndThrowTest.longType":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":112,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":227,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":295,"org.easymock.tests2.SerializationTest.testClass":221,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":315,"org.easymock.tests.LimitationsTest.mockNativeMethod":116,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":322,"org.easymock.tests2.AnswerTest.answer":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":94,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":292,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":204,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":375,"org.easymock.tests2.CaptureTest.testAnd":237,"org.easymock.tests2.UsageTest.strictResetToDefault":144,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":357,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":230,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":168,"org.easymock.tests2.NameTest.nameForMocksControl":314,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":376,"org.easymock.tests2.MockedExceptionTest.testMockedException":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":302,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":56,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":9,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":286,"org.easymock.tests2.DelegateToTest.testDelegate":220,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":17,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":160,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":331,"org.easymock.tests.MockingTest.testNicePartialClassMocking":53,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":28,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":343,"org.easymock.tests2.CaptureTest.testCaptureLast":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":114,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":65,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":236,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":107,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":191,"org.easymock.tests.MockingTest.testTwoMocks":268,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":273,"org.easymock.tests2.CaptureTest.testCapture1_2446744":241,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":26,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":202,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":21,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":152,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":195,"org.easymock.tests.UsageThrowableTest.throwError":95,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":377,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":117,"org.easymock.tests.UsageStrictMockTest.differentMethods":127,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":369,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":213,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":373,"org.easymock.tests.UsageExpectAndThrowTest.floatType":15,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":4,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":186,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":198,"org.easymock.tests.UsageVerifyTest.twoThrows":73,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":337,"org.easymock.samples.PartialClassMockTest.testGetArea":328,"org.easymock.tests.ResultTest.createDelegateResultToString":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":132,"org.easymock.samples.ExampleTest.voteAgainstRemoval":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":324,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":279,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":278,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":169,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":14,"org.easymock.tests2.UsageTest.niceToStrict":147,"org.easymock.tests2.UsageConstraintsTest.testNotNull":194,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":102,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":157,"org.easymock.tests2.UsageTest.defaultResetToNice":151,"org.easymock.samples.ExampleTest.voteAgainstRemovals":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":90,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":374,"org.easymock.tests.UsageVarargTest.differentLength":265,"org.easymock.tests2.CallbackTest.callback":216,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":378,"org.easymock.tests.UsageTest.openCallCountByLastCall":8,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":254,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":22,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":303,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":170,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":264,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":118,"org.easymock.tests.UsageCallCountTest.tooFewCalls":45,"org.easymock.tests.UsageOverloadedMethodTest.overloading":63,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":60,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":184,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":340,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":86,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":62,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":183,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":246,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":121,"org.easymock.tests.UsageThrowableTest.throwCheckedException":99,"org.easymock.tests2.EasyMockSupportClassTest.testAll":335,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":109,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":253,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":30,"org.easymock.tests2.CaptureTest.testCaptureAll":238,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":105,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":235,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":51,"org.easymock.tests.MockNameTest.defaultName":362,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":234,"org.easymock.tests2.UsageConstraintsTest.testMatches":185,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":317,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":3,"org.easymock.tests2.CompareToTest.testGreateOrEqual":318,"org.easymock.samples.ExampleTest.voteForRemovals":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":348,"org.easymock.tests2.NameTest.nameForNiceMock":313,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":215,"org.easymock.tests.UsageVarargTest.allKinds":42,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":72,"org.easymock.tests2.DependencyTest.testInterfaceMocking":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":346,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":106,"org.easymock.samples.ExampleTest.addDocument":140,"org.easymock.tests2.DelegateToTest.testStubDelegate":218,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":101,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":316,"org.easymock.tests2.AnswerTest.stubAnswer":199,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":371,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":115,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":349,"org.easymock.tests2.UsageConstraintsTest.greaterThan":187,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":269,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":334,"org.easymock.tests.UsageVarargTest.varargLongAccepted":39,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":323,"org.easymock.samples.ExampleTest.voteForRemoval":138,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":212,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":93,"org.easymock.tests.UsageExpectAndReturnTest.floatType":77,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":166,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":271,"org.easymock.tests.UsageThrowableTest.noUpperLimit":96,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":188,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":43,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":143,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":171,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":242,"org.easymock.tests2.SerializationTest.test":222,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":300,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":97,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":76,"org.easymock.tests2.UsageConstraintsTest.testSame":176,"org.easymock.samples.SupportTest.addDocument":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":110,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":296,"org.easymock.tests2.CaptureTest.testCaptureFirst":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":301,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":155,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":272,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":82,"org.easymock.tests.GenericTest.testPackageScope":108,"org.easymock.tests2.CaptureTest.testCapture2_2446744":249,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":214,"org.easymock.tests2.UsageTest.moreThanOneArgument":145,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":285,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":332,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":372,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":41,"org.easymock.tests.GenericTest.testBridgedEquals":352,"org.easymock.tests2.NameTest.nameForMock":311,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":48,"org.easymock.tests.UsageExpectAndReturnTest.longType":78,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":87,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":31,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":281,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":192,"org.easymock.tests2.UsageStrictMockTest.differentMethods":229,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":29,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":0,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":79,"org.easymock.tests.UsageCallCountTest.tooManyCalls":49,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":27,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":57,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":44,"org.easymock.tests2.MockedExceptionTest.testRealException":208,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":361,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":83,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":342,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":68,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":100,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":233,"org.easymock.tests2.NameTest.nameForStrictMock":312,"org.easymock.tests2.UsageConstraintsTest.testContains":182,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":207,"org.easymock.tests2.UsageConstraintsTest.testFind":174,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":64,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":209,"org.easymock.tests.MockTypeTest.fromEasyMockClass":360,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":164,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":276,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":210,"org.easymock.tests.UsageExpectAndReturnTest.object":85,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":320,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":189,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":167,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":329,"org.easymock.tests2.UsageStrictMockTest.range":228,"org.easymock.tests2.UsageConstraintsTest.lessThan":196,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":306,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":345,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":37,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":370,"org.easymock.tests.UsageTest.exactCallCountByLastCall":12,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":50,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":347,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":299,"org.easymock.tests2.CaptureTest.testCaptureRightOne":247,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":283,"org.easymock.tests2.UsageConstraintsTest.testOr":177,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":350,"org.easymock.tests.UsageRangeTest.combination":55,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":91,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":33,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":161,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":59,"org.easymock.tests.UsageTest.wrongArguments":7,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":368,"org.easymock.tests2.EasyMockSupportTest.testVerify":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":88,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":284,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":263,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":58,"org.easymock.tests.UsageVarargTest.varargShortAccepted":38,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":201,"org.easymock.tests2.UsageConstraintsTest.cmpTo":181,"org.easymock.tests.UsageVarargTest.varargCharAccepted":36,"org.easymock.tests2.CaptureTest.testCaptureMultiple":354,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":294,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":327,"org.easymock.tests2.UsageTest.openCallCountByLastCall":149,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":150,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":309,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":262,"org.easymock.tests2.CaptureTest.testCaptureFromStub":248,"org.easymock.tests.UsageTest.unexpectedCallWithArray":251,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":363,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":367,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":98,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":123,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":46,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":89,"org.easymock.tests2.CaptureTest.testCapture":355,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":333,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":125,"org.easymock.tests2.UsageConstraintsTest.constraints":172,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":19,"org.easymock.samples.ExampleTest.addAndChangeDocument":142,"org.easymock.tests.UsageStrictMockTest.testVerify":277,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":92,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":259,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":338,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":104,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":243,"org.easymock.tests2.UsageTest.resumeIfFailure":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":81,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":61,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":134,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":304,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":34}}]
