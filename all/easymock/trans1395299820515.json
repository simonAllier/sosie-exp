[{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:163","failures":[1,2,3,4,5],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[7,8,9,10,11,12],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[14,15,16,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[1,2,20,21,22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[24,25,26,27],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"position":"org.easymock.internal.RecordState:99","failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,20,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,21,22,131,132,0,133,134,135,136,137,138,23,139,140,141,6,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,13,184,185,186,187,188,189,25,26],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[15,182],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[7,35,36,37,190,98,99,100,134,136],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[191],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[192,142,193,144,145,194,195,146,148,196,149,197,151],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[198,29,199,30,200,201,34,202,203,204,76,77,78,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,1,1,2,2,20,222,223,224,225,102,103,104,105,107,108,226,227,118,124,228,229,125,230,231,126,232,127,128,233,234,129,235,236,237,238,130,239,240,21,241,242,243,244,245,246,247,248,249,22,250,251,252,253,254,131,255,256,132,0,134,135,136,257,137,5,258,259,138,23,139,260,261,25,27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[142,193,149,167,168,170,172,173,262,13,187],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[104,108,263,228,3,264,265,266,4,267,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[112],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[24,25,26,27],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[168],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[218,269,270],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[271,272,273,274,275,124,228,265,233,25],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[142,143,193,144,149,197,167,168,169,170,171,172,173,174,262,175,13,184,187,188],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"position":"org.easymock.internal.MockBuilder:163","failures":[1,2,3,4,5],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"position":"org.easymock.internal.MockBuilder:178","failures":[205,128],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[13,184],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":168,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":65,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":162,"org.easymock.tests2.StubTest.stubWithReturnValue":101,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":265,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":54,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":186,"org.easymock.tests2.SerializationTest.testAllMockedMethod":27,"org.easymock.tests.MockingTest.testPartialClassMocking":76,"org.easymock.samples.SupportTest.voteForRemovals":94,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":12,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":198,"org.easymock.tests.MockClassControlTest.testToString":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":244,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":24,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":21,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":97,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":271,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":79,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":80,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":31,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":36,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":159,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":206,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":102,"org.easymock.tests2.UsageConstraintsTest.testNull":170,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":134,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":212,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":127,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":161,"org.easymock.tests2.CaptureTest.testPrimitive":144,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":236,"org.easymock.tests.UsageTest.moreThanOneArgument":66,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":133,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":8,"org.easymock.tests2.CaptureTest.testCaptureNone":147,"org.easymock.tests.UsageVerifyTest.twoReturns":89,"org.easymock.tests2.ThreadingTest.testThreadSafe":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":250,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":222,"org.easymock.tests2.CaptureTest.testCapture_2617107":193,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":70,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":229,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":232,"org.easymock.tests2.UsageConstraintsTest.any":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":74,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":218,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":95,"org.easymock.tests2.SerializationTest.testClass":25,"org.easymock.tests.LimitationsTest.mockNativeMethod":34,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":164,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":64,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":30,"org.easymock.tests2.AnswerTest.answer":140,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":262,"org.easymock.tests2.CaptureTest.testAnd":142,"org.easymock.tests2.UsageTest.strictResetToDefault":110,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":259,"org.easymock.tests2.MockedExceptionTest.testMockedException":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":240,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":86,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":156,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":68,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":78,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":132,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":128,"org.easymock.tests.MockingTest.testNicePartialClassMocking":77,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":136,"org.easymock.tests.LimitationsTest.mockFinalMethod":202,"org.easymock.tests2.CompareToTest.testCompareEqual":16,"org.easymock.tests2.CaptureTest.testCaptureLast":146,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":108,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":173,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":185,"org.easymock.tests.MockingTest.testTwoMocks":204,"org.easymock.tests2.CaptureTest.testCapture1_2446744":145,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":263,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":45,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":188,"org.easymock.tests.UsageThrowableTest.throwError":38,"org.easymock.tests.UsageStrictMockTest.differentMethods":37,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":216,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":121,"org.easymock.tests2.MockBuilderTest.testCreateMockString":235,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":241,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":238,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":22,"org.easymock.samples.PartialClassMockTest.testGetArea":20,"org.easymock.tests2.CompareToTest.testLessOrEqual":18,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":71,"org.easymock.samples.ExampleTest.voteAgainstRemoval":92,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":245,"org.easymock.tests2.UsageTest.niceToStrict":112,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":268,"org.easymock.tests2.UsageConstraintsTest.testNotNull":187,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":44,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":126,"org.easymock.tests2.MockBuilderTest.testCreateMock":234,"org.easymock.tests2.UsageTest.defaultResetToNice":115,"org.easymock.samples.ExampleTest.voteAgainstRemovals":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":252,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":5,"org.easymock.tests.UsageTest.openCallCountByLastCall":67,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":11,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":157,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":165,"org.easymock.tests.UsageOverloadedMethodTest.overloading":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":249,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":179,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":81,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":56,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":105,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":269,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":178,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":148,"org.easymock.tests.UsageThrowableTest.throwCheckedException":41,"org.easymock.tests2.EasyMockSupportClassTest.testAll":130,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":199,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":9,"org.easymock.tests2.CaptureTest.testCaptureAll":143,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":107,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":104,"org.easymock.tests2.UsageConstraintsTest.testMatches":180,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":106,"org.easymock.tests2.CompareToTest.testGreateOrEqual":17,"org.easymock.samples.ExampleTest.voteForRemovals":93,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":123,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":88,"org.easymock.tests2.DependencyTest.testInterfaceMocking":96,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":273,"org.easymock.samples.BasicClassMockTest.testPrintContent":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":255,"org.easymock.tests2.DelegateToTest.testStubDelegate":6,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":43,"org.easymock.tests2.AnswerTest.stubAnswer":141,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":275,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":220,"org.easymock.tests2.UsageConstraintsTest.greaterThan":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":239,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":85,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":139,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":221,"org.easymock.samples.ExampleTest.voteForRemoval":91,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":260,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":120,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":63,"org.easymock.tests.UsageExpectAndReturnTest.floatType":47,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":124,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":183,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":203,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":109,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":166,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":224,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":194,"org.easymock.tests2.SerializationTest.test":26,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":233,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":270,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":154,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":39,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":46,"org.easymock.tests2.UsageConstraintsTest.testSame":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":237,"org.easymock.tests2.CaptureTest.testCaptureFirst":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":155,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":117,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":242,"org.easymock.tests.GenericTest.testPackageScope":29,"org.easymock.tests2.UsageTest.moreThanOneArgument":111,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":122,"org.easymock.tests2.CaptureTest.testCapture2_2446744":150,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":129,"org.easymock.tests.GenericTest.testBridgedEquals":200,"org.easymock.tests.UsageExpectAndReturnTest.longType":48,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":57,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":191,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":4,"org.easymock.tests2.UsageStrictMockTest.differentMethods":100,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":258,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":49,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":53,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":42,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":103,"org.easymock.tests2.UsageConstraintsTest.testContains":177,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":118,"org.easymock.tests2.UsageConstraintsTest.testFind":169,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":83,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":135,"org.easymock.tests.UsageExpectAndReturnTest.object":55,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":225,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":217,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":13,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":137,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":125,"org.easymock.tests2.UsageStrictMockTest.range":99,"org.easymock.tests2.UsageConstraintsTest.lessThan":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":272,"org.easymock.tests.UsageTest.exactCallCountByLastCall":69,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":19,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":28,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":274,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":246,"org.easymock.tests2.CaptureTest.testCaptureRightOne":149,"org.easymock.tests2.UsageConstraintsTest.testOr":172,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":228,"org.easymock.tests.UsageRangeTest.combination":84,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":61,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":0,"org.easymock.tests2.MockBuilderTest.testWithConstructor":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":243,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":208,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":50,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":247,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":219,"org.easymock.tests2.UsageConstraintsTest.cmpTo":176,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":213,"org.easymock.tests2.CaptureTest.testCaptureMultiple":192,"org.easymock.tests2.CompareToTest.testLessThan":14,"org.easymock.tests2.UsageTest.openCallCountByLastCall":113,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":114,"org.easymock.tests.DefaultClassInstantiatorTest.object":214,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":163,"org.easymock.tests2.CaptureTest.testCaptureFromStub":197,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":230,"org.easymock.tests.UsageTest.unexpectedCallWithArray":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":248,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":40,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":266,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":59,"org.easymock.tests2.CaptureTest.testCapture":196,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":211,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":138,"org.easymock.tests2.UsageConstraintsTest.constraints":167,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":62,"org.easymock.tests.UsageStrictMockTest.testVerify":190,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":131,"org.easymock.tests2.CompareToTest.testGreateThan":15,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":195,"org.easymock.tests2.UsageTest.resumeIfFailure":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":72,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":205,"org.easymock.tests.LimitationsTest.abstractClass":201,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":51,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":75,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":73,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":158}}]
