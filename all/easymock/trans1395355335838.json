[{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[210,160,161,211],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[212],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,213,214,215,216,217,218,219,1,2,3,4,5,220,6,221,222,223,224,225,226,7,227,8,228,228,229,230,231,232,9,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,10,11,12,13,14,248,249,15,16,250,251,17,18,19,20,252,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,253,254,255,256,257,258,259,260,261,262,263,58,60,61,62,63,264,265,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,266,267,268,269,270,271,272,273,92,274,93,94,275,100,101,102,103,104,105,106,107,108,109,110,111,276,277,278,112,279,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,280,281,152,153,154,155,282,156,157,158,159,160,161,211,162,163,164,165,283,284,285,286,287,166,167,288,168,169,289,170,290,171,172,173,291,174,292,175,176,177,293,294,178,179,180,181,295,182,183,296,297,184,185,186,187,188,189,298,190,299,191,192,193,194,195,196,197,198,199,200,300,201,202,301,302,203,303,204,205,304,206,207,208,209],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[129],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[234,55,58,93,94,115,204,205],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[228,147,148,149,150,151,280,281,152,153,154,155,282,156,157],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[305],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[306,307,308,309,310,311,312,168,196,199],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[9,233,241,313,18,19,314,50,51,52,53,54,55,263,315,62,63,264,265,64,86,87,273,92,113,114,115,116,117,118,119,120,121,122,316,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,317,140,144,146,147,148,149,150,151,280,281,152,153,154,155,282,156,157,160,296,297,190,299,203,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[139,318],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[216,216,217,217,313,243,244,245,246,247,18,50,51,52,53,54,62,63,64,319,86,87,92,320,321,322,323,324,113,114,117,118,119,120,125,127,128,130,131,137,138,139,282,201,203],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[238,239,240,241,325,326,327,306,248,249,250,251,56,57,58,266,273,93,94,109,166,289,170,290,291,293,294,178,204,205],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:268","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[265,300],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":116,"org.easymock.tests2.UsageTest.argumentsOrdered":294,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":13,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":232,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":292,"org.easymock.tests2.StubTest.stubWithReturnValue":201,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":215,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":39,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":136,"org.easymock.tests2.SerializationTest.testAllMockedMethod":211,"org.easymock.tests2.DelegateToTest.testReturnException":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":230,"org.easymock.tests.MockingTest.testPartialClassMocking":27,"org.easymock.samples.SupportTest.voteForRemovals":1,"org.easymock.tests.MockClassControlTest.testToString":307,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":78,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":210,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":66,"org.easymock.tests.UsageExpectAndThrowTest.object":76,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":133,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":159,"org.easymock.tests2.DelegateToTest.testWrongClass":164,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":86,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":87,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":122,"org.easymock.tests2.UsageTest.wrongArguments":291,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":62,"org.easymock.samples.ConstructorCalledMockTest.testTax":216,"org.easymock.tests.UsageStrictMockTest.range":93,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":269,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":107,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":310,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":194,"org.easymock.tests2.UsageConstraintsTest.testNull":118,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":77,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":187,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":109,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":168,"org.easymock.tests2.CaptureTest.testPrimitive":150,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":64,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":250,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":85,"org.easymock.tests.UsageTest.moreThanOneArgument":14,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":268,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":245,"org.easymock.tests2.CaptureTest.testCaptureNone":153,"org.easymock.tests.UsageUnorderedTest.message":241,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":327,"org.easymock.tests.UsageVerifyTest.twoReturns":57,"org.easymock.tests.UsageVarargTest.varargByteAccepted":261,"org.easymock.tests2.ThreadingTest.testThreadSafe":141,"org.easymock.tests.UsageTest.argumentsOrdered":251,"org.easymock.tests.UsageVarargTest.varargIntAccepted":255,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":237,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":50,"org.easymock.tests2.CaptureTest.testCapture_2617107":149,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":287,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":265,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":288,"org.easymock.tests2.UsageConstraintsTest.any":123,"org.easymock.tests2.StubTest.stub":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":231,"org.easymock.tests.UsageExpectAndThrowTest.longType":69,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":303,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":140,"org.easymock.tests2.SerializationTest.testClass":160,"org.easymock.tests.LimitationsTest.mockNativeMethod":8,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":146,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":49,"org.easymock.tests2.AnswerTest.answer":181,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":98,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":286,"org.easymock.tests2.CaptureTest.testAnd":147,"org.easymock.tests2.UsageTest.strictResetToDefault":172,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":299,"org.easymock.tests2.MockedExceptionTest.testMockedException":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":244,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":60,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":104,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":16,"org.easymock.tests2.DelegateToTest.testDelegate":165,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":70,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":29,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":184,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":169,"org.easymock.tests.MockingTest.testNicePartialClassMocking":28,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":81,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":189,"org.easymock.tests2.CaptureTest.testCaptureLast":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":9,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":200,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":121,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":226,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":134,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":65,"org.easymock.tests2.CaptureTest.testCapture1_2446744":151,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":30,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":79,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":284,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":74,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":293,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":138,"org.easymock.tests.UsageThrowableTest.throwError":20,"org.easymock.tests.UsageStrictMockTest.differentMethods":94,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":143,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":306,"org.easymock.tests2.MockBuilderTest.testCreateMockString":290,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":247,"org.easymock.tests.UsageExpectAndThrowTest.floatType":68,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":129,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":295,"org.easymock.tests.UsageVerifyTest.twoThrows":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":208,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":51,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":192,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":311,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":67,"org.easymock.tests2.UsageTest.niceToStrict":174,"org.easymock.tests2.UsageConstraintsTest.testNotNull":137,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":277,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":320,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":167,"org.easymock.tests2.MockBuilderTest.testCreateMock":289,"org.easymock.tests2.UsageTest.defaultResetToNice":177,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":97,"org.easymock.tests.UsageVarargTest.differentLength":258,"org.easymock.tests2.CallbackTest.callback":202,"org.easymock.tests.UsageTest.openCallCountByLastCall":15,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":75,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":105,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":113,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":267,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":264,"org.easymock.tests.UsageCallCountTest.tooFewCalls":235,"org.easymock.tests.UsageOverloadedMethodTest.overloading":11,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":90,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":127,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":197,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":10,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":41,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":126,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":154,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":270,"org.easymock.tests.UsageThrowableTest.throwCheckedException":23,"org.easymock.tests2.EasyMockSupportClassTest.testAll":206,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":227,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":83,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":224,"org.easymock.tests2.CaptureTest.testCaptureAll":148,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":199,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":19,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":196,"org.easymock.tests2.UsageConstraintsTest.testMatches":128,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":198,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":183,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":246,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":145,"org.easymock.tests.UsageVarargTest.allKinds":263,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":55,"org.easymock.tests2.DependencyTest.testInterfaceMocking":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":225,"org.easymock.samples.BasicClassMockTest.testPrintContent":214,"org.easymock.samples.ExampleTest.addDocument":220,"org.easymock.tests2.DelegateToTest.testStubDelegate":163,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":25,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":301,"org.easymock.tests2.AnswerTest.stubAnswer":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":233,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":92,"org.easymock.tests2.UsageConstraintsTest.greaterThan":130,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":59,"org.easymock.tests.UsageVarargTest.varargLongAccepted":260,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":193,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":275,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":142,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":48,"org.easymock.tests.UsageExpectAndReturnTest.floatType":32,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":298,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":180,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":217,"org.easymock.tests.UsageThrowableTest.noUpperLimit":252,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":131,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":242,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":114,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":171,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":312,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":280,"org.easymock.tests2.SerializationTest.test":161,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":102,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":21,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":31,"org.easymock.tests2.UsageConstraintsTest.testSame":119,"org.easymock.samples.SupportTest.addDocument":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":229,"org.easymock.tests2.CaptureTest.testCaptureFirst":157,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":103,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":179,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":266,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":37,"org.easymock.tests.GenericTest.testPackageScope":7,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":144,"org.easymock.tests2.CaptureTest.testCapture2_2446744":156,"org.easymock.tests2.UsageTest.moreThanOneArgument":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":99,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":262,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":239,"org.easymock.tests.UsageExpectAndReturnTest.longType":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":222,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":100,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":84,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":42,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":319,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":135,"org.easymock.tests2.UsageStrictMockTest.differentMethods":205,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":243,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":34,"org.easymock.tests.UsageCallCountTest.tooManyCalls":240,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":80,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":61,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":234,"org.easymock.tests2.MockedExceptionTest.testRealException":279,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":203,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":71,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":63,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":24,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":195,"org.easymock.tests2.UsageConstraintsTest.testContains":125,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":112,"org.easymock.tests2.UsageConstraintsTest.testFind":117,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":12,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":296,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":188,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":297,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":271,"org.easymock.tests.UsageExpectAndReturnTest.object":40,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":132,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":190,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":166,"org.easymock.tests2.UsageStrictMockTest.range":204,"org.easymock.tests2.UsageConstraintsTest.lessThan":139,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":108,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":257,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":305,"org.easymock.tests.UsageTest.exactCallCountByLastCall":17,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":96,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":101,"org.easymock.tests2.CaptureTest.testCaptureRightOne":155,"org.easymock.tests2.UsageConstraintsTest.testOr":120,"org.easymock.tests.UsageRangeTest.combination":58,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":253,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":46,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":185,"org.easymock.tests.UsageTest.wrongArguments":249,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":89,"org.easymock.tests2.EasyMockSupportTest.testVerify":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":95,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":43,"org.easymock.tests.UsageVarargTest.varargShortAccepted":259,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":88,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":283,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":238,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":317,"org.easymock.tests2.UsageConstraintsTest.cmpTo":124,"org.easymock.tests.UsageVarargTest.varargCharAccepted":256,"org.easymock.tests2.CompareToTest.testLessThan":318,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":302,"org.easymock.tests2.UsageTest.openCallCountByLastCall":175,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":176,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":111,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":314,"org.easymock.tests2.CaptureTest.testCaptureFromStub":282,"org.easymock.tests.UsageTest.unexpectedCallWithArray":248,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":326,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":73,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":273,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":236,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":44,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":309,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":274,"org.easymock.tests2.UsageConstraintsTest.constraints":115,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":191,"org.easymock.samples.ExampleTest.addAndChangeDocument":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":72,"org.easymock.tests.CapturesMatcherTest.test":228,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":47,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":218,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":308,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":223,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":281,"org.easymock.tests2.UsageTest.resumeIfFailure":178,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":52,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":36,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":53,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":106}}]
