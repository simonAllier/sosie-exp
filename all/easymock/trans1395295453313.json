[{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[0],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[46,47,48,49,50,51,52,53,54],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[55,56,57,58],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[59],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[60,61],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[63,64,65,66,67,68,69,70,71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[60],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,55,56,57,90,91,92,93,3,94,95,96,97,98,99,100,101,4,102,103,104,105,106,107,5,108,109,110,111,46,112,47,113,114,115,116,117,118,119,48,120,121,122,123,49,50,124,125,126,51,52,127,128,129,130,131,132,133,134,135,136,54,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,8,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,10,191,192,193,11,12,194,195,196,13,197,198,199,14,15,200,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,201,202,203,204,205,206,207,208,209,210,211,212,61,213,214,215,216,217,218,219,220,42,221,222,223,43,224,225,226,227,228,229,230,231,232,233,234,235,44,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,62,269,270,271,272],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[72,73,74,75,76,77,273,78,79,80,81,82,83,84,274,274,275,275,85,276,86,87,88,277,89,55,56,57,90,91,278,279,280,281,282,92,283,284,285,286,287,288,289,290,291,292,93,3,94,59,95,293,294,295,296,297,96,97,98,99,100,101,4,102,103,104,105,106,107,5,298,108,109,110,111,46,112,47,113,114,115,116,117,118,119,48,299,120,121,122,123,49,50,300,124,125,126,51,52,127,53,128,129,130,131,132,133,134,135,136,54,137,138,139,140,141,142,143,301,302,303,144,304,305,145,306,307,308,309,310,311,312,313,314,146,315,316,317,318,319,147,320,321,322,323,324,325,326,148,327,149,150,328,329,330,331,332,333,334,335,336,151,337,338,339,340,341,342,6,7,8,9,343,344,345,346,152,153,154,155,156,157,158,159,347,348,160,161,349,162,350,163,164,165,166,167,168,169,170,171,172,173,174,175,351,176,177,178,179,180,181,182,183,184,185,186,352,187,353,354,355,356,188,357,358,359,189,360,190,10,361,191,362,363,364,365,192,193,11,12,194,366,367,368,369,195,196,13,197,198,199,14,15,370,371,372,373,374,375,63,64,65,376,377,378,379,380,200,16,17,18,19,20,21,381,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,201,202,203,382,204,205,383,206,207,208,209,210,384,211,212,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,60,61,213,0,402,403,214,215,216,217,218,219,220,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,42,221,424,222,223,43,224,225,226,425,426,227,228,229,230,427,231,232,233,428,429,430,431,432,433,234,235,44,434,435,436,437,438,439,440,441,442,66,443,67,444,445,446,447,448,449,450,451,68,69,452,70,236,453,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,454,455,264,456,265,266,267,457,458,459,460,461,268,45,462,463,464,62,269,465,270,466,467,468,271,272,469,71,470],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[471,472,473,474,475,476,350],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[72,73,74,75,76,77,273,78,79,80,81,82,83,84,274,274,275,275,85,276,86,87,88,277,89,55,56,57,1,2,90,91,278,279,280,281,282,92,283,284,285,286,287,288,289,290,291,292,93,3,94,59,95,293,294,295,296,297,96,97,98,99,100,101,4,102,103,104,105,106,107,5,298,108,109,110,111,46,112,47,113,114,115,116,117,118,119,48,299,120,121,122,123,49,50,300,124,125,126,51,52,127,53,128,129,130,131,132,133,134,135,136,54,137,138,139,140,141,142,143,301,302,303,144,304,305,145,306,307,308,309,310,311,312,313,314,146,315,316,317,318,319,147,320,321,322,323,477,324,325,478,326,148,327,149,476,150,328,329,330,479,331,332,333,334,335,336,151,337,338,339,340,341,342,6,7,8,9,480,343,344,345,346,152,153,154,155,156,157,158,159,347,348,160,161,349,162,350,481,163,164,165,166,167,168,169,170,171,172,173,174,175,351,176,177,178,179,180,181,182,183,184,185,186,352,482,187,353,354,355,356,188,357,358,359,189,360,190,10,361,191,362,363,364,365,192,193,11,12,194,366,367,368,369,195,196,13,197,198,199,14,15,370,371,372,373,374,375,63,64,65,376,377,378,379,380,200,16,17,18,19,20,21,381,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,201,202,203,382,204,205,383,206,207,208,209,210,384,211,212,385,386,387,388,389,390,391,392,393,394,483,395,396,397,398,399,400,484,401,60,61,213,0,402,403,214,215,216,217,218,219,220,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,42,221,424,222,223,43,224,225,226,425,426,227,228,229,230,427,231,232,233,428,429,430,431,432,433,234,235,44,434,435,436,437,438,439,440,441,442,66,443,67,444,445,446,447,448,449,450,451,68,69,452,70,236,453,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,454,455,264,456,265,266,267,457,458,459,460,461,268,45,462,463,464,62,269,465,270,466,467,468,271,272,469,71,470],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[6,7,8,9,11,16,17,18,19,20,21,45],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[485,46,47,113,114,115,116,117,119,486,48,299,121],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[487],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[297,99,100,105,106,109,48,50,52,127,128,131,54,137,138,140,330,163,170,172,174,175,177,178,179,182,188,195,196,197,198,199,14,15,403,218,219,225,233,235,236,266],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[60,61,213,0,402],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[125,53,54,141],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[488,489,490,491,215,424],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[492],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[487],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[270],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.LastControl:70","failures":[72,73,74,75,76,77,273,78,79,80,81,82,83,84,274,274,275,275,85,276,86,87,88,277,89,55,56,57,90,91,92,93,3,94,95,97,46,112,47,113,114,115,116,117,118,119,48,299,120,121,122,123,49,50,124,125,126,51,52,127,53,128,129,130,131,132,133,134,135,136,54,137,138,139,140,141,142,143,322,168,187,192,193,11,12,194,20,210,215,216,233,259,260,261,262,263,268,45,271,272],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[417,434,438,439,446,451],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[493,494,495,496,482],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[399,497,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[289,149,154,157,389,390,391,421,433,499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[125,139,167,210],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[488,489,490,491,215,424],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[500,501,502],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,274,274,275,275,85,276,86,87,88,277,89,55,56,57,90,91,92,93,3,94,95,297,96,97,98,99,100,101,4,102,103,104,105,106,107,5,298,108,109,110,111,46,112,47,113,114,115,116,117,118,119,48,299,120,121,122,123,49,50,124,125,126,51,52,127,53,128,129,130,131,132,133,134,135,136,54,137,138,139,140,141,142,143,144,145,146,147,324,148,149,150,330,151,6,7,8,9,343,344,345,346,152,153,154,155,156,157,158,159,347,348,160,161,349,162,163,164,165,166,167,168,169,170,171,172,173,174,175,351,176,177,178,179,180,181,182,183,184,185,186,187,356,188,357,189,190,10,191,363,364,365,192,193,11,12,194,195,196,13,197,198,199,14,15,370,371,372,63,64,65,376,377,378,379,380,200,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,201,202,203,204,205,383,206,207,208,209,210,384,211,212,61,213,0,403,214,215,216,217,218,219,220,404,417,42,221,222,223,43,224,225,226,425,227,228,229,230,231,232,233,234,235,44,448,452,236,453,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,45,62,269,270,271,272,71],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[434,435,436,437,438,439,440,441,442,66,443,67,444,445,446,447,449,450,451,68,69,70],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[46,47,113,114,115,116,117,119,486,48,299,121],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[46,47,48,49,50,125,51,52,53,54,141],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[99,104,108,109,503,215,218,424,222,224,225,233,266,267],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":50,"org.easymock.tests2.UsageTest.argumentsOrdered":109,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":42,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":178,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":443,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":106,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":85,"org.easymock.tests2.DelegateToTest.testReturnException":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":17,"org.easymock.tests.MockingTest.testPartialClassMocking":62,"org.easymock.tests.MockClassControlTest.testToString":389,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":480,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":309,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":145,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":22,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":91,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":471,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":127,"org.easymock.tests2.UsageTest.wrongArguments":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":192,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":288,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":368,"org.easymock.samples.ExampleTest.answerVsDelegate":73,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":421,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":467,"org.easymock.tests2.UsageConstraintsTest.testNull":125,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":184,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":394,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":177,"org.easymock.tests2.CaptureTest.testPrimitive":113,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":194,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":41,"org.easymock.tests.UsageTest.moreThanOneArgument":221,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":378,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":384,"org.easymock.tests.UsageTest.argumentsOrdered":225,"org.easymock.tests.UsageVarargTest.varargIntAccepted":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":447,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":259,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":475,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":323,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":341,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":263,"org.easymock.tests.ReplayStateInvalidUsageTest.times":413,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":92,"org.easymock.tests2.DependencyTest.testClassMocking":1,"org.easymock.tests2.AnswerTest.answer":159,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":449,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":296,"org.easymock.tests2.CaptureTest.testAnd":46,"org.easymock.tests2.UsageTest.strictResetToDefault":102,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":478,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":173,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":237,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":386,"org.easymock.tests2.DelegateToTest.testDelegate":89,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":37,"org.easymock.tests.LimitationsTest.mockFinalMethod":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":461,"org.easymock.tests2.DependencyTest.testClassMockingSupport":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":373,"org.easymock.tests2.CaptureTest.testCapture1_2446744":114,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":482,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":35,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":294,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":407,"org.easymock.tests.UsageThrowableTest.throwError":195,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":420,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":499,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":321,"org.easymock.samples.PartialClassMockTest.testGetArea":81,"org.easymock.tests.MockingTest.testInterfaceMocking":465,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":260,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":64,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":433,"org.easymock.tests2.UsageTest.niceToStrict":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":310,"org.easymock.tests2.ThreadingTest.testChangeDefault":496,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":148,"org.easymock.tests2.MockBuilderTest.testCreateMock":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":317,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":285,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":488,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":31,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":174,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":372,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":425,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":366,"org.easymock.tests.UsageOverloadedMethodTest.overloading":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":319,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":132,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":10,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":250,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":497,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":131,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":119,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":382,"org.easymock.tests.MockClassControlTest.testEquals":393,"org.easymock.tests2.EasyMockSupportClassTest.testAll":144,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":213,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":459,"org.easymock.tests2.CaptureTest.testCaptureAll":112,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":295,"org.easymock.tests.MockNameTest.defaultName":381,"org.easymock.tests2.UsageConstraintsTest.testMatches":133,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":405,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":379,"org.easymock.samples.ExampleTest.voteForRemovals":77,"org.easymock.tests.UsageVarargTest.allKinds":210,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":460,"org.easymock.samples.BasicClassMockTest.testPrintContent":80,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":14,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":21,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":277,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":338,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":484,"org.easymock.tests2.UsageConstraintsTest.greaterThan":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":304,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":453,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":357,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":401,"org.easymock.samples.ExampleTest.voteForRemoval":74,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":165,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":358,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":487,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":422,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":352,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":4,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":200,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":171,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":16,"org.easymock.tests2.CaptureTest.testCaptureFirst":121,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":172,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":111,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":362,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":246,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":167,"org.easymock.tests2.CaptureTest.testCapture2_2446744":120,"org.easymock.tests2.UsageTest.moreThanOneArgument":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":450,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":330,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":209,"org.easymock.tests.GenericTest.testBridgedEquals":402,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":231,"org.easymock.tests.UsageExpectAndReturnTest.longType":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":457,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":169,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":40,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":417,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":139,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":38,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":376,"org.easymock.tests.UsageCallCountTest.tooManyCalls":232,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":287,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":199,"org.easymock.tests.MockingTest.testNiceClassMocking":468,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":153,"org.easymock.tests.MockingTest.testClassMocking":463,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":426,"org.easymock.tests2.UsageConstraintsTest.testContains":130,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":8,"org.easymock.tests2.UsageConstraintsTest.testFind":124,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":44,"org.easymock.tests.MockTypeTest.fromEasyMockClass":419,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":403,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":95,"org.easymock.tests.UsageExpectAndReturnTest.object":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":472,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":205,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":431,"org.easymock.tests.UsageTest.exactCallCountByLastCall":226,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":469,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":350,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":201,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":255,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":190,"org.easymock.tests.MockClassControlTest.testHashCode":392,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":333,"org.easymock.tests2.EasyMockSupportTest.testVerify":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":312,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":212,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":189,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":371,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":492,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":293,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":322,"org.easymock.tests.UsageVarargTest.varargCharAccepted":204,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":483,"org.easymock.tests2.CaptureTest.testCaptureMultiple":485,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":70,"org.easymock.tests2.UsageTest.openCallCountByLastCall":107,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":501,"org.easymock.tests.DefaultClassInstantiatorTest.object":395,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":179,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":370,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":429,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":503,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":313,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":281,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":332,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":391,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":356,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":28,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":256,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":363,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":147,"org.easymock.tests2.UsageTest.resumeIfFailure":110,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":19,"org.easymock.tests2.StubTest.stubWithReturnValue":3,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":476,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":140,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":248,"org.easymock.tests2.SerializationTest.testAllMockedMethod":57,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":448,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":489,"org.easymock.samples.SupportTest.voteForRemovals":83,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":60,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":335,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":34,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":58,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":452,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":347,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":470,"org.easymock.tests.UsageExpectAndThrowTest.object":32,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":137,"org.easymock.tests2.DelegateToTest.testWrongClass":88,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":271,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":272,"org.easymock.tests.UsageStrictMockTest.range":218,"org.easymock.samples.ConstructorCalledMockTest.testTax":274,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":291,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":351,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":33,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":149,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":415,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":301,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":367,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":490,"org.easymock.tests2.CaptureTest.testCaptureNone":118,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":65,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":493,"org.easymock.tests.UsageUnorderedTest.message":233,"org.easymock.tests.UsageVerifyTest.twoReturns":267,"org.easymock.tests.UsageVarargTest.varargByteAccepted":208,"org.easymock.tests2.ThreadingTest.testThreadSafe":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":315,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":230,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":432,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":79,"org.easymock.tests2.CaptureTest.testCapture_2617107":47,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":375,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":68,"org.easymock.tests2.UsageConstraintsTest.any":128,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":412,"org.easymock.tests2.StubTest.stub":93,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":365,"org.easymock.tests.UsageExpectAndThrowTest.longType":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":69,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":399,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":411,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":98,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":151,"org.easymock.tests2.SerializationTest.testClass":55,"org.easymock.tests.LimitationsTest.mockNativeMethod":264,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":0,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":258,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":280,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":101,"org.easymock.tests2.NameTest.nameForMocksControl":346,"org.easymock.tests2.MockedExceptionTest.testMockedException":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":305,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":43,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":26,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":59,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":270,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":181,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":150,"org.easymock.tests.MockingTest.testNicePartialClassMocking":269,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":186,"org.easymock.tests2.CaptureTest.testCaptureLast":117,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":278,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":374,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":158,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":52,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":138,"org.easymock.tests.MockingTest.testTwoMocks":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":30,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":108,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":142,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":495,"org.easymock.samples.ExampleTest.removeNonExistingDocument":273,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":409,"org.easymock.tests.UsageStrictMockTest.differentMethods":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":284,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":334,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":494,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":397,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":166,"org.easymock.tests2.MockBuilderTest.testCreateMockString":331,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":387,"org.easymock.tests.UsageExpectAndThrowTest.floatType":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":306,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":303,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":160,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":481,"org.easymock.tests.UsageVerifyTest.twoThrows":266,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":146,"org.easymock.samples.ExampleTest.voteAgainstRemoval":75,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":67,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":188,"org.easymock.tests.LimitationsTest.privateConstructor":455,"org.easymock.tests2.UsageConstraintsTest.testNotNull":141,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":6,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":15,"org.easymock.tests2.UsageTest.defaultResetToNice":298,"org.easymock.samples.ExampleTest.voteAgainstRemovals":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":254,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":279,"org.easymock.tests.UsageVarargTest.differentLength":383,"org.easymock.tests2.CallbackTest.callback":163,"org.easymock.tests2.UsageConstraintsTest.equals":300,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":353,"org.easymock.tests.UsageTest.openCallCountByLastCall":223,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":122,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":11,"org.easymock.tests.UsageCallCountTest.tooFewCalls":228,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":155,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":369,"org.easymock.tests.UsageThrowableTest.throwCheckedException":198,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":491,"org.easymock.tests.MockingTest.testStrictClassMocking":462,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":157,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":45,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":283,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":414,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":156,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":349,"org.easymock.tests.ObjectMethodsTest.testHashCode":430,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":474,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":168,"org.easymock.tests2.NameTest.nameForNiceMock":345,"org.easymock.tests2.DependencyTest.testInterfaceMocking":90,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":473,"org.easymock.samples.ExampleTest.addDocument":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":316,"org.easymock.tests2.DelegateToTest.testStubDelegate":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":320,"org.easymock.tests2.AnswerTest.stubAnswer":161,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":216,"org.easymock.tests.UsageVarargTest.varargLongAccepted":207,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":66,"org.easymock.tests.UsageExpectAndReturnTest.floatType":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":162,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":275,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":136,"org.easymock.tests.UsageThrowableTest.noUpperLimit":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":340,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":123,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":289,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":115,"org.easymock.tests2.SerializationTest.test":56,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":498,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":396,"org.easymock.tests2.UsageConstraintsTest.testSame":126,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":240,"org.easymock.samples.SupportTest.addDocument":82,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":307,"org.easymock.tests.GenericTest.testPackageScope":61,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":339,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":466,"org.easymock.tests2.NameTest.nameForMock":343,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":251,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":479,"org.easymock.tests2.UsageStrictMockTest.differentMethods":100,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":354,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":243,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":36,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":428,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":238,"org.easymock.tests2.MockedExceptionTest.testRealException":9,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":445,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":97,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":416,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":193,"org.easymock.tests2.NameTest.nameForStrictMock":344,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":326,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":502,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":94,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":185,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":290,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":398,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":54,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":324,"org.easymock.tests2.UsageStrictMockTest.range":99,"org.easymock.tests2.UsageConstraintsTest.lessThan":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":170,"org.easymock.tests2.CaptureTest.testCaptureRightOne":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":311,"org.easymock.tests2.UsageConstraintsTest.testOr":51,"org.easymock.tests.UsageRangeTest.combination":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":182,"org.easymock.tests.UsageTest.wrongArguments":222,"org.easymock.tests2.MockBuilderTest.testWithConstructor":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":308,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":388,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":252,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":400,"org.easymock.tests.UsageVarargTest.varargShortAccepted":206,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":427,"org.easymock.tests2.UsageConstraintsTest.cmpTo":129,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":437,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":5,"org.easymock.tests2.CaptureTest.testCaptureFromStub":299,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":406,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":325,"org.easymock.tests.UsageTest.unexpectedCallWithArray":424,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":215,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":229,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":253,"org.easymock.tests2.CaptureTest.testCapture":486,"org.easymock.tests2.UsageConstraintsTest.constraints":49,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":217,"org.easymock.samples.ExampleTest.addAndChangeDocument":78,"org.easymock.tests.UsageStrictMockTest.testVerify":404,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":84,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":458,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":261,"org.easymock.tests.LimitationsTest.abstractClass":454,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":245,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":191,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":175,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":202}}]
