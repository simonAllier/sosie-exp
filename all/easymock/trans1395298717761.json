[{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[1],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,0,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[69],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,2,3,4,5,6,7,129,130,131,132,133,134,135,136,137,138,139,140,141,8,9,10,11,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,12,13,159,160,161,162,163,164,165,166,167,168,169,170,14,171,172,173,174,175,176,177,15,178,179,180,181,182,183,184,16,17,18,19,20,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,21,201,202,203,204,205,206,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,0,43,45,46,47,48,207,208,209,210,211,49,50,212,213,214,215,51,52,53,54,55,56,57,58,59,60,61,62,63,64,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,65,232,233,234,66,235,236,237,238,67,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[24,30,35,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"substring"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,0,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[263,264,265],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[52,63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[266],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[267],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,42,0,46,47,51,52,53,54,61,62],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[268],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:85","failures":[269,270,271,70,71,72,73,74,75,272,76,273,273,274,274,275,276,277,278,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,279,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,280,125,126,127,128,2,3,4,5,6,7,129,130,131,132,133,134,281,135,136,137,138,139,140,8,9,10,11,142,143,144,145,146,147,148,149,150,151,152,153,154,155,282,156,283,284,285,286,287,288,157,158,12,13,159,160,161,162,163,164,165,166,289,290,291,167,168,169,170,14,171,172,173,174,175,176,177,15,292,293,294,295,178,296,297,298,299,300,301,302,179,180,181,182,183,184,303,304,305,16,17,18,19,20,185,186,187,188,189,190,191,192,193,306,307,308,194,309,195,196,197,198,199,200,310,21,201,311,202,312,313,203,204,314,315,205,206,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,0,43,44,45,46,47,48,207,316,317,318,319,320,321,322,323,324,325,326,327,328,208,209,210,211,49,50,212,213,214,215,51,52,53,54,55,56,57,58,59,60,61,62,63,64,216,329,217,218,330,331,332,219,220,221,222,223,224,225,226,227,228,229,230,231,65,232,333,233,234,66,235,236,237,238,239,240,241,242,243,244,334,335,336,337,245,246,247,248,338,249,339,250,251,252,253,254,255,256,257,258,259,260,261,262],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:163","failures":[223,224],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"failures":[15,340],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[263,264,265],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[311,341,329,219],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[273,274,207,342,343,344,345,346,347,348,265],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[269,270,271,70,71,72,73,74,75,76,273,273,274,274,275,276,277,278,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,2,3,4,5,6,7,129,130,131,132,133,134,135,136,137,138,139,140,8,9,10,11,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,12,13,159,160,161,162,163,164,165,166,167,168,169,170,14,171,172,173,174,175,176,177,15,293,295,178,297,300,302,179,180,181,182,183,184,16,17,18,19,20,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,21,201,202,313,203,204,314,315,205,206,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,0,43,45,46,47,48,207,316,317,318,319,320,321,322,323,324,325,326,327,328,208,209,210,211,49,50,212,213,214,215,51,52,53,54,55,56,57,58,59,60,61,62,63,64,216,217,218,330,331,219,220,221,222,223,224,225,226,227,228,229,230,231,65,232,333,233,234,66,235,236,237,238,239,240,241,242,243,244,334,335,336,337,245,246,247,248,338,249,339,250,251,252,253,254,255,256,257,258,259,260,261,262],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[24,25,27,29,30,32,42,46,51,53,61],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:327","failures":[349,350,351,352],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":25,"org.easymock.tests2.UsageTest.argumentsOrdered":260,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":185,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":170,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":255,"org.easymock.tests2.StubTest.stubWithReturnValue":240,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":277,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":45,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":109,"org.easymock.tests2.SerializationTest.testAllMockedMethod":215,"org.easymock.tests2.DelegateToTest.testReturnException":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":168,"org.easymock.tests.MockingTest.testPartialClassMocking":97,"org.easymock.samples.SupportTest.voteForRemovals":271,"org.easymock.tests.MockClassControlTest.testToString":283,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":89,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":335,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":77,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":69,"org.easymock.tests.UsageExpectAndThrowTest.object":87,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":339,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":0,"org.easymock.tests2.DelegateToTest.testWrongClass":243,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":8,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":9,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":31,"org.easymock.tests2.UsageTest.wrongArguments":253,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":3,"org.easymock.samples.ConstructorCalledMockTest.testTax":273,"org.easymock.tests.UsageStrictMockTest.range":160,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":139,"org.easymock.samples.ExampleTest.answerVsDelegate":71,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":323,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":313,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":345,"org.easymock.tests2.UsageConstraintsTest.testNull":27,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":88,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":330,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":325,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":288,"org.easymock.tests2.CaptureTest.testPrimitive":54,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":7,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":301,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":96,"org.easymock.tests.UsageTest.moreThanOneArgument":186,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":191,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":197,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":144,"org.easymock.tests2.CaptureTest.testCaptureNone":59,"org.easymock.tests.UsageUnorderedTest.message":15,"org.easymock.tests.UsageVerifyTest.twoReturns":166,"org.easymock.tests.UsageVarargTest.varargByteAccepted":127,"org.easymock.tests2.ThreadingTest.testThreadSafe":229,"org.easymock.tests.UsageTest.argumentsOrdered":192,"org.easymock.tests.UsageVarargTest.varargIntAccepted":122,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":184,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":275,"org.easymock.tests2.CaptureTest.testCapture_2617107":53,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":16,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":216,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":6,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":218,"org.easymock.tests2.UsageConstraintsTest.any":33,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":298,"org.easymock.tests2.StubTest.stub":239,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":20,"org.easymock.tests.UsageExpectAndThrowTest.longType":80,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":169,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":297,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":235,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":338,"org.easymock.tests2.SerializationTest.testClass":213,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":333,"org.easymock.tests.ReplayStateInvalidUsageTest.times":299,"org.easymock.tests.LimitationsTest.mockNativeMethod":172,"org.easymock.tests2.AnswerTest.answer":221,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":119,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":32,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":228,"org.easymock.tests2.CaptureTest.testAnd":51,"org.easymock.tests2.UsageTest.strictResetToDefault":251,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":238,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":201,"org.easymock.tests2.NameTest.nameForMocksControl":248,"org.easymock.tests2.MockedExceptionTest.testMockedException":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":143,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":320,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":133,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":190,"org.easymock.tests2.DelegateToTest.testDelegate":244,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":81,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":99,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":195,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":331,"org.easymock.tests.MockingTest.testNicePartialClassMocking":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":92,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":200,"org.easymock.tests2.CaptureTest.testCaptureLast":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":14,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":141,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":206,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":30,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":177,"org.easymock.tests2.CaptureTest.testCapture1_2446744":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":100,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":90,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":226,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":85,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":259,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":47,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":294,"org.easymock.tests.UsageThrowableTest.throwError":147,"org.easymock.samples.ExampleTest.removeNonExistingDocument":272,"org.easymock.tests.UsageStrictMockTest.differentMethods":161,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":178,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":231,"org.easymock.tests2.MockBuilderTest.testCreateMockString":220,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":282,"org.easymock.tests.UsageExpectAndThrowTest.floatType":79,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":146,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":39,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":222,"org.easymock.tests.UsageVerifyTest.twoThrows":165,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":336,"org.easymock.samples.PartialClassMockTest.testGetArea":278,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":17,"org.easymock.samples.ExampleTest.voteAgainstRemoval":73,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":202,"org.easymock.tests2.UsageTest.niceToStrict":254,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":78,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":343,"org.easymock.tests2.UsageConstraintsTest.testNotNull":46,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":208,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":154,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":265,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":217,"org.easymock.tests2.MockBuilderTest.testCreateMock":332,"org.easymock.tests2.UsageTest.defaultResetToNice":258,"org.easymock.samples.ExampleTest.voteAgainstRemovals":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":115,"org.easymock.tests.UsageVarargTest.differentLength":280,"org.easymock.tests2.CallbackTest.callback":212,"org.easymock.tests.UsageTest.openCallCountByLastCall":189,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":86,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":321,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":22,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":1,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":352,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":5,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":137,"org.easymock.tests.UsageCallCountTest.tooFewCalls":182,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":346,"org.easymock.tests.UsageOverloadedMethodTest.overloading":135,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":308,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":37,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":314,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":281,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":111,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":266,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":36,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":60,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":140,"org.easymock.tests.UsageThrowableTest.throwCheckedException":151,"org.easymock.tests2.EasyMockSupportClassTest.testAll":334,"org.easymock.tests.MockClassControlTest.testEquals":287,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":130,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":94,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":227,"org.easymock.tests2.CaptureTest.testCaptureAll":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":175,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":205,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":11,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":204,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":300,"org.easymock.tests2.UsageConstraintsTest.testMatches":38,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":315,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":224,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":145,"org.easymock.tests.ObjectMethodsTest.testHashCode":290,"org.easymock.samples.ExampleTest.voteForRemovals":75,"org.easymock.tests2.NameTest.nameForNiceMock":247,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":232,"org.easymock.tests.UsageVarargTest.allKinds":2,"org.easymock.tests2.DependencyTest.testInterfaceMocking":249,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":164,"org.easymock.samples.BasicClassMockTest.testPrintContent":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":176,"org.easymock.samples.ExampleTest.addDocument":74,"org.easymock.tests2.DelegateToTest.testStubDelegate":242,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":153,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":233,"org.easymock.tests2.AnswerTest.stubAnswer":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":171,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":13,"org.easymock.tests2.UsageConstraintsTest.greaterThan":40,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":132,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":312,"org.easymock.tests.UsageVarargTest.varargLongAccepted":126,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":162,"org.easymock.samples.ExampleTest.voteForRemoval":72,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":230,"org.easymock.tests.UsageExpectAndReturnTest.floatType":102,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":310,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":207,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":274,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":41,"org.easymock.tests.UsageThrowableTest.noUpperLimit":148,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":250,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":23,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":155,"org.easymock.tests2.SerializationTest.test":214,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":56,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":318,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":149,"org.easymock.tests2.UsageConstraintsTest.testSame":28,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":101,"org.easymock.samples.SupportTest.addDocument":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":167,"org.easymock.tests2.CaptureTest.testCaptureFirst":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":319,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":262,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":296,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":107,"org.easymock.tests.GenericTest.testPackageScope":129,"org.easymock.tests2.UsageTest.moreThanOneArgument":252,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":65,"org.easymock.tests2.CaptureTest.testCapture2_2446744":63,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":219,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":128,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":347,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":344,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":304,"org.easymock.tests2.NameTest.nameForMock":245,"org.easymock.tests.UsageExpectAndReturnTest.longType":103,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":173,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":95,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":112,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":44,"org.easymock.tests2.UsageStrictMockTest.differentMethods":237,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":93,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":349,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":142,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":104,"org.easymock.tests.UsageCallCountTest.tooManyCalls":305,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":91,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":134,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":181,"org.easymock.tests2.MockedExceptionTest.testRealException":211,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":108,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":68,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":82,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":66,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":302,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":4,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":152,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":203,"org.easymock.tests2.NameTest.nameForStrictMock":246,"org.easymock.tests2.UsageConstraintsTest.testContains":35,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":180,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":210,"org.easymock.tests2.UsageConstraintsTest.testFind":26,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":136,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":264,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":49,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":199,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":50,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":157,"org.easymock.tests.UsageExpectAndReturnTest.object":110,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":42,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":21,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":329,"org.easymock.tests2.UsageStrictMockTest.range":236,"org.easymock.tests2.UsageConstraintsTest.lessThan":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":324,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":124,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":291,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":348,"org.easymock.tests.UsageTest.exactCallCountByLastCall":193,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":268,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":10,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":317,"org.easymock.tests2.CaptureTest.testCaptureRightOne":61,"org.easymock.tests2.UsageConstraintsTest.testOr":29,"org.easymock.tests.UsageRangeTest.combination":131,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":196,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":116,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":120,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":307,"org.easymock.tests.UsageTest.wrongArguments":188,"org.easymock.tests.MockClassControlTest.testHashCode":286,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":156,"org.easymock.tests2.EasyMockSupportTest.testVerify":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":113,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":351,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":306,"org.easymock.tests.UsageVarargTest.varargShortAccepted":125,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":303,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":225,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":67,"org.easymock.tests2.UsageConstraintsTest.cmpTo":34,"org.easymock.tests.UsageVarargTest.varargCharAccepted":123,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":234,"org.easymock.tests2.UsageTest.openCallCountByLastCall":256,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":257,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":327,"org.easymock.tests.DefaultClassInstantiatorTest.object":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":263,"org.easymock.tests2.CaptureTest.testCaptureFromStub":62,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":293,"org.easymock.tests.UsageTest.unexpectedCallWithArray":187,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":289,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":84,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":150,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":183,"org.easymock.tests2.ConstraintsToStringTest.anyToString":340,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":114,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":311,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":285,"org.easymock.tests2.UsageConstraintsTest.constraints":24,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":83,"org.easymock.samples.ExampleTest.addAndChangeDocument":76,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":117,"org.easymock.tests.UsageStrictMockTest.testVerify":163,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":337,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":284,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":174,"org.easymock.tests2.UsageTest.resumeIfFailure":261,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":18,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":106,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":322,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":121}}]
