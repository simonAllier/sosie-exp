[{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:624","sourceCode":"org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[44,45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[47,48,49,50,50,51,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,45,89,90,91,92,93,94,95,96,97,98,99,100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[101],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[28,102,103,104,105,106,107,108,109,29,47,48,110,111,49,50,51,112,113,52,114,53,115,116,117,118,119,30,31,32,33,34,120,35,36,121,122,123,124,125,54,55,56,57,126,127,58,59,128,129,130,131,37,38,39,40,41,132,42,43,133,134,135,136,137,138,139,140,141,142,143,144,145,0,146,147,1,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,60,170,171,61,172,173,174,175,176,177,178,179,180,62,181,182,183,184,185,63,186,187,2,3,4,188,189,5,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,6,205,206,7,207,208,209,210,211,212,213,214,8,215,216,44,217,218,219,220,221,222,223,224,225,226,9,227,10,228,229,230,231,232,11,12,233,234,235,236,13,237,238,239,240,241,242,243,244,245,246,247,248,249,64,250,65,251,252,253,254,255,256,67,257,69,70,258,259,71,72,73,260,74,261,262,75,76,263,78,79,80,264,81,82,83,84,265,85,266,267,86,87,88,45,268,46,269,270,14,271,272,273,274,275,276,277,278,279,280,281,282,89,90,91,283,92,284,285,286,287,93,288,289,290,291,292,293,294,295,296,15,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,16,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,17,333,334,335,336,337,338,339,340,341,94,342,343,344,345,346,347,348,95,349,350,351,352,353,354,355,356,357,358,359,360,101,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,18,383,384,385,386,387,19,388,389,390,391,392,20,393,394,395,21,396,22,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,23,427,428,429,430,431,24,432,433,434,435,436,25,437,438,439,26,440,27,441,442,443,444,445,446,96,97,98,447,99,448,449,450,451,452,453,454,455,456,457,458,459,460,100,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[227,10,228,229,230,231,232,11,233,234,235,236,13,491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[211,213,219,221],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:183","failures":[28,102,103,104,105,106,107,109,29,47,48,110,111,49,52,53,32,124,125,54,55,56,57,127,58,59,39,135,136,137,138,139,140,0,146,147,1,149,150,151,152,157,158,159,61,62,63,2,4,188,189,5,190,191,192,194,195,196,197,198,199,201,202,203,204,6,205,206,7,207,208,209,210,211,212,213,214,8,219,221,223,224,225,9,227,10,228,229,231,232,11,12,233,234,13,237,239,240,241,242,245,246,247,248,249,64,250,65,251,254,255,256,71,73,74,79,264,81,83,270,14,275,277,278,90,295,296,15,297,298,299,324,326,327,328,329,330,332,17,335,336,339,94,95,373,374,375,376,377,378,379,380,381,382,18,383,384,385,386,387,19,388,389,390,391,392,20,393,394,395,21,396,22,397,403,405,406,407,409,410,412,413,414,415,416,418,419,420,421,422,423,424,425,23,427,428,429,430,431,24,432,433,434,435,436,25,437,438,439,26,440,27,441,97,98,99,453,454,455,456,458,459],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[47,48,49,50,51,112,113,52,53,115,116,54,55,56,57,58,59,160,164,167,168,60,171,61,172,173,174,176,177,178,179,62,181,182,183,184,185,63,64,65,67,257,69,70,258,259,71,72,73,260,74,262,75,76,263,78,79,80,81,82,83,84,85,266,267,86,87,88,45,268,46,282,89,90,91,283,92,93,340,341,94,342,95,445,446,96,97,98,99,450,460,100,461,462,463,464,465,466,479,480,481,482,483,484,486],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[102,103,104,105,107,109,111,49,50,50,51,51,112,113,52,114,53,32,124,125,54,55,56,57,127,58,59,39,136,138,139,0,146,147,1,149,151,152,153,156,157,158,159,60,61,62,63,2,3,4,188,189,5,190,191,192,194,195,196,197,198,199,201,202,203,204,6,205,206,7,207,208,209,210,212,213,214,8,219,221,222,223,224,225,226,9,227,10,229,230,11,12,233,234,235,236,13,237,238,239,240,241,242,243,244,245,246,247,248,64,250,251,252,253,254,255,256,69,71,73,74,76,79,80,264,81,82,83,85,87,88,45,269,270,14,275,276,277,278,279,280,281,89,91,295,296,15,297,298,299,315,321,326,328,329,332,17,335,336,339,94,343,344,345,346,347,348,95,360,366,368,369,371,373,374,375,376,377,378,379,380,381,382,18,383,384,385,386,387,19,388,389,390,391,392,20,393,394,395,21,396,22,397,398,399,400,401,402,403,404,418,419,420,421,422,423,424,425,426,23,427,428,429,430,431,24,432,433,434,435,436,25,437,438,439,26,440,27,441,442,443,444,97,98,99,453,467,468,469,470,471,472,473,474,475,476,477,489],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[64,250,65,492],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[191,192,195,197,198,200,208,213,227,228,234],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[47,48,49,50,51,112,113,52,54,55,56,57,58,59,160,164,167,60,171,172,173,176,179,181,182,185,65,79,80,81,82,83,84,85,267,86,87,88,45,268,46,282,89,90,283,340,341,94,342,95,445,446,96,97,98,99,450,460,100,461,462,463,464,465,466,479,480,481,482,483,484,486],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[50,51,53,115,493,56,59,128,494,495,496,497,498,499,500,501,257,258,260,502,263],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[503,504,325,333,505,506],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[239,246,349,352],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[28,102,103,104,105,106,107,108,109,29,47,48,110,111,49,50,50,51,51,112,113,52,114,53,32,124,125,54,55,56,57,127,58,59,39,134,135,136,137,138,139,140,141,189,5,190,191,192,194,195,196,197,198,199,200,201,202,203,204,6,205,206,7,207,208,209,210,211,212,213,214,8,219,221,227,10,228,229,230,231,232,11,12,233,234,235,236,13,85,295,296,15,325,326,347,373,374,375,376,377,378,379,380,381,382,403,404,416],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[138,139,151,152,190,191,194,196,197,203,205,207,214,14,275,297,301,328,329,335,336,399,400],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[96],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[64,250,65,492],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[49,53,54,55,56,57,127,58,59,60,61,62,63,188,224,69,71,73,74,76,79,264,81,83,94,379,97,98,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[283],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:83","failures":[508],"status":-1,"binaryOperator":"(\"More than one value captured: \" + org.easymock.Capture<T>.(getValues()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[115,64,509,510,511,512,513,514,515,260],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[208],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[136,138,139,1,148,154,155,206,516,503,517,518,519,520,521,522,504,523,524,15,297,298,299,325,326,328,329,17,333,334,337,338,505,525,506,526,527,528,529,488,489],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[192],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Any:36","failures":[136,197,201,10,11,12,13,295,296,15,326,347,373,374,375,376,377,378,379,380,381,382,403,404],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[158],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[192,194,200,201],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[530,491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":192,"org.easymock.tests2.UsageTest.argumentsOrdered":155,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":332,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":247,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":310,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":150,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":28,"org.easymock.tests2.DelegateToTest.testReturnException":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":344,"org.easymock.tests.MockingTest.testPartialClassMocking":97,"org.easymock.tests.MockClassControlTest.testToString":461,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":215,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":468,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":175,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":23,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":61,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":510,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":199,"org.easymock.tests2.UsageTest.wrongArguments":148,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":373,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":121,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":273,"org.easymock.samples.ExampleTest.answerVsDelegate":103,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":93,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":449,"org.easymock.tests2.UsageConstraintsTest.testNull":195,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":81,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":466,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":246,"org.easymock.tests2.CaptureTest.testPrimitive":229,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":377,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":441,"org.easymock.tests.UsageTest.moreThanOneArgument":17,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":472,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":398,"org.easymock.tests.UsageTest.argumentsOrdered":338,"org.easymock.tests.UsageVarargTest.varargIntAccepted":407,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":523,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":378,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":514,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":67,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":162,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":43,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":382,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":519,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":32,"org.easymock.tests.ReplayStateInvalidUsageTest.times":362,"org.easymock.tests2.DependencyTest.testClassMocking":122,"org.easymock.tests2.AnswerTest.answer":251,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":316,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":145,"org.easymock.tests2.CaptureTest.testAnd":227,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":285,"org.easymock.tests2.UsageTest.strictResetToDefault":147,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":86,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":241,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":277,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":402,"org.easymock.tests2.DelegateToTest.testDelegate":9,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":439,"org.easymock.tests.LimitationsTest.mockFinalMethod":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":347,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":294,"org.easymock.tests2.DependencyTest.testClassMockingSupport":123,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":488,"org.easymock.tests2.CaptureTest.testCapture1_2446744":230,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":265,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":437,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":143,"org.easymock.tests.UsageThrowableTest.throwError":418,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":357,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":287,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":487,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":474,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":187,"org.easymock.samples.PartialClassMockTest.testGetArea":49,"org.easymock.tests.MockingTest.testInterfaceMocking":447,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":379,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":443,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":176,"org.easymock.tests2.UsageTest.niceToStrict":149,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":354,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":300,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":71,"org.easymock.tests2.MockBuilderTest.testCreateMock":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":183,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":120,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":503,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":434,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":242,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":284,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":281,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":451,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":271,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":498,"org.easymock.tests.UsageOverloadedMethodTest.overloading":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":180,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":6,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":369,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":392,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":269,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":204,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":233,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":408,"org.easymock.tests.MockClassControlTest.testEquals":465,"org.easymock.tests2.EasyMockSupportClassTest.testAll":60,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":90,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":521,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":440,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":144,"org.easymock.tests2.CaptureTest.testCaptureAll":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":292,"org.easymock.tests.MockNameTest.defaultName":417,"org.easymock.tests2.UsageConstraintsTest.testMatches":205,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":473,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":355,"org.easymock.samples.ExampleTest.voteForRemovals":107,"org.easymock.tests.UsageVarargTest.allKinds":416,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":297,"org.easymock.samples.BasicClassMockTest.testPrintContent":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":293,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":424,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":134,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":41,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":226,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":348,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":515,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":485,"org.easymock.tests2.UsageConstraintsTest.greaterThan":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":170,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":276,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":45,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":486,"org.easymock.samples.ExampleTest.voteForRemoval":104,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":3,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":268,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":288,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":84,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":146,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":95,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":307,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":239,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":343,"org.easymock.tests2.CaptureTest.testCaptureFirst":13,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":240,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":157,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":388,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":188,"org.easymock.tests2.UsageTest.moreThanOneArgument":1,"org.easymock.tests2.CaptureTest.testCapture2_2446744":236,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":317,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":415,"org.easymock.tests.GenericTest.testBridgedEquals":283,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":499,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":496,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":458,"org.easymock.tests.UsageExpectAndReturnTest.longType":385,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":290,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":27,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":77,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":426,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":211,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":26,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":476,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":470,"org.easymock.tests.UsageCallCountTest.tooManyCalls":459,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":525,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":184,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":389,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":36,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":431,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":423,"org.easymock.tests.MockingTest.testNiceClassMocking":450,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":55,"org.easymock.tests.MockingTest.testClassMocking":446,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":452,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":68,"org.easymock.tests2.UsageConstraintsTest.testContains":203,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":52,"org.easymock.tests2.UsageConstraintsTest.testFind":194,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":14,"org.easymock.tests.MockTypeTest.fromEasyMockClass":286,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":221,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":323,"org.easymock.tests.UsageExpectAndReturnTest.object":391,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":85,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":511,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":410,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":352,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":500,"org.easymock.tests.UsageTest.exactCallCountByLastCall":339,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":305,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":467,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":399,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":528,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":115,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":405,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":21,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":368,"org.easymock.tests.MockClassControlTest.testHashCode":464,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":130,"org.easymock.tests2.EasyMockSupportTest.testVerify":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":178,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":518,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":400,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":280,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":366,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":142,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":141,"org.easymock.tests.UsageVarargTest.varargCharAccepted":409,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":478,"org.easymock.tests2.CaptureTest.testCaptureMultiple":508,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":322,"org.easymock.tests2.UsageTest.openCallCountByLastCall":151,"org.easymock.tests.DefaultClassInstantiatorTest.object":479,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":248,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":279,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":350,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":529,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":421,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":30,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":129,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":463,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":87,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":24,"org.easymock.tests.CapturesMatcherTest.test":491,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":396,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":475,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":520,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":63,"org.easymock.tests2.UsageTest.resumeIfFailure":156,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":92,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":346,"org.easymock.tests2.StubTest.stubWithReturnValue":159,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":260,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":390,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":212,"org.easymock.tests2.SerializationTest.testAllMockedMethod":65,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":315,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":504,"org.easymock.samples.SupportTest.voteForRemovals":111,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":282,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":37,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":25,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":492,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":321,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":252,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":469,"org.easymock.tests.UsageExpectAndThrowTest.object":435,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":209,"org.easymock.tests2.DelegateToTest.testWrongClass":225,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":295,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":296,"org.easymock.samples.ConstructorCalledMockTest.testTax":50,"org.easymock.tests.UsageStrictMockTest.range":328,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":165,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":244,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":54,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":497,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":436,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":167,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":337,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":272,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":505,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":444,"org.easymock.tests2.CaptureTest.testCaptureNone":12,"org.easymock.tests.UsageUnorderedTest.message":15,"org.easymock.tests.UsageVerifyTest.twoReturns":299,"org.easymock.tests.UsageVarargTest.varargByteAccepted":414,"org.easymock.tests2.ThreadingTest.testThreadSafe":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":181,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":456,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":47,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":353,"org.easymock.tests2.CaptureTest.testCapture_2617107":228,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":524,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":319,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":376,"org.easymock.tests2.UsageConstraintsTest.any":201,"org.easymock.tests2.StubTest.stub":158,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":361,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":477,"org.easymock.tests.UsageExpectAndThrowTest.longType":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":320,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":345,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":483,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":101,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":137,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":39,"org.easymock.tests2.SerializationTest.testClass":64,"org.easymock.tests.LimitationsTest.mockNativeMethod":94,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":397,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":91,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":119,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":140,"org.easymock.tests2.NameTest.nameForMocksControl":218,"org.easymock.tests2.MockedExceptionTest.testMockedException":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":171,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":336,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":430,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":99,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":220,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":79,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":74,"org.easymock.tests.MockingTest.testNicePartialClassMocking":98,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":83,"org.easymock.tests2.CompareToTest.testNotComparable":507,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":509,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":117,"org.easymock.tests2.CaptureTest.testCaptureLast":11,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":489,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":59,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":198,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":210,"org.easymock.tests.MockingTest.testTwoMocks":96,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":18,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":433,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":154,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":214,"org.easymock.samples.ExampleTest.removeNonExistingDocument":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":34,"org.easymock.tests.UsageStrictMockTest.differentMethods":329,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":131,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":481,"org.easymock.tests2.ConstraintsToStringTest.andToString":522,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":4,"org.easymock.tests2.MockBuilderTest.testCreateMockString":78,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":460,"org.easymock.tests.UsageExpectAndThrowTest.floatType":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":172,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":169,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":254,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":116,"org.easymock.tests.UsageVerifyTest.twoThrows":298,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":62,"org.easymock.samples.ExampleTest.voteAgainstRemoval":105,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":311,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":88,"org.easymock.tests.LimitationsTest.privateConstructor":341,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":495,"org.easymock.tests2.UsageConstraintsTest.testNotNull":213,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":425,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":112,"org.easymock.tests2.UsageTest.defaultResetToNice":153,"org.easymock.samples.ExampleTest.voteAgainstRemovals":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":16,"org.easymock.tests.UsageVarargTest.differentLength":411,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":118,"org.easymock.tests2.CallbackTest.callback":0,"org.easymock.tests2.UsageConstraintsTest.equals":193,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":526,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":266,"org.easymock.tests.UsageTest.openCallCountByLastCall":335,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":375,"org.easymock.tests.UsageCallCountTest.tooFewCalls":454,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":57,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":274,"org.easymock.tests.UsageThrowableTest.throwCheckedException":422,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":506,"org.easymock.tests.MockingTest.testStrictClassMocking":445,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":404,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":33,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":56,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":363,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":127,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":256,"org.easymock.tests.ObjectMethodsTest.testHashCode":351,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":513,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":189,"org.easymock.tests2.NameTest.nameForNiceMock":217,"org.easymock.tests2.DependencyTest.testInterfaceMocking":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":512,"org.easymock.samples.ExampleTest.addDocument":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":186,"org.easymock.tests2.DelegateToTest.testStubDelegate":224,"org.easymock.tests2.AnswerTest.stubAnswer":255,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":326,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":261,"org.easymock.tests.UsageVarargTest.varargLongAccepted":413,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":309,"org.easymock.tests.UsageExpectAndReturnTest.floatType":384,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":53,"org.easymock.tests2.ConstraintsToStringTest.orToString":516,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":51,"org.easymock.tests.UsageThrowableTest.noUpperLimit":419,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":42,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":207,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":370,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":190,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":160,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":231,"org.easymock.tests2.SerializationTest.test":250,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":480,"org.easymock.tests2.UsageConstraintsTest.testSame":196,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":383,"org.easymock.samples.SupportTest.addDocument":110,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":126,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":173,"org.easymock.tests.GenericTest.testPackageScope":89,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":304,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":132,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":448,"org.easymock.tests2.NameTest.nameForMock":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":20,"org.easymock.tests2.UsageStrictMockTest.differentMethods":139,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":263,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":267,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":386,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":438,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":349,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":278,"org.easymock.tests2.MockedExceptionTest.testRealException":114,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":289,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":527,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":312,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":365,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":374,"org.easymock.tests2.NameTest.nameForStrictMock":44,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":259,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":493,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":219,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":82,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":164,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":482,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":208,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":69,"org.easymock.tests2.UsageStrictMockTest.range":138,"org.easymock.tests2.UsageConstraintsTest.lessThan":8,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":38,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":177,"org.easymock.tests2.CaptureTest.testCaptureRightOne":234,"org.easymock.tests2.UsageConstraintsTest.testOr":197,"org.easymock.tests.UsageRangeTest.combination":275,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":80,"org.easymock.tests.UsageTest.wrongArguments":334,"org.easymock.tests2.MockBuilderTest.testWithConstructor":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":174,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":387,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":301,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":484,"org.easymock.tests.UsageVarargTest.varargShortAccepted":412,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":457,"org.easymock.tests2.UsageConstraintsTest.cmpTo":202,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":303,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":152,"org.easymock.tests2.CaptureTest.testCaptureFromStub":235,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":356,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":70,"org.easymock.tests.UsageTest.unexpectedCallWithArray":333,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":325,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":455,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":502,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":394,"org.easymock.tests2.CaptureTest.testCapture":530,"org.easymock.tests2.UsageConstraintsTest.constraints":191,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":327,"org.easymock.samples.ExampleTest.addAndChangeDocument":109,"org.easymock.tests2.ConstraintsToStringTest.notToString":517,"org.easymock.tests.UsageStrictMockTest.testVerify":331,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":29,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":324,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":291,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":232,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":380,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":19,"org.easymock.tests.LimitationsTest.abstractClass":340,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":381,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":406,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":243}}]
