[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[0,1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[23,24,25,26,27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[28,29,30,31,24,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[57],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[58],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[59,60,61,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[63,64,65,66,67,68,69,70,71,72],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:106","sourceCode":"for (final java.lang.reflect.Field java.lang.reflect.Field : java.lang.reflect.Field[]) {\n    final org.easymock.TestSubject org.easymock.TestSubject = java.lang.reflect.Field.getAnnotation(org.easymock.TestSubject.org.easymock.TestSubject);\n    if (org.easymock.TestSubject != null) {\n        org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field);\n        continue;\n    } \n    final org.easymock.Mock org.easymock.Mock = java.lang.reflect.Field.getAnnotation(org.easymock.Mock.org.easymock.Mock);\n    if (org.easymock.Mock == null) {\n        continue;\n    } \n    final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType();\n    java.lang.String java.lang.String = org.easymock.Mock.java.lang.String();\n    java.lang.String = (java.lang.String.length()) == 0 ? null : java.lang.String;\n    final org.easymock.MockType org.easymock.MockType = org.easymock.Mock.org.easymock.MockType();\n    java.lang.Object java.lang.Object;\n    if (java.lang.Object instanceof org.easymock.EasyMockSupport) {\n        java.lang.Object = ((org.easymock.EasyMockSupport)(java.lang.Object)).createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n    } else {\n        java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n    }\n    java.lang.reflect.Field.setAccessible(true);\n    try {\n        java.lang.reflect.Field.set(java.lang.Object, java.lang.Object);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n    }\n    org.easymock.internal.InjectionPlan.addInjection(new org.easymock.internal.Injection(java.lang.Object , org.easymock.Mock));\n}","type":"CtForEachImpl"},"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[99,100,101,102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[104,105],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[106],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[107,108,109,110,111,112,5,113,114,115,116,117,78,90,6,11,14,18,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[104,99,158,100,159,160,161,162,163,164,107,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,108,204,205,206,207,208,209,109,210,211,212,213,110,4,214,215,216,217,218,219,220,111,112,221,222,223,224,225,226,227,228,5,229,230,231,232,113,233,234,235,236,237,114,115,116,117,238,239,240,241,73,74,75,76,77,78,79,80,81,82,83,84,101,242,243,244,245,246,247,248,249,250,251,252,253,254,255,34,256,35,36,257,258,259,260,261,262,85,86,87,88,89,90,91,92,93,94,95,96,6,263,8,9,264,265,10,11,12,266,13,267,268,14,15,269,18,270,271,272,273,274,275,276,277,278,279,280,37,38,281,282,283,284,118,39,40,285,286,287,288,289,290,291,68,292,69,293,294,295,296,297,298,299,57,300,301,302,303,58,70,304,305,71,306,307,308,309,310,311,312,313,72,314,315,316,317,318,319,320,321,322,19,323,324,325,326,20,327,328,119,120,121,122,123,124,125,126,127,128,129,130,329,0,1,330,331,332,333,334,41,42,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,131,351,352,353,354,355,356,357,132,133,134,135,358,359,360,361,362,363,21,364,59,365,366,60,61,367,368,369,370,2,3,371,372,373,374,43,375,136,376,377,378,379,137,380,381,44,45,46,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,27,47,400,48,49,401,138,402,403,404,405,406,407,408,409,410,139,140,141,142,143,144,145,146,147,148,149,150,151,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,62,440,105,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,152,153,154,465,466,467,50,155,51,468,469,52,53,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,102,54,103,493,55,56,156,97,494,495,496,497,498,499,500,501,157,502,503,504,22,505,506,98],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[507,508],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[164,107,165,166,167,168,169,170,171,172,173,174,175,176,177,218,220,230,113,34,256,290,68,292,69,293,295,296,297,298,299,57,300,301,302,303,58,70,304,305,71,306,307,308,309,310,311,312,313,72,318,319,320,321,322,330,331,332,333,334,41,43,396,398,27,47,406,407,409,410,139,491,492],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[106],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"position":"org.easymock.internal.RecordState:327","failures":[0,1,2,3],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[279,284,338,45,467,469],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[104,99,158,100,159,160,161,162,163,164,107,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,108,204,205,206,207,208,209,109,210,211,212,213,110,4,214,215,216,217,218,219,220,111,112,221,222,223,224,225,226,227,228,5,229,230,231,232,113,233,234,235,236,237,114,115,116,117,238,239,240,241,73,74,75,76,77,78,79,80,81,82,83,84,101,242,243,244,245,246,247,248,249,250,251,252,253,254,255,34,256,35,36,257,258,259,260,261,262,85,86,87,88,89,90,91,92,93,94,95,96,6,263,8,9,264,265,10,11,12,266,13,267,268,14,15,269,18,270,271,272,273,274,275,276,277,278,279,280,37,38,281,282,283,284,118,39,40,285,286,287,288,289,290,291,68,292,69,293,294,295,296,297,298,299,57,300,301,302,303,58,70,304,305,71,306,307,308,309,310,311,312,313,72,314,315,316,317,318,319,320,321,322,19,323,324,325,326,20,327,328,119,120,121,122,123,124,125,126,127,128,129,130,329,0,1,330,331,332,333,334,41,42,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,131,351,352,353,354,355,356,357,132,133,134,135,358,359,360,361,362,363,21,364,59,365,366,60,61,367,368,369,370,2,3,371,372,373,374,43,375,136,376,377,378,379,137,380,381,44,45,46,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,27,47,400,48,49,401,138,402,403,404,405,406,407,408,409,410,139,140,141,142,143,144,145,146,147,148,149,150,151,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,62,440,105,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,152,153,154,465,466,467,50,155,51,468,469,52,53,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,102,54,103,493,55,56,156,97,494,495,496,497,498,499,500,501,157,502,503,504,22,505,506,98],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:131","sourceCode":"return ","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[509],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[245,246],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[160,165,166,167,169,170,171,172,173,174,177,203,108,204,205,206,208,209,211,212,213,224,227,234,254,255,34,256,35,36,257,10,15,280,281,282,39,40,293,296,299,57,301,58,305,307,308,309,310,311,312,318,319,320,41,336,339,340,341,342,343,371,43,377,379,381,45,383,385,386,387,389,390,392,393,394,395,396,398,399,47,400,48,49,401,52,53,496,498,499,501,502,504,22],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[161,181,184,194,200,4,215,221,223,224,226,227,228,5,230,113,233,234,235,6,7,8,9,10,11,12,13,14,15,17,18,270,271,272,273,276,277,510,511,512,316,19,20,362,363,21,140,411,456,457,458,460,494,495,22,505,505,506,506],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[4,214,215,513],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[13,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:70","failures":[35,36,48,49],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[4,214,215,513],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[354,514,515],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:227","sourceCode":"net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[231,516,269,517,505,506],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"org.easymock.MockType.STRICT","org.easymock.MockType.STRICT":"type"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[217,111,112,221,222,320,329,0,1,402,403,404,405,406,407,410,439],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":293,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":467,"org.easymock.tests2.UsageTest.argumentsOrdered":40,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":212,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":105,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":282,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":98,"org.easymock.tests2.DelegateToTest.testReturnException":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":403,"org.easymock.tests.MockingTest.testPartialClassMocking":457,"org.easymock.tests.MockClassControlTest.testToString":141,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":258,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":188,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":471,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":184,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":241,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":57,"org.easymock.tests2.UsageTest.wrongArguments":38,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":318,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":84,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":134,"org.easymock.samples.ExampleTest.answerVsDelegate":497,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":20,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":462,"org.easymock.tests2.UsageConstraintsTest.testNull":296,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":226,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":146,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":211,"org.easymock.tests2.CaptureTest.testPrimitive":167,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":322,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":490,"org.easymock.tests.UsageTest.moreThanOneArgument":50,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":347,"org.easymock.tests.UsageTest.argumentsOrdered":53,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":59,"org.easymock.tests.UsageVarargTest.varargIntAccepted":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":445,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":32,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":330,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":6,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":95,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":249,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":334,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":30,"org.easymock.tests.ReplayStateInvalidUsageTest.times":127,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":78,"org.easymock.tests2.DependencyTest.testClassMocking":238,"org.easymock.tests2.AnswerTest.answer":101,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":447,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":117,"org.easymock.tests2.CaptureTest.testAnd":107,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":324,"org.easymock.tests2.UsageTest.strictResetToDefault":280,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":113,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":373,"org.easymock.tests2.DelegateToTest.testDelegate":160,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":61,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":486,"org.easymock.tests.LimitationsTest.mockFinalMethod":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":406,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":151,"org.easymock.tests2.DependencyTest.testClassMockingSupport":239,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":41,"org.easymock.tests2.CaptureTest.testCapture1_2446744":168,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":484,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":115,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":121,"org.easymock.tests.UsageThrowableTest.throwError":336,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":326,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":408,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":96,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":349,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":517,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":202,"org.easymock.samples.PartialClassMockTest.testGetArea":22,"org.easymock.tests.MockingTest.testInterfaceMocking":459,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":122,"org.easymock.tests2.CompareToTest.testLessOrEqual":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":331,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":368,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":472,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":189,"org.easymock.tests2.UsageTest.niceToStrict":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":10,"org.easymock.tests2.MockBuilderTest.testCreateMock":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":197,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":81,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":480,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":23,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":208,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":132,"org.easymock.tests.UsageOverloadedMethodTest.overloading":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":199,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":493,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":70,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":423,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":382,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":514,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":58,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":173,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":388,"org.easymock.tests2.EasyMockSupportClassTest.testAll":181,"org.easymock.tests.MockClassControlTest.testEquals":145,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":363,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":488,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":510,"org.easymock.tests2.CaptureTest.testCaptureAll":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":149,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":116,"org.easymock.tests.MockNameTest.defaultName":397,"org.easymock.tests2.UsageConstraintsTest.testMatches":304,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":348,"org.easymock.samples.ExampleTest.voteForRemovals":501,"org.easymock.tests.UsageVarargTest.allKinds":396,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":44,"org.easymock.samples.BasicClassMockTest.testPrintContent":495,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":150,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":342,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":254,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":407,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":159,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":92,"org.easymock.tests2.UsageConstraintsTest.greaterThan":71,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":182,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":372,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":235,"org.easymock.samples.ExampleTest.voteForRemoval":498,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":357,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":236,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":288,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":16,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":327,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":250,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":5,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":411,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":279,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":205,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":402,"org.easymock.tests2.CaptureTest.testCaptureFirst":177,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":206,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":286,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":156,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":419,"org.easymock.tests2.CaptureTest.testCapture2_2446744":176,"org.easymock.tests2.UsageTest.moreThanOneArgument":37,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":448,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":15,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":395,"org.easymock.tests.GenericTest.testBridgedEquals":364,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":380,"org.easymock.tests.UsageExpectAndReturnTest.longType":415,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":147,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":108,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":489,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":17,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":310,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":487,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":0,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":345,"org.easymock.tests.UsageCallCountTest.tooManyCalls":381,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":198,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":420,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":83,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":476,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":341,"org.easymock.tests.MockingTest.testNiceClassMocking":463,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":271,"org.easymock.tests.MockingTest.testClassMocking":455,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":136,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":7,"org.easymock.tests2.UsageConstraintsTest.testContains":303,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":221,"org.easymock.tests2.UsageConstraintsTest.testFind":295,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":384,"org.easymock.tests.MockTypeTest.fromEasyMockClass":325,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":398,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":220,"org.easymock.tests.UsageExpectAndReturnTest.object":422,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":82,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":509,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":210,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":390,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":154,"org.easymock.tests.UsageTest.exactCallCountByLastCall":470,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":358,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":365,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":162,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":428,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":385,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":103,"org.easymock.tests.MockClassControlTest.testHashCode":144,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":86,"org.easymock.tests2.EasyMockSupportTest.testVerify":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":191,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":366,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":102,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":2,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":114,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":164,"org.easymock.tests.UsageVarargTest.varargCharAccepted":389,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":350,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":453,"org.easymock.tests2.UsageTest.openCallCountByLastCall":283,"org.easymock.tests.DefaultClassInstantiatorTest.object":131,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":213,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":370,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":152,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":192,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":339,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":76,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":85,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":143,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":233,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":477,"org.easymock.tests.CapturesMatcherTest.test":508,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":429,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":329,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":200,"org.easymock.tests2.UsageTest.resumeIfFailure":285,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":19,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":405,"org.easymock.tests2.StubTest.stubWithReturnValue":217,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":266,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":421,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":311,"org.easymock.tests2.SerializationTest.testAllMockedMethod":215,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":446,"org.easymock.samples.SupportTest.voteForRemovals":504,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":24,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":361,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":88,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":483,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":513,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":452,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":242,"org.easymock.tests.UsageExpectAndThrowTest.object":481,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":360,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":308,"org.easymock.tests2.DelegateToTest.testWrongClass":100,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":491,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":492,"org.easymock.samples.ConstructorCalledMockTest.testTax":505,"org.easymock.tests.UsageStrictMockTest.range":48,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":252,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":109,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":270,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":482,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":178,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":129,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":133,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":25,"org.easymock.tests2.CaptureTest.testCaptureNone":172,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":369,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":106,"org.easymock.tests.UsageUnorderedTest.message":43,"org.easymock.tests.UsageVerifyTest.twoReturns":46,"org.easymock.tests.UsageVarargTest.varargByteAccepted":394,"org.easymock.tests2.ThreadingTest.testThreadSafe":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":195,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":379,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":494,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":465,"org.easymock.tests2.CaptureTest.testCapture_2617107":166,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":33,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":450,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":321,"org.easymock.tests2.UsageConstraintsTest.any":301,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":126,"org.easymock.tests2.StubTest.stub":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":1,"org.easymock.tests.UsageExpectAndThrowTest.longType":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":404,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":354,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":125,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":256,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":90,"org.easymock.tests.LimitationsTest.mockNativeMethod":316,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":431,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":21,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":512,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":75,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":257,"org.easymock.tests2.NameTest.nameForMocksControl":262,"org.easymock.tests2.MockedExceptionTest.testMockedException":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":183,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":469,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":475,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":460,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":219,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":223,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":13,"org.easymock.tests.MockingTest.testNicePartialClassMocking":458,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":228,"org.easymock.tests2.CaptureTest.testCaptureLast":171,"org.easymock.tests2.CompareToTest.testCompareEqual":65,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":73,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":42,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":277,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":299,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":309,"org.easymock.tests.MockingTest.testTwoMocks":456,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":278,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":412,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":479,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":39,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":313,"org.easymock.samples.ExampleTest.removeNonExistingDocument":157,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":123,"org.easymock.tests.UsageStrictMockTest.differentMethods":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":80,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":87,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":352,"org.easymock.tests2.ConstraintsToStringTest.andToString":31,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":289,"org.easymock.tests2.MockBuilderTest.testCreateMockString":18,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":139,"org.easymock.tests.UsageExpectAndThrowTest.floatType":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":185,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":180,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":244,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":163,"org.easymock.tests.UsageVerifyTest.twoThrows":45,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":194,"org.easymock.samples.ExampleTest.voteAgainstRemoval":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":441,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":367,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":234,"org.easymock.tests.LimitationsTest.privateConstructor":315,"org.easymock.tests2.UsageConstraintsTest.testNotNull":312,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":343,"org.easymock.tests2.UsageTest.defaultResetToNice":118,"org.easymock.samples.ExampleTest.voteAgainstRemovals":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":427,"org.easymock.tests.UsageVarargTest.differentLength":391,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":74,"org.easymock.tests2.CallbackTest.callback":203,"org.easymock.tests2.UsageConstraintsTest.equals":294,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":231,"org.easymock.tests.UsageTest.openCallCountByLastCall":468,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":320,"org.easymock.tests.UsageCallCountTest.tooFewCalls":377,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":273,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":135,"org.easymock.tests.UsageThrowableTest.throwCheckedException":340,"org.easymock.tests.MockingTest.testStrictClassMocking":454,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":26,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":410,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":276,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":79,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":272,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":128,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":275,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":246,"org.easymock.tests.ObjectMethodsTest.testHashCode":153,"org.easymock.tests2.CompareToTest.testGreateOrEqual":66,"org.easymock.tests2.NameTest.nameForNiceMock":261,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":291,"org.easymock.tests2.DependencyTest.testInterfaceMocking":240,"org.easymock.samples.ExampleTest.addDocument":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":196,"org.easymock.tests2.DelegateToTest.testStubDelegate":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":201,"org.easymock.tests2.AnswerTest.stubAnswer":245,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":47,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":267,"org.easymock.tests.UsageVarargTest.varargLongAccepted":393,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":440,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":430,"org.easymock.tests.UsageExpectAndReturnTest.floatType":414,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":161,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":506,"org.easymock.tests2.ConstraintsToStringTest.orToString":28,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":94,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":306,"org.easymock.tests.UsageThrowableTest.noUpperLimit":337,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":292,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":247,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":169,"org.easymock.tests2.SerializationTest.test":214,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":515,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":351,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":413,"org.easymock.tests2.UsageConstraintsTest.testSame":297,"org.easymock.samples.SupportTest.addDocument":503,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":274,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":186,"org.easymock.tests.GenericTest.testPackageScope":362,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":93,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":461,"org.easymock.tests2.NameTest.nameForMock":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":424,"org.easymock.tests2.UsageStrictMockTest.differentMethods":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":269,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":232,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":416,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":485,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":464,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":374,"org.easymock.tests2.MockedExceptionTest.testRealException":222,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":443,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":34,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":319,"org.easymock.tests2.NameTest.nameForStrictMock":260,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":265,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":218,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":227,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":251,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":307,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":353,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":8,"org.easymock.tests2.UsageStrictMockTest.range":35,"org.easymock.tests2.UsageConstraintsTest.lessThan":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":62,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":190,"org.easymock.tests2.CaptureTest.testCaptureRightOne":174,"org.easymock.tests2.UsageConstraintsTest.testOr":298,"org.easymock.tests.UsageRangeTest.combination":371,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":224,"org.easymock.tests.UsageTest.wrongArguments":51,"org.easymock.tests2.MockBuilderTest.testWithConstructor":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":187,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":425,"org.easymock.tests.UsageVarargTest.varargShortAccepted":392,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":355,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":137,"org.easymock.tests2.UsageConstraintsTest.cmpTo":302,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":243,"org.easymock.tests2.CompareToTest.testLessThan":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":435,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":284,"org.easymock.tests2.CaptureTest.testCaptureFromStub":175,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":120,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":9,"org.easymock.tests.UsageTest.unexpectedCallWithArray":155,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":27,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":378,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":516,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":426,"org.easymock.tests2.CaptureTest.testCapture":507,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":400,"org.easymock.tests2.UsageConstraintsTest.constraints":69,"org.easymock.samples.ExampleTest.addAndChangeDocument":502,"org.easymock.tests2.ConstraintsToStringTest.notToString":29,"org.easymock.tests.UsageStrictMockTest.testVerify":138,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":97,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":148,"org.easymock.tests2.CompareToTest.testGreateThan":64,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":170,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":511,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":332,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":418,"org.easymock.tests.LimitationsTest.abstractClass":314,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":333,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":386,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":209}}]
