[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[3,4,5,6,7,8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[11,12,13,14,15,16,17,18,19],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[20,21,22,23,24,25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,11,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,2,187,188,189,190,191,192,193,194],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[195,196,197,198,199,200,201,202,203,204,205,206,207,123,208,167],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[209,11,126,210],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[12,13,14,15,16,17,19],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[26,212,212,213,213,214,215,32,216,33,1,217,218,219,220,221,222,223,224,225,226,227,228,80,81,82,229,93,94,95,97,98,99,230,100,231,101,102,103,232,119,120,121,122,123,11,210,140,141,142,143,145,146,233,148,234,149,235,150,151,236,152,237,194],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[238,69,239,70,72,240,241,242,243,244,76,77,78,79,245,246,247,248,249,250,25,251,252,155,253,254,255,162,163,164],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[26,27,28,29,30,31,256,257,34,35,36,37,38,39,42,43,45,46,47,49,50,51,52,53,54,55,56,57,258,66,77,78,79,80,81,82,259,260,261,262,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,117,119,120,121,122,140,141,142,143,144,145,146,147,148,149,150,151,152,162,163,164,165,166,194],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[263,208],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[264,265],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[12,13,14,15,16,17,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[238,266,267,239,70,78,163],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[12,13,14,15,16,17,19],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[268,269,270],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:70","failures":[78,79,163,164],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:269","sourceCode":"final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type))","type":"CtLocalVariableImpl"},"failures":[32],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[125,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[272,273,104,105,274,106,107,275,276,108,110,277,111,278,112,113],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:229","failures":[101,232,120,148,152],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[279],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[20,21,22,23,24,25],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,195,59,60,61,62,63,64,65,300,301,239,199,200,201,202,204,85,206,207,123,208,153],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[302,178,183,193],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[26,27,303,28,29,304,30,305,306,307,31,308,212,213,214,215,309,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,310,256,311,312,257,313,0,32,216,33,1,314,238,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,195,258,315,316,317,318,319,217,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,196,197,198,218,219,220,221,222,223,224,225,59,339,60,61,62,63,64,65,66,67,300,301,68,69,239,70,226,340,341,342,343,227,344,345,71,72,22,240,73,74,241,242,75,199,200,201,202,203,204,346,243,347,263,244,76,348,349,350,23,77,351,78,79,352,353,354,355,228,80,81,356,82,357,358,359,360,361,362,363,364,365,366,205,367,368,211,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,83,84,85,259,260,261,262,391,392,393,394,395,396,229,397,398,399,400,401,402,403,404,405,406,407,408,86,87,88,89,90,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,91,92,424,425,93,426,245,246,427,94,95,96,97,98,99,230,428,100,429,430,231,101,102,103,431,232,104,105,274,106,107,275,276,108,109,110,111,278,112,113,114,115,116,117,118,432,433,434,119,435,436,120,437,438,439,440,441,442,443,444,445,121,446,447,448,449,450,122,451,452,453,206,207,123,208,124,454,455,456,125,271,11,126,210,127,128,129,130,131,132,133,134,135,136,137,138,457,458,459,460,461,3,139,462,4,463,5,6,464,140,141,142,143,465,144,145,146,466,467,468,469,470,471,472,473,147,474,475,476,233,477,148,234,478,479,149,235,150,17,151,480,18,236,152,481,237,482,483,484,485,486,487,488,153,154,155,253,156,489,157,158,159,254,255,160,161,490,491,162,492,163,164,493,494,495,496,497,498,499,165,166,500,167,501,502,503,504,7,168,505,8,506,9,10,507,169,170,171,172,508,173,174,175,176,177,178,509,179,180,181,182,183,184,185,186,2,187,188,189,510,190,191,192,193,511,512,513,514,194,19,515],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[268],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[58,84,413,414,416,417,419,420,421,422,95,11,126,149,150,151,172,177],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[321,322,323,324,326,328],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[59,61],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":172,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":71,"org.easymock.tests2.UsageTest.argumentsOrdered":255,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":211,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":489,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":309,"org.easymock.tests2.DelegateToTest.testReturnException":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":200,"org.easymock.tests.MockingTest.testPartialClassMocking":80,"org.easymock.tests.MockClassControlTest.testToString":220,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":467,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":257,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":440,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":120,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":280,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":12,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":66,"org.easymock.tests2.UsageTest.wrongArguments":253,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":464,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":332,"org.easymock.samples.ExampleTest.answerVsDelegate":303,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":227,"org.easymock.tests2.UsageConstraintsTest.testNull":174,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":358,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":97,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":136,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":225,"org.easymock.tests2.CaptureTest.testPrimitive":106,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":68,"org.easymock.tests.UsageTest.moreThanOneArgument":72,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":299,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":96,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":261,"org.easymock.tests.UsageTest.argumentsOrdered":242,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":315,"org.easymock.tests.UsageVarargTest.varargIntAccepted":414,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":86,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":16,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":233,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":484,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":10,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":90,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":249,"org.easymock.tests.ReplayStateInvalidUsageTest.times":405,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":139,"org.easymock.tests2.DependencyTest.testClassMocking":498,"org.easymock.tests2.AnswerTest.answer":124,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":375,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":497,"org.easymock.tests2.CaptureTest.testAnd":104,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":341,"org.easymock.tests2.UsageTest.strictResetToDefault":154,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":478,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":131,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":56,"org.easymock.tests2.DelegateToTest.testDelegate":476,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":295,"org.easymock.tests.LimitationsTest.mockFinalMethod":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":338,"org.easymock.tests2.DependencyTest.testClassMockingSupport":499,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":245,"org.easymock.tests2.CaptureTest.testCapture1_2446744":107,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":428,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":293,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":495,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":399,"org.easymock.tests.UsageThrowableTest.throwError":59,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":343,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":507,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":452,"org.easymock.samples.PartialClassMockTest.testGetArea":26,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":400,"org.easymock.tests.MockingTest.testInterfaceMocking":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":87,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":441,"org.easymock.tests2.UsageTest.niceToStrict":156,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":281,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":149,"org.easymock.tests2.MockBuilderTest.testCreateMock":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":448,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":463,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":24,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":289,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":132,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":340,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":411,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":330,"org.easymock.tests.UsageOverloadedMethodTest.overloading":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":445,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":183,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":45,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":83,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":182,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":264,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":110,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":415,"org.easymock.tests2.EasyMockSupportClassTest.testAll":119,"org.easymock.tests.MockClassControlTest.testEquals":224,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":216,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":297,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":496,"org.easymock.tests2.CaptureTest.testCaptureAll":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":336,"org.easymock.tests.MockNameTest.defaultName":314,"org.easymock.tests2.UsageConstraintsTest.testMatches":184,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":397,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":262,"org.easymock.samples.ExampleTest.voteForRemovals":30,"org.easymock.tests.UsageVarargTest.allKinds":423,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":69,"org.easymock.samples.BasicClassMockTest.testPrintContent":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":337,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":64,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":490,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":475,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":8,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":204,"org.easymock.tests2.UsageConstraintsTest.greaterThan":186,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":435,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":55,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":103,"org.easymock.samples.ExampleTest.voteForRemoval":28,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":328,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":431,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":115,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":344,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":230,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":153,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":217,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":129,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":199,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":472,"org.easymock.tests2.CaptureTest.testCaptureFirst":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":130,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":161,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":41,"org.easymock.tests2.UsageTest.moreThanOneArgument":155,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":117,"org.easymock.tests2.CaptureTest.testCapture2_2446744":112,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":376,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":422,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":389,"org.easymock.tests.UsageExpectAndReturnTest.longType":37,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":127,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":334,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":298,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":510,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":258,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":296,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":259,"org.easymock.tests.UsageCallCountTest.tooManyCalls":390,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":449,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":6,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":285,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":63,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":141,"org.easymock.tests.MockingTest.testNiceClassMocking":359,"org.easymock.tests.MockingTest.testClassMocking":355,"org.easymock.tests2.UsageConstraintsTest.testContains":181,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":383,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":123,"org.easymock.tests2.UsageConstraintsTest.testFind":173,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":85,"org.easymock.tests.MockTypeTest.fromEasyMockClass":342,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":514,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":349,"org.easymock.tests.UsageExpectAndReturnTest.object":44,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":5,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":135,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":417,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":13,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":395,"org.easymock.tests.UsageTest.exactCallCountByLastCall":75,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":312,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":316,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":19,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":412,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":50,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":502,"org.easymock.tests.MockClassControlTest.testHashCode":223,"org.easymock.tests2.EasyMockSupportTest.testVerify":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":443,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":317,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":410,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":494,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":511,"org.easymock.tests.UsageVarargTest.varargCharAccepted":416,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":320,"org.easymock.tests2.CaptureTest.testCaptureMultiple":273,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":381,"org.easymock.tests2.UsageTest.openCallCountByLastCall":157,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":138,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":269,"org.easymock.tests.DefaultClassInstantiatorTest.object":321,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":409,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":444,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":287,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":461,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":501,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":101,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":222,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":286,"org.easymock.tests.CapturesMatcherTest.test":272,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":51,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":122,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":221,"org.easymock.tests2.UsageTest.resumeIfFailure":160,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":226,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":202,"org.easymock.tests2.StubTest.stubWithReturnValue":167,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":17,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":190,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":43,"org.easymock.tests2.SerializationTest.testAllMockedMethod":210,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":374,"org.easymock.samples.SupportTest.voteForRemovals":31,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":25,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":504,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":292,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":209,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":380,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":454,"org.easymock.tests.UsageExpectAndThrowTest.object":290,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":313,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":188,"org.easymock.tests2.DelegateToTest.testWrongClass":474,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":91,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":92,"org.easymock.tests.UsageStrictMockTest.range":78,"org.easymock.samples.ConstructorCalledMockTest.testTax":212,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":487,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":134,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":140,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":291,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":432,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":407,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":241,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":331,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":20,"org.easymock.tests2.CaptureTest.testCaptureNone":109,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":311,"org.easymock.tests.UsageUnorderedTest.message":238,"org.easymock.tests.UsageVerifyTest.twoReturns":70,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":279,"org.easymock.tests.UsageVarargTest.varargByteAccepted":421,"org.easymock.tests2.ThreadingTest.testThreadSafe":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":446,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":387,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":396,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":214,"org.easymock.tests2.CaptureTest.testCapture_2617107":274,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":252,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":427,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":378,"org.easymock.tests2.UsageConstraintsTest.any":179,"org.easymock.tests2.StubTest.stub":500,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":404,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":201,"org.easymock.tests.UsageExpectAndThrowTest.longType":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":379,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":325,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":403,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":492,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":168,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests.LimitationsTest.mockNativeMethod":93,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":33,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":53,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":460,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":493,"org.easymock.tests2.NameTest.nameForMocksControl":471,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":3,"org.easymock.tests2.MockedExceptionTest.testMockedException":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":436,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":74,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":513,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":82,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":284,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":94,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":151,"org.easymock.tests.MockingTest.testNicePartialClassMocking":81,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":99,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":458,"org.easymock.tests2.CaptureTest.testCaptureLast":108,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":246,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":177,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":146,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":189,"org.easymock.tests.MockingTest.testTwoMocks":228,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":466,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":288,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":254,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":192,"org.easymock.samples.ExampleTest.removeNonExistingDocument":305,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":401,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":4,"org.easymock.tests.UsageStrictMockTest.differentMethods":79,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":503,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":323,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":116,"org.easymock.tests2.ConstraintsToStringTest.andToString":250,"org.easymock.tests2.MockBuilderTest.testCreateMockString":237,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":437,"org.easymock.tests.UsageExpectAndThrowTest.floatType":282,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":434,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":456,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":515,"org.easymock.tests.UsageVerifyTest.twoThrows":239,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":121,"org.easymock.samples.ExampleTest.voteAgainstRemoval":29,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":369,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":102,"org.easymock.tests.LimitationsTest.privateConstructor":425,"org.easymock.tests2.UsageConstraintsTest.testNotNull":191,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":65,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":206,"org.easymock.tests2.UsageTest.defaultResetToNice":159,"org.easymock.samples.ExampleTest.voteAgainstRemovals":27,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":370,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":459,"org.easymock.tests.UsageVarargTest.differentLength":418,"org.easymock.tests2.CallbackTest.callback":453,"org.easymock.tests2.UsageConstraintsTest.equals":508,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":429,"org.easymock.tests.UsageTest.openCallCountByLastCall":73,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":300,"org.easymock.tests.UsageCallCountTest.tooFewCalls":385,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":143,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":333,"org.easymock.tests.UsageThrowableTest.throwCheckedException":62,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":21,"org.easymock.tests.MockingTest.testStrictClassMocking":354,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":145,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":195,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":462,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":142,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":406,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":144,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":271,"org.easymock.tests.ObjectMethodsTest.testHashCode":394,"org.easymock.tests2.CompareToTest.testGreateOrEqual":302,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":15,"org.easymock.tests2.NameTest.nameForNiceMock":470,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":118,"org.easymock.tests2.DependencyTest.testInterfaceMocking":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":14,"org.easymock.samples.ExampleTest.addDocument":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":451,"org.easymock.tests2.DelegateToTest.testStubDelegate":147,"org.easymock.tests2.AnswerTest.stubAnswer":125,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":77,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":480,"org.easymock.tests.UsageVarargTest.varargLongAccepted":420,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":368,"org.easymock.tests.UsageExpectAndReturnTest.floatType":36,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":52,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":194,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":213,"org.easymock.tests2.ConstraintsToStringTest.orToString":247,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":9,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":2,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests.UsageThrowableTest.noUpperLimit":339,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":170,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":482,"org.easymock.tests2.SerializationTest.test":126,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":275,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":265,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":322,"org.easymock.tests2.UsageConstraintsTest.testSame":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":35,"org.easymock.samples.SupportTest.addDocument":307,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":465,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":438,"org.easymock.tests.GenericTest.testPackageScope":32,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":506,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":357,"org.easymock.tests2.NameTest.nameForMock":468,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":46,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":481,"org.easymock.tests2.UsageStrictMockTest.differentMethods":164,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":430,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":38,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":294,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":392,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":57,"org.easymock.tests2.MockedExceptionTest.testRealException":208,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":345,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":371,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":408,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":67,"org.easymock.tests2.NameTest.nameForStrictMock":469,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":479,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":512,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":270,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":98,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":486,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":187,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":266,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":324,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":148,"org.easymock.tests2.UsageStrictMockTest.range":163,"org.easymock.tests2.UsageConstraintsTest.lessThan":193,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":7,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":442,"org.easymock.tests2.CaptureTest.testCaptureRightOne":111,"org.easymock.tests2.UsageConstraintsTest.testOr":176,"org.easymock.tests.UsageRangeTest.combination":54,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":95,"org.easymock.tests.UsageTest.wrongArguments":240,"org.easymock.tests2.MockBuilderTest.testWithConstructor":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":439,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":219,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":39,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":361,"org.easymock.tests.UsageVarargTest.varargShortAccepted":419,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":326,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":388,"org.easymock.tests2.UsageConstraintsTest.cmpTo":180,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":363,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":158,"org.easymock.tests2.CaptureTest.testCaptureFromStub":278,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":398,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":234,"org.easymock.tests.UsageTest.unexpectedCallWithArray":22,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":386,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":48,"org.easymock.tests2.CaptureTest.testCapture":277,"org.easymock.tests2.UsageConstraintsTest.constraints":171,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":351,"org.easymock.samples.ExampleTest.addAndChangeDocument":306,"org.easymock.tests2.ConstraintsToStringTest.notToString":248,"org.easymock.tests.UsageStrictMockTest.testVerify":353,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":308,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":350,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":335,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":88,"org.easymock.tests.LimitationsTest.abstractClass":424,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":40,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":76,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":89,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":133,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":267}}]
