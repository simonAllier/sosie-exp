[{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[4,5,5,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,0,1,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[78,81,255,256,257,91,258,129,130,131,259,260,261,187,194,262,263,264,265,204,266,267,268,243,244,245,269,249,250,251],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[4,5,6,7,8,9,10,270,11,271,12,272,273,274,275,276,13,14,277,278,279,280,281,282,283,15,284,16,17,18,19,20,285,21,22,23,24,25,26,286,27,28,29,30,31,32,33,34,35,36,37,38,287,39,40,41,42,288,289,290,291,292,293,43,294,295,296,44,297,45,298,46,299,300,301,47,302,303,48,49,304,50,51,305,306,52,53,54,55,56,57,58,59,60,61,62,63,64,307,308,65,309,310,311,66,67,68,312,313,69,70,71,72,73,74,75,76,77,314,315,316,317,318,78,319,320,321,322,323,324,79,80,81,255,82,325,83,84,85,256,257,86,87,326,327,88,89,90,328,329,330,331,332,333,91,334,335,336,337,338,339,92,93,94,95,96,97,340,341,342,343,344,258,345,98,99,100,101,102,103,346,104,105,106,347,107,108,109,110,111,112,113,114,115,116,117,118,348,349,350,351,119,352,353,120,354,355,356,357,358,359,360,361,362,121,363,364,365,366,367,122,368,369,123,124,125,126,127,128,370,371,129,372,130,131,373,0,1,2,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,374,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,375,376,377,175,176,378,177,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,178,179,180,181,182,394,395,396,259,397,398,399,260,183,400,184,185,401,186,402,261,187,403,188,189,190,191,192,193,194,262,263,195,196,264,265,197,198,199,200,201,202,203,404,405,406,407,408,409,410,411,412,413,414,415,416,417,204,205,206,207,208,209,266,210,211,212,213,214,215,216,217,418,218,419,219,420,220,221,222,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,223,437,438,439,440,441,224,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,225,465,226,227,228,229,230,466,467,468,469,231,232,233,234,235,470,236,471,472,267,473,474,268,475,237,238,239,240,241,242,243,244,245,476,477,246,478,479,480,481,482,483,247,248,484,485,269,249,486,250,251,487,488,252,253,254],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[127,128],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[19,20,22,24,25,286,36,40,48,304,55],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[280,281,282,283,22,27,33,40,49,304,51,305,306,52,53,58,79,81,255,83,84,256,257,87,90,94,99,123,127,129,372,130,131,193,194,263,195,196,264,265,197,204,212,222,454,227,230,241,243,244,245,269,249,486,250,251],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(this.java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[454,227],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"o":"expected","this":"expected"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[489,490,491,492,262,269],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[30],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[19,20,22,24,25,286,36,40,48,304,55],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[317,332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:135","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[72,387,470,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[7,9,10,11,13,404,233],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[418,420],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[4,7,8,9,10,270,11,271,12,272,273,274,275,276,13,279,280,281,282,283,15,284,16,17,18,19,20,285,21,22,23,24,25,26,286,27,28,29,30,31,32,33,34,35,36,37,38,287,39,40,41,42,288,289,290,291,292,43,294,296,44,297,45,46,301,47,303,48,49,304,50,51,305,306,52,53,54,55,56,57,58,59,60,61,62,63,64,307,308,65,310,311,66,67,68,312,313,69,70,71,72,73,74,75,76,77,314,315,316,317,318,78,319,320,321,322,323,324,79,80,81,255,82,325,83,84,85,256,257,86,87,326,327,88,89,90,328,329,330,331,332,333,91,334,335,336,337,338,339,92,93,94,95,96,97,340,344,258,345,98,99,100,101,103,104,347,107,108,109,110,111,112,113,114,115,116,117,118,348,349,350,119,353,120,354,355,358,361,121,363,364,365,366,367,122,123,124,125,126,127,128,370,371,129,372,130,131,373,1,2,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,178,179,180,181,182,394,259,397,398,399,260,183,400,184,185,401,186,402,261,187,403,188,189,190,191,192,193,194,262,263,195,196,264,265,197,198,199,200,201,202,203,404,405,406,407,408,409,410,411,412,413,414,415,416,417,204,205,206,207,208,209,266,210,211,212,213,214,215,216,217,418,218,419,219,420,220,221,222,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,223,437,438,439,440,441,224,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,225,465,226,227,228,229,230,466,467,468,469,231,232,233,234,235,470,236,471,472,267,473,474,268,475,237,238,239,240,241,242,243,244,245,476,477,246,478,479,480,481,482,483,247,248,484,485,269,249,486,250,251,487,488,252,253,254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[255,256,257,130,402,493,262,263,264,265,204,244,245,269,250],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[125],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[277,298,494,495,496,497,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[4,5,5,6,6,7,8,9,10,270,11,271,12,272,273,274,275,276,13,14,280,281,282,283,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,287,39,40,41,42,288,289,290,291,292,43,44,297,45,46,301,47,303,48,49,304,50,51,305,306,52,53,54,55,56,57,58,59,60,61,62,63,64,307,65,311,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,255,82,325,83,84,85,256,257,86,87,88,89,90,91,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,348,119,120,121,122,123,126,127,128,370,371,129,372,130,131,373,0,1,2,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,382,383,384,385,386,387,388,389,390,391,392,393,178,179,180,181,182,183,400,184,185,186,402,187,189,190,191,192,193,194,262,263,195,196,264,265,197,198,404,405,406,407,408,410,204,208,209,210,211,212,213,214,215,216,217,218,419,220,221,222,443,444,445,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,225,226,227,228,229,230,466,467,468,469,231,232,233,234,235,267,473,474,237,238,239,240,241,242,243,244,245,476,477,246,478,479,480,481,482,483,247,248,484,485,269,249,486,250,251,487,488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[409,416,499],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[315,316,318,320,321,324,330,331,333,335,336,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[4,5,6,7,8,9,10,270,11,271,12,272,273,274,275,276,13,14,277,278,279,280,281,282,283,15,284,16,17,18,19,20,285,21,22,23,24,25,26,286,27,28,29,30,31,32,33,34,35,36,37,38,287,39,40,41,42,288,289,290,291,292,293,43,294,295,296,44,297,45,298,46,299,300,301,47,302,303,48,49,304,50,51,305,306,52,53,54,55,56,57,58,59,60,61,62,63,64,307,308,65,309,310,311,66,67,68,312,313,69,70,71,72,73,74,75,76,77,314,315,316,317,318,78,319,320,321,322,323,324,79,80,81,255,82,325,83,84,85,256,257,86,87,326,327,88,89,90,328,329,330,331,332,333,91,334,335,336,337,338,339,92,93,94,95,96,97,340,341,342,343,344,258,345,98,99,100,101,102,103,346,104,105,106,347,107,108,109,110,111,112,113,114,115,116,117,118,348,349,350,351,119,352,353,120,354,355,356,357,358,359,360,361,362,121,363,364,365,366,367,122,368,369,123,124,125,126,127,128,370,371,129,372,130,131,373,0,1,2,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,374,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,375,376,377,175,176,378,177,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,178,179,180,181,182,394,395,396,259,397,398,399,260,183,400,184,185,401,186,402,261,187,403,188,189,190,191,192,193,194,262,263,195,196,264,265,197,198,199,200,201,202,203,404,405,406,407,408,409,410,411,412,413,414,415,416,417,204,205,206,207,208,209,266,210,211,212,213,214,215,216,217,418,218,419,219,420,220,221,222,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,223,437,438,439,440,441,224,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,225,465,226,227,228,229,230,466,467,468,469,231,232,233,234,235,470,236,471,472,267,473,474,268,475,237,238,239,240,241,242,243,244,245,476,477,246,478,479,480,481,482,483,247,248,484,485,269,249,486,250,251,487,488,252,253,254],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[255,256,257,130,493,262,263,264,265,204,244,245,269,250],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[14,277,298,300,494,495,496,500,501,0],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":20,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":193,"org.easymock.tests2.UsageTest.argumentsOrdered":257,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":431,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":325,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":272,"org.easymock.tests2.DelegateToTest.testReturnException":93,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":238,"org.easymock.tests.MockingTest.testPartialClassMocking":175,"org.easymock.tests.MockClassControlTest.testToString":457,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":279,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":357,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":132,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":120,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":494,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":226,"org.easymock.tests2.UsageTest.wrongArguments":255,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":339,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":468,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":398,"org.easymock.tests2.UsageConstraintsTest.testNull":22,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":380,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":62,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":462,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":116,"org.easymock.tests2.CaptureTest.testPrimitive":50,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":230,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":151,"org.easymock.tests.UsageTest.moreThanOneArgument":194,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":61,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":180,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":199,"org.easymock.tests.UsageTest.argumentsOrdered":265,"org.easymock.tests.UsageVarargTest.varargIntAccepted":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":231,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":498,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":292,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":323,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":342,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":423,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":235,"org.easymock.tests.ReplayStateInvalidUsageTest.times":390,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":91,"org.easymock.tests2.DependencyTest.testClassMocking":326,"org.easymock.tests2.AnswerTest.answer":123,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":437,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":291,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":396,"org.easymock.tests2.CaptureTest.testAnd":48,"org.easymock.tests2.UsageTest.strictResetToDefault":80,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":295,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":311,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":179,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":111,"org.easymock.tests2.DelegateToTest.testDelegate":97,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":147,"org.easymock.tests.LimitationsTest.mockFinalMethod":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":241,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":408,"org.easymock.tests2.DependencyTest.testClassMockingSupport":327,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":261,"org.easymock.tests2.CaptureTest.testCapture1_2446744":51,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":308,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":145,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":289,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":384,"org.easymock.tests.UsageThrowableTest.throwError":210,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":397,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":324,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":369,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":385,"org.easymock.tests.MockingTest.testInterfaceMocking":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":232,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":253,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":475,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":133,"org.easymock.tests2.UsageTest.niceToStrict":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":44,"org.easymock.tests2.MockBuilderTest.testCreateMock":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":365,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":336,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":489,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":141,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":112,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":395,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":207,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":476,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":466,"org.easymock.tests.UsageOverloadedMethodTest.overloading":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":367,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":185,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":31,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":166,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":220,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":30,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":54,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":446,"org.easymock.tests.MockClassControlTest.testEquals":461,"org.easymock.tests2.EasyMockSupportClassTest.testAll":119,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":419,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":406,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":290,"org.easymock.tests.MockNameTest.defaultName":266,"org.easymock.tests2.UsageConstraintsTest.testMatches":32,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":181,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":382,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests.UsageVarargTest.allKinds":454,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":407,"org.easymock.samples.BasicClassMockTest.testPrintContent":274,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":216,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":370,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":242,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":320,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":501,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":416,"org.easymock.tests2.UsageConstraintsTest.greaterThan":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":352,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":190,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":68,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":417,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":70,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":312,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":399,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":343,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":307,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":79,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":198,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":109,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":237,"org.easymock.tests2.CaptureTest.testCaptureFirst":58,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":110,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":87,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":402,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":162,"org.easymock.tests2.CaptureTest.testCapture2_2446744":57,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":72,"org.easymock.tests2.UsageTest.moreThanOneArgument":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":438,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":47,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":453,"org.easymock.tests.GenericTest.testBridgedEquals":420,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":482,"org.easymock.tests.UsageExpectAndReturnTest.longType":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":404,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":107,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":150,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":188,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":287,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":178,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":153,"org.easymock.tests.UsageCallCountTest.tooManyCalls":483,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":366,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":163,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":338,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":215,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":101,"org.easymock.tests.MockingTest.testNiceClassMocking":381,"org.easymock.tests.MockingTest.testClassMocking":376,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":477,"org.easymock.tests2.UsageConstraintsTest.testContains":29,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":76,"org.easymock.tests2.UsageConstraintsTest.testFind":21,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":222,"org.easymock.tests.MockTypeTest.fromEasyMockClass":259,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":484,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":16,"org.easymock.tests.UsageExpectAndReturnTest.object":165,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":115,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":495,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":448,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":474,"org.easymock.tests.UsageTest.exactCallCountByLastCall":197,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":200,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":277,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":443,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":171,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":184,"org.easymock.tests.MockClassControlTest.testHashCode":460,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":315,"org.easymock.tests2.EasyMockSupportTest.testVerify":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":360,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":201,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":183,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":206,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":288,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":328,"org.easymock.tests.UsageVarargTest.varargCharAccepted":447,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":409,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":442,"org.easymock.tests2.UsageTest.openCallCountByLastCall":83,"org.easymock.tests.DefaultClassInstantiatorTest.object":410,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":118,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":205,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":267,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":493,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":361,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":213,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":332,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":314,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":459,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":66,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":138,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":172,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":152,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":122,"org.easymock.tests2.UsageTest.resumeIfFailure":86,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":394,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":240,"org.easymock.tests2.StubTest.stubWithReturnValue":99,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":298,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":164,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":39,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":223,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":490,"org.easymock.samples.SupportTest.voteForRemovals":13,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":418,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":317,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":144,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":224,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":124,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":471,"org.easymock.tests.UsageExpectAndThrowTest.object":142,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":37,"org.easymock.tests2.DelegateToTest.testWrongClass":95,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":247,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":248,"org.easymock.samples.ConstructorCalledMockTest.testTax":5,"org.easymock.tests.UsageStrictMockTest.range":250,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":258,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":114,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":100,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":143,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":45,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":392,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":467,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":491,"org.easymock.tests2.CaptureTest.testCaptureNone":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":254,"org.easymock.tests.UsageUnorderedTest.message":204,"org.easymock.tests.UsageVerifyTest.twoReturns":245,"org.easymock.tests.UsageVarargTest.varargByteAccepted":452,"org.easymock.tests2.ThreadingTest.testThreadSafe":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":363,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":480,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":268,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":273,"org.easymock.tests2.CaptureTest.testCapture_2617107":304,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":440,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":229,"org.easymock.tests2.UsageConstraintsTest.any":27,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":389,"org.easymock.tests2.StubTest.stub":98,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":441,"org.easymock.tests.UsageExpectAndThrowTest.longType":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":239,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":414,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":388,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":372,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":78,"org.easymock.tests.LimitationsTest.mockNativeMethod":225,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":174,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":219,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":331,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":373,"org.easymock.tests2.NameTest.nameForMocksControl":283,"org.easymock.tests2.MockedExceptionTest.testMockedException":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":353,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":196,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":136,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":284,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":59,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":46,"org.easymock.tests.MockingTest.testNicePartialClassMocking":176,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":64,"org.easymock.tests2.CaptureTest.testCaptureLast":52,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":329,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":187,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":106,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":25,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":38,"org.easymock.tests.MockingTest.testTwoMocks":377,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":347,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":140,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":256,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":41,"org.easymock.samples.ExampleTest.removeNonExistingDocument":271,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":386,"org.easymock.tests.UsageStrictMockTest.differentMethods":251,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":335,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":316,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":412,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":71,"org.easymock.tests2.MockBuilderTest.testCreateMockString":303,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":455,"org.easymock.tests.UsageExpectAndThrowTest.floatType":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":354,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":351,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":126,"org.easymock.tests.UsageVerifyTest.twoThrows":244,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":278,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":121,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":432,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":252,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":67,"org.easymock.tests.LimitationsTest.privateConstructor":464,"org.easymock.tests2.UsageConstraintsTest.testNotNull":40,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":74,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":217,"org.easymock.tests2.UsageTest.defaultResetToNice":85,"org.easymock.samples.ExampleTest.voteAgainstRemovals":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":170,"org.easymock.tests.UsageVarargTest.differentLength":449,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":330,"org.easymock.tests2.CallbackTest.callback":90,"org.easymock.tests2.UsageConstraintsTest.equals":285,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":309,"org.easymock.tests.UsageTest.openCallCountByLastCall":195,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":228,"org.easymock.tests.UsageCallCountTest.tooFewCalls":478,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":103,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":469,"org.easymock.tests.UsageThrowableTest.throwCheckedException":214,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":492,"org.easymock.tests.MockingTest.testStrictClassMocking":375,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":105,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":209,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":334,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":391,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":104,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":128,"org.easymock.tests.ObjectMethodsTest.testHashCode":473,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":497,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":73,"org.easymock.tests2.NameTest.nameForNiceMock":282,"org.easymock.tests2.DependencyTest.testInterfaceMocking":88,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":496,"org.easymock.samples.ExampleTest.addDocument":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":364,"org.easymock.tests2.DelegateToTest.testStubDelegate":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":368,"org.easymock.tests2.AnswerTest.stubAnswer":127,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":249,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":299,"org.easymock.tests.UsageVarargTest.varargLongAccepted":451,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":173,"org.easymock.tests.UsageExpectAndReturnTest.floatType":157,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":14,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":6,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":401,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":35,"org.easymock.tests.UsageThrowableTest.noUpperLimit":211,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":322,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":18,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":340,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":305,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":156,"org.easymock.tests2.UsageConstraintsTest.testSame":23,"org.easymock.samples.SupportTest.addDocument":276,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":499,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":346,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":355,"org.easymock.tests.GenericTest.testPackageScope":218,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":321,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":379,"org.easymock.tests2.NameTest.nameForMock":280,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":167,"org.easymock.tests2.UsageStrictMockTest.differentMethods":131,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":302,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":146,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":472,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":192,"org.easymock.tests2.MockedExceptionTest.testRealException":77,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":434,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":129,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":393,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":227,"org.easymock.tests2.NameTest.nameForStrictMock":281,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":296,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":15,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":63,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":344,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":413,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":36,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":43,"org.easymock.tests2.UsageStrictMockTest.range":130,"org.easymock.tests2.UsageConstraintsTest.lessThan":42,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":318,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":108,"org.easymock.tests2.CaptureTest.testCaptureRightOne":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":359,"org.easymock.tests2.UsageConstraintsTest.testOr":24,"org.easymock.tests.UsageRangeTest.combination":189,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":60,"org.easymock.tests.UsageTest.wrongArguments":263,"org.easymock.tests2.MockBuilderTest.testWithConstructor":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":356,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":456,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":168,"org.easymock.tests.UsageVarargTest.varargShortAccepted":450,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":415,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":481,"org.easymock.tests2.UsageConstraintsTest.cmpTo":28,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":424,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":84,"org.easymock.tests2.CaptureTest.testCaptureFromStub":56,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":383,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":294,"org.easymock.tests.UsageTest.unexpectedCallWithArray":262,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":269,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":479,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":169,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":486,"org.easymock.tests2.UsageConstraintsTest.constraints":19,"org.easymock.samples.ExampleTest.addAndChangeDocument":12,"org.easymock.tests.UsageStrictMockTest.testVerify":488,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":275,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":485,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":405,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":233,"org.easymock.tests.LimitationsTest.abstractClass":463,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":161,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":234,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":444,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":113}}]
