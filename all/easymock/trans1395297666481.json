[{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[16,17,18,19],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,2,3,4,5,6,7,8,9,165,10,12,13,14,15,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,18,19,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[251,79,252,253,209],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[100,121,122,214,215],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"maximum"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[254,255,256,257,258,259,260],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[261,262,263,264,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[16,17,18,19],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[266,267,268,269,270,171,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,17,292,293,294,295,296,297,298,259,299,300,301,302,260],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[262,265],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[261,20,21,22,23,24,25,303,26,27,28,29,266,267,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,304,305,306,307,308,309,310,53,54,311,55,312,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,251,78,79,80,81,313,314,82,83,315,316,84,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,345,346,347,348,349,350,351,352,103,104,353,354,105,106,107,355,108,109,110,111,112,113,114,115,356,116,117,357,358,359,360,118,361,119,120,121,122,123,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,252,390,391,392,393,394,395,396,397,124,125,126,127,398,128,129,130,131,132,133,134,135,136,137,138,399,400,139,401,402,403,404,405,406,407,408,409,253,410,411,412,413,140,141,142,143,144,414,415,416,145,146,147,417,148,149,418,150,151,152,153,154,155,156,419,420,157,421,422,423,424,158,159,160,161,162,163,425,426,164,427,428,429,430,431,432,433,434,2,3,4,5,6,7,8,9,165,10,12,13,14,15,166,167,168,169,170,268,269,270,171,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,172,173,174,175,176,177,435,436,178,179,180,17,18,19,181,182,183,184,185,186,187,437,188,189,190,191,192,438,439,440,441,442,193,443,444,445,446,447,448,194,449,292,195,450,196,451,293,294,452,453,454,455,456,457,197,198,199,458,200,459,297,460,461,298,462,262,463,263,259,264,464,299,465,466,301,467,468,469,470,471,472,473,474,201,202,203,475,204,205,206,207,476,208,477,209,210,478,211,212,213,214,215,216,479,480,481,482,483,484,217,218,219,220,485,486,487,488,489,221,490,491,492,493,494,495,222,223,224,225,496,226,227,228,229,230,231,497,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,498,249,499,250,302,260,500],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:35","sourceCode":"final java.lang.Object java.lang.Object = org.easymock.internal.matchers.Equals.getExpected()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[20,22,23,25,28,142],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[501,222,224],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[261,311,345,350,425,17,502,459,503,460,461,262,463,263,264,465,466,265,467],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[504,231,236,248],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[261,20,22,23,25,28,57,58,59,60,61,62,65,66,68,69,70,72,73,74,75,76,77,251,78,79,95,119,121,122,366,367,369,133,134,135,136,140,141,142,143,144,155,156,157,158,159,160,161,162,163,164,430,431,432,169,171,273,283,289,194,449,292,195,196,451,293,198,460,262,263,264,466,212,214,215,217,218,302],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[252,253],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[56,505,326,506,507,101,102,353,354,107,355,361,121,122,475,208,477,214,215],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[430,431,503,262],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[441,488],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[56,77,101,102,103,353,354,107,355,108,360,361,120,121,122,398,128,129,418,159,430,432,168,172,182,186,187,189,460,465,466,467,201,475,204,205,208,477,209,210,478,213,214,215,224,238],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[508,509,510,104,353,354,107,355,361,511,512,513,514,203,475,208,477],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[515,516,517],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[261,266,266,267,267,30,31,310,53,54,311,55,84,317,318,319,320,321,322,323,324,325,339,340,341,342,343,344,85,86,345,350,363,364,365,366,367,369,372,402,419,420,157,421,158,159,161,162,163,425,164,427,428,429,430,431,432,433,434,268,269,270,171,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,173,174,175,17,19,518,502,194,449,292,195,451,293,459,297,503,460,461,298,462,262,463,263,259,264,299,465,466,301,265,467,468,472,302,260,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[162,205,238],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":225,"org.easymock.tests2.UsageTest.argumentsOrdered":477,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":103,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":383,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":205,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":32,"org.easymock.tests2.DelegateToTest.testReturnException":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":110,"org.easymock.tests.MockingTest.testPartialClassMocking":366,"org.easymock.tests.MockClassControlTest.testToString":341,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":452,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":308,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":277,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":33,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":273,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":218,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":254,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":231,"org.easymock.tests2.UsageTest.wrongArguments":475,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":95,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":448,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":329,"org.easymock.samples.ExampleTest.answerVsDelegate":21,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":350,"org.easymock.tests2.UsageConstraintsTest.testNull":227,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":371,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":161,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":189,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":86,"org.easymock.tests2.CaptureTest.testPrimitive":5,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":99,"org.easymock.tests.UsageTest.moreThanOneArgument":104,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":52,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":135,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":314,"org.easymock.tests.UsageTest.argumentsOrdered":355,"org.easymock.tests.UsageVarargTest.varargIntAccepted":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":140,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":459,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":258,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":494,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":470,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":144,"org.easymock.tests.ReplayStateInvalidUsageTest.times":410,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":193,"org.easymock.tests2.DependencyTest.testClassMocking":483,"org.easymock.tests2.AnswerTest.answer":177,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":252,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":482,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":347,"org.easymock.tests2.UsageTest.strictResetToDefault":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":429,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":298,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":134,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":185,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":78,"org.easymock.tests2.DelegateToTest.testDelegate":200,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":48,"org.easymock.tests.LimitationsTest.mockFinalMethod":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":335,"org.easymock.tests2.DependencyTest.testClassMockingSupport":484,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":422,"org.easymock.tests2.CaptureTest.testCapture1_2446744":6,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":426,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":46,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":480,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":405,"org.easymock.tests.UsageThrowableTest.throwError":87,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":349,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":495,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":326,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":137,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":291,"org.easymock.samples.PartialClassMockTest.testGetArea":261,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":406,"org.easymock.tests.MockingTest.testInterfaceMocking":368,"org.easymock.tests2.CompareToTest.testLessOrEqual":501,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":141,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":305,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":402,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":34,"org.easymock.tests2.UsageTest.niceToStrict":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":278,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":262,"org.easymock.tests2.MockBuilderTest.testCreateMock":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":286,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":445,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":511,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":42,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":186,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":346,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":416,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":396,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":327,"org.easymock.tests.UsageOverloadedMethodTest.overloading":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":288,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":117,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":236,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":68,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":235,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":10,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":417,"org.easymock.tests2.EasyMockSupportClassTest.testAll":171,"org.easymock.tests.MockClassControlTest.testEquals":85,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":54,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":512,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":50,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":481,"org.easymock.tests2.CaptureTest.testCaptureAll":3,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":333,"org.easymock.tests.MockNameTest.defaultName":312,"org.easymock.tests2.UsageConstraintsTest.testMatches":237,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":136,"org.easymock.samples.ExampleTest.voteForRemovals":25,"org.easymock.tests.UsageVarargTest.allKinds":154,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":100,"org.easymock.samples.BasicClassMockTest.testPrintContent":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":334,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":93,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":478,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":491,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":458,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":114,"org.easymock.tests2.UsageConstraintsTest.greaterThan":239,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":271,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":251,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":432,"org.easymock.samples.ExampleTest.voteForRemoval":22,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":325,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":433,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":167,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":351,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":471,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":425,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":84,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":201,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":380,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":183,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":109,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":457,"org.easymock.tests2.CaptureTest.testCaptureFirst":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":379,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":184,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":210,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":359,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":64,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":169,"org.easymock.tests2.CaptureTest.testCapture2_2446744":14,"org.easymock.tests2.UsageTest.moreThanOneArgument":203,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":390,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":153,"org.easymock.tests.GenericTest.testBridgedEquals":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":128,"org.easymock.tests.UsageExpectAndReturnTest.longType":60,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":331,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":51,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":265,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":244,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":313,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":133,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":337,"org.easymock.tests.UsageCallCountTest.tooManyCalls":129,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":447,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":92,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":449,"org.easymock.tests.MockingTest.testNiceClassMocking":372,"org.easymock.tests.MockingTest.testClassMocking":364,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":503,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":397,"org.easymock.tests2.UsageConstraintsTest.testContains":234,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":175,"org.easymock.tests2.UsageConstraintsTest.testFind":226,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":132,"org.easymock.tests.MockTypeTest.fromEasyMockClass":348,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":250,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":360,"org.easymock.tests.UsageExpectAndReturnTest.object":67,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":446,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":188,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":255,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":139,"org.easymock.tests.UsageTest.exactCallCountByLastCall":108,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":82,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":307,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":510,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":260,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":145,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":73,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":116,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":486,"org.easymock.tests.MockClassControlTest.testHashCode":344,"org.easymock.tests2.EasyMockSupportTest.testVerify":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":280,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":83,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":415,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":115,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":506,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":479,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":498,"org.easymock.tests.UsageVarargTest.varargCharAccepted":148,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":317,"org.easymock.tests2.CaptureTest.testCaptureMultiple":1,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":395,"org.easymock.tests2.UsageTest.openCallCountByLastCall":206,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":516,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":191,"org.easymock.tests.DefaultClassInstantiatorTest.object":318,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":414,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":399,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":507,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":281,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":90,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":441,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":485,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":430,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":39,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":74,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":289,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":342,"org.easymock.tests2.UsageTest.resumeIfFailure":209,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":345,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":112,"org.easymock.tests2.StubTest.stubWithReturnValue":220,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":259,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":66,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":245,"org.easymock.tests2.SerializationTest.testAllMockedMethod":19,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":389,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":513,"org.easymock.samples.SupportTest.voteForRemovals":28,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":310,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":488,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":45,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":16,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":394,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":435,"org.easymock.tests.UsageExpectAndThrowTest.object":43,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":309,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":242,"org.easymock.tests2.DelegateToTest.testWrongClass":199,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":155,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":156,"org.easymock.tests.UsageStrictMockTest.range":121,"org.easymock.samples.ConstructorCalledMockTest.testTax":266,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":473,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":437,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":194,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":44,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":263,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":412,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":268,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":328,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":508,"org.easymock.tests2.CaptureTest.testCaptureNone":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":306,"org.easymock.tests.UsageUnorderedTest.message":56,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":505,"org.easymock.tests.UsageVerifyTest.twoReturns":102,"org.easymock.tests.UsageVarargTest.varargByteAccepted":152,"org.easymock.tests2.ThreadingTest.testThreadSafe":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":284,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":127,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":401,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":30,"org.easymock.tests2.CaptureTest.testCapture_2617107":4,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":514,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":392,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":98,"org.easymock.tests2.UsageConstraintsTest.any":232,"org.easymock.tests2.StubTest.stub":219,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":253,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":111,"org.easymock.tests.UsageExpectAndThrowTest.longType":36,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":322,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":409,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":213,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":221,"org.easymock.tests.LimitationsTest.mockNativeMethod":157,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":76,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":311,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":440,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":216,"org.easymock.tests2.NameTest.nameForMocksControl":456,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":442,"org.easymock.tests2.MockedExceptionTest.testMockedException":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":272,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":106,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":499,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":37,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":369,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":158,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":264,"org.easymock.tests.MockingTest.testNicePartialClassMocking":367,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":163,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":438,"org.easymock.tests2.CaptureTest.testCaptureLast":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":423,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":230,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":293,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":243,"org.easymock.tests.MockingTest.testTwoMocks":365,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":294,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":41,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":208,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":247,"org.easymock.samples.ExampleTest.removeNonExistingDocument":303,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":444,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":407,"org.easymock.tests.UsageStrictMockTest.differentMethods":122,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":487,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":320,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":168,"org.easymock.tests2.MockBuilderTest.testCreateMockString":467,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":339,"org.easymock.tests.UsageExpectAndThrowTest.floatType":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":274,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":270,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":178,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":500,"org.easymock.tests.UsageVerifyTest.twoThrows":101,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":283,"org.easymock.samples.ExampleTest.voteAgainstRemoval":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":384,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":304,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":431,"org.easymock.tests.LimitationsTest.privateConstructor":420,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":296,"org.easymock.tests2.UsageConstraintsTest.testNotNull":246,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":173,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":94,"org.easymock.tests2.UsageTest.defaultResetToNice":476,"org.easymock.samples.ExampleTest.voteAgainstRemovals":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":72,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":439,"org.easymock.tests.UsageVarargTest.differentLength":418,"org.easymock.tests2.CallbackTest.callback":172,"org.easymock.tests2.UsageConstraintsTest.equals":496,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":427,"org.easymock.tests.UsageTest.openCallCountByLastCall":105,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":222,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":97,"org.easymock.tests.UsageCallCountTest.tooFewCalls":125,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":195,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":330,"org.easymock.tests.UsageThrowableTest.throwCheckedException":91,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":509,"org.easymock.tests.MockingTest.testStrictClassMocking":363,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":451,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":443,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":292,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":411,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":196,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":180,"org.easymock.tests2.CompareToTest.testGreateOrEqual":504,"org.easymock.tests.ObjectMethodsTest.testHashCode":400,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":257,"org.easymock.tests2.NameTest.nameForNiceMock":455,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":170,"org.easymock.tests2.DependencyTest.testInterfaceMocking":217,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":256,"org.easymock.samples.ExampleTest.addDocument":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":285,"org.easymock.tests2.DelegateToTest.testStubDelegate":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":290,"org.easymock.tests2.AnswerTest.stubAnswer":179,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":119,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":464,"org.easymock.tests.UsageVarargTest.varargLongAccepted":151,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":382,"org.easymock.tests.UsageExpectAndReturnTest.floatType":59,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":75,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":302,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":267,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":493,"org.easymock.tests.UsageThrowableTest.noUpperLimit":88,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":240,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":223,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":468,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":7,"org.easymock.tests2.SerializationTest.test":18,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":319,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":58,"org.easymock.tests2.UsageConstraintsTest.testSame":228,"org.easymock.samples.SupportTest.addDocument":27,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":450,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":275,"org.easymock.tests.GenericTest.testPackageScope":53,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":377,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":492,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":370,"org.easymock.tests2.NameTest.nameForMock":453,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":69,"org.easymock.tests2.UsageStrictMockTest.differentMethods":215,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":301,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":428,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":61,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":47,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":138,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":79,"org.easymock.tests2.MockedExceptionTest.testRealException":176,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":352,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":386,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":212,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":413,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":96,"org.easymock.tests2.NameTest.nameForStrictMock":454,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":462,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":517,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":162,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":472,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":241,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":321,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":460,"org.easymock.tests2.UsageStrictMockTest.range":214,"org.easymock.tests2.UsageConstraintsTest.lessThan":248,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":518,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":489,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":381,"org.easymock.tests2.CaptureTest.testCaptureRightOne":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":279,"org.easymock.tests2.UsageConstraintsTest.testOr":229,"org.easymock.tests.UsageRangeTest.combination":77,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":159,"org.easymock.tests.UsageTest.wrongArguments":354,"org.easymock.tests2.MockBuilderTest.testWithConstructor":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":276,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":340,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":62,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":374,"org.easymock.tests.UsageVarargTest.varargShortAccepted":150,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":323,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":398,"org.easymock.tests2.UsageConstraintsTest.cmpTo":233,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":376,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":207,"org.easymock.tests2.CaptureTest.testCaptureFromStub":13,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":404,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":461,"org.easymock.tests.UsageTest.unexpectedCallWithArray":353,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":361,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":126,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":71,"org.easymock.tests2.CaptureTest.testCapture":11,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":120,"org.easymock.tests2.UsageConstraintsTest.constraints":224,"org.easymock.samples.ExampleTest.addAndChangeDocument":26,"org.easymock.tests.UsageStrictMockTest.testVerify":362,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":29,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":118,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":332,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":8,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":502,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":142,"org.easymock.tests.LimitationsTest.abstractClass":419,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":143,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":187,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":146}}]
