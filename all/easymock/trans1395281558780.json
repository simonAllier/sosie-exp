[{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.Range:44","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,1,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,2,337,338,3,4,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,0,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:199","sourceCode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))))","type":"CtThrowImpl"},"failures":[488,303],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[3,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[489,339,340,341],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:45","sourceCode":"final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,1,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,2,337,338,3,4,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,0,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Find:41","failures":[490],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[5,17,17,18,18,19,20,49,50,51,87,111,134,139,175,176,177,179,265,270,271,273,274,275,276,278,281,282,283,284,309,312,322,328,334,339,341,491,492,367,368,369,370,373,374,387,493,389,390,393,394,395,397,400,401,494,403,485],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[287,289,297,455,456,459,461,0,463,473,478],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[52],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"position":"org.easymock.Capture:82","failures":[287,289,290,291,292,293,294,296,495,297,298,300],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[186,246,247,248],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[391],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[496],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[5,6,7,8,9,10,11,13,14,15,16,17,17,18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,49,50,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,107,108,109,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,175,176,177,179,198,204,206,208,209,210,211,213,214,215,216,217,218,219,220,221,222,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,265,267,268,270,271,272,273,274,275,278,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,309,312,322,328,331,332,333,334,335,336,2,337,338,3,4,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,360,367,368,369,370,372,373,374,377,378,379,380,381,382,383,384,385,386,389,393,395,397,401,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,437,438,439,440,446,453,454,455,456,458,459,460,461,0,462,464,465,466,467,468,469,470,471,472,473,474,475,477,478,479,480,482,484,485],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[497,132,133,169,428],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[498],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:183","failures":[5,6,7,8,9,10,11,13,14,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,87,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,142,143,146,147,150,165,167,168,169,170,171,176,177,179,208,209,210,211,213,214,216,217,241,242,243,244,245,249,250,251,253,254,256,257,258,259,260,261,262,265,270,272,273,275,287,288,289,290,292,293,294,295,296,297,300,301,303,304,305,312,322,328,331,334,336,338,3,4,339,340,341,342,344,345,346,347,350,351,352,353,354,360,367,368,369,370,372,373,374,382,383,384,386,393,395,397,411,412,413,415,416,417,418,423,425,426,427,428,429,430,437,438,439,440,446,453,454,455,456,458,459,460,461,0,462,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,482,484,485],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[93,499,496],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[500,453,471,477],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[470],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[110,115,225],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[192,381,383],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[501,502,144,166,503,504],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[54,75,505,97,506,507,132,133,142,144,145,148,149,150,164,166,168,169,170,212,213,214,255,271,282,284,331,343,347,348,351,389,400,401,403,411,414,415,416,420,421,422,423,424,427,428,429,455,470],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[271,281,284,369,375],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[48,52],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[467],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[498,480],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[508,287,289,290,291,292,293,294,296,495,297,298,300],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (this.int)) + \" and \") + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[54,132,133,143,145,148,149,166,167,170,377,378,379,380,413,414,420,421,426,429],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum","maximum":"minimum"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[509,510,511,512,513,514,515,396,516,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[517,462,468,480],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[501,502,144,166,503,504],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":456,"org.easymock.tests2.UsageTest.argumentsOrdered":421,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":142,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":352,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":192,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":416,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":21,"org.easymock.tests2.DelegateToTest.testReturnException":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":152,"org.easymock.tests.MockingTest.testPartialClassMocking":176,"org.easymock.tests.MockClassControlTest.testToString":112,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":376,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":22,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":312,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":438,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":509,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":462,"org.easymock.tests2.UsageTest.wrongArguments":414,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":126,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":100,"org.easymock.samples.ExampleTest.answerVsDelegate":7,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":139,"org.easymock.tests2.UsageConstraintsTest.testNull":459,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":181,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":273,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":117,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":351,"org.easymock.tests2.CaptureTest.testPrimitive":290,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":130,"org.easymock.tests.UsageTest.moreThanOneArgument":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":41,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":220,"org.easymock.tests.UsageTest.argumentsOrdered":149,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":82,"org.easymock.tests.UsageVarargTest.varargIntAccepted":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":197,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":514,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":451,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":406,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":245,"org.easymock.tests.ReplayStateInvalidUsageTest.times":237,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":360,"org.easymock.tests2.DependencyTest.testClassMocking":435,"org.easymock.tests2.AnswerTest.answer":336,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":199,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":434,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":136,"org.easymock.tests2.CaptureTest.testAnd":287,"org.easymock.tests2.UsageTest.strictResetToDefault":412,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":391,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":219,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":77,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":346,"org.easymock.tests2.DelegateToTest.testDelegate":386,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":37,"org.easymock.tests.LimitationsTest.mockFinalMethod":266,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":106,"org.easymock.tests2.DependencyTest.testClassMockingSupport":436,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":267,"org.easymock.tests2.CaptureTest.testCapture1_2446744":291,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":35,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":432,"org.easymock.tests.UsageThrowableTest.throwError":118,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":231,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":138,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":452,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":97,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":330,"org.easymock.samples.PartialClassMockTest.testGetArea":5,"org.easymock.tests.MockingTest.testInterfaceMocking":178,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":232,"org.easymock.tests2.CompareToTest.testLessOrEqual":500,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":242,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":43,"org.easymock.tests2.UsageTest.niceToStrict":415,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":23,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":317,"org.easymock.tests2.ThreadingTest.testChangeDefault":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":183,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":393,"org.easymock.tests2.MockBuilderTest.testCreateMock":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":325,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":363,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":503,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":31,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":347,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":135,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":248,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":98,"org.easymock.tests.UsageOverloadedMethodTest.overloading":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":327,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":468,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":66,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":215,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":499,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":467,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":296,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":252,"org.easymock.tests.MockClassControlTest.testEquals":116,"org.easymock.tests2.EasyMockSupportClassTest.testAll":309,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":50,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":39,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":491,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":433,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":104,"org.easymock.tests2.CaptureTest.testCaptureAll":288,"org.easymock.tests.MockNameTest.defaultName":53,"org.easymock.tests2.UsageConstraintsTest.testMatches":469,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":221,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":229,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests.UsageVarargTest.allKinds":260,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":105,"org.easymock.samples.BasicClassMockTest.testPrintContent":20,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":124,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":424,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":448,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":515,"org.easymock.tests2.UsageConstraintsTest.greaterThan":471,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":310,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":76,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":284,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":96,"org.easymock.samples.ExampleTest.voteForRemoval":8,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":285,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":302,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":140,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":276,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":411,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":87,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":344,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":151,"org.easymock.tests2.CaptureTest.testCaptureFirst":300,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":345,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":423,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":163,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":62,"org.easymock.tests2.UsageTest.moreThanOneArgument":413,"org.easymock.tests2.CaptureTest.testCapture2_2446744":299,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":304,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":200,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":259,"org.easymock.tests.GenericTest.testBridgedEquals":52,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":213,"org.easymock.tests.UsageExpectAndReturnTest.longType":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":102,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":342,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":494,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":40,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":476,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":81,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":38,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":218,"org.easymock.tests.UsageCallCountTest.tooManyCalls":214,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":326,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":63,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":123,"org.easymock.tests.MockingTest.testNiceClassMocking":182,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":368,"org.easymock.tests.MockingTest.testClassMocking":174,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":493,"org.easymock.tests2.UsageConstraintsTest.testContains":466,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":207,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":334,"org.easymock.tests2.UsageConstraintsTest.testFind":458,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":217,"org.easymock.tests.MockTypeTest.fromEasyMockClass":137,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":484,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":164,"org.easymock.tests.UsageExpectAndReturnTest.object":65,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":350,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":510,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":254,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":226,"org.easymock.tests.UsageTest.exactCallCountByLastCall":150,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":188,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":45,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":83,"org.easymock.tests2.ConstraintsToStringTest.findToString":490,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":486,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":71,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":249,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":159,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":442,"org.easymock.tests.MockClassControlTest.testHashCode":115,"org.easymock.tests2.EasyMockSupportTest.testVerify":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":319,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":84,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":157,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":247,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":506,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":431,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":481,"org.easymock.tests.UsageVarargTest.varargCharAccepted":253,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":88,"org.easymock.tests2.CaptureTest.testCaptureMultiple":508,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":205,"org.easymock.tests2.UsageTest.openCallCountByLastCall":417,"org.easymock.tests.DefaultClassInstantiatorTest.object":89,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":353,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":246,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":224,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":507,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":320,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":358,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":441,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":114,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":282,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":28,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":72,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":107,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":328,"org.easymock.tests2.UsageTest.resumeIfFailure":422,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":134,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":154,"org.easymock.tests2.StubTest.stubWithReturnValue":440,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":396,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":477,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":64,"org.easymock.tests2.SerializationTest.testAllMockedMethod":341,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":198,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":504,"org.easymock.samples.SupportTest.voteForRemovals":15,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":48,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":444,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":34,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":489,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":204,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":2,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":47,"org.easymock.tests.UsageExpectAndThrowTest.object":32,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":474,"org.easymock.tests2.DelegateToTest.testWrongClass":384,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":261,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":262,"org.easymock.tests.UsageStrictMockTest.range":169,"org.easymock.samples.ConstructorCalledMockTest.testTax":17,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":409,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":349,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":367,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":33,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":395,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":148,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":99,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":501,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":44,"org.easymock.tests2.CaptureTest.testCaptureNone":295,"org.easymock.tests.UsageUnorderedTest.message":54,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":505,"org.easymock.tests.UsageVerifyTest.twoReturns":133,"org.easymock.tests.UsageVarargTest.varargByteAccepted":258,"org.easymock.tests2.ThreadingTest.testThreadSafe":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":323,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":211,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":19,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":227,"org.easymock.tests2.CaptureTest.testCapture_2617107":289,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":269,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":202,"org.easymock.tests2.UsageConstraintsTest.any":464,"org.easymock.tests2.StubTest.stub":439,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":236,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":153,"org.easymock.tests.UsageExpectAndThrowTest.longType":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":203,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":93,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":235,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":427,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":446,"org.easymock.tests2.SerializationTest.testClass":339,"org.easymock.tests.LimitationsTest.mockNativeMethod":265,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":74,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":357,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":430,"org.easymock.tests2.NameTest.nameForMocksControl":380,"org.easymock.tests2.MockedExceptionTest.testMockedException":333,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":311,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":147,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":483,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":179,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":26,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":270,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":397,"org.easymock.tests.MockingTest.testNicePartialClassMocking":177,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":275,"org.easymock.tests2.CaptureTest.testCaptureLast":294,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":355,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":268,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":374,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":475,"org.easymock.tests.MockingTest.testTwoMocks":175,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":375,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":55,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":30,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":420,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":479,"org.easymock.samples.ExampleTest.removeNonExistingDocument":12,"org.easymock.tests.UsageStrictMockTest.differentMethods":170,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":362,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":443,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":91,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":303,"org.easymock.tests2.MockBuilderTest.testCreateMockString":403,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":110,"org.easymock.tests.UsageExpectAndThrowTest.floatType":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":313,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":308,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":338,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":487,"org.easymock.tests.UsageVerifyTest.twoThrows":132,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":322,"org.easymock.samples.ExampleTest.voteAgainstRemoval":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":193,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":283,"org.easymock.tests.LimitationsTest.privateConstructor":264,"org.easymock.tests2.UsageConstraintsTest.testNotNull":478,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":125,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":332,"org.easymock.tests2.UsageTest.defaultResetToNice":419,"org.easymock.samples.ExampleTest.voteAgainstRemovals":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":194,"org.easymock.tests.UsageVarargTest.differentLength":255,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":356,"org.easymock.tests2.CallbackTest.callback":331,"org.easymock.tests2.UsageConstraintsTest.equals":457,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":279,"org.easymock.tests.UsageTest.openCallCountByLastCall":146,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":128,"org.easymock.tests.UsageCallCountTest.tooFewCalls":209,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":101,"org.easymock.tests.UsageThrowableTest.throwCheckedException":122,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":502,"org.easymock.tests.MockingTest.testStrictClassMocking":173,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":80,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":373,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":361,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":369,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":372,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":4,"org.easymock.tests2.CompareToTest.testGreateOrEqual":517,"org.easymock.tests.ObjectMethodsTest.testHashCode":225,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":513,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":305,"org.easymock.tests2.NameTest.nameForNiceMock":379,"org.easymock.tests2.DependencyTest.testInterfaceMocking":437,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":511,"org.easymock.samples.ExampleTest.addDocument":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":329,"org.easymock.tests2.DelegateToTest.testStubDelegate":383,"org.easymock.tests2.AnswerTest.stubAnswer":3,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":167,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":398,"org.easymock.tests.UsageVarargTest.varargLongAccepted":257,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":191,"org.easymock.tests.UsageExpectAndReturnTest.floatType":57,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":73,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":485,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":18,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":450,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests.UsageThrowableTest.noUpperLimit":119,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":454,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":404,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":292,"org.easymock.tests2.SerializationTest.test":340,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":496,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":90,"org.easymock.tests2.UsageConstraintsTest.testSame":460,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":56,"org.easymock.samples.SupportTest.addDocument":14,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":371,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":314,"org.easymock.tests.GenericTest.testPackageScope":49,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":187,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":449,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":180,"org.easymock.tests2.NameTest.nameForMock":377,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":67,"org.easymock.tests2.UsageStrictMockTest.differentMethods":429,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":402,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":280,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":59,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":36,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":223,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":78,"org.easymock.tests2.MockedExceptionTest.testRealException":335,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":141,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":196,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":516,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":195,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":127,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":240,"org.easymock.tests2.NameTest.nameForStrictMock":378,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":392,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":482,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":274,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":408,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":473,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":92,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":389,"org.easymock.tests2.UsageStrictMockTest.range":428,"org.easymock.tests2.UsageConstraintsTest.lessThan":480,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":445,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":190,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":343,"org.easymock.tests2.CaptureTest.testCaptureRightOne":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":318,"org.easymock.tests2.UsageConstraintsTest.testOr":461,"org.easymock.tests.UsageRangeTest.combination":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":271,"org.easymock.tests.UsageTest.wrongArguments":145,"org.easymock.tests2.MockBuilderTest.testWithConstructor":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":315,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":111,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":68,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":94,"org.easymock.tests.UsageVarargTest.varargShortAccepted":256,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":212,"org.easymock.tests2.UsageConstraintsTest.cmpTo":465,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":337,"org.easymock.tests2.CompareToTest.testLessThan":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":186,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":418,"org.easymock.tests2.CaptureTest.testCaptureFromStub":298,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":230,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":390,"org.easymock.tests.UsageTest.unexpectedCallWithArray":144,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":166,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":210,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":69,"org.easymock.tests2.CaptureTest.testCapture":495,"org.easymock.tests2.UsageConstraintsTest.constraints":455,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":168,"org.easymock.samples.ExampleTest.addAndChangeDocument":13,"org.easymock.tests.UsageStrictMockTest.testVerify":172,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":16,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":103,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":293,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":492,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":243,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":61,"org.easymock.tests.LimitationsTest.abstractClass":263,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":162,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":244,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":497,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":348}}]
