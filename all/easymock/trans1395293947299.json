[{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[14,15,16,17,18,19,20,21,22,23],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[24,25,26,27,28,29,0,30,31,32,1,2,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,3,51,52,53,54,55,56,4,5,6,7,57,8,9,10,58,59,60,61,62,63,12,64,13,65],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[66,67,68,69,14,15,70,16,17,18,19,20,71,72,73,74,21,75,76,77,47,78,79,80,81,82,83,84,85,86,87,88,89,90,91,22,92,93,94,95,96,23,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,8,115,116,117,118,12,119],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[120,121,122,66,67,123,124,125],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[24,126,127,128,120,121,129,122,130,131,66,67,29,132,133,0,30,31,134,135,32,1,2,136,33,137,138,34,139,35,36,140,37,38,141,142,143,144,123,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,41,42,43,69,14,15,70,16,17,18,19,20,71,72,74,21,165,166,167,168,169,170,75,171,172,173,76,77,47,78,79,80,81,82,83,84,85,86,87,88,89,90,91,22,92,93,94,95,96,23,97,98,99,100,174,48,175,176,177,178,179,180,181,101,182,49,183,102,50,3,51,184,185,186,187,188,124,189,190,191,192,193,194,195,196,197,103,104,198,199,200,105,106,107,108,109,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,56,222,5,223,224,6,7,57,225,226,227,228,229,230,231,110,111,112,113,114,8,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,115,116,117,261,262,263,264,265,266,267,268,269,270,118,271,272,273,9,10,125,274,275,276,277,278,279,280,63,281,12,119,64,13,65,282,283,284,285,286,287,288],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[130,131,145,146,147,148,149,150,151,152,153,154,155,156,163,164,41,42,43,165,166,167,168,169,170,75,171,172,173,176,101,102,3,51,186,188,189,190,192,195,105,201,202,203,204,205,206,209,210,212,213,214,216,217,218,219,220,110,111,112,113,114,232,115,116,290,291,292,293,277,278,279,280,119,13,65,284,285,286],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[294,92],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[311,312],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:117","failures":[120,121,122,66,67,123,124,125],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[24,126,127,128,25,26,27,28,120,121,129,122,130,131,66,313,67,29,132,133,0,30,31,134,135,32,1,2,136,33,137,138,34,139,35,36,140,37,38,141,142,143,144,123,145,146,147,148,149,150,151,152,153,154,155,156,161,162,39,163,164,40,41,42,314,43,44,69,14,15,70,16,17,18,19,20,71,72,73,74,21,165,166,167,168,169,170,45,75,46,171,172,173,76,77,47,78,79,80,81,82,83,84,86,87,88,89,90,91,22,92,93,94,95,96,23,97,98,99,100,315,316,174,317,48,175,176,177,178,179,180,181,101,182,49,183,102,50,3,51,184,185,186,187,188,124,189,190,191,192,193,194,318,319,195,196,197,103,104,198,199,200,52,53,54,55,105,106,107,108,109,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,56,222,4,5,223,224,6,7,57,226,227,228,229,320,230,231,110,111,112,113,114,8,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,115,116,321,322,323,324,117,325,261,262,263,264,265,266,267,268,269,270,118,271,272,273,9,10,290,291,292,293,326,125,274,275,327,58,59,60,61,62,277,279,280,63,281,12,119,64,13,65,282,284,285,286],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1987","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Byte>(org.easymock.Capture<java.lang.Byte>))","type":"CtInvocationImpl"},"failures":[70],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[69,15,72,47,78,82,83,85,94],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[328],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[126,128,329,330,145,146,147,148,150,151,152,331,332,333,334,335,153,336,337,154,338,339,340,341,342,343,344,345,346,155,347,348,349,350,351,156,352,353,39,354,355,163,356,357,358,164,40,41,359,42,360,314,43,361,362,44,363,364,165,166,168,169,170,45,75,365,366,46,171,172,173,367,368,315,316,174,318,318,319,319,195,196,197,369,370,221,371,372,373,374,375,376,377,378,379,380,381,232,382,383,384,271,272,385,289,386,387,388,389,390,391,392,393,394,395,396,284,285,286,397],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[126,128,145,146,147,148,150,151,152,153,154,155,156,39,163,356,164,40,41,42,314,43,44,398,165,166,168,169,170,45,75,46,171,172,173,174,318,318,319,319,195,196,197,221,232,271,272,385,396,284,285,286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"searchType"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[294,76,92,95],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[68,90,96,100],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[47,84,90,100],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[101,399,400,401],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[68],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[14,19,20,21,82,86,102,103,104,105,106,107,108,109,110,111,112,113,114,8,115,116,117,119],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[126,127,128,25,26,27,28,120,121,129,122,130,66,67,29,132,133,0,30,31,134,135,32,1,2,136,33,123,146,147,150,151,152,157,158,159,160,161,162,39,164,40,43,44,68,69,14,15,70,16,17,18,19,20,71,72,73,74,21,165,166,167,168,169,170,75,46,172,76,77,47,78,79,80,81,82,83,84,86,87,88,89,90,91,22,92,93,94,95,96,97,98,99,100,315,316,174,317,175,176,177,178,179,180,181,101,182,49,183,102,50,3,51,184,188,124,189,190,191,192,193,103,104,199,200,52,53,54,55,105,106,107,108,109,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,56,222,4,5,223,224,6,7,57,225,402,226,227,228,229,110,111,112,113,114,8,403,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,404,253,254,255,256,257,258,259,260,115,116,321,322,323,324,117,325,261,262,263,264,265,267,268,269,270,118,271,272,387,273,9,10,290,291,292,293,326,276,58,59,60,61,62,277,278,279,280,63,281,12,119,64,13,65,282,283,284,285,286],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[373,377,405],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[384],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[406,407,408,409,410,411],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[126,127,128,412],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[120,121,122,66,67,123,124,125],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[413,295,296,414,297,24,415,298,299,300,301,302,126,127,128,25,26,27,28,120,416,417,121,129,122,418,419,130,131,66,313,67,29,132,133,0,30,31,134,135,32,1,2,136,33,329,420,421,422,330,423,424,137,138,34,139,35,36,140,37,38,141,142,143,144,123,145,146,147,148,425,149,150,151,426,152,331,332,333,334,335,153,336,337,154,338,339,340,341,342,343,344,345,346,155,347,348,349,350,351,156,352,353,427,157,158,159,160,161,162,39,354,163,356,357,358,164,40,41,359,42,428,360,314,43,361,44,68,69,14,15,70,16,17,18,19,20,71,72,73,74,21,165,166,167,168,169,170,45,429,75,365,366,46,171,172,173,367,368,76,77,47,78,430,79,80,81,82,83,84,85,86,87,88,89,90,91,22,92,93,94,95,96,23,97,98,99,100,315,316,174,317,431,303,304,432,305,48,433,306,307,308,309,310,311,175,176,177,434,178,179,180,181,101,182,49,183,102,50,3,51,184,185,186,187,188,124,189,190,191,192,435,193,194,318,319,195,196,197,436,437,438,103,104,198,199,200,52,53,54,55,406,105,106,107,108,109,369,439,440,441,442,370,443,444,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,56,222,4,5,223,224,6,7,57,445,446,447,225,402,226,227,228,229,320,230,231,110,111,112,113,114,8,371,372,373,374,375,376,377,378,379,448,405,449,450,451,403,399,452,453,454,455,456,457,380,381,232,382,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,458,404,459,253,254,255,256,257,258,259,260,115,116,407,460,461,328,408,409,462,463,464,465,312,466,467,468,410,469,470,471,472,411,473,474,475,476,400,477,401,478,479,480,481,482,383,321,322,323,324,117,325,261,262,263,483,264,265,266,267,268,269,270,118,384,271,272,385,289,386,387,388,389,390,391,392,393,273,9,10,290,291,292,293,326,125,484,274,275,485,276,327,486,487,488,489,58,59,60,61,62,277,278,279,280,63,281,12,119,64,13,65,282,283,394,395,396,284,285,490,286,491,492,397,493,287,288,494,495],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[496,76,92,97],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[372,373,374,375,377,379],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[126,128,145,146,147,148,150,151,152,153,154,155,156,39,163,356,164,40,41,42,314,43,44,165,166,168,169,170,45,75,46,171,172,173,368,174,318,318,319,319,195,196,197,369,370,221,232,383,271,272,385,289,386,387,388,389,390,391,393,396,284,285,286],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[85],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":78,"org.easymock.tests2.UsageTest.argumentsOrdered":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":56,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":312,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":31,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":187,"org.easymock.tests2.DelegateToTest.testReturnException":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":322,"org.easymock.tests.MockingTest.testPartialClassMocking":284,"org.easymock.tests.MockClassControlTest.testToString":388,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":427,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":341,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":233,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":131,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":105,"org.easymock.tests2.UsageTest.wrongArguments":0,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":54,"org.easymock.samples.ExampleTest.answerVsDelegate":124,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":370,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":492,"org.easymock.tests2.UsageConstraintsTest.testNull":80,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":168,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":393,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":141,"org.easymock.tests2.CaptureTest.testPrimitive":70,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":109,"org.easymock.tests.UsageTest.moreThanOneArgument":222,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":252,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":292,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":493,"org.easymock.tests.UsageTest.argumentsOrdered":7,"org.easymock.tests.UsageVarargTest.varargIntAccepted":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":469,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":110,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":39,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":421,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":309,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":114,"org.easymock.tests.ReplayStateInvalidUsageTest.times":454,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":24,"org.easymock.tests2.DependencyTest.testClassMocking":418,"org.easymock.tests2.AnswerTest.answer":120,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":471,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":28,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":440,"org.easymock.tests2.CaptureTest.testAnd":69,"org.easymock.tests2.UsageTest.strictResetToDefault":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":46,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":357,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":35,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":279,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":495,"org.easymock.tests2.DelegateToTest.testDelegate":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":248,"org.easymock.tests.LimitationsTest.mockFinalMethod":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":62,"org.easymock.tests2.DependencyTest.testClassMockingSupport":419,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":458,"org.easymock.tests2.CaptureTest.testCapture1_2446744":16,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":429,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":26,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":450,"org.easymock.tests.UsageThrowableTest.throwError":253,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":442,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":489,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":353,"org.easymock.samples.PartialClassMockTest.testGetArea":195,"org.easymock.tests.MockingTest.testInterfaceMocking":490,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":451,"org.easymock.tests2.CompareToTest.testLessOrEqual":496,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":111,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":437,"org.easymock.tests2.UsageTest.niceToStrict":30,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":342,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":164,"org.easymock.tests2.MockBuilderTest.testCreateMock":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":349,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":299,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":242,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":36,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":439,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":488,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":52,"org.easymock.tests.UsageOverloadedMethodTest.overloading":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":351,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":90,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":275,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":198,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":212,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":89,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":71,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":483,"org.easymock.tests.MockClassControlTest.testEquals":392,"org.easymock.tests2.EasyMockSupportClassTest.testAll":153,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":272,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":250,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":398,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":27,"org.easymock.tests2.CaptureTest.testCaptureAll":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":60,"org.easymock.tests.MockNameTest.defaultName":448,"org.easymock.tests2.UsageConstraintsTest.testMatches":91,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":405,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":293,"org.easymock.samples.ExampleTest.voteForRemovals":192,"org.easymock.tests.UsageVarargTest.allKinds":118,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":273,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":61,"org.easymock.samples.BasicClassMockTest.testPrintContent":197,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":259,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":49,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":434,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":325,"org.easymock.tests2.UsageConstraintsTest.greaterThan":92,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":336,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":278,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":173,"org.easymock.samples.ExampleTest.voteForRemoval":189,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":379,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":180,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":367,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":443,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":422,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":45,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":29,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":221,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":463,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":34,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":321,"org.easymock.tests2.CaptureTest.testCaptureFirst":21,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":139,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":33,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":208,"org.easymock.tests2.UsageTest.moreThanOneArgument":133,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":101,"org.easymock.tests2.CaptureTest.testCapture2_2446744":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":472,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":43,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":270,"org.easymock.tests.GenericTest.testBridgedEquals":289,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":230,"org.easymock.tests.UsageExpectAndReturnTest.longType":204,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":58,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":251,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":362,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":406,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":23,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":249,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":446,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":290,"org.easymock.tests.UsageCallCountTest.tooManyCalls":231,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":350,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":209,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":238,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":258,"org.easymock.tests.MockingTest.testNiceClassMocking":397,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":146,"org.easymock.tests.MockingTest.testClassMocking":395,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":402,"org.easymock.tests2.UsageConstraintsTest.testContains":88,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":355,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":174,"org.easymock.tests2.UsageConstraintsTest.testFind":79,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":200,"org.easymock.tests.MockTypeTest.fromEasyMockClass":441,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":63,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":67,"org.easymock.tests.UsageExpectAndReturnTest.object":211,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":38,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":265,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":481,"org.easymock.tests.UsageTest.exactCallCountByLastCall":57,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":400,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":331,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":217,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":261,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":274,"org.easymock.tests.MockClassControlTest.testHashCode":391,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":303,"org.easymock.tests2.EasyMockSupportTest.testVerify":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":344,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":288,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":487,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":125,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":25,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":68,"org.easymock.tests.UsageVarargTest.varargCharAccepted":264,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":371,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":476,"org.easymock.tests2.UsageTest.openCallCountByLastCall":134,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":143,"org.easymock.tests.DefaultClassInstantiatorTest.object":372,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":486,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":479,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":11,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":345,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":256,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":414,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":431,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":390,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":171,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":239,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":218,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":445,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":156,"org.easymock.tests2.UsageTest.resumeIfFailure":136,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":369,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":324,"org.easymock.tests2.StubTest.stubWithReturnValue":162,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":359,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":97,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":210,"org.easymock.tests2.SerializationTest.testAllMockedMethod":128,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":470,"org.easymock.samples.SupportTest.voteForRemovals":186,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":432,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":245,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":412,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":475,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":416,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":401,"org.easymock.tests.UsageExpectAndThrowTest.object":243,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":95,"org.easymock.tests2.DelegateToTest.testWrongClass":177,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":115,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":116,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.samples.ConstructorCalledMockTest.testTax":318,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":423,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":37,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":244,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":41,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":456,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":333,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":438,"org.easymock.tests2.CaptureTest.testCaptureNone":20,"org.easymock.tests.UsageUnorderedTest.message":8,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageVarargTest.varargByteAccepted":269,"org.easymock.tests2.ThreadingTest.testThreadSafe":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":347,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":229,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":482,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":196,"org.easymock.tests2.CaptureTest.testCapture_2617107":15,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":473,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":108,"org.easymock.tests2.UsageConstraintsTest.any":86,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":453,"org.easymock.tests2.StubTest.stub":161,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":474,"org.easymock.tests.UsageExpectAndThrowTest.longType":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":323,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":376,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":452,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":50,"org.easymock.tests2.SerializationTest.testClass":126,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":48,"org.easymock.tests.LimitationsTest.mockNativeMethod":232,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":385,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":220,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":296,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":184,"org.easymock.tests2.NameTest.nameForMocksControl":160,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":297,"org.easymock.tests2.MockedExceptionTest.testMockedException":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":337,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":224,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":237,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":286,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":313,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":165,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":42,"org.easymock.tests.MockingTest.testNicePartialClassMocking":285,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":170,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":413,"org.easymock.tests2.CaptureTest.testCaptureLast":19,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":404,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":151,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":83,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":96,"org.easymock.tests.MockingTest.testTwoMocks":396,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":426,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":201,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":241,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":1,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":99,"org.easymock.samples.ExampleTest.removeNonExistingDocument":435,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":403,"org.easymock.tests.UsageStrictMockTest.differentMethods":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":298,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":304,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":374,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":181,"org.easymock.tests2.MockBuilderTest.testCreateMockString":44,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":386,"org.easymock.tests.UsageExpectAndThrowTest.floatType":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":338,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":335,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":121,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":332,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":155,"org.easymock.samples.ExampleTest.voteAgainstRemoval":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":466,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":436,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":172,"org.easymock.tests.LimitationsTest.privateConstructor":381,"org.easymock.tests2.UsageConstraintsTest.testNotNull":98,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":260,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":315,"org.easymock.tests2.UsageTest.defaultResetToNice":32,"org.easymock.samples.ExampleTest.voteAgainstRemovals":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":467,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":216,"org.easymock.tests.UsageVarargTest.differentLength":266,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":295,"org.easymock.tests2.CallbackTest.callback":123,"org.easymock.tests2.UsageConstraintsTest.equals":430,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":365,"org.easymock.tests.UsageTest.openCallCountByLastCall":223,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":107,"org.easymock.tests.UsageCallCountTest.tooFewCalls":227,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":148,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":55,"org.easymock.tests.UsageThrowableTest.throwCheckedException":257,"org.easymock.tests.MockingTest.testStrictClassMocking":394,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":150,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":415,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":147,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":455,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":149,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":122,"org.easymock.tests.ObjectMethodsTest.testHashCode":480,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":182,"org.easymock.tests2.NameTest.nameForNiceMock":159,"org.easymock.tests2.DependencyTest.testInterfaceMocking":130,"org.easymock.samples.ExampleTest.addDocument":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":348,"org.easymock.tests2.DelegateToTest.testStubDelegate":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":352,"org.easymock.tests2.AnswerTest.stubAnswer":129,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":119,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":428,"org.easymock.tests.UsageVarargTest.varargLongAccepted":268,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":465,"org.easymock.tests.UsageExpectAndReturnTest.floatType":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":152,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":319,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":485,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":93,"org.easymock.tests.UsageThrowableTest.noUpperLimit":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":308,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":77,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":329,"org.easymock.tests2.SerializationTest.test":127,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":17,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":373,"org.easymock.tests2.UsageConstraintsTest.testSame":81,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":202,"org.easymock.samples.SupportTest.addDocument":185,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":425,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":339,"org.easymock.tests.GenericTest.testPackageScope":271,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":408,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":307,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":491,"org.easymock.tests2.NameTest.nameForMock":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":213,"org.easymock.tests2.UsageStrictMockTest.differentMethods":51,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":361,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":366,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":205,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":247,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":478,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":280,"org.easymock.tests2.MockedExceptionTest.testRealException":317,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":444,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":468,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":102,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":457,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":106,"org.easymock.tests2.NameTest.nameForStrictMock":158,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":358,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":66,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":169,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":330,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":94,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":375,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":163,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":100,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":363,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":464,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":138,"org.easymock.tests2.CaptureTest.testCaptureRightOne":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":343,"org.easymock.tests2.UsageConstraintsTest.testOr":82,"org.easymock.tests.UsageRangeTest.combination":277,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":166,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests2.MockBuilderTest.testWithConstructor":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":340,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":387,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":214,"org.easymock.tests.UsageVarargTest.varargShortAccepted":267,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":377,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":320,"org.easymock.tests2.UsageConstraintsTest.cmpTo":87,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":328,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":135,"org.easymock.tests2.CaptureTest.testCaptureFromStub":73,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":449,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":356,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":228,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":215,"org.easymock.tests2.UsageConstraintsTest.constraints":47,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":64,"org.easymock.samples.ExampleTest.addAndChangeDocument":193,"org.easymock.tests.UsageStrictMockTest.testVerify":283,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":194,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":59,"org.easymock.tests2.CompareToTest.testGreateThan":294,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":18,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":112,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":364,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":207,"org.easymock.tests.LimitationsTest.abstractClass":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":113,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":140,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":262}}]
