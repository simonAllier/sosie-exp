[{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[10,4,6,11,12,13,14,15,16,17,18,19,20,21,22,23,0,1,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,9,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[196,10,12,14,15,18,197,19,20,23,25,27,28,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,62,63,65,66,68,70,71,198,199,200,79,201,84,86,87,202,203,204,205,206,207,208,90,91,94,95,96,97,100,102,103,104,105,107,108,109,110,112,113,114,115,116,118,119,120,121,122,209,135,136,139,140,147,210,211,212,148,149,9,150,151,152,156,158,159,161,162,163,164,169,170,173,174,175,178,180,181,182,183,185,186,187,188,190,191,192,193,194,195],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"expected"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[84,86,87,155,156,158,159,213],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[214,72,141],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[196,215,3,10,4,5,216,6,217,218,219,7,220,221,222,223,224,11,12,13,14,15,16,17,18,197,19,20,21,22,23,0,1,2,225,24,25,26,226,27,227,28,29,228,229,30,31,32,33,214,34,35,36,37,38,39,230,40,41,42,43,44,45,46,47,48,49,50,51,231,52,53,54,55,232,233,234,235,236,237,238,239,56,57,240,241,242,58,59,243,60,244,245,61,62,63,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,64,65,66,67,68,69,70,71,283,72,73,198,74,284,75,285,76,77,199,78,286,287,288,289,290,291,292,200,293,294,295,79,201,80,81,82,83,296,84,85,86,87,88,297,298,89,299,202,203,204,300,301,205,206,302,303,207,304,208,305,306,307,308,309,310,90,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,91,337,338,339,340,341,342,343,92,344,93,94,345,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,346,117,118,119,120,121,122,123,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,124,366,367,368,369,370,371,372,373,374,375,376,377,378,125,126,127,128,209,129,379,380,381,382,383,384,385,386,130,131,132,133,134,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,135,136,137,138,139,140,141,142,143,8,411,412,413,414,415,416,417,144,145,418,146,419,420,421,147,210,211,212,422,423,424,425,148,149,9,150,151,426,427,428,429,430,431,432,152,153,154,433,155,156,157,158,159,160,213,434,435,436,437,438,439,440,161,162,441,442,443,444,445,446,447,448,449,450,451,452,453,454,163,164,165,455,456,457,458,459,166,460,461,462,463,464,465,466,467,167,468,469,470,471,472,168,473,474,475,476,477,478,479,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Find:41","failures":[488],"status":-1,"binaryOperator":"(\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:182","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[244,62,63,393],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[66,67,72,73,489,490,491,492,493,494,495,136,137,138,141,142,155],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[434],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[11,13,20,32,33,37,38,230,49],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[196,220,221,223,223,224,224,0,2,29,239,56,57,240,58,59,261,264,274,280,75,285,77,199,78,286,288,291,292,200,293,496,329,331,333,334,91,337,338,340,343,92,93,124,417,144,145,146,435,436,437,439],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[94,345],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[60,64,70,71,74,84,135,139,140,143,156,163,165],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[489,491,493,494,137,155],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,497],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[18,19,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:971","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[50],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[67,72,73,86,123,499,137,138,141,142,155,158,164,165,460],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"position":"org.easymock.internal.Range:36","failures":[196,215,3,10,4,5,216,6,217,218,219,7,220,221,222,223,224,11,12,13,14,15,16,17,18,197,19,20,21,22,23,0,1,2,225,24,25,26,226,27,227,28,29,228,229,30,31,32,33,214,34,35,36,37,38,39,230,40,41,42,43,44,45,46,47,48,49,50,51,231,52,53,54,55,232,233,234,235,236,237,238,239,56,57,240,241,242,58,59,243,60,244,245,61,62,63,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,64,65,66,67,68,69,70,71,283,72,73,198,74,284,75,285,76,77,199,78,286,287,288,289,290,291,292,200,293,294,295,79,201,80,81,82,83,296,84,85,86,87,88,297,298,89,299,202,203,204,300,301,205,206,302,303,207,304,208,305,306,307,308,309,310,90,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,91,337,338,339,340,341,342,343,92,344,93,94,345,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,346,117,118,119,120,121,122,123,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,124,366,367,368,369,370,371,372,373,374,375,376,377,378,125,126,127,128,209,129,379,380,381,382,383,384,385,386,130,131,132,133,134,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,135,136,137,138,139,140,141,142,143,8,411,412,413,414,415,416,417,144,145,418,146,419,420,421,147,210,211,212,422,423,424,425,148,149,9,150,151,426,427,428,429,430,431,432,152,153,154,433,155,156,157,158,159,160,213,434,435,436,437,438,439,440,161,162,441,442,443,444,445,446,447,448,449,450,451,452,453,454,163,164,165,455,456,457,458,459,166,460,461,462,463,464,465,466,467,167,468,469,470,471,472,168,473,474,475,476,477,478,479,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Or:38","sourceCode":"for (final org.easymock.IArgumentMatcher org.easymock.IArgumentMatcher : java.util.List<org.easymock.IArgumentMatcher>) {\n    if (org.easymock.IArgumentMatcher.matches(java.lang.Object)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[123,500],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2124","failures":[10,60,61,62,94,95],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[438],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[10,60,61,63,90,94,95,455],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:105","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:32","sourceCode":"org.easymock.internal.Range.this(int, int)","type":"CtInvocationImpl"},"failures":[196,215,3,10,4,5,216,6,217,218,219,7,220,221,222,223,224,11,12,13,14,15,16,17,18,197,19,20,21,22,23,0,1,2,225,24,25,26,226,27,227,28,29,228,229,30,31,32,33,214,34,35,36,37,38,39,230,40,41,42,43,44,45,46,47,48,49,50,51,231,52,53,54,55,232,233,234,235,236,237,238,239,56,57,240,241,242,58,59,243,60,244,245,61,62,63,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,64,65,66,67,68,69,70,71,283,72,73,198,74,284,75,285,76,77,199,78,286,287,288,289,290,291,292,200,293,294,295,79,201,80,81,82,83,296,84,85,86,87,88,297,298,89,299,202,203,204,300,301,205,206,302,303,207,304,208,305,306,307,308,309,310,90,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,91,337,338,339,340,341,342,343,92,344,93,94,345,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,346,117,118,119,120,121,122,123,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,124,366,367,368,369,370,371,372,373,374,375,376,377,378,125,126,127,128,209,129,379,380,381,382,383,384,385,386,130,131,132,133,134,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,135,136,137,138,139,140,141,142,143,8,411,412,413,414,415,416,417,144,145,418,146,419,420,421,147,210,211,212,422,423,424,425,148,149,9,150,151,426,427,428,429,430,431,432,152,153,154,433,155,156,157,158,159,160,213,434,435,436,437,438,439,440,161,162,441,442,443,444,445,446,447,448,449,450,451,452,453,454,163,164,165,455,456,457,458,459,166,460,461,462,463,464,465,466,467,167,468,469,470,471,472,168,473,474,475,476,477,478,479,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,480,481,482,483,484,485,486,487],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[11,13,20,32,38],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,497],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[196,215,3,10,4,5,216,6,217,218,219,7,220,221,222,223,224,11,12,13,14,15,16,17,18,197,19,20,21,22,23,0,1,2,225,24,25,26,226,27,227,28,29,228,229,30,31,32,33,214,34,35,36,37,38,39,230,40,41,42,43,44,45,46,47,48,49,50,51,231,52,53,54,55,232,233,234,235,236,237,238,239,56,57,240,241,242,58,59,243,60,244,245,61,62,63,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,64,65,66,67,68,69,70,71,283,72,73,198,74,284,75,285,76,77,199,78,286,287,288,289,290,291,292,200,293,294,295,79,201,80,81,82,83,296,84,85,86,87,88,297,298,89,299,202,203,204,300,301,205,206,302,303,207,304,208,305,306,307,308,309,310,90,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,91,337,338,339,340,341,342,343,92,344,93,94,345,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,346,117,118,119,120,121,122,123,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,124,366,367,368,369,370,371,372,373,374,375,376,377,378,125,126,127,128,209,129,379,380,381,382,383,384,385,386,130,131,132,133,134,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,135,136,137,138,139,140,141,142,143,8,411,412,413,414,415,416,417,144,145,418,146,419,420,421,147,210,211,212,422,423,424,425,148,149,9,150,151,426,427,428,429,430,431,432,152,153,154,433,155,156,157,158,159,160,213,434,435,436,437,438,439,440,161,162,441,442,443,444,445,446,447,448,449,450,451,452,453,454,163,164,165,455,456,457,458,459,166,460,461,462,463,464,465,466,467,167,468,469,470,471,472,168,473,474,475,476,477,478,479,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[445],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[86,501,158,164,165],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":33,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":135,"org.easymock.tests2.UsageTest.argumentsOrdered":73,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":304,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":397,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":69,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":215,"org.easymock.tests2.DelegateToTest.testReturnException":24,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":126,"org.easymock.tests.MockingTest.testPartialClassMocking":144,"org.easymock.tests.MockClassControlTest.testToString":381,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":306,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":268,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":174,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":264,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":299,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":169,"org.easymock.tests2.UsageTest.wrongArguments":67,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":257,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":424,"org.easymock.samples.ExampleTest.answerVsDelegate":10,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":352,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":420,"org.easymock.tests2.UsageConstraintsTest.testNull":35,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":77,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":386,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":207,"org.easymock.tests2.CaptureTest.testPrimitive":14,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":173,"org.easymock.tests.UsageTest.moreThanOneArgument":136,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":193,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":76,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":132,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":441,"org.easymock.tests.UsageTest.argumentsOrdered":142,"org.easymock.tests.UsageVarargTest.varargIntAccepted":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":402,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":148,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":331,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":234,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":325,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":151,"org.easymock.tests.ReplayStateInvalidUsageTest.times":476,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":251,"org.easymock.tests2.DependencyTest.testClassMocking":297,"org.easymock.tests2.AnswerTest.answer":60,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":404,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":314,"org.easymock.tests2.CaptureTest.testAnd":11,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":349,"org.easymock.tests2.UsageTest.strictResetToDefault":65,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":291,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":335,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":131,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":301,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":445,"org.easymock.tests2.DelegateToTest.testDelegate":27,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":189,"org.easymock.tests.LimitationsTest.mockFinalMethod":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":414,"org.easymock.tests2.DependencyTest.testClassMockingSupport":298,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":467,"org.easymock.tests2.CaptureTest.testCapture1_2446744":15,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":287,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":187,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":312,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":471,"org.easymock.tests.UsageThrowableTest.throwError":116,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":351,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":429,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":326,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":282,"org.easymock.samples.PartialClassMockTest.testGetArea":196,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":472,"org.easymock.tests.MockingTest.testInterfaceMocking":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":149,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":462,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":486,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":175,"org.easymock.tests2.UsageTest.niceToStrict":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":91,"org.easymock.tests2.MockBuilderTest.testCreateMock":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":277,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":254,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":489,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":183,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":205,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":348,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":466,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":446,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":422,"org.easymock.tests.UsageOverloadedMethodTest.overloading":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":279,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":458,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":44,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":440,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":107,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":43,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":19,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":370,"org.easymock.tests.MockClassControlTest.testEquals":385,"org.easymock.tests2.EasyMockSupportClassTest.testAll":261,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":436,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":490,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":191,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":412,"org.easymock.tests2.CaptureTest.testCaptureAll":12,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":313,"org.easymock.tests.MockNameTest.defaultName":487,"org.easymock.tests2.UsageConstraintsTest.testMatches":45,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":469,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":133,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests.UsageVarargTest.allKinds":378,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":413,"org.easymock.samples.BasicClassMockTest.testPrintContent":221,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":121,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":129,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":226,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":322,"org.easymock.tests2.UsageConstraintsTest.greaterThan":47,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":262,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":210,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":293,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":363,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":201,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":294,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":353,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":235,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":286,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":439,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":64,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":394,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":204,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":125,"org.easymock.tests2.CaptureTest.testCaptureFirst":23,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":300,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":74,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":103,"org.easymock.tests2.CaptureTest.testCapture2_2446744":22,"org.easymock.tests2.UsageTest.moreThanOneArgument":66,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":405,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":92,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":377,"org.easymock.tests.GenericTest.testBridgedEquals":438,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":453,"org.easymock.tests.UsageExpectAndReturnTest.longType":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":8,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":202,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":192,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":480,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":231,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":190,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":427,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":130,"org.easymock.tests.UsageCallCountTest.tooManyCalls":454,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":278,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":256,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":120,"org.easymock.tests.MockingTest.testNiceClassMocking":421,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":56,"org.easymock.tests.MockingTest.testClassMocking":416,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":447,"org.easymock.tests2.UsageConstraintsTest.testContains":42,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":329,"org.easymock.tests2.UsageConstraintsTest.testFind":34,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":162,"org.easymock.tests.MockTypeTest.fromEasyMockClass":350,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":154,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":95,"org.easymock.tests.UsageExpectAndReturnTest.object":106,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":288,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":255,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":303,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":372,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":484,"org.easymock.tests.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":442,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":430,"org.easymock.tests2.ConstraintsToStringTest.findToString":488,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":495,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":228,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":112,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":367,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":457,"org.easymock.tests.MockClassControlTest.testHashCode":384,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":316,"org.easymock.tests2.EasyMockSupportTest.testVerify":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":271,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":443,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":465,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":455,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":311,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":284,"org.easymock.tests.UsageVarargTest.varargCharAccepted":371,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":355,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":410,"org.easymock.tests2.UsageTest.openCallCountByLastCall":70,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":208,"org.easymock.tests.DefaultClassInstantiatorTest.object":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":464,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":482,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":499,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":118,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":249,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":315,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":292,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":383,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":180,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":113,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":280,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":382,"org.easymock.tests2.UsageTest.resumeIfFailure":198,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":347,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":128,"org.easymock.tests2.StubTest.stubWithReturnValue":28,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":339,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":105,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":52,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":403,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":491,"org.easymock.samples.SupportTest.voteForRemovals":7,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":434,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":186,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":497,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":409,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":244,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":432,"org.easymock.tests.UsageExpectAndThrowTest.object":184,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":50,"org.easymock.tests2.DelegateToTest.testWrongClass":26,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":194,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":195,"org.easymock.tests.UsageStrictMockTest.range":158,"org.easymock.samples.ConstructorCalledMockTest.testTax":223,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":237,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":302,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":239,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":185,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":338,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":478,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":258,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":423,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":493,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":463,"org.easymock.tests2.CaptureTest.testCaptureNone":197,"org.easymock.tests.UsageUnorderedTest.message":123,"org.easymock.tests.UsageVerifyTest.twoReturns":165,"org.easymock.tests.UsageVarargTest.varargByteAccepted":376,"org.easymock.tests2.ThreadingTest.testThreadSafe":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":275,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":451,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":485,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":220,"org.easymock.tests2.CaptureTest.testCapture_2617107":13,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":492,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":407,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":172,"org.easymock.tests2.UsageConstraintsTest.any":40,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":475,"org.easymock.tests2.StubTest.stub":227,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":408,"org.easymock.tests.UsageExpectAndThrowTest.longType":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":127,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":360,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":474,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":85,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":320,"org.easymock.tests.LimitationsTest.mockNativeMethod":124,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":437,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":115,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":248,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":88,"org.easymock.tests2.NameTest.nameForMocksControl":310,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":250,"org.easymock.tests2.MockedExceptionTest.testMockedException":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":263,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":140,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":178,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":146,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":345,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":75,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":340,"org.easymock.tests.MockingTest.testNicePartialClassMocking":145,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":78,"org.easymock.tests2.CaptureTest.testCaptureLast":18,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":246,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":167,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":38,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":59,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":51,"org.easymock.tests.MockingTest.testTwoMocks":417,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":243,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":182,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":72,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":54,"org.easymock.samples.ExampleTest.removeNonExistingDocument":217,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":168,"org.easymock.tests.UsageStrictMockTest.differentMethods":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":253,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":317,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":358,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":80,"org.easymock.tests2.MockBuilderTest.testCreateMockString":93,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":379,"org.easymock.tests.UsageExpectAndThrowTest.floatType":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":265,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":260,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":61,"org.easymock.tests.UsageVerifyTest.twoThrows":164,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":229,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":274,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":398,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":200,"org.easymock.tests.LimitationsTest.privateConstructor":365,"org.easymock.tests2.UsageConstraintsTest.testNotNull":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":122,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":327,"org.easymock.tests2.UsageTest.defaultResetToNice":283,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":399,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":111,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":247,"org.easymock.tests.UsageVarargTest.differentLength":373,"org.easymock.tests2.CallbackTest.callback":90,"org.easymock.tests2.UsageConstraintsTest.equals":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":289,"org.easymock.tests.UsageTest.openCallCountByLastCall":139,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":171,"org.easymock.tests.UsageCallCountTest.tooFewCalls":449,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":240,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":425,"org.easymock.tests.UsageThrowableTest.throwCheckedException":119,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":494,"org.easymock.tests.MockingTest.testStrictClassMocking":415,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":153,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":58,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":57,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":252,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":477,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":242,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":63,"org.easymock.tests.ObjectMethodsTest.testHashCode":483,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":82,"org.easymock.tests2.NameTest.nameForNiceMock":309,"org.easymock.tests2.DependencyTest.testInterfaceMocking":89,"org.easymock.samples.ExampleTest.addDocument":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":276,"org.easymock.tests2.DelegateToTest.testStubDelegate":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":281,"org.easymock.tests2.AnswerTest.stubAnswer":62,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":156,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":341,"org.easymock.tests.UsageVarargTest.varargLongAccepted":375,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":114,"org.easymock.tests.UsageExpectAndReturnTest.floatType":98,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":29,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":224,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":459,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":48,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":324,"org.easymock.tests.UsageThrowableTest.noUpperLimit":346,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":31,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":232,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":16,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":357,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":97,"org.easymock.tests2.UsageConstraintsTest.testSame":36,"org.easymock.samples.SupportTest.addDocument":219,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":241,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":266,"org.easymock.tests.GenericTest.testPackageScope":435,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":323,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":419,"org.easymock.tests2.NameTest.nameForMock":307,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":108,"org.easymock.tests2.UsageStrictMockTest.differentMethods":87,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":344,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":290,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":100,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":188,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":481,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":212,"org.easymock.tests2.MockedExceptionTest.testRealException":330,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":400,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":84,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":479,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":170,"org.easymock.tests2.NameTest.nameForStrictMock":308,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":336,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":94,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":199,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":236,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":500,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":49,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":359,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":333,"org.easymock.tests2.UsageStrictMockTest.range":86,"org.easymock.tests2.UsageConstraintsTest.lessThan":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":395,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":203,"org.easymock.tests2.CaptureTest.testCaptureRightOne":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":270,"org.easymock.tests2.UsageConstraintsTest.testOr":37,"org.easymock.tests.UsageRangeTest.combination":147,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":285,"org.easymock.tests.UsageTest.wrongArguments":138,"org.easymock.tests2.MockBuilderTest.testWithConstructor":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":267,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":380,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":109,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":361,"org.easymock.tests.UsageVarargTest.varargShortAccepted":374,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":452,"org.easymock.tests2.UsageConstraintsTest.cmpTo":41,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":390,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":71,"org.easymock.tests2.CaptureTest.testCaptureFromStub":21,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":470,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":334,"org.easymock.tests.UsageTest.unexpectedCallWithArray":137,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":155,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":450,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":110,"org.easymock.tests2.CaptureTest.testCapture":498,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":157,"org.easymock.tests2.UsageConstraintsTest.constraints":32,"org.easymock.samples.ExampleTest.addAndChangeDocument":218,"org.easymock.tests.UsageStrictMockTest.testVerify":213,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":222,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":433,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":411,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":17,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":9,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":102,"org.easymock.tests.LimitationsTest.abstractClass":364,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":150,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":501,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":206,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":368}}]
