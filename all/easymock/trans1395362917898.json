[{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[158,203],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[296,297,1,2,3,4,8,9,10,11,12,13,16,17,298,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,51,52,53,54,55,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,88,91,92,299,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,300,116,117,118,119,120,121,122,123,124,125,126,127,130,301,131,132,133,134,135,137,138,139,140,141,142,143,144,145,155,157,158,164,165,168,169,170,171,172,177,179,180,181,302,303,304,305,182,185,186,188,189,192,195,197,199,200,201,202,204,205,207,209,224,225,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,259,260,261,262,263,264,265,266,268,269,270,272,273,276,277,278,279,281,282,283,284,285,287,288,289,290,291,292,295],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[306,256],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[149,150,307,308,309,310],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[13,15,17,18,19,20,21,22,298,27,28,29,30,48,311,312,313,56,57,60,61,64,314,88,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,300,116,117,118,119,120,121,122,123,125,126,127,130,136,137,138,139,141,142,144,148,152,156,157,159,160,162,164,165,166,167,168,173,174,175,176,181,182,183,184,185,186,188,190,191,192,195,196,197,198,199,200,201,202,204,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,225,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,261,265,267,268,269,271,272,273,274,275,276,277,279,282,283,285,286,289,290,291,292,294,295],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:208","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[243],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[315,15,17,18,19,20,21,22,25,35,56,316,317,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,124,129,138,181,184],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:85","sourceCode":"return java.util.List<T>.get(0)","type":"CtReturnImpl"},"failures":[282,284,285,286,287,288,289,291,318,292,293,295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[208],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[319,244],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:269","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[149,149,150,150,308,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[320,209],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[321,322],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[27,28,29,30,119,152,156,157,159,160,162,167,173,174,175,176,197,199,200,202,257,271,272,273,274,275,276,277,279],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[297,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,298,26,27,28,29,30,37,38,39,40,41,43,44,45,46,47,48,49,51,52,53,54,55,58,59,62,63,64,67,68,70,75,80,324,86,87,89,92,299,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,97,98,100,105,110,124,125,129,341,301,342,343,344,345,346,347,136,137,139,140,141,142,143,144,348,146,147,148,151,152,153,154,155,157,158,159,160,161,163,167,168,169,170,171,172,173,174,175,176,182,183,184,185,187,188,189,192,193,194,196,197,198,199,200,201,202,203,204,205,207,210,211,212,213,214,215,216,217,218,219,220,221,222,224,226,229,230,233,238,239,240,241,243,246,249,250,251,252,253,257,258,259,260,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,280,282,283,284,285,287,288,289,290,291,292,295],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[349,350,279],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[232,239,244,256],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cl":"cl","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[58,87,351,352,353,354],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[261,262],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[146,151,355,356,357,358,359,360,361,362,363,364],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":233,"org.easymock.tests2.UsageTest.argumentsOrdered":194,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":56,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":220,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":349,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":189,"org.easymock.tests2.StubTest.stubWithReturnValue":181,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":253,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":104,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":151,"org.easymock.tests2.SerializationTest.testAllMockedMethod":270,"org.easymock.tests2.DelegateToTest.testReturnException":278,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":0,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":32,"org.easymock.tests.MockingTest.testPartialClassMocking":27,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":354,"org.easymock.samples.SupportTest.voteForRemovals":148,"org.easymock.tests.MockClassControlTest.testToString":342,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":322,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":314,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":77,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":65,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":174,"org.easymock.tests.UsageExpectAndThrowTest.object":75,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":250,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":183,"org.easymock.tests2.DelegateToTest.testWrongClass":280,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":93,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":94,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":126,"org.easymock.tests2.UsageTest.wrongArguments":187,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":359,"org.easymock.tests.UsageStrictMockTest.range":90,"org.easymock.samples.ConstructorCalledMockTest.testTax":149,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":10,"org.easymock.samples.ExampleTest.answerVsDelegate":140,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":217,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":271,"org.easymock.tests2.UsageConstraintsTest.testNull":235,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":76,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":347,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":219,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":159,"org.easymock.tests2.CaptureTest.testPrimitive":285,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":130,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":339,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":84,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":62,"org.easymock.tests.UsageTest.moreThanOneArgument":57,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":9,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":133,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":313,"org.easymock.tests2.CaptureTest.testCaptureNone":290,"org.easymock.tests.UsageUnorderedTest.message":50,"org.easymock.tests.UsageVerifyTest.twoReturns":125,"org.easymock.tests.UsageVarargTest.varargByteAccepted":45,"org.easymock.tests2.ThreadingTest.testThreadSafe":164,"org.easymock.tests.UsageTest.argumentsOrdered":63,"org.easymock.tests.UsageVarargTest.varargIntAccepted":39,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":4,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":153,"org.easymock.tests2.CaptureTest.testCapture_2617107":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":118,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":155,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":129,"org.easymock.tests2.UsageConstraintsTest.any":240,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":158,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":336,"org.easymock.tests2.StubTest.stub":180,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":122,"org.easymock.tests.UsageExpectAndThrowTest.longType":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":33,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":335,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":226,"org.easymock.tests2.SerializationTest.testClass":268,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":267,"org.easymock.tests.ReplayStateInvalidUsageTest.times":337,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":258,"org.easymock.tests.LimitationsTest.mockNativeMethod":30,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":311,"org.easymock.tests2.AnswerTest.answer":259,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":114,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":172,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":357,"org.easymock.tests2.CaptureTest.testAnd":282,"org.easymock.tests2.UsageTest.strictResetToDefault":185,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":229,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":205,"org.easymock.tests2.NameTest.nameForMocksControl":305,"org.easymock.tests2.MockedExceptionTest.testMockedException":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":214,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":116,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":61,"org.easymock.tests2.DelegateToTest.testDelegate":281,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":69,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":29,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":178,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":197,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":160,"org.easymock.tests.MockingTest.testNicePartialClassMocking":28,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":80,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":202,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":355,"org.easymock.tests2.CaptureTest.testCaptureLast":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":35,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":328,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":277,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":238,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":251,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":55,"org.easymock.tests2.CaptureTest.testCapture1_2446744":286,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":95,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":78,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":73,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":170,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":193,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":255,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":331,"org.easymock.tests.UsageThrowableTest.throwError":15,"org.easymock.samples.ExampleTest.removeNonExistingDocument":348,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":333,"org.easymock.tests.UsageStrictMockTest.differentMethods":91,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":362,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":166,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":364,"org.easymock.tests2.MockBuilderTest.testCreateMockString":163,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":341,"org.easymock.tests.UsageExpectAndThrowTest.floatType":67,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":135,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":246,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":260,"org.easymock.tests.UsageVerifyTest.twoThrows":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":175,"org.easymock.samples.PartialClassMockTest.testGetArea":152,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":119,"org.easymock.samples.ExampleTest.voteAgainstRemoval":142,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":312,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":66,"org.easymock.tests2.UsageTest.niceToStrict":188,"org.easymock.tests2.UsageConstraintsTest.testNotNull":254,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":263,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":22,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":157,"org.easymock.tests2.UsageTest.defaultResetToNice":192,"org.easymock.tests2.MockBuilderTest.testCreateMock":161,"org.easymock.samples.ExampleTest.voteAgainstRemovals":139,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":110,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":356,"org.easymock.tests.UsageVarargTest.differentLength":42,"org.easymock.tests2.CallbackTest.callback":209,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":358,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":310,"org.easymock.tests.UsageTest.openCallCountByLastCall":60,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":353,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":74,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":215,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":230,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":317,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":296,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":8,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":128,"org.easymock.tests.UsageCallCountTest.tooFewCalls":2,"org.easymock.tests.UsageOverloadedMethodTest.overloading":137,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":244,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":25,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":274,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":106,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":136,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":243,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":291,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":11,"org.easymock.tests.UsageThrowableTest.throwCheckedException":19,"org.easymock.tests.MockClassControlTest.testEquals":346,"org.easymock.tests2.EasyMockSupportClassTest.testAll":173,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":49,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":82,"org.easymock.tests2.CaptureTest.testCaptureAll":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":53,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":171,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":276,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":14,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":273,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":338,"org.easymock.tests2.UsageConstraintsTest.testMatches":245,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":275,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":262,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":134,"org.easymock.tests.ObjectMethodsTest.testHashCode":326,"org.easymock.tests2.CompareToTest.testGreateOrEqual":319,"org.easymock.samples.ExampleTest.voteForRemovals":144,"org.easymock.tests2.NameTest.nameForNiceMock":304,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":168,"org.easymock.tests.UsageVarargTest.allKinds":47,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":123,"org.easymock.tests2.DependencyTest.testInterfaceMocking":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":54,"org.easymock.samples.BasicClassMockTest.testPrintContent":154,"org.easymock.samples.ExampleTest.addDocument":143,"org.easymock.tests2.DelegateToTest.testStubDelegate":279,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":21,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":223,"org.easymock.tests2.AnswerTest.stubAnswer":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":36,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":88,"org.easymock.tests2.UsageConstraintsTest.greaterThan":247,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":300,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":208,"org.easymock.tests.UsageVarargTest.varargLongAccepted":44,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":92,"org.easymock.samples.ExampleTest.voteForRemoval":141,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":165,"org.easymock.tests.UsageExpectAndReturnTest.floatType":97,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":113,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":257,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":203,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":150,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":248,"org.easymock.tests.UsageThrowableTest.noUpperLimit":16,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":231,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":12,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":184,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":287,"org.easymock.tests2.SerializationTest.test":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":212,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":17,"org.easymock.tests2.UsageConstraintsTest.testSame":236,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":96,"org.easymock.samples.SupportTest.addDocument":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":31,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":350,"org.easymock.tests2.CaptureTest.testCaptureFirst":295,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":213,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":196,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":334,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":26,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":102,"org.easymock.tests.GenericTest.testPackageScope":48,"org.easymock.tests2.CaptureTest.testCapture2_2446744":294,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":167,"org.easymock.tests2.UsageTest.moreThanOneArgument":186,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":162,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":363,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":46,"org.easymock.tests2.NameTest.nameForMock":302,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":6,"org.easymock.tests.UsageExpectAndReturnTest.longType":98,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":51,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":83,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":107,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":252,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":309,"org.easymock.tests2.UsageStrictMockTest.differentMethods":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":131,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":99,"org.easymock.tests.UsageCallCountTest.tooManyCalls":7,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":79,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":117,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":1,"org.easymock.tests2.MockedExceptionTest.testRealException":266,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":320,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":70,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":340,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":127,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":272,"org.easymock.tests2.NameTest.nameForStrictMock":303,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":297,"org.easymock.tests2.UsageConstraintsTest.testContains":242,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":265,"org.easymock.tests2.UsageConstraintsTest.testFind":234,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":138,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":177,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":201,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":85,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":179,"org.easymock.tests.UsageExpectAndReturnTest.object":105,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":204,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":156,"org.easymock.tests2.UsageStrictMockTest.range":227,"org.easymock.tests2.UsageConstraintsTest.lessThan":256,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":218,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":41,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":327,"org.easymock.tests.UsageTest.exactCallCountByLastCall":64,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":323,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":13,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":211,"org.easymock.tests2.CaptureTest.testCaptureRightOne":292,"org.easymock.tests2.UsageConstraintsTest.testOr":237,"org.easymock.tests.UsageRangeTest.combination":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":198,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":37,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":111,"org.easymock.tests.UsageTest.wrongArguments":59,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":24,"org.easymock.tests2.MockBuilderTest.testWithConstructor":307,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":361,"org.easymock.tests.MockClassControlTest.testHashCode":345,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":301,"org.easymock.tests2.EasyMockSupportTest.testVerify":222,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":108,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":316,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":23,"org.easymock.tests.UsageVarargTest.varargShortAccepted":43,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":5,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":169,"org.easymock.tests2.UsageConstraintsTest.cmpTo":241,"org.easymock.tests.UsageVarargTest.varargCharAccepted":40,"org.easymock.tests2.CompareToTest.testLessThan":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":315,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":224,"org.easymock.tests2.UsageTest.openCallCountByLastCall":190,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":191,"org.easymock.tests.DefaultClassInstantiatorTest.object":324,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":221,"org.easymock.tests2.CaptureTest.testCaptureFromStub":293,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":330,"org.easymock.tests.UsageTest.unexpectedCallWithArray":58,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":72,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":87,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":18,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":3,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":321,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":308,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":360,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":109,"org.easymock.tests2.CaptureTest.testCapture":318,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":344,"org.easymock.tests2.UsageConstraintsTest.constraints":232,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":206,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":89,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":71,"org.easymock.samples.ExampleTest.addAndChangeDocument":145,"org.easymock.tests.UsageStrictMockTest.testVerify":299,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":112,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":146,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":343,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":176,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":52,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":288,"org.easymock.tests2.UsageTest.resumeIfFailure":195,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":120,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":101,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":121,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":216,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":38}}]
