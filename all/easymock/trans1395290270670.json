[{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[23,24,25,26,27,28,29],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.ConstructorArgs:54","failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[81],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[82,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[83,84,85,86,87,88,89,90,91,92,93,4,94,95,96,78,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[122,123],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[124,125,81],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[126],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[127,128],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[129,23,24,31,130,131,132,40,50,56,133,25,134,135,136,137,138,26,139,140,141,142,143,144,145,146,147,148,65,149,150,29,151,152,153,154,155],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[156,157,158,159,160,161],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[162,163,164,165,72,76],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"invocation"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[129,166,167,23,23,24,24,31,168,130,169,170,171,172,173,174,37,40,50,56,175,176,177,178,179,133,180,0,134,135,181,182,183,184,185,186,138,187,139,140,143,144,145,147,149,150,188,151,152,153,189,190,191,192,193,194,195,196,155,197],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[69,198,77,199,200],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[201,202,203],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[31,131,204,205,206,207,208,209,210,146],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[129,158,130,169,170,171,172,211,173,174,37,40,50,56,175,212,177,179,213,139,143,145,147,150,189,192,193,194,214],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:70","failures":[129,215,216,156,217,218,219,220,221,222,223,224,166,167,225,23,23,24,24,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,124,243,244,245,125,30,246,81,247,248,249,126,250,251,252,253,254,255,256,257,258,259,260,261,262,263,180,264,265,266,267,268,269,70,270,93,271,214,272,273,274,275,276,76,277,278,279,280,101,281,282,283],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[201,202,203],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[69,284,77,78,79],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[31,285,168,286],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[287,67,74],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:41","failures":[288],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Comparable)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[129,215,216,156,217,218,219,220,222,223,224,166,167,225,23,24,226,227,228,229,230,231,232,233,234,235,236,237,238,239,31,285,168,157,158,159,160,289,83,130,240,241,242,124,243,244,245,125,30,246,247,248,249,126,250,251,252,253,254,255,256,257,258,259,260,261,262,169,170,171,172,211,173,174,290,291,292,293,294,37,40,50,56,84,295,296,66,297,298,299,85,300,67,68,301,302,175,176,212,177,178,179,133,180,0,134,135,181,303,304,213,264,305,306,265,307,69,198,308,266,267,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,137,328,186,329,138,139,143,144,145,147,149,150,151,268,269,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,86,350,87,88,89,90,91,92,70,189,351,352,353,354,355,356,357,358,359,360,270,361,362,363,364,93,365,366,367,368,369,370,94,371,72,73,372,95,74,75,373,374,375,376,377,378,192,193,194,379,380,381,382,383,384,385,271,214,272,273,274,275,276,386,387,76,277,388,77,199,389,195,196,197,390,391,96,392,393,394,395,396,397,398,200,78,79,399,161,97,80,278,279,280,101,281,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,282,283],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[31,285,168,286],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[242,252,171,173,294,84,296,66,297,298,67,68,301,302,176,181,305,265,307,69,198,308,310,314,318,322,327,139,145,149,70,400,153,401,356,402,403,404,94,371,72,73,74,75,373,379,386,76,277,388,77,199,389,405,392,393,396,397,398,200,78,79,406,407,408,80,409,410,411,412,413,414],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[290,84,299,85,302,265,94,372,95,373,277,200,79],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:136","failures":[129,166,167,23,23,24,24,31,168,130,131,415,416,417,418,169,170,171,172,173,174,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,175,176,177,178,179,133,180,25,419,0,134,135,181,122,136,420,421,137,328,186,138,139,140,142,143,144,145,147,65,149,150,151,152,153,201,202,422,423,424,203,425,426,427,189,428,429,190,402,403,404,430,431,432,433,434,191,192,193,194,435,154,195,196,155,436,197],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[129,215,216,156,217,218,219,220,222,223,224,166,167,225,23,24,226,227,228,229,230,231,232,233,234,235,236,237,238,239,31,285,168,157,158,159,160,289,83,130,240,241,242,124,243,244,245,125,30,246,247,248,249,126,250,251,252,253,254,255,256,257,258,259,260,261,262,169,170,171,172,211,173,174,290,291,292,293,294,37,40,50,56,84,295,296,66,297,298,299,85,300,67,68,301,302,175,176,212,177,178,179,133,180,0,134,135,181,303,304,213,264,305,306,265,307,69,198,308,266,267,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,137,328,186,329,138,139,143,144,145,147,149,150,151,268,269,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,86,350,87,88,89,90,91,92,70,189,351,352,353,354,355,356,357,358,359,360,270,361,362,363,364,93,365,366,367,368,369,370,94,371,72,73,372,95,74,75,373,374,375,376,377,378,192,193,194,379,380,381,382,383,384,385,271,214,272,273,274,275,276,386,387,76,277,388,77,199,389,195,196,197,390,391,96,392,393,394,395,396,397,398,200,78,79,399,161,97,80,278,279,280,101,281,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,282,283],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":124,"org.easymock.tests2.UsageTest.argumentsOrdered":68,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":94,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":319,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":11,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":298,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":215,"org.easymock.tests2.DelegateToTest.testReturnException":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":362,"org.easymock.tests.MockingTest.testPartialClassMocking":192,"org.easymock.tests.MockClassControlTest.testToString":402,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":44,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":102,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":40,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":267,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":205,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":246,"org.easymock.tests2.UsageTest.wrongArguments":66,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":278,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":384,"org.easymock.samples.ExampleTest.answerVsDelegate":156,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":153,"org.easymock.tests2.UsageConstraintsTest.testNull":244,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":177,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":432,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":318,"org.easymock.tests2.CaptureTest.testPrimitive":229,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":281,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":121,"org.easymock.tests.UsageTest.moreThanOneArgument":371,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":368,"org.easymock.tests.UsageTest.argumentsOrdered":75,"org.easymock.tests.UsageVarargTest.varargIntAccepted":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":271,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":209,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":417,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":274,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":294,"org.easymock.tests2.DependencyTest.testClassMocking":420,"org.easymock.tests2.AnswerTest.answer":290,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":17,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":326,"org.easymock.tests2.CaptureTest.testAnd":226,"org.easymock.tests2.UsageTest.strictResetToDefault":295,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":141,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":0,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":313,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":380,"org.easymock.tests2.DelegateToTest.testDelegate":160,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":117,"org.easymock.tests.LimitationsTest.mockFinalMethod":428,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":378,"org.easymock.tests2.DependencyTest.testClassMockingSupport":421,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":409,"org.easymock.tests2.CaptureTest.testCapture1_2446744":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":115,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":324,"org.easymock.tests.UsageThrowableTest.throwError":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":58,"org.easymock.samples.PartialClassMockTest.testGetArea":129,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":214,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":413,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":45,"org.easymock.tests2.UsageTest.niceToStrict":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":1,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":64,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":143,"org.easymock.tests2.MockBuilderTest.testCreateMock":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":53,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":162,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":111,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":314,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":100,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":405,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":382,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":61,"org.easymock.tests.UsageOverloadedMethodTest.overloading":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":55,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":97,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":250,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":390,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":341,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":126,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":235,"org.easymock.tests.MockClassControlTest.testEquals":431,"org.easymock.tests2.EasyMockSupportClassTest.testAll":37,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":196,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":119,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":182,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":28,"org.easymock.tests2.CaptureTest.testCaptureAll":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":376,"org.easymock.tests.MockNameTest.defaultName":414,"org.easymock.tests2.UsageConstraintsTest.testMatches":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":369,"org.easymock.samples.ExampleTest.voteForRemovals":220,"org.easymock.tests.UsageVarargTest.allKinds":270,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":200,"org.easymock.samples.BasicClassMockTest.testPrintContent":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":377,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":91,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":305,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":365,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":210,"org.easymock.tests2.UsageConstraintsTest.greaterThan":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":38,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":181,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":425,"org.easymock.samples.ExampleTest.voteForRemoval":217,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":122,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":133,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":84,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":197,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":311,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":361,"org.easymock.tests2.CaptureTest.testCaptureFirst":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":312,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":302,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":80,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":337,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":213,"org.easymock.tests2.CaptureTest.testCapture2_2446744":238,"org.easymock.tests2.UsageTest.moreThanOneArgument":296,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":18,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":360,"org.easymock.tests.GenericTest.testBridgedEquals":436,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":62,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":397,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":59,"org.easymock.tests.UsageExpectAndReturnTest.longType":333,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":309,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":374,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":188,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":120,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":258,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":366,"org.easymock.tests.UsageCallCountTest.tooManyCalls":398,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":338,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":107,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":90,"org.easymock.tests.MockingTest.testNiceClassMocking":435,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":170,"org.easymock.tests.MockingTest.testClassMocking":434,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":187,"org.easymock.tests2.UsageConstraintsTest.testContains":249,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":186,"org.easymock.tests2.UsageConstraintsTest.testFind":243,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":96,"org.easymock.tests.MockTypeTest.fromEasyMockClass":400,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":386,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":269,"org.easymock.tests.UsageExpectAndReturnTest.object":340,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":317,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":206,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":355,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":63,"org.easymock.tests.UsageTest.exactCallCountByLastCall":373,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":6,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":131,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":346,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":351,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":161,"org.easymock.tests.MockClassControlTest.testHashCode":430,"org.easymock.tests2.EasyMockSupportTest.testVerify":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":47,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":399,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":99,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":323,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":263,"org.easymock.tests.UsageVarargTest.varargCharAccepted":354,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":22,"org.easymock.tests2.UsageTest.openCallCountByLastCall":299,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":32,"org.easymock.tests.DefaultClassInstantiatorTest.object":201,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":320,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":98,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":411,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":48,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":88,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":404,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":134,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":347,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":56,"org.easymock.tests2.UsageTest.resumeIfFailure":301,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":152,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":364,"org.easymock.tests2.StubTest.stubWithReturnValue":83,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":146,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":259,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":339,"org.easymock.tests2.SerializationTest.testAllMockedMethod":168,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":163,"org.easymock.samples.SupportTest.voteForRemovals":224,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":114,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":286,"org.easymock.tests.UsageExpectAndThrowTest.object":112,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":256,"org.easymock.tests2.DelegateToTest.testWrongClass":159,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":282,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":283,"org.easymock.samples.ConstructorCalledMockTest.testTax":23,"org.easymock.tests.UsageStrictMockTest.range":77,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":316,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":169,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":113,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":34,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":74,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":383,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":164,"org.easymock.tests2.CaptureTest.testCaptureNone":234,"org.easymock.tests.UsageUnorderedTest.message":70,"org.easymock.tests.UsageVerifyTest.twoReturns":79,"org.easymock.tests.UsageVarargTest.varargByteAccepted":359,"org.easymock.tests2.ThreadingTest.testThreadSafe":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":51,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":395,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":412,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":166,"org.easymock.tests2.CaptureTest.testCapture_2617107":228,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":20,"org.easymock.tests2.UsageConstraintsTest.any":247,"org.easymock.tests2.StubTest.stub":289,"org.easymock.tests.UsageExpectAndThrowTest.longType":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":363,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":424,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":307,"org.easymock.tests2.SerializationTest.testClass":31,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":327,"org.easymock.tests.LimitationsTest.mockNativeMethod":189,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":155,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":349,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":184,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":308,"org.easymock.tests2.MockedExceptionTest.testMockedException":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":39,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":95,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":106,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":175,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":147,"org.easymock.tests.MockingTest.testNicePartialClassMocking":193,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":179,"org.easymock.tests2.CompareToTest.testNotComparable":288,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":204,"org.easymock.tests2.CaptureTest.testCaptureLast":233,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":410,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":174,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":30,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":257,"org.easymock.tests.MockingTest.testTwoMocks":191,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":330,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":110,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":67,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":261,"org.easymock.samples.ExampleTest.removeNonExistingDocument":221,"org.easymock.tests.UsageStrictMockTest.differentMethods":199,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":422,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":123,"org.easymock.tests2.MockBuilderTest.testCreateMockString":151,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":429,"org.easymock.tests.UsageExpectAndThrowTest.floatType":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":41,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":36,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":291,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":132,"org.easymock.tests.UsageVerifyTest.twoThrows":78,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":50,"org.easymock.samples.ExampleTest.voteAgainstRemoval":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":12,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":135,"org.easymock.tests.LimitationsTest.privateConstructor":427,"org.easymock.tests2.UsageConstraintsTest.testNotNull":260,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":92,"org.easymock.tests2.UsageTest.defaultResetToNice":300,"org.easymock.samples.ExampleTest.voteAgainstRemovals":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":345,"org.easymock.tests.UsageVarargTest.differentLength":356,"org.easymock.tests2.CallbackTest.callback":322,"org.easymock.tests2.UsageConstraintsTest.equals":287,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":25,"org.easymock.tests.UsageTest.openCallCountByLastCall":372,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":240,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":280,"org.easymock.tests.UsageCallCountTest.tooFewCalls":393,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":172,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":385,"org.easymock.tests.UsageThrowableTest.throwCheckedException":89,"org.easymock.tests.MockingTest.testStrictClassMocking":433,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":165,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":173,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":276,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":171,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":127,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":211,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":293,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":208,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":264,"org.easymock.tests2.DependencyTest.testInterfaceMocking":266,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":207,"org.easymock.samples.ExampleTest.addDocument":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":52,"org.easymock.tests2.DelegateToTest.testStubDelegate":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":57,"org.easymock.tests2.AnswerTest.stubAnswer":292,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":277,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":148,"org.easymock.tests.UsageVarargTest.varargLongAccepted":358,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":10,"org.easymock.tests.UsageExpectAndReturnTest.floatType":332,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":348,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":130,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":24,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":407,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":254,"org.easymock.tests.UsageThrowableTest.noUpperLimit":350,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":241,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":415,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":231,"org.easymock.tests2.SerializationTest.test":285,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":202,"org.easymock.tests2.UsageConstraintsTest.testSame":245,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":331,"org.easymock.samples.SupportTest.addDocument":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":42,"org.easymock.tests.GenericTest.testPackageScope":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":5,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":342,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":29,"org.easymock.tests2.UsageStrictMockTest.differentMethods":198,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":419,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":334,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":116,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":381,"org.easymock.tests2.MockedExceptionTest.testRealException":329,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":14,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":265,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":279,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":142,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":33,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":268,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":178,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":418,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":423,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":255,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":139,"org.easymock.tests2.UsageStrictMockTest.range":69,"org.easymock.tests2.UsageConstraintsTest.lessThan":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":9,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":46,"org.easymock.tests2.CaptureTest.testCaptureRightOne":236,"org.easymock.tests2.UsageConstraintsTest.testOr":125,"org.easymock.tests.UsageRangeTest.combination":379,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":176,"org.easymock.tests.UsageTest.wrongArguments":73,"org.easymock.tests2.MockBuilderTest.testWithConstructor":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":43,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":2,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":343,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":203,"org.easymock.tests.UsageVarargTest.varargShortAccepted":357,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":396,"org.easymock.tests2.UsageConstraintsTest.cmpTo":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":4,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":85,"org.easymock.tests2.CaptureTest.testCaptureFromStub":237,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":140,"org.easymock.tests.UsageTest.unexpectedCallWithArray":72,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":76,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":394,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":27,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":344,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":388,"org.easymock.tests2.UsageConstraintsTest.constraints":242,"org.easymock.samples.ExampleTest.addAndChangeDocument":222,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":225,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":387,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":375,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":232,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":272,"org.easymock.tests.LimitationsTest.abstractClass":426,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":336,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":273,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":315,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":352}}]
