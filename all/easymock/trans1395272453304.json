[{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:85","failures":[3,4,5,6,7,8,9,249,250,10,11,12,251,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,252,39,40,41,42,43,44,253,254,45,46,47,48,255,49,50,51,52,256,257,258,53,259,54,55,56,57,58,260,261,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,262,263,264,265,266,99,100,102,103,104,105,106,107,108,267,268,0,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,110,285,111,286,112,113,114,115,116,287,117,118,288,289,290,291,292,293,121,122,123,124,125,126,127,128,294,129,130,131,132,133,134,135,295,136,296,296,297,297,137,138,139,140,141,142,143,298,144,145,146,147,299,148,300,149,150,301,302,303,304,305,306,307,308,309,151,152,153,154,155,156,157,158,310,159,311,312,313,314,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,315,316,317,318,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,319,208,209,320,210,211,212,213,214,215,216,321,217,218,219,220,221,322,323,324,325,222,326,327,328,223,329,224,225,226,227,228,229,230,231,330,232,331,332,233,234,333,334,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[299,335],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[249,250,12,251,336,261,62,69,70,286,114,298,148,300,227],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[3,4,5,6,7,8,9,249,250,10,11,12,251,13,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,354,37,38,252,39,40,41,42,43,44,253,254,45,46,47,48,255,49,50,355,51,52,356,357,358,256,257,359,258,360,361,362,53,259,54,55,56,363,57,58,364,260,261,59,60,61,365,366,367,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,262,263,264,265,266,368,99,100,369,101,102,103,104,105,106,107,370,371,108,372,267,268,0,269,270,271,272,273,274,275,276,277,373,278,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,1,396,397,398,399,400,401,2,402,279,280,281,282,109,283,284,110,403,404,285,111,286,112,113,114,115,116,287,117,118,405,406,407,408,409,119,120,410,411,412,288,289,290,291,292,293,121,122,123,124,125,126,127,128,294,129,130,131,132,133,134,135,295,136,296,297,137,138,139,140,141,142,143,298,144,145,146,147,299,148,300,149,150,301,413,302,414,415,416,303,304,305,417,306,418,419,307,308,420,309,421,422,151,152,153,154,155,156,157,158,310,423,159,424,335,311,312,313,314,425,426,160,161,162,163,427,164,165,166,167,168,169,428,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,429,430,188,189,190,315,316,317,318,191,192,193,194,195,431,196,197,198,199,200,201,202,432,433,434,435,436,203,437,438,439,440,441,442,443,204,205,206,444,207,319,208,209,320,445,446,210,211,212,213,214,215,216,321,217,218,219,220,221,447,322,323,324,325,448,449,450,451,452,453,454,455,456,457,222,458,459,326,460,461,462,463,464,465,466,467,468,327,469,470,471,472,473,328,474,475,476,477,478,479,480,223,481,482,483,484,485,486,329,224,225,226,227,228,229,230,231,330,232,331,332,233,487,234,333,334,488,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[43,51,52,62,63,64,65,66,67,106,107,286,112,117,118,123,124,125,126,127,128,159,311,160,161,162,163,164,165,166,167,168,169,428,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,195,196,197,200,202,225,226,330,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.RecordState:327","failures":[349,350,352,353],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[394,187,188,195,196,202],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,249,250,10,11,12,251,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,253,254,45,46,47,48,51,52,256,257,258,53,259,54,55,260,60,61,366,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,262,263,264,265,266,99,100,102,103,104,105,106,107,108,270,279,280,281,282,285,111,286,112,113,114,115,116,287,117,118,289,123,124,125,126,127,130,131,132,133,134,135,136,141,142,143,298,144,145,146,147,299,148,300,149,150,301,303,304,308,309,151,153,154,155,156,157,158,159,311,313,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,315,316,317,318,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,319,208,209,320,322,323,324,325,329,224,225,226,227,228,229,230,231,330,232,331,332,333,334,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,13,337,338,339,348,349,350,351,352,353,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,44,45,51,52,256,257,258,53,259,54,55,56,57,58,260,59,60,61,366,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,369,102,103,104,105,106,107,108,396,2,112,114,115,117,118,405,406,407,408,409,119,120,410,411,123,124,125,126,127,294,130,131,132,133,135,136,296,296,297,297,140,141,142,143,144,146,147,299,149,150,302,303,305,306,308,151,152,153,154,155,156,157,158,159,312,313,314,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,429,430,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,443,204,205,206,444,207,319,208,320,210,211,212,213,214,215,216,321,217,218,219,220,222,326,327,328,223,225,227,228,230,231,232,331,332,233,234,333,334,235,236,238,239,242,243,244,245,246,247,248],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"verified":"org.easymock.internal.AndroidSupport.isAndroid"}},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[9,249,250,12,251,343,347,348,39,254,46,49,355,51,259,57,260,59,365,366,62,63,68,69,70,71,283,284,403,285,286,112,114,115,116,288,290,291,292,142,143,298,145,148,300,150,303,308,154,313,314,163,177,203,212,216,218,453,222,223,329,225,226,227,228,230,233,334],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[377,489,490],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[8,9,250,10,11,12,251,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,252,39,40,41,42,43,44,253,45,46,47,48,49,50,51,52,256,257,258,53,259,54,55,56,57,58,260,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,108,285,111,286,112,113,114,115,116,287,117,118,405,119,120,123,124,125,126,127,128,294,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,298,144,145,146,147,299,148,300,149,150,302,303,305,306,308,151,152,153,154,155,156,157,158,159,312,313,314,160,161,162,163,164,165,166,167,168,169,428,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,193,195,196,197,198,199,200,201,202,203,204,205,206,207,319,208,209,320,210,211,212,213,214,215,216,321,217,218,219,220,221,322,323,324,325,222,326,327,328,223,329,224,225,226,227,228,229,230,231,232,331,332,233,234,333,334,235,236,237,238,239,240,241,242,243,244,245,247,248],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[4,17,23,30,31,74,80,87,88,266,103,407,127],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1927","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))","type":"CtInvocationImpl"},"failures":[238],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[160,162,491],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[13,16,17,19,24,29,51,52,256,257,258,53,56,363,57,58,364,260,59,60,365,366,63,64,67,68,69,70,73,74,76,81,86,91,93,94,95,96,97,98,99,106,108,112,114,115,117,118,405,123,124,125,126,127,294,130,131,132,133,135,140,141,142,144,299,150,302,303,305,306,308,151,152,153,154,155,156,157,158,159,312,313,314,163,164,165,166,168,169,170,171,173,174,176,177,179,180,181,182,183,184,187,190,193,200,201,203,204,206,207,319,208,320,210,211,212,213,214,215,216,321,217,218,219,220,222,326,327,328,223,225,227,228,232,331,332,233,234,333,334,235,236,237,238,239,242,243,244,245,248],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[296,297,413,415,417,419,492,420,493,494,319,320,445,455,456,457,222,458,459,326,460,461,462,463,464,465,466,467,468,327,469,470,471,472,473,328,474,475,332,334,488],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[101],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:327","failures":[349,350,352,353],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[377,489,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[179],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[396],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:163","failures":[189,190],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[417,495,320,445],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[284,288,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[173],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[496,235,237,238,239,240,241,242,244,497,245,246,248],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:60","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[123],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[411],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":163,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":8,"org.easymock.tests2.UsageTest.argumentsOrdered":300,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":219,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":391,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":145,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":129,"org.easymock.tests2.DelegateToTest.testReturnException":204,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":103,"org.easymock.tests.MockingTest.testPartialClassMocking":256,"org.easymock.tests.MockClassControlTest.testToString":290,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":447,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":338,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":463,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":14,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":326,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":152,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":63,"org.easymock.tests2.UsageTest.wrongArguments":298,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":486,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":281,"org.easymock.samples.ExampleTest.answerVsDelegate":131,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":345,"org.easymock.tests2.UsageConstraintsTest.testNull":165,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":361,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":156,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":122,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":218,"org.easymock.tests2.CaptureTest.testPrimitive":238,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":67,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":33,"org.easymock.tests.UsageTest.moreThanOneArgument":9,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":5,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":409,"org.easymock.tests.UsageTest.argumentsOrdered":251,"org.easymock.tests.UsageVarargTest.varargIntAccepted":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":123,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":301,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":450,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":441,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":127,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":223,"org.easymock.tests.ReplayStateInvalidUsageTest.times":274,"org.easymock.tests2.DependencyTest.testClassMocking":421,"org.easymock.tests2.AnswerTest.answer":187,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":397,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":318,"org.easymock.tests2.CaptureTest.testAnd":235,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":342,"org.easymock.tests2.UsageTest.strictResetToDefault":142,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":415,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":311,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":4,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":214,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":411,"org.easymock.tests2.DelegateToTest.testDelegate":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":29,"org.easymock.tests.LimitationsTest.mockFinalMethod":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":266,"org.easymock.tests2.DependencyTest.testClassMockingSupport":422,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":365,"org.easymock.tests2.CaptureTest.testCapture1_2446744":239,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":423,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":27,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":316,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":0,"org.easymock.tests.UsageThrowableTest.throwError":91,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":344,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":442,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":412,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":7,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":475,"org.easymock.samples.PartialClassMockTest.testGetArea":294,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":269,"org.easymock.tests.MockingTest.testInterfaceMocking":359,"org.easymock.tests2.CompareToTest.testLessOrEqual":491,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":124,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":464,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":404,"org.easymock.tests2.UsageTest.niceToStrict":144,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":303,"org.easymock.tests2.MockBuilderTest.testCreateMock":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":471,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":483,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":23,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":215,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":353,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":253,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":279,"org.easymock.tests.UsageOverloadedMethodTest.overloading":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":468,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":174,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":58,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":59,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":82,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":489,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":173,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":244,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":354,"org.easymock.tests.MockClassControlTest.testEquals":121,"org.easymock.tests2.EasyMockSupportClassTest.testAll":222,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":100,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":31,"org.easymock.tests2.CaptureTest.testCaptureAll":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":264,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":317,"org.easymock.tests.MockNameTest.defaultName":355,"org.easymock.tests2.UsageConstraintsTest.testMatches":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":6,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":267,"org.easymock.samples.ExampleTest.voteForRemovals":135,"org.easymock.tests.UsageVarargTest.allKinds":43,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":68,"org.easymock.samples.BasicClassMockTest.testPrintContent":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":265,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":97,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":329,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":444,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":438,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":107,"org.easymock.tests2.UsageConstraintsTest.greaterThan":177,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":458,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":259,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":314,"org.easymock.samples.ExampleTest.voteForRemoval":132,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":380,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":425,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":198,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":346,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":451,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":310,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":141,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":44,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":212,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":102,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":443,"org.easymock.tests2.CaptureTest.testCaptureFirst":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":213,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":150,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":261,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":78,"org.easymock.tests2.UsageTest.moreThanOneArgument":143,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":200,"org.easymock.tests2.CaptureTest.testCapture2_2446744":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":398,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":308,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":42,"org.easymock.tests.GenericTest.testBridgedEquals":101,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":49,"org.easymock.tests.UsageExpectAndReturnTest.longType":74,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":262,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":32,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":408,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":182,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":30,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":3,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":349,"org.easymock.tests.UsageCallCountTest.tooManyCalls":50,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":472,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":485,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":19,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":96,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":331,"org.easymock.tests.MockingTest.testNiceClassMocking":362,"org.easymock.tests.MockingTest.testClassMocking":357,"org.easymock.tests2.UsageConstraintsTest.testContains":172,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":254,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":193,"org.easymock.tests2.UsageConstraintsTest.testFind":164,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":61,"org.easymock.tests.MockTypeTest.fromEasyMockClass":343,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":196,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":285,"org.easymock.tests.UsageExpectAndReturnTest.object":81,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":484,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":217,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":38,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":110,"org.easymock.tests.UsageTest.exactCallCountByLastCall":13,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":119,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":337,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":445,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":34,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":87,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":57,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":433,"org.easymock.tests.MockClassControlTest.testHashCode":293,"org.easymock.tests2.EasyMockSupportTest.testVerify":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":466,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":120,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":56,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":315,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":330,"org.easymock.tests.UsageVarargTest.varargCharAccepted":37,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":373,"org.easymock.tests2.CaptureTest.testCaptureMultiple":496,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":402,"org.easymock.tests2.UsageTest.openCallCountByLastCall":146,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":220,"org.easymock.tests.DefaultClassInstantiatorTest.object":278,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":351,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":283,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":467,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":21,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":479,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":432,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":292,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":312,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":20,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":88,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":348,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":328,"org.easymock.tests2.UsageTest.resumeIfFailure":149,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":340,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":105,"org.easymock.tests2.StubTest.stubWithReturnValue":231,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":417,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":183,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":80,"org.easymock.tests2.SerializationTest.testAllMockedMethod":209,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":396,"org.easymock.samples.SupportTest.voteForRemovals":140,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":368,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":435,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":26,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":2,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":429,"org.easymock.tests.UsageExpectAndThrowTest.object":24,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":339,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":180,"org.easymock.tests2.DelegateToTest.testWrongClass":206,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":117,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":118,"org.easymock.tests.UsageStrictMockTest.range":114,"org.easymock.samples.ConstructorCalledMockTest.testTax":296,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":453,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":321,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":232,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":25,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":455,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":276,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":280,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":407,"org.easymock.tests2.CaptureTest.testCaptureNone":243,"org.easymock.tests.UsageUnorderedTest.message":62,"org.easymock.tests.UsageVerifyTest.twoReturns":70,"org.easymock.tests.UsageVarargTest.varargByteAccepted":41,"org.easymock.tests2.ThreadingTest.testThreadSafe":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":469,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":48,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":403,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":137,"org.easymock.tests2.CaptureTest.testCapture_2617107":237,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":400,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":66,"org.easymock.tests2.UsageConstraintsTest.any":170,"org.easymock.tests2.StubTest.stub":230,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":273,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":104,"org.easymock.tests.UsageExpectAndThrowTest.longType":17,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":377,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":272,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":226,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":203,"org.easymock.tests2.SerializationTest.testClass":319,"org.easymock.tests.LimitationsTest.mockNativeMethod":108,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":90,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":369,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":478,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":229,"org.easymock.tests2.NameTest.nameForMocksControl":325,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":480,"org.easymock.tests2.MockedExceptionTest.testMockedException":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":459,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":11,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":431,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":18,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":258,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":153,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":306,"org.easymock.tests.MockingTest.testNicePartialClassMocking":257,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":158,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":476,"org.easymock.tests2.CaptureTest.testCaptureLast":242,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":366,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":168,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":334,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":181,"org.easymock.tests.MockingTest.testTwoMocks":358,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":488,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":71,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":22,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":148,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":185,"org.easymock.samples.ExampleTest.removeNonExistingDocument":295,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":482,"org.easymock.tests.UsageStrictMockTest.differentMethods":115,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":270,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":434,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":375,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":199,"org.easymock.tests2.MockBuilderTest.testCreateMockString":309,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":460,"org.easymock.tests.UsageExpectAndThrowTest.floatType":16,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":457,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":188,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":446,"org.easymock.tests.UsageVerifyTest.twoThrows":69,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":327,"org.easymock.samples.ExampleTest.voteAgainstRemoval":133,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":392,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":313,"org.easymock.tests.LimitationsTest.privateConstructor":371,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":494,"org.easymock.tests2.UsageConstraintsTest.testNotNull":184,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":191,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":98,"org.easymock.tests2.UsageTest.defaultResetToNice":299,"org.easymock.samples.ExampleTest.voteAgainstRemovals":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":393,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":86,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":477,"org.easymock.tests.UsageVarargTest.differentLength":252,"org.easymock.tests2.CallbackTest.callback":202,"org.easymock.tests2.UsageConstraintsTest.equals":427,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":424,"org.easymock.tests.UsageTest.openCallCountByLastCall":10,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":65,"org.easymock.tests.UsageCallCountTest.tooFewCalls":46,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":282,"org.easymock.tests.UsageThrowableTest.throwCheckedException":95,"org.easymock.tests.MockingTest.testStrictClassMocking":356,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":52,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":333,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":481,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":332,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":275,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":234,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":190,"org.easymock.tests.ObjectMethodsTest.testHashCode":284,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":201,"org.easymock.tests2.NameTest.nameForNiceMock":324,"org.easymock.tests2.DependencyTest.testInterfaceMocking":151,"org.easymock.samples.ExampleTest.addDocument":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":474,"org.easymock.tests2.DelegateToTest.testStubDelegate":205,"org.easymock.tests2.AnswerTest.stubAnswer":189,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":112,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":418,"org.easymock.tests.UsageVarargTest.varargLongAccepted":40,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":390,"org.easymock.tests.UsageExpectAndReturnTest.floatType":73,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":89,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":320,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":297,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":440,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":178,"org.easymock.tests.UsageThrowableTest.noUpperLimit":92,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":161,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":448,"org.easymock.tests2.SerializationTest.test":208,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":240,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":490,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":374,"org.easymock.tests2.UsageConstraintsTest.testSame":166,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":72,"org.easymock.samples.SupportTest.addDocument":139,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":487,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":461,"org.easymock.tests.GenericTest.testPackageScope":99,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":439,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":360,"org.easymock.tests2.NameTest.nameForMock":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":83,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":420,"org.easymock.tests2.UsageStrictMockTest.differentMethods":228,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":335,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":75,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":28,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":109,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":55,"org.easymock.tests2.MockedExceptionTest.testRealException":194,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":347,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":394,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":225,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":64,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":277,"org.easymock.tests2.NameTest.nameForStrictMock":323,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":416,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":195,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":157,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":452,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":179,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":376,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":302,"org.easymock.tests2.UsageStrictMockTest.range":227,"org.easymock.tests2.UsageConstraintsTest.lessThan":186,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":465,"org.easymock.tests2.CaptureTest.testCaptureRightOne":245,"org.easymock.tests2.UsageConstraintsTest.testOr":167,"org.easymock.tests.UsageRangeTest.combination":53,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":154,"org.easymock.tests.UsageTest.wrongArguments":250,"org.easymock.tests2.MockBuilderTest.testWithConstructor":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":462,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":289,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":76,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":382,"org.easymock.tests.UsageVarargTest.varargShortAccepted":39,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":378,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":255,"org.easymock.tests2.UsageConstraintsTest.cmpTo":171,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":384,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":147,"org.easymock.tests2.CaptureTest.testCaptureFromStub":246,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":268,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":414,"org.easymock.tests.UsageTest.unexpectedCallWithArray":249,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":47,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":492,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":85,"org.easymock.tests2.CaptureTest.testCapture":497,"org.easymock.tests2.UsageConstraintsTest.constraints":162,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":113,"org.easymock.samples.ExampleTest.addAndChangeDocument":136,"org.easymock.tests.UsageStrictMockTest.testVerify":287,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":128,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":263,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":241,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":125,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":77,"org.easymock.tests.LimitationsTest.abstractClass":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":126,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":260,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":216}}]
