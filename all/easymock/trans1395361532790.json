[{"transplant":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[7],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,1,29,2,30,31,32,33,3,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,4,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,5,201,202,203,204,205,206,6,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,8,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[322],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[323,324,324,325,325,326,327,328,329,9,10,11,12,13,14,15,16,330,331,332,333,334,17,18,19,335,20,21,22,23,24,25,26,27,336,337,28,1,29,2,30,31,32,33,3,34,35,36,338,37,38,39,40,41,42,43,44,45,46,339,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,340,341,342,343,344,345,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,346,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,347,348,349,129,130,131,132,133,134,135,136,137,350,138,139,351,352,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,353,354,163,355,164,165,166,167,168,169,170,171,172,173,174,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,7,372,373,374,375,376,377,378,379,175,380,381,382,383,384,385,386,387,176,177,178,388,389,179,180,4,181,182,183,184,185,0,390,391,392,393,186,187,188,189,190,191,192,193,194,195,394,196,197,198,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,199,410,200,5,201,202,203,204,205,206,6,207,208,209,210,211,212,213,214,215,216,217,218,219,411,412,413,220,221,222,223,224,414,415,225,226,227,228,229,230,231,232,233,234,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,235,441,236,237,442,238,239,240,443,444,445,446,241,242,447,243,244,245,246,247,448,449,248,249,250,251,252,253,254,255,256,257,258,450,259,260,261,262,263,264,451,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,452,289,453,290,291,292,293,8,294,454,455,456,457,458,459,460,461,462,463,464,465,466,467,298,468,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,469,470,471,472,473,474,475,476,477,478,479,480,481,314,315,316,482,317,318,319,320,321],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[324,325,328,422,432,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[138,351,352],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[483],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:41","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[484],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[22,1,29,2,31,32,34,35,36,74,76,78,79,80,135,136,137,166,191,396,400,401,404,200,5,203,204,205,208,209,210,211,212,215,216,217,236,241,242,243,252,257,271,283,292,8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:202","sourceCode":"final java.io.ObjectInputStream java.io.ObjectInputStream = new java.io.ObjectInputStream(new java.io.ByteArrayInputStream(byte[]))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[324,324,325,325,328,330,331,39,42,45,46,339,47,48,50,53,112,350,138,139,351,352,353,354,163,355,167,168,169,170,171,172,173,174,175,380,381,382,383,384,386,408,409,219,411,232,234,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,235,236,237,238,239,240,443,445,446,241,242,243,245,246,247,448,248,249,282,283,285,286,287,288,289,453,290,291,292,293,8,294,454,467,295,296,298,318,319,320],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[56,58,72,73,164,186],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[323,324,324,325,325,326,327,328,329,9,10,11,12,13,14,16,330,331,332,333,334,17,18,19,20,21,22,23,24,25,26,27,337,28,1,29,2,30,32,33,3,34,35,36,47,48,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,340,341,342,344,83,84,85,86,87,88,89,106,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,347,348,349,129,131,132,133,134,136,137,138,139,351,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,7,372,373,374,375,376,377,378,179,180,4,181,182,183,184,185,390,391,186,187,188,189,190,191,192,193,194,195,196,197,198,395,396,397,398,399,400,401,402,403,404,405,406,407,199,410,200,5,201,202,203,204,205,206,6,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,414,415,225,226,227,232,233,234,419,422,432,438,236,239,443,445,242,245,246,247,448,449,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,451,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,292,293,8,460,300,301,302,303,304,305,306,307,308,309,310,311,312,313,474,481,314,315,316,482,317,318,319,320,321],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[394],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[366,481,315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:721","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[485,486,31,76,487,488],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[333,334,348,349],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[48,291],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":258,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":2,"org.easymock.tests2.UsageTest.argumentsOrdered":209,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":405,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":366,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":205,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":329,"org.easymock.tests2.DelegateToTest.testReturnException":314,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":114,"org.easymock.tests.MockingTest.testPartialClassMocking":47,"org.easymock.tests.MockClassControlTest.testToString":169,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":413,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":344,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":426,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":422,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":143,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":410,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":264,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":85,"org.easymock.tests2.UsageTest.wrongArguments":203,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":480,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":104,"org.easymock.samples.ExampleTest.answerVsDelegate":10,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":42,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":52,"org.easymock.tests2.UsageConstraintsTest.testNull":260,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":285,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":404,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":174,"org.easymock.tests2.CaptureTest.testPrimitive":303,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":89,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":162,"org.easymock.tests.UsageTest.moreThanOneArgument":30,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":188,"org.easymock.tests.UsageTest.argumentsOrdered":35,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":0,"org.easymock.tests.UsageVarargTest.varargIntAccepted":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":119,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":235,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":465,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":296,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":123,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":474,"org.easymock.tests.ReplayStateInvalidUsageTest.times":98,"org.easymock.tests2.DependencyTest.testClassMocking":408,"org.easymock.tests2.AnswerTest.answer":224,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":372,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":231,"org.easymock.tests2.CaptureTest.testAnd":300,"org.easymock.tests2.UsageTest.strictResetToDefault":201,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":442,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":399,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":193,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":393,"org.easymock.tests2.DelegateToTest.testDelegate":317,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":158,"org.easymock.tests.LimitationsTest.mockFinalMethod":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":128,"org.easymock.tests2.DependencyTest.testClassMockingSupport":409,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":338,"org.easymock.tests2.CaptureTest.testCapture1_2446744":304,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":452,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":156,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":229,"org.easymock.tests.UsageThrowableTest.throwError":179,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":92,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":41,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":466,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":440,"org.easymock.samples.PartialClassMockTest.testGetArea":328,"org.easymock.tests.MockingTest.testInterfaceMocking":49,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":120,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":427,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":389,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":144,"org.easymock.tests2.UsageTest.niceToStrict":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":239,"org.easymock.tests2.MockBuilderTest.testCreateMock":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":435,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":477,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":487,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":152,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":400,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":334,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":129,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":102,"org.easymock.tests.UsageOverloadedMethodTest.overloading":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":431,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":109,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":269,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":65,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":268,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":309,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":335,"org.easymock.tests2.EasyMockSupportClassTest.testAll":419,"org.easymock.tests.MockClassControlTest.testEquals":173,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":139,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":126,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":230,"org.easymock.tests2.CaptureTest.testCaptureAll":301,"org.easymock.tests.MockNameTest.defaultName":336,"org.easymock.tests2.UsageConstraintsTest.testMatches":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":189,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":90,"org.easymock.samples.ExampleTest.voteForRemovals":14,"org.easymock.tests.UsageVarargTest.allKinds":27,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":28,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":127,"org.easymock.samples.BasicClassMockTest.testPrintContent":331,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":184,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":212,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":482,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":118,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":385,"org.easymock.tests2.UsageConstraintsTest.greaterThan":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":420,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":192,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":8,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":386,"org.easymock.samples.ExampleTest.voteForRemoval":11,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":251,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":294,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":43,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":288,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":112,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":397,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":113,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":481,"org.easymock.tests2.CaptureTest.testCaptureFirst":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":398,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":211,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":111,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":61,"org.easymock.tests2.UsageTest.moreThanOneArgument":202,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":253,"org.easymock.tests2.CaptureTest.testCapture2_2446744":312,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":373,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":26,"org.easymock.tests.GenericTest.testBridgedEquals":352,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":136,"org.easymock.tests.UsageExpectAndReturnTest.longType":57,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":395,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":124,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":161,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":277,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":186,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":348,"org.easymock.tests.UsageCallCountTest.tooManyCalls":137,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":436,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":148,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":183,"org.easymock.tests.MockingTest.testNiceClassMocking":53,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":246,"org.easymock.tests.MockingTest.testClassMocking":46,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":130,"org.easymock.tests2.UsageConstraintsTest.testContains":267,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":320,"org.easymock.tests2.UsageConstraintsTest.testFind":259,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":142,"org.easymock.tests.MockTypeTest.fromEasyMockClass":40,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":74,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":196,"org.easymock.tests.UsageExpectAndReturnTest.object":64,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":403,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":21,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":178,"org.easymock.tests.UsageTest.exactCallCountByLastCall":36,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":390,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":343,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":411,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":17,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":70,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":108,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":456,"org.easymock.tests.MockClassControlTest.testHashCode":172,"org.easymock.tests2.EasyMockSupportTest.testVerify":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":429,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":391,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":106,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":333,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":228,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":244,"org.easymock.tests.UsageVarargTest.varargCharAccepted":20,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":379,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":378,"org.easymock.tests2.UsageTest.openCallCountByLastCall":206,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":406,"org.easymock.tests.DefaultClassInstantiatorTest.object":175,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":332,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":430,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":150,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":181,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":472,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":455,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":171,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":292,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":149,"org.easymock.tests.CapturesMatcherTest.test":484,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":71,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":438,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":170,"org.easymock.tests2.UsageTest.resumeIfFailure":210,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":39,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":116,"org.easymock.tests2.StubTest.stubWithReturnValue":198,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":444,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":63,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":278,"org.easymock.tests2.SerializationTest.testAllMockedMethod":234,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":7,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":488,"org.easymock.samples.SupportTest.voteForRemovals":327,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":350,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":458,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":155,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":377,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":414,"org.easymock.tests.UsageExpectAndThrowTest.object":153,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":345,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":275,"org.easymock.tests2.DelegateToTest.testWrongClass":316,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":164,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":165,"org.easymock.tests.UsageStrictMockTest.range":79,"org.easymock.samples.ConstructorCalledMockTest.testTax":324,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":468,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":402,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":245,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":154,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":416,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":100,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":34,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":103,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":485,"org.easymock.tests2.CaptureTest.testCaptureNone":308,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":342,"org.easymock.tests.UsageUnorderedTest.message":166,"org.easymock.tests.UsageVerifyTest.twoReturns":29,"org.easymock.tests.UsageVarargTest.varargByteAccepted":25,"org.easymock.tests2.ThreadingTest.testThreadSafe":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":433,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":134,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":388,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":330,"org.easymock.tests2.CaptureTest.testCapture_2617107":302,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":38,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":375,"org.easymock.tests2.UsageConstraintsTest.any":265,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":97,"org.easymock.tests2.StubTest.stub":197,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":349,"org.easymock.tests.UsageExpectAndThrowTest.longType":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":376,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":383,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":96,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":215,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":460,"org.easymock.tests2.SerializationTest.testClass":232,"org.easymock.tests.LimitationsTest.mockNativeMethod":163,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":73,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":351,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":471,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":218,"org.easymock.tests2.NameTest.nameForMocksControl":223,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":473,"org.easymock.tests2.MockedExceptionTest.testMockedException":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":421,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":3,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":394,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":147,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":50,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":282,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":445,"org.easymock.tests.MockingTest.testNicePartialClassMocking":48,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":287,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":469,"org.easymock.tests2.CaptureTest.testCaptureLast":307,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":37,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":249,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":263,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":276,"org.easymock.tests.MockingTest.testTwoMocks":339,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":54,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":151,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":208,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":280,"org.easymock.samples.ExampleTest.removeNonExistingDocument":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":476,"org.easymock.tests.UsageStrictMockTest.differentMethods":80,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":94,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":457,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":381,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":252,"org.easymock.tests2.MockBuilderTest.testCreateMockString":243,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":423,"org.easymock.tests.UsageExpectAndThrowTest.floatType":145,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":418,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":225,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":412,"org.easymock.tests.UsageVerifyTest.twoThrows":1,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":432,"org.easymock.samples.ExampleTest.voteAgainstRemoval":12,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":367,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":293,"org.easymock.tests.LimitationsTest.privateConstructor":354,"org.easymock.tests2.UsageConstraintsTest.testNotNull":279,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":185,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":318,"org.easymock.tests2.UsageTest.defaultResetToNice":207,"org.easymock.samples.ExampleTest.voteAgainstRemovals":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":368,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":470,"org.easymock.tests.UsageVarargTest.differentLength":22,"org.easymock.tests2.CallbackTest.callback":200,"org.easymock.tests2.UsageConstraintsTest.equals":450,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":453,"org.easymock.tests.UsageTest.openCallCountByLastCall":33,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":255,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":87,"org.easymock.tests.UsageCallCountTest.tooFewCalls":132,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":448,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":105,"org.easymock.tests.UsageThrowableTest.throwCheckedException":182,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":486,"org.easymock.tests.MockingTest.testStrictClassMocking":45,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":84,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":248,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":475,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":247,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":99,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":449,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":227,"org.easymock.tests.ObjectMethodsTest.testHashCode":177,"org.easymock.tests2.NameTest.nameForNiceMock":222,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":254,"org.easymock.tests2.DependencyTest.testInterfaceMocking":199,"org.easymock.samples.ExampleTest.addDocument":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":439,"org.easymock.tests2.DelegateToTest.testStubDelegate":315,"org.easymock.tests2.AnswerTest.stubAnswer":226,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":77,"org.easymock.tests.UsageVarargTest.varargLongAccepted":24,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":365,"org.easymock.tests.UsageExpectAndReturnTest.floatType":56,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":72,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":219,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":325,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":464,"org.easymock.tests.UsageThrowableTest.noUpperLimit":180,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":273,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":256,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":467,"org.easymock.tests2.SerializationTest.test":233,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":305,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":380,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":55,"org.easymock.tests2.UsageConstraintsTest.testSame":261,"org.easymock.samples.SupportTest.addDocument":326,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":424,"org.easymock.tests.GenericTest.testPackageScope":138,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":463,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":51,"org.easymock.tests2.NameTest.nameForMock":220,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":66,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":447,"org.easymock.tests2.UsageStrictMockTest.differentMethods":217,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":290,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":58,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":157,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":387,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":194,"org.easymock.tests2.MockedExceptionTest.testRealException":321,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":44,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":369,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":101,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":86,"org.easymock.tests2.NameTest.nameForStrictMock":221,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":238,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":195,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":286,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":298,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":274,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":382,"org.easymock.tests.ErrorMessageTest.testGetters":322,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":236,"org.easymock.tests2.UsageStrictMockTest.range":216,"org.easymock.tests2.UsageConstraintsTest.lessThan":281,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":459,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":483,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":428,"org.easymock.tests2.CaptureTest.testCaptureRightOne":310,"org.easymock.tests2.UsageConstraintsTest.testOr":262,"org.easymock.tests.UsageRangeTest.combination":191,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":283,"org.easymock.tests.UsageTest.wrongArguments":32,"org.easymock.tests2.MockBuilderTest.testWithConstructor":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":425,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":168,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":59,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":357,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":384,"org.easymock.tests.UsageVarargTest.varargShortAccepted":23,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":135,"org.easymock.tests2.UsageConstraintsTest.cmpTo":266,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":359,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":6,"org.easymock.tests2.CaptureTest.testCaptureFromStub":311,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":91,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":237,"org.easymock.tests.UsageTest.unexpectedCallWithArray":31,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":76,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":68,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":78,"org.easymock.tests2.UsageConstraintsTest.constraints":257,"org.easymock.samples.ExampleTest.addAndChangeDocument":16,"org.easymock.tests.UsageStrictMockTest.testVerify":82,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":323,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":125,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":121,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":60,"org.easymock.tests.LimitationsTest.abstractClass":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":122,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":110,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":401,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":18}}]
