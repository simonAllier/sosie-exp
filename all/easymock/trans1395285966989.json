[{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,21,0,1,22,23,2,3,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,5,75,76,77,6,78,79,80,81,82,83,7,8,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,9,132,133,10,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,11,162,163,164,165,166,12,13,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,14,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[73,147,240,242,243],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:233","failures":[15,16,17,18,19,20,21,1,22,23,2,3,24,295,296,297,298,299,300,301,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,302,57,58,59,60,62,63,64,65,66,67,68,69,303,70,71,72,73,74,304,75,76,77,6,78,79,80,81,82,83,7,8,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,117,118,305,119,120,121,122,123,124,125,306,307,130,131,9,132,133,10,134,135,308,136,137,309,310,311,312,313,314,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,153,154,154,155,156,157,158,159,160,161,11,162,163,164,165,166,12,13,167,168,170,171,173,174,176,178,179,180,181,182,183,184,185,187,189,190,191,192,193,194,195,196,197,198,199,200,201,315,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,316,317,220,221,222,227,228,229,230,231,232,233,234,235,236,237,238,239,318,240,241,242,319,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,320,321,322,323,261,262,263,264,265,266,267,268,269,14,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:208","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[195],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"returnedType","type":"returnedType"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (this.org.easymock.Capture<T>.hasCaptured()) {\n    this.org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[324,281,282,283,284,285,286,287,288,290,291,292,293,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"capture"}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"this.org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[296,297,298,119,120,121,122,123,124,325,326,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[201,206,218,327],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,6,80,105,118,131,133,10,134,135,143,145,146,148,149,150,151,152,155,156,157,158,163,171,214,246,251,257,258,259,260,267,269,14,270,271,272,282,283,286,287,288,289,294],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[15,16,17,18,19,20,21,22,23,24,328,295,329,296,297,298,299,300,301,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,56,57,64,65,66,67,68,69,303,70,71,72,73,74,304,75,76,77,330,6,78,79,80,81,82,83,7,8,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,117,305,119,120,121,122,123,124,125,331,306,307,132,10,134,136,137,309,310,311,312,332,313,314,333,334,138,139,140,141,142,144,146,147,148,149,151,152,153,153,154,154,158,159,160,161,162,164,165,166,167,168,170,171,173,174,176,178,179,180,181,182,183,184,185,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,316,317,220,221,222,227,228,229,230,231,232,233,234,235,236,237,238,239,318,240,241,242,319,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,268,14,270,272,273,274,275,276,277,278,279,280,281,282,284,285,288,289,290,291,292,293,294],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[194,195,199,200,315,211,281,283,291],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[288,290,335],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[218,336],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:278","sourceCode":"return net.sf.cglib.proxy.Enhancer","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[337,338,339,340,341,342,343,326,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[21,1,2,3,6,83,7,8,9,132,10,134,161,11,12,13,320,321,322,323,268,14,270],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[358],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:721","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[201],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[15,16,17,18,19,20,21,0,1,22,23,2,3,24,328,295,329,359,360,361,362,363,364,365,366,296,297,298,299,300,301,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,367,48,49,50,51,52,53,54,55,56,302,368,57,58,59,60,61,62,63,369,64,65,370,371,372,66,67,373,68,374,375,376,69,303,70,71,72,377,73,74,378,304,5,75,76,77,379,330,380,6,78,79,80,81,82,83,7,8,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,381,117,118,305,358,119,120,121,122,123,124,382,383,125,384,385,386,387,388,389,331,390,391,392,393,325,394,395,396,397,398,399,400,401,402,403,337,338,339,340,341,342,343,326,344,345,346,347,348,349,350,351,306,352,353,354,355,356,307,357,126,127,128,129,404,405,406,407,408,409,130,131,9,132,133,10,134,135,308,136,137,309,310,311,312,332,313,314,333,334,410,411,412,413,414,415,416,417,418,138,139,140,141,142,143,144,145,146,147,148,149,150,151,419,152,153,154,155,156,157,158,159,160,161,11,162,163,164,165,166,12,13,167,168,169,420,170,421,422,423,171,172,173,424,174,425,426,175,176,427,177,428,429,178,179,180,181,182,183,184,185,186,430,187,431,432,188,189,190,191,433,434,192,193,194,195,435,196,197,198,199,200,201,315,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,316,317,220,221,222,223,224,225,226,227,228,229,230,231,436,232,233,234,235,236,237,238,437,438,439,440,441,239,442,443,444,445,446,447,318,240,241,242,319,243,244,245,246,247,448,449,248,249,250,251,252,253,254,255,256,257,258,259,260,450,320,321,322,323,451,452,453,454,455,456,457,458,459,460,261,461,462,262,463,464,465,466,467,468,469,470,471,263,472,473,474,475,476,264,477,478,479,480,481,482,483,265,484,485,486,487,488,489,266,267,268,269,14,270,271,272,273,490,274,275,276,277,491,278,279,280,492,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:79","sourceCode":"return (int <= int) && (int <= int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[206,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"result","minimum":"result","maximum":"result"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[194,195,197,199,200,315,211,216,281,283,291],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,295,64,66,67,68,69,303,70,71,304,75,76,77,78,79,82,83,8,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,117,305,125,132,10,134,136,137,309,310,311,312,138,139,140,141,142,144,146,148,149,151,153,153,154,154,158,159,160,161,162,164,165,166,167,168,170,171,173,174,176,178,179,180,181,182,183,184,185,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,221,229,233,234,235,236,237,239,241,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,268,14,270,273,274,275,276,277,278,279,280,281,282,284,285,288,289,290,291,292,293,294],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[55,197,214,236],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:116","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:66","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))","type":"CtLocalVariableImpl"},"failures":[420,422,424,493,427,494,495,448,276,280,492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"field"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[209,496],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:114","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>(java.util.Set<org.easymock.internal.MethodSerializationWrapper>.size())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[424,497,498,499,500,501,448],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[73,147,240,242,243],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[426,244],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[74,230],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[424,497,498,499,502,448],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[349,220,231,232,238],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,21,0,1,22,23,2,3,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,5,75,76,77,6,78,79,80,81,82,83,7,8,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,9,132,133,10,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,11,162,163,164,165,166,12,13,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,14,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[346,318,241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[503,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:986","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[213],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[425],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[504,244,245,246],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":195,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":20,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":258,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":346,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":163,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":145,"org.easymock.tests2.DelegateToTest.testReturnException":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":120,"org.easymock.tests.MockingTest.testPartialClassMocking":66,"org.easymock.tests.MockClassControlTest.testToString":413,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":450,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":295,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":466,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":25,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":262,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":497,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":201,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":78,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":489,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":128,"org.easymock.samples.ExampleTest.answerVsDelegate":147,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":364,"org.easymock.tests2.UsageConstraintsTest.testNull":197,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":375,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":183,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":418,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":257,"org.easymock.tests2.CaptureTest.testPrimitive":284,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":82,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":44,"org.easymock.tests.UsageTest.moreThanOneArgument":21,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":182,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":17,"org.easymock.tests.UsageTest.argumentsOrdered":3,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":332,"org.easymock.tests.UsageVarargTest.varargIntAccepted":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":501,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":169,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":453,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":446,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":142,"org.easymock.tests.ReplayStateInvalidUsageTest.times":392,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":265,"org.easymock.tests2.DependencyTest.testClassMocking":428,"org.easymock.tests2.AnswerTest.answer":219,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":226,"org.easymock.tests2.CaptureTest.testAnd":281,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":361,"org.easymock.tests2.UsageTest.strictResetToDefault":160,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":422,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":16,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":70,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":252,"org.easymock.tests2.DelegateToTest.testDelegate":243,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":40,"org.easymock.tests.LimitationsTest.mockFinalMethod":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":116,"org.easymock.tests2.DependencyTest.testClassMockingSupport":429,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":379,"org.easymock.tests2.CaptureTest.testCapture1_2446744":285,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":38,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":224,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":387,"org.easymock.tests.UsageThrowableTest.throwError":104,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":363,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":447,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":410,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":19,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":478,"org.easymock.samples.PartialClassMockTest.testGetArea":144,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":388,"org.easymock.tests.MockingTest.testInterfaceMocking":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":139,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":467,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":409,"org.easymock.tests2.UsageTest.niceToStrict":162,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":337,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":171,"org.easymock.tests2.MockBuilderTest.testCreateMock":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":474,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":486,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":34,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":253,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":360,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":301,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":126,"org.easymock.tests.UsageOverloadedMethodTest.overloading":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":471,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":74,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":206,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":95,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":205,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":290,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":367,"org.easymock.tests.MockClassControlTest.testEquals":417,"org.easymock.tests2.EasyMockSupportClassTest.testAll":261,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":118,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":114,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":225,"org.easymock.tests2.CaptureTest.testCaptureAll":282,"org.easymock.tests.MockNameTest.defaultName":369,"org.easymock.tests2.UsageConstraintsTest.testMatches":207,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":385,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":18,"org.easymock.samples.ExampleTest.voteForRemovals":151,"org.easymock.tests.UsageVarargTest.allKinds":55,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":83,"org.easymock.samples.BasicClassMockTest.testPrintContent":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":115,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":110,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":266,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":124,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":319,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":502,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":402,"org.easymock.tests2.UsageConstraintsTest.greaterThan":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":303,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":191,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":403,"org.easymock.samples.ExampleTest.voteForRemoval":148,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":433,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":234,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":365,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":454,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":186,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":159,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":56,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":250,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":119,"org.easymock.tests2.CaptureTest.testCaptureFirst":294,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":343,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":251,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":5,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":91,"org.easymock.tests2.UsageTest.moreThanOneArgument":161,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":236,"org.easymock.tests2.CaptureTest.testCapture2_2446744":293,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":353,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":54,"org.easymock.tests.GenericTest.testBridgedEquals":358,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":62,"org.easymock.tests.UsageExpectAndReturnTest.longType":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":112,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":248,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":43,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":214,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":312,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":41,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":15,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":297,"org.easymock.tests.UsageCallCountTest.tooManyCalls":63,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":488,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":30,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":275,"org.easymock.tests.MockingTest.testNiceClassMocking":376,"org.easymock.tests.MockingTest.testClassMocking":371,"org.easymock.tests2.UsageConstraintsTest.testContains":204,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":368,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":229,"org.easymock.tests2.UsageConstraintsTest.testFind":196,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":77,"org.easymock.tests.MockTypeTest.fromEasyMockClass":362,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":130,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":232,"org.easymock.tests.UsageExpectAndReturnTest.object":94,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":487,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":256,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":498,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":49,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":407,"org.easymock.tests.UsageTest.exactCallCountByLastCall":24,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":313,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":328,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":448,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":100,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":45,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":73,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":438,"org.easymock.tests.MockClassControlTest.testHashCode":416,"org.easymock.tests2.EasyMockSupportTest.testVerify":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":469,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":314,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":72,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":223,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":490,"org.easymock.tests.UsageVarargTest.varargCharAccepted":48,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":395,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":357,"org.easymock.tests2.UsageTest.openCallCountByLastCall":164,"org.easymock.tests.DefaultClassInstantiatorTest.object":396,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":259,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":299,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":405,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":470,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":482,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":437,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":415,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":189,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":31,"org.easymock.tests.CapturesMatcherTest.test":324,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":101,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":296,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":264,"org.easymock.tests2.UsageTest.resumeIfFailure":167,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":359,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":122,"org.easymock.tests2.StubTest.stubWithReturnValue":273,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":424,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":93,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":215,"org.easymock.tests2.SerializationTest.testAllMockedMethod":246,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":306,"org.easymock.samples.SupportTest.voteForRemovals":158,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":381,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":440,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":37,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":504,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":307,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":316,"org.easymock.tests.UsageExpectAndThrowTest.object":35,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":329,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":212,"org.easymock.tests2.DelegateToTest.testWrongClass":242,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":136,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":137,"org.easymock.samples.ConstructorCalledMockTest.testTax":153,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":456,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":255,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":274,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":36,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":458,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":325,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":127,"org.easymock.tests2.CaptureTest.testCaptureNone":289,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":311,"org.easymock.tests.UsageUnorderedTest.message":6,"org.easymock.tests.UsageVerifyTest.twoReturns":8,"org.easymock.tests.UsageVarargTest.varargByteAccepted":53,"org.easymock.tests2.ThreadingTest.testThreadSafe":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":472,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":60,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":408,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":155,"org.easymock.tests2.CaptureTest.testCapture_2617107":283,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":380,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":355,"org.easymock.tests2.UsageConstraintsTest.any":202,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":391,"org.easymock.tests2.StubTest.stub":272,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":121,"org.easymock.tests.UsageExpectAndThrowTest.longType":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":356,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":400,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":390,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":269,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":239,"org.easymock.tests2.SerializationTest.testClass":244,"org.easymock.tests.LimitationsTest.mockNativeMethod":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":103,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":305,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":481,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":271,"org.easymock.tests2.NameTest.nameForMocksControl":323,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":483,"org.easymock.tests2.MockedExceptionTest.testMockedException":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":462,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":23,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":436,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":29,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":68,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":180,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":174,"org.easymock.tests.MockingTest.testNicePartialClassMocking":67,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":185,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":479,"org.easymock.tests2.CaptureTest.testCaptureLast":288,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":330,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":200,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":280,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":213,"org.easymock.tests.MockingTest.testTwoMocks":372,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":492,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":33,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":217,"org.easymock.samples.ExampleTest.removeNonExistingDocument":419,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":485,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":389,"org.easymock.tests.UsageStrictMockTest.differentMethods":134,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":439,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":398,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":235,"org.easymock.tests2.MockBuilderTest.testCreateMockString":177,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":463,"org.easymock.tests.UsageExpectAndThrowTest.floatType":27,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":460,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":220,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":449,"org.easymock.tests.UsageVerifyTest.twoThrows":7,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":263,"org.easymock.samples.ExampleTest.voteAgainstRemoval":149,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":347,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":190,"org.easymock.tests.LimitationsTest.privateConstructor":383,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":495,"org.easymock.tests2.UsageConstraintsTest.testNotNull":216,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":111,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":227,"org.easymock.tests2.UsageTest.defaultResetToNice":166,"org.easymock.samples.ExampleTest.voteAgainstRemovals":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":348,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":480,"org.easymock.tests.UsageVarargTest.differentLength":50,"org.easymock.tests2.CallbackTest.callback":238,"org.easymock.tests2.UsageConstraintsTest.equals":435,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":431,"org.easymock.tests.UsageTest.openCallCountByLastCall":22,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":80,"org.easymock.tests.UsageCallCountTest.tooFewCalls":58,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":277,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":129,"org.easymock.tests.UsageThrowableTest.throwCheckedException":108,"org.easymock.tests.MockingTest.testStrictClassMocking":370,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":65,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":279,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":484,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":276,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":393,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":278,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":222,"org.easymock.tests.ObjectMethodsTest.testHashCode":406,"org.easymock.tests2.CompareToTest.testGreateOrEqual":327,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":500,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":237,"org.easymock.tests2.NameTest.nameForNiceMock":322,"org.easymock.tests2.DependencyTest.testInterfaceMocking":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":499,"org.easymock.samples.ExampleTest.addDocument":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":477,"org.easymock.tests2.DelegateToTest.testStubDelegate":241,"org.easymock.tests2.AnswerTest.stubAnswer":221,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":132,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":425,"org.easymock.tests.UsageVarargTest.varargLongAccepted":52,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":345,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":102,"org.easymock.tests.UsageExpectAndReturnTest.floatType":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":247,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":445,"org.easymock.tests.UsageThrowableTest.noUpperLimit":105,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":210,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":378,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":193,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":451,"org.easymock.tests2.SerializationTest.test":245,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":286,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":397,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":85,"org.easymock.tests2.UsageConstraintsTest.testSame":198,"org.easymock.samples.SupportTest.addDocument":157,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":491,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":464,"org.easymock.tests.GenericTest.testPackageScope":117,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":341,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":444,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":374,"org.easymock.tests2.NameTest.nameForMock":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":96,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":427,"org.easymock.tests2.UsageStrictMockTest.differentMethods":270,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":432,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":88,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":39,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":404,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":71,"org.easymock.tests2.MockedExceptionTest.testRealException":230,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":366,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":350,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":349,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":394,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":79,"org.easymock.tests2.NameTest.nameForStrictMock":321,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":423,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":184,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":455,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":503,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":399,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":211,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":170,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":441,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":468,"org.easymock.tests2.CaptureTest.testCaptureRightOne":291,"org.easymock.tests2.UsageConstraintsTest.testOr":199,"org.easymock.tests.UsageRangeTest.combination":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":181,"org.easymock.tests.UsageTest.wrongArguments":1,"org.easymock.tests2.MockBuilderTest.testWithConstructor":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":465,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":412,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":338,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":401,"org.easymock.tests.UsageVarargTest.varargShortAccepted":51,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":61,"org.easymock.tests2.UsageConstraintsTest.cmpTo":203,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":317,"org.easymock.tests2.CompareToTest.testLessThan":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":340,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":165,"org.easymock.tests2.CaptureTest.testCaptureFromStub":292,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":386,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":421,"org.easymock.tests.UsageTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":59,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":493,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":98,"org.easymock.tests2.CaptureTest.testCapture":335,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":133,"org.easymock.tests2.UsageConstraintsTest.constraints":194,"org.easymock.samples.ExampleTest.addAndChangeDocument":152,"org.easymock.tests.UsageStrictMockTest.testVerify":308,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":143,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":131,"org.easymock.tests2.CompareToTest.testGreateThan":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":113,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":140,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":90,"org.easymock.tests.LimitationsTest.abstractClass":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":141,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":304,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":46,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":254}}]
