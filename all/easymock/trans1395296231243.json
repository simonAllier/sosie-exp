[{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[4,5],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"failures":[6,6,7,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,0,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,1,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,2,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,4,232,233,234,235,236,237,238,239,240,241,3,242,243,244,245,246,247,5,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[358,359,360,361,362],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:206","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[363],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[23,35,0,94,97,98,1,102,103,105,107,111,112,115,129,136,138,159,162,163,364,227,251,253,254,257,258,259,284,285,307,323,324,326,328,329],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"position":"org.easymock.internal.Range:40","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,365,366,367,368,369,370,371,372,373,374,27,375,376,28,377,378,379,380,381,382,383,384,385,29,386,387,388,389,390,30,391,363,31,392,32,33,34,35,36,393,37,38,39,40,41,42,394,43,44,45,46,47,48,0,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,1,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,395,119,396,120,397,398,399,121,122,123,400,124,401,402,125,126,403,127,128,129,130,131,2,132,133,404,134,405,406,135,136,137,138,407,408,139,140,141,142,409,143,144,145,410,411,412,146,147,413,414,415,416,417,148,418,419,420,421,422,423,424,149,150,151,152,153,425,426,427,428,429,430,431,154,432,433,434,435,436,437,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,438,172,173,439,174,440,441,442,443,444,445,446,447,448,175,176,177,449,178,450,451,452,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,453,454,201,202,203,455,456,204,205,206,207,208,209,210,211,212,213,214,215,457,216,217,218,458,219,220,221,222,223,224,459,225,226,227,228,229,230,231,4,232,233,460,234,235,236,237,238,239,240,241,3,242,243,244,245,246,247,5,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,461,462,463,464,465,466,467,468,289,290,291,292,293,294,295,296,297,298,299,469,470,300,471,301,302,303,304,305,306,307,308,309,310,311,312,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,313,488,489,490,491,492,314,493,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[6,7,396,494,495,403,405],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[218],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[443,496,497],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[24,400,402,498,499,500,501,502,153,425],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,0,49,50,51,52,53,54,55,56,57,58,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,89,90,91,93,94,95,96,97,98,1,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,2,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,204,206,207,216,217,222,223,224,225,226,227,228,229,230,231,4,232,233,235,247,5,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,292,293,294,295,296,297,298,299,300,301,303,304,307,308,309,310,311,312,315,316,317,318,319,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,344,345,346,347,348,351,352,353,354,355,356,357],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[503],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[504,505,506],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[20,121,123,124,507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[38,394,51,56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[339],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[96,161,163,164,252,283,284,285,323,327,329,330,508,509,510,511],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[9,89,91,92,93,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[51,52],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[443,496,497],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[36,394],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:381","sourceCode":"while (java.lang.Class<?> != null) {\n    for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n        final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n        if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n            java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[60,63,64,478],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[38,54,86,4],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[512,513,514,515,253,326],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[24,25,26,516],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[35,36,40,41,394,51,69,71,79],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[517,518,519,520],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[23,34,35,37,39,40,45,48,0,50,57,96,97,98,1,102,103,104,107,111,112,115,126,159,161,163,165,166,183,187,188,190,193,204,205,206,207,252,254,257,258,264,268,269,271,274,282,283,284,285,293,306,324,327,329,331,351],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":36,"org.easymock.tests2.UsageTest.argumentsOrdered":103,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":251,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":482,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":1,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":19,"org.easymock.tests2.DelegateToTest.testReturnException":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":334,"org.easymock.tests.MockingTest.testPartialClassMocking":176,"org.easymock.tests.MockClassControlTest.testToString":210,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":424,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":28,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":260,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":508,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":498,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":42,"org.easymock.tests2.UsageTest.wrongArguments":97,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":247,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":423,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":170,"org.easymock.samples.ExampleTest.answerVsDelegate":9,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":466,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":451,"org.easymock.tests2.UsageConstraintsTest.testNull":38,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":131,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":115,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":215,"org.easymock.tests2.CaptureTest.testPrimitive":72,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":250,"org.easymock.tests.UsageTest.moreThanOneArgument":252,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":279,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":130,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":346,"org.easymock.tests.UsageTest.argumentsOrdered":258,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":339,"org.easymock.tests.UsageVarargTest.varargIntAccepted":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":487,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":308,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":119,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":436,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":367,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":312,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":505,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":148,"org.easymock.tests.ReplayStateInvalidUsageTest.times":243,"org.easymock.tests2.DependencyTest.testClassMocking":411,"org.easymock.tests2.AnswerTest.answer":59,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":488,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":68,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":463,"org.easymock.tests2.CaptureTest.testAnd":69,"org.easymock.tests2.UsageTest.strictResetToDefault":95,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":398,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":135,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":110,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":206,"org.easymock.tests2.DelegateToTest.testDelegate":93,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":275,"org.easymock.tests.LimitationsTest.mockFinalMethod":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":319,"org.easymock.tests2.DependencyTest.testClassMockingSupport":412,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":199,"org.easymock.tests2.CaptureTest.testCapture1_2446744":73,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":404,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":66,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":238,"org.easymock.tests.UsageThrowableTest.throwError":292,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":465,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":460,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":437,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":363,"org.easymock.samples.PartialClassMockTest.testGetArea":20,"org.easymock.tests.MockingTest.testInterfaceMocking":449,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":239,"org.easymock.tests2.CompareToTest.testLessOrEqual":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":309,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":287,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":456,"org.easymock.tests2.UsageTest.niceToStrict":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":121,"org.easymock.tests2.MockBuilderTest.testCreateMock":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":388,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":420,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":512,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":269,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":111,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":462,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":322,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":168,"org.easymock.tests.UsageOverloadedMethodTest.overloading":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":385,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":47,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":304,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":190,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":280,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":496,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":46,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":78,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":459,"org.easymock.tests2.EasyMockSupportClassTest.testAll":27,"org.easymock.tests.MockClassControlTest.testEquals":214,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":217,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":277,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":495,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":67,"org.easymock.tests2.CaptureTest.testCaptureAll":70,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":317,"org.easymock.tests.MockNameTest.defaultName":438,"org.easymock.tests2.UsageConstraintsTest.testMatches":48,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":347,"org.easymock.samples.ExampleTest.voteForRemovals":13,"org.easymock.tests.UsageVarargTest.allKinds":4,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":283,"org.easymock.samples.BasicClassMockTest.testPrintContent":17,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":318,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":298,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":159,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":433,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":338,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":502,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":445,"org.easymock.tests2.UsageConstraintsTest.greaterThan":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":375,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":205,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":138,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":446,"org.easymock.samples.ExampleTest.voteForRemoval":10,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":407,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":84,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":467,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":368,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":133,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":94,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":235,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":479,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":108,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":333,"org.easymock.tests2.CaptureTest.testCaptureFirst":82,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":109,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":105,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":307,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":186,"org.easymock.tests2.UsageTest.moreThanOneArgument":96,"org.easymock.tests2.CaptureTest.testCapture2_2446744":81,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":489,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":126,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":231,"org.easymock.tests.GenericTest.testBridgedEquals":458,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":356,"org.easymock.tests.UsageExpectAndReturnTest.longType":182,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":315,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":507,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":278,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":54,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":234,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":276,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":344,"org.easymock.tests.UsageCallCountTest.tooManyCalls":357,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":506,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":389,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":422,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":265,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":297,"org.easymock.tests.MockingTest.testNiceClassMocking":452,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":140,"org.easymock.tests.MockingTest.testClassMocking":448,"org.easymock.tests2.UsageConstraintsTest.testContains":45,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":350,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":157,"org.easymock.tests2.UsageConstraintsTest.testFind":37,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":282,"org.easymock.tests.MockTypeTest.fromEasyMockClass":464,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":32,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":324,"org.easymock.tests.UsageExpectAndReturnTest.object":189,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":134,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":421,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":114,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":499,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":226,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":203,"org.easymock.tests.UsageTest.exactCallCountByLastCall":259,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":219,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":340,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":425,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":195,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":222,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":303,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":428,"org.easymock.tests.MockClassControlTest.testHashCode":213,"org.easymock.tests2.EasyMockSupportTest.testVerify":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":383,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":504,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":341,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":301,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":65,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":395,"org.easymock.tests.UsageVarargTest.varargCharAccepted":225,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":439,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":493,"org.easymock.tests2.UsageTest.openCallCountByLastCall":99,"org.easymock.tests.DefaultClassInstantiatorTest.object":174,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":117,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":320,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":201,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":384,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":295,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":416,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":427,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":136,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":212,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":266,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":30,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":211,"org.easymock.tests2.UsageTest.resumeIfFailure":104,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":461,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":336,"org.easymock.tests2.StubTest.stubWithReturnValue":167,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":400,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":188,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":55,"org.easymock.tests2.SerializationTest.testAllMockedMethod":26,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":313,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":513,"org.easymock.samples.SupportTest.voteForRemovals":22,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":457,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":272,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":516,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":314,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":60,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":221,"org.easymock.tests.UsageExpectAndThrowTest.object":270,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":52,"org.easymock.tests2.DelegateToTest.testWrongClass":91,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":232,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":233,"org.easymock.samples.ConstructorCalledMockTest.testTax":6,"org.easymock.tests.UsageStrictMockTest.range":329,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":370,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":113,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":139,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":271,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":123,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":245,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":169,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":514,"org.easymock.tests2.CaptureTest.testCaptureNone":77,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":288,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":518,"org.easymock.tests.UsageUnorderedTest.message":323,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":503,"org.easymock.tests.UsageVerifyTest.twoReturns":285,"org.easymock.tests.UsageVarargTest.varargByteAccepted":230,"org.easymock.tests2.ThreadingTest.testThreadSafe":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":386,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":354,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":455,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":16,"org.easymock.tests2.CaptureTest.testCapture_2617107":71,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":491,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":249,"org.easymock.tests2.UsageConstraintsTest.any":43,"org.easymock.tests2.StubTest.stub":166,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":242,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":492,"org.easymock.tests.UsageExpectAndThrowTest.longType":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":335,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":443,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":3,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":162,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":154,"org.easymock.tests2.SerializationTest.testClass":24,"org.easymock.tests.LimitationsTest.mockNativeMethod":300,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":198,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":218,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":415,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":165,"org.easymock.tests2.NameTest.nameForMocksControl":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":417,"org.easymock.tests2.MockedExceptionTest.testMockedException":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":376,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":256,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":392,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":178,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":264,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":128,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":124,"org.easymock.tests.MockingTest.testNicePartialClassMocking":177,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":132,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":413,"org.easymock.tests2.CaptureTest.testCaptureLast":76,"org.easymock.tests2.CompareToTest.testCompareEqual":360,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":200,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":145,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":41,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":53,"org.easymock.tests.MockingTest.testTwoMocks":175,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":410,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":268,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":102,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":57,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":520,"org.easymock.samples.ExampleTest.removeNonExistingDocument":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":419,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":240,"org.easymock.tests.UsageStrictMockTest.differentMethods":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":429,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":441,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":85,"org.easymock.tests2.MockBuilderTest.testCreateMockString":127,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":208,"org.easymock.tests.UsageExpectAndThrowTest.floatType":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":377,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":374,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":62,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":426,"org.easymock.tests.UsageVerifyTest.twoThrows":284,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":29,"org.easymock.samples.ExampleTest.voteAgainstRemoval":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":483,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":286,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":137,"org.easymock.tests.LimitationsTest.privateConstructor":470,"org.easymock.tests2.UsageConstraintsTest.testNotNull":56,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":155,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":299,"org.easymock.tests2.UsageTest.defaultResetToNice":101,"org.easymock.samples.ExampleTest.voteAgainstRemovals":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":484,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":194,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":414,"org.easymock.tests.UsageVarargTest.differentLength":227,"org.easymock.tests2.CallbackTest.callback":23,"org.easymock.tests2.UsageConstraintsTest.equals":393,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":405,"org.easymock.tests.UsageTest.openCallCountByLastCall":255,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":248,"org.easymock.tests.UsageCallCountTest.tooFewCalls":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":142,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":171,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":519,"org.easymock.tests.UsageThrowableTest.throwCheckedException":296,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":515,"org.easymock.tests.MockingTest.testStrictClassMocking":447,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":173,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":418,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":141,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":244,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":143,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":64,"org.easymock.tests.ObjectMethodsTest.testHashCode":202,"org.easymock.tests2.CompareToTest.testGreateOrEqual":361,"org.easymock.tests2.NameTest.nameForNiceMock":151,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":87,"org.easymock.tests2.DependencyTest.testInterfaceMocking":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":500,"org.easymock.samples.ExampleTest.addDocument":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.DelegateToTest.testStubDelegate":90,"org.easymock.tests2.AnswerTest.stubAnswer":63,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":327,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":401,"org.easymock.tests.UsageVarargTest.varargLongAccepted":229,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":481,"org.easymock.tests.UsageExpectAndReturnTest.floatType":181,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":197,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":153,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":7,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":435,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":50,"org.easymock.tests.UsageThrowableTest.noUpperLimit":293,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":305,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":34,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":365,"org.easymock.tests2.SerializationTest.test":25,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":74,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":497,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":440,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":180,"org.easymock.tests2.UsageConstraintsTest.testSame":39,"org.easymock.samples.SupportTest.addDocument":21,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":409,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":378,"org.easymock.tests.GenericTest.testPackageScope":216,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":476,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":434,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":450,"org.easymock.tests2.NameTest.nameForMock":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":191,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":403,"org.easymock.tests2.UsageStrictMockTest.differentMethods":164,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":406,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":183,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":274,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":454,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":207,"org.easymock.tests2.MockedExceptionTest.testRealException":158,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":486,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":485,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":5,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":246,"org.easymock.tests2.NameTest.nameForStrictMock":150,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":399,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":31,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":2,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":369,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":509,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":442,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":51,"org.easymock.tests.ErrorMessageTest.testGetters":510,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":120,"org.easymock.tests2.UsageStrictMockTest.range":163,"org.easymock.tests2.UsageConstraintsTest.lessThan":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":431,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":480,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":107,"org.easymock.tests2.CaptureTest.testCaptureRightOne":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":382,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":517,"org.easymock.tests2.UsageConstraintsTest.testOr":40,"org.easymock.tests.UsageRangeTest.combination":204,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":129,"org.easymock.tests.UsageTest.wrongArguments":254,"org.easymock.tests2.MockBuilderTest.testWithConstructor":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":379,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":209,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":192,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":444,"org.easymock.tests.UsageVarargTest.varargShortAccepted":228,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":355,"org.easymock.tests2.UsageConstraintsTest.cmpTo":44,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":61,"org.easymock.tests2.CompareToTest.testLessThan":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":475,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":100,"org.easymock.tests2.CaptureTest.testCaptureFromStub":80,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":237,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":397,"org.easymock.tests.UsageTest.unexpectedCallWithArray":253,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":326,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":353,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":494,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":193,"org.easymock.tests2.UsageConstraintsTest.constraints":35,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":328,"org.easymock.samples.ExampleTest.addAndChangeDocument":15,"org.easymock.tests.UsageStrictMockTest.testVerify":332,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":18,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":316,"org.easymock.tests2.CompareToTest.testGreateThan":359,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":75,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":310,"org.easymock.tests.LimitationsTest.abstractClass":469,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":185,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":311,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":511,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":112,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":223}}]
