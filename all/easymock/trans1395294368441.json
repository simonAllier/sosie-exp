[{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[2,3,4,5,6,7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:27","sourceCode":"-551735356674347591L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[32,33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[35,36,37],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[38,39,40,41,42,43,8,44,9,45,46,47,48,49,10,50,51,32,33,52,53,54,55,56,11,12,57,13,58,14,15,59,60,61,62,63,64,65,66,67,68,17,69,70,71,72,18,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,2,3,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,1,134,135,136,19,137,138,139,140,141,20,142,143,144,145,146,147,21,22,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,26,174,175,176,6,7,177,178,179,180,181,182,183,184,185,186,187,188],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[189],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.ConstructorArgs:54","failures":[190,191,32,54,192,77,81,193,194,195,196,85,197,198,86,199,200,201,202,203,204,205,206,207,87,208,209,210,211,212,88,213,214,215,216,217,218,219,220,221,222],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[38,223,39,224,40,41,225,42,226,227,228,43,229,230,231,190,190,191,191,8,44,9,45,46,232,233,47,48,49,10,234,50,51,32,33,34,235,236,52,237,238,239,240,53,54,55,56,11,12,57,13,58,14,15,59,16,60,61,62,63,64,65,66,67,68,17,69,70,71,72,18,73,74,75,76,77,78,79,80,81,82,241,242,243,83,244,84,85,86,87,88,89,90,91,245,92,246,93,94,95,247,248,96,97,249,98,99,100,101,102,103,250,104,251,105,106,107,108,109,110,111,112,252,253,113,254,2,3,255,114,115,116,117,118,119,120,121,122,123,124,125,126,127,256,257,258,259,260,261,262,263,264,265,128,266,267,129,268,269,130,131,270,132,133,271,1,272,273,274,134,135,136,19,137,138,139,140,141,20,142,143,144,145,146,147,21,22,148,149,150,275,151,152,153,154,155,156,276,277,157,278,279,280,281,282,283,284,285,286,287,288,289,23,290,291,292,293,294,295,296,297,298,299,300,301,302,24,303,304,305,306,307,158,159,4,308,160,161,309,310,162,311,312,313,314,25,315,163,164,165,166,167,168,169,316,317,318,319,170,171,172,173,26,320,321,322,323,174,175,324,325,5,176,326,6,7,327,328,177,329,330,331,178,179,180,332,333,334,335,336,337,338,339,340,341,342,343,344,345,181,346,182,347,348,349,350,351,183,352,353,354,27,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,184,185,372,373,186,374,375,376,28,377,378,379,380,381,29,382,383,384,385,386,387,30,31,388,389,187,188,390,391,392,393],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:190","failures":[10,12,15,59,60,63,17,69,70,72,92,246,248,99,106,252,2,3,117,119,121,122,125,126,127,261,1,150,275,152,153,154,155,156,276,310,166,324,6,7,179,346],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[394,395,396,397,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl() : org.easymock.EasyMockSupport.createStrictControl()","type":"CtLocalVariableImpl"},"failures":[86,105,0,130,1],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:613","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[38,39,224,40,41,42,43,190,191,8,44,45,46,47,48,49,10,234,50,51,32,33,236,52,237,239,53,54,55,56,11,12,57,13,58,14,15,59,60,61,62,63,64,65,66,67,68,17,69,70,72,18,73,74,75,76,77,78,79,80,81,82,83,244,84,86,87,88,89,90,91,245,92,246,93,94,95,247,248,96,97,98,99,100,101,102,103,250,104,251,105,106,107],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[32,33,34,398],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[91,245,247,248,399,394,189,35,36,400,401,402,395,403,404,113,2,3,276,396,37,397,405,406,407,408,159,4,308,309,310,5,176,6,7,181,346,182,348,351,183,352,358,359],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[192,409,410,411,412,413,219],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[414,415],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[71,18,273,274],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[245,247,248,2,276,408,4,308,309,310,5,6,346,182,352],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[416,177,329,330,417],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[38,223,39,224,40,41,225,42,227,228,43,229,230,231,8,44,9,45,232,233,47,48,49,10,51,32,33,34,236,52,239,240,53,54,55,56,11,12,57,13,58,14,15,59,60,61,62,63,64,65,66,67,68,17,69,70,72,18,73,74,75,76,77,78,79,80,81,82,243,83,244,84,85,86,87,88,89,90,91,245,92,246,247,248,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,252,253,113,254,2,3,255,114,115,116,117,118,119,120,121,122,124,125,126,127,256,257,258,259,260,261,128,129,130,131,132,133,1,273,274,134,135,136,19,137,138,139,140,141,20,142,143,144,145,146,147,21,22,148,149,275,151,276,157,278,279,280,281,282,283,284,285,286,287,288,292,158,159,308,309,310,162,163,164,165,166,167,168,169,170,171,172,173,26,174,324,325,5,176,326,6,7,327,177,329,331,179,180,337,339,340,341,342,344,345,181,346,182,183,184,185,372,373,186,374,375,376,28,377,378,379,380,381,29,382,383,384,385,386,387,30,31,388,389,187,188],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[394,395,396,397,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[53,89,94,150,151,152,153,154,155,156,292,158,161,180,346,350,373,374,375,376,28,377,378,379,380,381,29,382,383,384,385,386,387,30,31,388,389],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[245,247,248,2,3,276,418,408,4,308,309,310,419,420,5,6,7,346,182],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":12,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":158,"org.easymock.tests2.UsageTest.argumentsOrdered":248,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":126,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":246,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":223,"org.easymock.tests2.DelegateToTest.testReturnException":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":23,"org.easymock.tests.MockingTest.testPartialClassMocking":163,"org.easymock.tests.MockClassControlTest.testToString":296,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":323,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":202,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":374,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":115,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":409,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":184,"org.easymock.tests2.UsageTest.wrongArguments":245,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":318,"org.easymock.samples.ExampleTest.answerVsDelegate":224,"org.easymock.tests2.UsageConstraintsTest.testNull":13,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":101,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":125,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":301,"org.easymock.tests2.CaptureTest.testPrimitive":45,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":186,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":389,"org.easymock.tests.UsageTest.moreThanOneArgument":159,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":303,"org.easymock.tests.UsageTest.argumentsOrdered":310,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":332,"org.easymock.tests.UsageVarargTest.varargIntAccepted":280,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":413,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":269,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":270,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":26,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":36,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":84,"org.easymock.tests.ReplayStateInvalidUsageTest.times":368,"org.easymock.tests2.AnswerTest.answer":82,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":16,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":265,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":90,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":24,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":120,"org.easymock.tests2.DelegateToTest.testDelegate":239,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":336,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":292,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":25,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":358,"org.easymock.tests2.CaptureTest.testCapture1_2446744":46,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":385,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":263,"org.easymock.tests.UsageThrowableTest.throwError":150,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":362,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":420,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":305,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":214,"org.easymock.samples.PartialClassMockTest.testGetArea":38,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":363,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":171,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":354,"org.easymock.tests2.UsageTest.niceToStrict":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":375,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":131,"org.easymock.tests2.MockBuilderTest.testCreateMock":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":210,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":394,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":29,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":121,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":357,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":316,"org.easymock.tests.UsageOverloadedMethodTest.overloading":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":212,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":64,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":350,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":178,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":143,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":63,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":49,"org.easymock.tests2.EasyMockSupportClassTest.testAll":85,"org.easymock.tests.MockClassControlTest.testEquals":300,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":329,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":401,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":31,"org.easymock.tests2.CaptureTest.testCaptureAll":44,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":264,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":313,"org.easymock.tests2.UsageConstraintsTest.testMatches":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":304,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":360,"org.easymock.samples.ExampleTest.voteForRemovals":42,"org.easymock.tests.UsageVarargTest.allKinds":288,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":181,"org.easymock.samples.BasicClassMockTest.testPrintContent":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":314,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":155,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":252,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":293,"org.easymock.tests2.UsageConstraintsTest.greaterThan":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":197,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":167,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":107,"org.easymock.samples.ExampleTest.voteForRemoval":40,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":109,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":250,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":89,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":331,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":118,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":289,"org.easymock.tests2.CaptureTest.testCaptureFirst":51,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":119,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":97,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":140,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":111,"org.easymock.tests2.CaptureTest.testCapture2_2446744":50,"org.easymock.tests2.UsageTest.moreThanOneArgument":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":1,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":287,"org.easymock.tests.GenericTest.testBridgedEquals":417,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":344,"org.easymock.tests.UsageExpectAndReturnTest.longType":19,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":311,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":388,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":390,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":71,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":30,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":302,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":321,"org.easymock.tests.UsageCallCountTest.tooManyCalls":345,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":37,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":211,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":141,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":378,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":154,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":76,"org.easymock.tests2.UsageConstraintsTest.testContains":62,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":338,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":129,"org.easymock.tests2.UsageConstraintsTest.testFind":57,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":180,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":274,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":324,"org.easymock.tests.UsageExpectAndReturnTest.object":142,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":410,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":282,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":393,"org.easymock.tests.UsageTest.exactCallCountByLastCall":162,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":174,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":333,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":407,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":192,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":21,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":278,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":349,"org.easymock.tests.MockClassControlTest.testHashCode":299,"org.easymock.tests2.EasyMockSupportTest.testVerify":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":205,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":35,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":334,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":347,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":356,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":418,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":262,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":249,"org.easymock.tests.UsageVarargTest.varargCharAccepted":281,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":253,"org.easymock.tests2.UsageTest.openCallCountByLastCall":93,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":127,"org.easymock.tests.DefaultClassInstantiatorTest.object":277,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":355,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":391,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":206,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":380,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":152,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":105,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":298,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":379,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":22,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":320,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":88,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":297,"org.easymock.tests2.UsageTest.resumeIfFailure":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":291,"org.easymock.tests2.StubTest.stubWithReturnValue":53,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":219,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":20,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":72,"org.easymock.tests2.SerializationTest.testAllMockedMethod":34,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":306,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":395,"org.easymock.samples.SupportTest.voteForRemovals":43,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":416,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":384,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":398,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":307,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":241,"org.easymock.tests.UsageExpectAndThrowTest.object":382,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":69,"org.easymock.tests2.DelegateToTest.testWrongClass":237,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":187,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":188,"org.easymock.samples.ConstructorCalledMockTest.testTax":190,"org.easymock.tests.UsageStrictMockTest.range":6,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":123,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":383,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":194,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":309,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":317,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":396,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":27,"org.easymock.tests2.CaptureTest.testCaptureNone":48,"org.easymock.tests.UsageUnorderedTest.message":276,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":419,"org.easymock.tests.UsageVerifyTest.twoReturns":182,"org.easymock.tests.UsageVarargTest.varargByteAccepted":286,"org.easymock.tests2.ThreadingTest.testThreadSafe":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":208,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":342,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":229,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":404,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":373,"org.easymock.tests2.UsageConstraintsTest.any":60,"org.easymock.tests2.StubTest.stub":240,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":367,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":322,"org.easymock.tests.UsageExpectAndThrowTest.longType":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":290,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":366,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":254,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":128,"org.easymock.tests2.SerializationTest.testClass":32,"org.easymock.tests.LimitationsTest.mockNativeMethod":157,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":149,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":330,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":255,"org.easymock.tests2.NameTest.nameForMocksControl":260,"org.easymock.tests2.MockedExceptionTest.testMockedException":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":198,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":161,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":165,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":377,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":133,"org.easymock.tests.MockingTest.testNicePartialClassMocking":164,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":103,"org.easymock.tests2.CaptureTest.testCaptureLast":47,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":359,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":15,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":81,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":70,"org.easymock.tests.MockingTest.testTwoMocks":315,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":193,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":134,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":381,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":247,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":73,"org.easymock.samples.ExampleTest.removeNonExistingDocument":226,"org.easymock.tests.UsageStrictMockTest.differentMethods":7,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":364,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":415,"org.easymock.tests2.ConstraintsToStringTest.andToString":402,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":110,"org.easymock.tests2.MockBuilderTest.testCreateMockString":272,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":199,"org.easymock.tests.UsageExpectAndThrowTest.floatType":376,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":196,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":243,"org.easymock.tests.UsageVerifyTest.twoThrows":346,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":87,"org.easymock.samples.ExampleTest.voteAgainstRemoval":41,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":353,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":106,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":216,"org.easymock.tests2.UsageConstraintsTest.testNotNull":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":156,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":266,"org.easymock.tests2.UsageTest.defaultResetToNice":95,"org.easymock.samples.ExampleTest.voteAgainstRemovals":39,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":147,"org.easymock.tests.UsageVarargTest.differentLength":283,"org.easymock.tests2.CallbackTest.callback":261,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":405,"org.easymock.tests.UsageTest.openCallCountByLastCall":160,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":372,"org.easymock.tests.UsageCallCountTest.tooFewCalls":340,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":319,"org.easymock.tests.UsageThrowableTest.throwCheckedException":153,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":397,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":175,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":80,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":77,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":369,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":79,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":244,"org.easymock.tests.ObjectMethodsTest.testHashCode":392,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":412,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":112,"org.easymock.tests2.NameTest.nameForNiceMock":259,"org.easymock.tests2.DependencyTest.testInterfaceMocking":114,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":411,"org.easymock.samples.ExampleTest.addDocument":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":209,"org.easymock.tests2.DelegateToTest.testStubDelegate":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":213,"org.easymock.tests2.AnswerTest.stubAnswer":83,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":176,"org.easymock.tests.UsageVarargTest.varargLongAccepted":285,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":148,"org.easymock.tests.UsageExpectAndReturnTest.floatType":136,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":54,"org.easymock.tests2.ConstraintsToStringTest.orToString":399,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":191,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":68,"org.easymock.tests.UsageThrowableTest.noUpperLimit":275,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":56,"org.easymock.tests2.SerializationTest.test":33,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":232,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":135,"org.easymock.tests2.UsageConstraintsTest.testSame":58,"org.easymock.samples.SupportTest.addDocument":228,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":200,"org.easymock.tests.GenericTest.testPackageScope":177,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":335,"org.easymock.tests2.NameTest.nameForMock":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":144,"org.easymock.tests2.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":222,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":137,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":386,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":169,"org.easymock.tests2.MockedExceptionTest.testRealException":268,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":406,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":185,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":371,"org.easymock.tests2.NameTest.nameForStrictMock":258,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":273,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":102,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":17,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":130,"org.easymock.tests2.UsageStrictMockTest.range":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":74,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":117,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":204,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":414,"org.easymock.tests2.UsageConstraintsTest.testOr":14,"org.easymock.tests.UsageRangeTest.combination":166,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":99,"org.easymock.tests.UsageTest.wrongArguments":308,"org.easymock.tests2.MockBuilderTest.testWithConstructor":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":201,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":295,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":145,"org.easymock.tests.UsageVarargTest.varargShortAccepted":284,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":343,"org.easymock.tests2.UsageConstraintsTest.cmpTo":61,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":242,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":94,"org.easymock.tests2.CaptureTest.testCaptureFromStub":234,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":361,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":341,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":221,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":146,"org.easymock.tests2.UsageConstraintsTest.constraints":11,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":326,"org.easymock.samples.ExampleTest.addAndChangeDocument":227,"org.easymock.tests2.ConstraintsToStringTest.notToString":189,"org.easymock.tests.UsageStrictMockTest.testVerify":328,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":231,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":312,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":233,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":172,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":139,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":122,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":279}}]
