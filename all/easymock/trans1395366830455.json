[{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[20,21,22,23,24,25],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[20,21,22,23,24,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,24,42,43,44,45,46,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[6,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[50,51,52,53,54],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,27,81,28,29,82,83,84,85,86,87,56,88,57,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,1,2,3,4,113,114,115,116,117,5,118,119,120,19,121,122,123,124,125,126,127,128,129,26,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,34,35,150,151,152,153,36,37,154,155,39,40,41,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,24,42,171,43,44,172,9,10,11,12,13,14,173,174,175,176,177,178,51,52,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,16,227,228,17,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,45,46,259,260,47,48,261],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[262,263,264],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[265,266,267],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[269,269,270,270,27,100,5,118,119,121,122,123,124,129,130,131,133,134,135,140,141,142,156,157,158,159,160,42,226,227,228,230,244,245,246,247,248,249,250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[271,272,66,67,68,69,70,71,72,273,274,275,276,277,76,77,278,78,279,79,280,80,27,81,28,29,82,83,84,85,86,281,87,56,282,283,88,57,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,284,110,285,3,286,113,115,116,287,288,289,290,291,292,293,294,295,296,297,298,299,19,121,122,123,125,126,300,127,128,26,130,132,133,135,136,137,138,139,140,30,31,32,33,143,144,146,301,147,302,303,304,148,149,35,150,151,305,36,37,155,306,307,308,309,40,41,156,157,158,159,160,162,163,164,165,166,167,168,169,310,170,24,42,171,43,44,172,311,13,312,174,175,176,177,178,51,52,181,182,184,189,194,200,201,202,203,206,207,209,214,219,224,225,226,16,227,228,17,229,230,231,232,234,235,236,237,238,313,239,240,241,242,243,244,245,251,252,253,254,255,46,47,48,261],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[269,270,79,55,83,56,57,58,59,60,314,61,62,63,315,64,65,316,317,318,306,319,320,307,321,322,323,324,325,326,327,328,329,308,330,331,332,333,334,309,335,336],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[67,113,115,337,116,201,338],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[83,84,85],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,280,80,27,81,28,29,82,83,84,85,86,87,56,88,57,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,339,110,111,112,1,2,3,4,340,341,342,343,344,113,114,115,116,117,5,118,119,120,19,121,122,123,124,125,126,127,128,129,26,130,131,132,133,134,135,136,137,139,140,141,142,30,31,32,33,143,144,145,146,345,147,346,304,347,148,149,34,35,150,151,152,153,305,36,37,154,155,348,349,350,351,39,40,41,156,157,158,159,160,161,162,163,164,165,166,167,168,169,310,170,24,42,171,43,44,172,311,9,10,11,12,13,14,312,352,173,174,175,176,51,52,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,16,353,354,355,356,357,227,228,17,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,358,254,255,359,256,257,258,45,25,46,259,260,47,48,261],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[272,66,67,68,69,71,72,269,269,270,270,274,73,74,75,76,77,278,78,279,79,280,27,81,28,29,82,83,84,86,281,87,56,282,283,88,57,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,360,109,339,284,110,285,111,112,1,2,3,4,286,341,342,343,344,361,113,114,115,337,116,287,288,289,290,291,292,293,294,295,296,297,298,117,5,118,119,120,19,121,122,123,124,125,126,300,127,128,129,26,130,131,132,133,134,135,136,137,138,139,140,141,142,30,143,362,363,144,145,146,345,301,147,346,302,303,364,304,347,148,149,34,35,150,151,152,153,305,36,37,154,155,306,307,308,309,265,365,266,366,348,349,350,351,39,40,41,156,157,158,159,160,267,367,161,162,163,164,165,166,167,168,169,310,24,42,171,43,44,172,6,7,8,9,10,11,12,13,14,173,51,53,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,368,201,202,369,203,370,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,371,372,373,374,375,226,16,353,354,355,356,357,227,228,17,229,230,231,232,233,243,244,245,246,247,248,249,250,376,251,252,253,254,49,377,378,379,380,255,359,256,257,258,45,25,46,259,260,47,48,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[300],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[107,132,151,381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[136],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[74,75,382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[383,118,120,133,139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[262,263,264],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":19,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":258,"org.easymock.tests2.UsageTest.argumentsOrdered":37,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":12,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":151,"org.easymock.tests2.StubTest.stubWithReturnValue":5,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":63,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":273,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":139,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":188,"org.easymock.tests2.SerializationTest.testAllMockedMethod":85,"org.easymock.tests2.DelegateToTest.testReturnException":113,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":379,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":10,"org.easymock.tests.MockingTest.testPartialClassMocking":251,"org.easymock.samples.SupportTest.voteForRemovals":272,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":21,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":50,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":324,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":380,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":307,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":204,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":362,"org.easymock.tests.UsageExpectAndThrowTest.object":214,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":38,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":279,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":136,"org.easymock.tests2.DelegateToTest.testWrongClass":115,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":244,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":245,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":126,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":227,"org.easymock.tests2.UsageTest.wrongArguments":35,"org.easymock.samples.ConstructorCalledMockTest.testTax":269,"org.easymock.tests.UsageStrictMockTest.range":43,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":350,"org.easymock.samples.ExampleTest.answerVsDelegate":67,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":294,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":281,"org.easymock.tests2.UsageConstraintsTest.testNull":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":215,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":106,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":302,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":296,"org.easymock.tests2.CaptureTest.testPrimitive":92,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":316,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":223,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":15,"org.easymock.tests.UsageTest.moreThanOneArgument":45,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":47,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":349,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":248,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":22,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":366,"org.easymock.tests2.CaptureTest.testCaptureNone":97,"org.easymock.tests.UsageUnorderedTest.message":224,"org.easymock.tests.UsageVerifyTest.twoReturns":41,"org.easymock.tests.UsageVarargTest.varargByteAccepted":241,"org.easymock.tests2.ThreadingTest.testThreadSafe":73,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":371,"org.easymock.tests.UsageTest.argumentsOrdered":48,"org.easymock.tests.UsageVarargTest.varargIntAccepted":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":330,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":176,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":275,"org.easymock.tests2.CaptureTest.testCapture_2617107":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":156,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":345,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":229,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":346,"org.easymock.tests2.UsageConstraintsTest.any":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":338,"org.easymock.tests2.StubTest.stub":117,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":160,"org.easymock.tests.UsageExpectAndThrowTest.longType":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":11,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":262,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":381,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":81,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":286,"org.easymock.tests2.SerializationTest.testClass":83,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":278,"org.easymock.tests.LimitationsTest.mockNativeMethod":225,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":198,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":53,"org.easymock.tests2.AnswerTest.answer":143,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":344,"org.easymock.tests2.CaptureTest.testAnd":89,"org.easymock.tests2.UsageTest.strictResetToDefault":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":339,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":82,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":62,"org.easymock.tests2.NameTest.nameForMocksControl":33,"org.easymock.tests2.MockedExceptionTest.testMockedException":2,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":291,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":256,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":260,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":375,"org.easymock.tests2.DelegateToTest.testDelegate":116,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":253,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":208,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":103,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":303,"org.easymock.tests.MockingTest.testNicePartialClassMocking":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":219,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":108,"org.easymock.tests2.CaptureTest.testCaptureLast":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":13,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":161,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":57,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":357,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":137,"org.easymock.tests.MockingTest.testTwoMocks":376,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":367,"org.easymock.tests2.CaptureTest.testCapture1_2446744":93,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":179,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":217,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":342,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":212,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":36,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":141,"org.easymock.tests.UsageThrowableTest.throwError":162,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":199,"org.easymock.tests.UsageStrictMockTest.differentMethods":44,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":75,"org.easymock.tests2.MockBuilderTest.testCreateMockString":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":250,"org.easymock.tests.UsageExpectAndThrowTest.floatType":206,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":318,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":144,"org.easymock.tests.UsageVerifyTest.twoThrows":40,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":308,"org.easymock.samples.PartialClassMockTest.testGetArea":274,"org.easymock.tests2.CompareToTest.testLessOrEqual":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":157,"org.easymock.samples.ExampleTest.voteAgainstRemoval":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":365,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":266,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":205,"org.easymock.tests2.UsageTest.niceToStrict":150,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":60,"org.easymock.tests2.UsageConstraintsTest.testNotNull":140,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":1,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":169,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":147,"org.easymock.tests2.MockBuilderTest.testCreateMock":364,"org.easymock.tests2.UsageTest.defaultResetToNice":305,"org.easymock.samples.ExampleTest.voteAgainstRemovals":66,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":332,"org.easymock.tests.UsageVarargTest.differentLength":313,"org.easymock.tests2.CallbackTest.callback":86,"org.easymock.tests.UsageTest.openCallCountByLastCall":259,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":213,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":20,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":292,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":118,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":378,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":312,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":348,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":17,"org.easymock.tests.UsageCallCountTest.tooFewCalls":174,"org.easymock.tests.UsageOverloadedMethodTest.overloading":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":329,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":202,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":130,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":282,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":231,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":190,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":263,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":26,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":98,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":351,"org.easymock.tests.UsageThrowableTest.throwCheckedException":166,"org.easymock.tests2.EasyMockSupportClassTest.testAll":306,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":52,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":221,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":355,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":343,"org.easymock.tests2.CaptureTest.testCaptureAll":90,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":0,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":88,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":16,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":56,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":382,"org.easymock.tests2.UsageConstraintsTest.testMatches":131,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":283,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":249,"org.easymock.samples.ExampleTest.voteForRemovals":71,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":77,"org.easymock.tests2.NameTest.nameForNiceMock":32,"org.easymock.tests.UsageVarargTest.allKinds":243,"org.easymock.tests2.DependencyTest.testInterfaceMocking":78,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":356,"org.easymock.samples.BasicClassMockTest.testPrintContent":276,"org.easymock.samples.ExampleTest.addDocument":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":335,"org.easymock.tests2.DelegateToTest.testStubDelegate":114,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":168,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests2.AnswerTest.stubAnswer":145,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":14,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":42,"org.easymock.tests2.UsageConstraintsTest.greaterThan":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":319,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":359,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":285,"org.easymock.tests.UsageVarargTest.varargLongAccepted":240,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":172,"org.easymock.samples.ExampleTest.voteForRemoval":68,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":74,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":197,"org.easymock.tests.UsageExpectAndReturnTest.floatType":181,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":360,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":79,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":270,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":369,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":134,"org.easymock.tests.UsageThrowableTest.noUpperLimit":163,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":254,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":119,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":148,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":94,"org.easymock.tests2.SerializationTest.test":84,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":315,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":18,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":289,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":164,"org.easymock.tests2.UsageConstraintsTest.testSame":123,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":317,"org.easymock.samples.SupportTest.addDocument":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":9,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":361,"org.easymock.tests2.CaptureTest.testCaptureFirst":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":290,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":155,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":370,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":322,"org.easymock.tests.GenericTest.testPackageScope":51,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":76,"org.easymock.tests2.UsageTest.moreThanOneArgument":34,"org.easymock.tests2.CaptureTest.testCapture2_2446744":101,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":374,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":304,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":242,"org.easymock.tests.GenericTest.testBridgedEquals":54,"org.easymock.tests2.NameTest.nameForMock":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":177,"org.easymock.tests.UsageExpectAndReturnTest.longType":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":353,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":287,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":222,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":191,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":265,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":138,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":220,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":65,"org.easymock.tests2.UsageStrictMockTest.differentMethods":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":246,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":7,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":183,"org.easymock.tests.UsageCallCountTest.tooManyCalls":178,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":218,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":257,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":333,"org.easymock.tests2.MockedExceptionTest.testRealException":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":187,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":209,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":228,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":167,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":87,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":352,"org.easymock.tests2.NameTest.nameForStrictMock":31,"org.easymock.tests2.UsageConstraintsTest.testContains":129,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":3,"org.easymock.tests2.UsageConstraintsTest.testFind":121,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":233,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":111,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":107,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":310,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":112,"org.easymock.tests.UsageExpectAndReturnTest.object":189,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":135,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":109,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":301,"org.easymock.tests2.UsageStrictMockTest.range":28,"org.easymock.tests2.UsageConstraintsTest.lessThan":142,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":295,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":238,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":314,"org.easymock.tests.UsageTest.exactCallCountByLastCall":261,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":226,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":326,"org.easymock.tests2.CaptureTest.testCaptureRightOne":99,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":372,"org.easymock.tests2.UsageConstraintsTest.testOr":124,"org.easymock.tests.UsageRangeTest.combination":255,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":55,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":234,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":104,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":201,"org.easymock.tests.UsageTest.wrongArguments":46,"org.easymock.tests2.MockBuilderTest.testWithConstructor":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":323,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":358,"org.easymock.tests2.EasyMockSupportTest.testVerify":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":327,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":373,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":377,"org.easymock.tests.UsageVarargTest.varargShortAccepted":239,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":341,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":340,"org.easymock.tests2.UsageConstraintsTest.cmpTo":128,"org.easymock.tests.UsageVarargTest.varargCharAccepted":237,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":363,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":80,"org.easymock.tests2.UsageTest.openCallCountByLastCall":152,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":153,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":298,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":49,"org.easymock.tests2.CaptureTest.testCaptureFromStub":100,"org.easymock.tests.UsageTest.unexpectedCallWithArray":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":328,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":211,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":24,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":165,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":175,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":64,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":193,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":284,"org.easymock.tests2.UsageConstraintsTest.constraints":120,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":171,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":210,"org.easymock.samples.ExampleTest.addAndChangeDocument":72,"org.easymock.tests.UsageStrictMockTest.testVerify":311,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":6,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":309,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":354,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":95,"org.easymock.tests2.UsageTest.resumeIfFailure":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":158,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":185,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":293,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":235}}]
