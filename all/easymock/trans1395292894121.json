[{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[508,509,510],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[408],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[511,512],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:42","sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\n    java.util.concurrent.locks.ReentrantLock.lock();\n    try {\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n    } finally {\n        java.util.concurrent.locks.ReentrantLock.unlock();\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:153","failures":[24,27,28,29,30,31,32,167,305,306,307,308],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[33,435],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[365,437,513],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[71,72,79,82,123,210,514,253,254,257,258,362,487,493,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:81","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[268,274,416,417,418,420,422,423,424,427,441,442,443,445,447,448,449,452],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[398,399],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"failures":[515],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:243","failures":[7,14,15,16,17,18,22,74,80,82,83,86,87,88,89,91,93,127,161,162,168,169,170,171,214,215,217,222,223,231,232,233,234,235,236,239,240,242,243,244,246,247,248,249,250,267,273,275,277,278,280,284,311,312,313,314,315,316,319,323,324,325,343,345,346,347,348,350,351,352,360,362,363,383,429,432,434,435,439,456,459,469,475,480,481,500],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[387,406,409,516],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[1,2,3,7,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,57,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,204,205,206,207,208,209,210,213,214,215,217,221,222,223,224,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,271,272,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,305,306,307,308,309,310,311,312,313,314,315,316,317,319,322,323,324,325,329,330,331,332,339,341,342,343,344,345,346,347,348,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,421,428,429,432,433,434,435,438,439,440,446,456,459,469,475,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,499,500,502,503,504,505,506,507],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[517,365,366,367],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[511],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[518,519,520],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[300,304],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[390,392],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":390,"org.easymock.tests2.UsageTest.argumentsOrdered":494,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":251,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":378,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":51,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":489,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":274,"org.easymock.tests2.DelegateToTest.testReturnException":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":28,"org.easymock.tests.MockingTest.testPartialClassMocking":214,"org.easymock.tests.MockClassControlTest.testToString":97,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":328,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":60,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":463,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":459,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":129,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":481,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":203,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":397,"org.easymock.tests2.UsageTest.wrongArguments":487,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":22,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":452,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":262,"org.easymock.samples.ExampleTest.answerVsDelegate":276,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":38,"org.easymock.tests2.UsageConstraintsTest.testNull":393,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":219,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":314,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":102,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":377,"org.easymock.tests2.CaptureTest.testPrimitive":288,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":148,"org.easymock.tests.UsageTest.moreThanOneArgument":252,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":170,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":9,"org.easymock.tests.UsageTest.argumentsOrdered":258,"org.easymock.tests.UsageVarargTest.varargIntAccepted":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":14,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":428,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":426,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":335,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":18,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":187,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":520,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":446,"org.easymock.tests.ReplayStateInvalidUsageTest.times":111,"org.easymock.tests2.DependencyTest.testClassMocking":478,"org.easymock.tests2.AnswerTest.answer":502,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":58,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":357,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":35,"org.easymock.tests2.CaptureTest.testAnd":285,"org.easymock.tests2.UsageTest.strictResetToDefault":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":322,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":169,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":88,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":372,"org.easymock.tests2.DelegateToTest.testDelegate":386,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":13,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":186,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":144,"org.easymock.tests.LimitationsTest.mockFinalMethod":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":69,"org.easymock.tests2.DependencyTest.testClassMockingSupport":479,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":19,"org.easymock.tests2.CaptureTest.testCapture1_2446744":289,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":142,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":355,"org.easymock.tests.UsageThrowableTest.throwError":115,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":105,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":37,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":427,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":477,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":190,"org.easymock.samples.PartialClassMockTest.testGetArea":273,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":106,"org.easymock.tests.MockingTest.testInterfaceMocking":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":222,"org.easymock.tests2.UsageTest.niceToStrict":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":464,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":130,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":5,"org.easymock.tests2.ThreadingTest.testChangeDefault":340,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":41,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":432,"org.easymock.tests2.MockBuilderTest.testCreateMock":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":472,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":449,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":138,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":373,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":34,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":266,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":260,"org.easymock.tests.UsageOverloadedMethodTest.overloading":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":468,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":403,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":207,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":74,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":242,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":511,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":402,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":294,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":152,"org.easymock.tests2.EasyMockSupportClassTest.testAll":456,"org.easymock.tests.MockClassControlTest.testEquals":101,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":67,"org.easymock.tests2.CaptureTest.testCaptureAll":286,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":356,"org.easymock.tests.MockNameTest.defaultName":124,"org.easymock.tests2.UsageConstraintsTest.testMatches":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":171,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":103,"org.easymock.samples.ExampleTest.voteForRemovals":280,"org.easymock.tests.UsageVarargTest.allKinds":160,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":70,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":68,"org.easymock.samples.BasicClassMockTest.testPrintContent":270,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":121,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":358,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":423,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":32,"org.easymock.tests2.UsageConstraintsTest.greaterThan":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":457,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":87,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":325,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":191,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":230,"org.easymock.samples.ExampleTest.voteForRemoval":277,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":326,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":341,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":39,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":317,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":183,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":484,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":73,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":370,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":27,"org.easymock.tests2.CaptureTest.testCaptureFirst":298,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":371,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":496,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":210,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":238,"org.easymock.tests2.UsageTest.moreThanOneArgument":486,"org.easymock.tests2.CaptureTest.testCapture2_2446744":297,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":343,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":59,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":159,"org.easymock.tests.GenericTest.testBridgedEquals":94,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":180,"org.easymock.tests.UsageExpectAndReturnTest.longType":234,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":65,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":368,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":147,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":411,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":267,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":168,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":164,"org.easymock.tests.UsageCallCountTest.tooManyCalls":181,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":518,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":451,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":134,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":120,"org.easymock.tests.MockingTest.testNiceClassMocking":220,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":346,"org.easymock.tests.MockingTest.testClassMocking":212,"org.easymock.tests2.UsageConstraintsTest.testContains":401,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":174,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":307,"org.easymock.tests2.UsageConstraintsTest.testFind":392,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":76,"org.easymock.tests.MockTypeTest.fromEasyMockClass":36,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":499,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":77,"org.easymock.tests.UsageExpectAndReturnTest.object":241,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":376,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":154,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":3,"org.easymock.tests.UsageTest.exactCallCountByLastCall":259,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":46,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":10,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":6,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":501,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":149,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":247,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":206,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":417,"org.easymock.tests.MockClassControlTest.testHashCode":100,"org.easymock.tests2.EasyMockSupportTest.testVerify":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":466,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":519,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":11,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":204,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":354,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":482,"org.easymock.tests.UsageVarargTest.varargCharAccepted":153,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":64,"org.easymock.tests2.UsageTest.openCallCountByLastCall":490,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":509,"org.easymock.tests.DefaultClassInstantiatorTest.object":224,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":379,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":264,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":1,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":514,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":467,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":136,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":118,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":444,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":416,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":189,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":99,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":323,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":135,"org.easymock.tests.ReplayStateInvalidCallsTest.times":195,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":248,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":163,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":475,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":98,"org.easymock.tests2.UsageTest.resumeIfFailure":495,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":33,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":30,"org.easymock.tests2.StubTest.stubWithReturnValue":310,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":412,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":240,"org.easymock.tests2.SerializationTest.testAllMockedMethod":367,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":57,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":513,"org.easymock.samples.SupportTest.voteForRemovals":284,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":419,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":141,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":517,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":63,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":503,"org.easymock.tests.UsageExpectAndThrowTest.object":139,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":8,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":409,"org.easymock.tests2.DelegateToTest.testWrongClass":384,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":161,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":193,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":162,"org.easymock.tests.UsageStrictMockTest.range":82,"org.easymock.samples.ConstructorCalledMockTest.testTax":271,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":337,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":375,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":345,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":140,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":453,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":113,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":257,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":261,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":185,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":223,"org.easymock.tests2.CaptureTest.testCaptureNone":293,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":300,"org.easymock.tests.UsageUnorderedTest.message":123,"org.easymock.tests.UsageVerifyTest.twoReturns":72,"org.easymock.tests.UsageVarargTest.varargByteAccepted":158,"org.easymock.tests2.ThreadingTest.testThreadSafe":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":470,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":178,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":4,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":269,"org.easymock.tests2.CaptureTest.testCapture_2617107":287,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":61,"org.easymock.tests2.UsageConstraintsTest.any":399,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":110,"org.easymock.tests2.StubTest.stub":309,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":165,"org.easymock.tests.UsageExpectAndThrowTest.longType":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":62,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":228,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":109,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":361,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":421,"org.easymock.tests2.SerializationTest.testClass":365,"org.easymock.tests.LimitationsTest.mockNativeMethod":127,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":93,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":250,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":443,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":201,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":364,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":301,"org.easymock.tests2.NameTest.nameForMocksControl":332,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":445,"org.easymock.tests2.MockedExceptionTest.testMockedException":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":458,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":256,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":498,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":133,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":217,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":311,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":435,"org.easymock.tests.MockingTest.testNicePartialClassMocking":215,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":316,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":441,"org.easymock.tests2.CaptureTest.testCaptureLast":292,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":20,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":396,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":200,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":352,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":410,"org.easymock.tests.MockingTest.testTwoMocks":213,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":197,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":353,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":231,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":137,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":493,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":414,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":304,"org.easymock.samples.ExampleTest.removeNonExistingDocument":281,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":448,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":107,"org.easymock.tests.UsageStrictMockTest.differentMethods":83,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":418,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":226,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":303,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":342,"org.easymock.tests2.MockBuilderTest.testCreateMockString":440,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":460,"org.easymock.tests.UsageExpectAndThrowTest.floatType":131,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":455,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":505,"org.easymock.tests.UsageVerifyTest.twoThrows":71,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":469,"org.easymock.samples.ExampleTest.voteAgainstRemoval":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":52,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":221,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":324,"org.easymock.tests.LimitationsTest.privateConstructor":126,"org.easymock.tests2.UsageConstraintsTest.testNotNull":413,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":122,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":305,"org.easymock.tests2.UsageTest.defaultResetToNice":492,"org.easymock.samples.ExampleTest.voteAgainstRemovals":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":53,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":246,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":442,"org.easymock.tests.UsageVarargTest.differentLength":155,"org.easymock.tests2.CallbackTest.callback":483,"org.easymock.tests2.UsageConstraintsTest.equals":391,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":320,"org.easymock.tests.UsageTest.openCallCountByLastCall":255,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":387,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":24,"org.easymock.tests.UsageCallCountTest.tooFewCalls":176,"org.easymock.tests2.ConstraintsToStringTest.nullToString":515,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":263,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":302,"org.easymock.tests.UsageThrowableTest.throwCheckedException":119,"org.easymock.tests.MockingTest.testStrictClassMocking":211,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":167,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":447,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":347,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":112,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":350,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":507,"org.easymock.tests.ObjectMethodsTest.testHashCode":2,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":199,"org.easymock.tests2.NameTest.nameForNiceMock":331,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":344,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":194,"org.easymock.tests2.DependencyTest.testInterfaceMocking":480,"org.easymock.samples.ExampleTest.addDocument":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":476,"org.easymock.tests2.DelegateToTest.testStubDelegate":383,"org.easymock.tests2.AnswerTest.stubAnswer":506,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":80,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":436,"org.easymock.tests.UsageVarargTest.varargLongAccepted":157,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":50,"org.easymock.tests.UsageExpectAndReturnTest.floatType":233,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":249,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":500,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":272,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":425,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":407,"org.easymock.tests.UsageThrowableTest.noUpperLimit":116,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":208,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":388,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":333,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":290,"org.easymock.tests2.SerializationTest.test":366,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":512,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":225,"org.easymock.tests2.UsageConstraintsTest.testSame":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":232,"org.easymock.samples.SupportTest.addDocument":283,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":349,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":184,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":461,"org.easymock.tests.GenericTest.testPackageScope":91,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":45,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":424,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":218,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":182,"org.easymock.tests2.NameTest.nameForMock":329,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":243,"org.easymock.tests2.UsageStrictMockTest.differentMethods":363,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":321,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":235,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":143,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":0,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":89,"org.easymock.tests2.MockedExceptionTest.testRealException":308,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":55,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":54,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":360,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":23,"org.easymock.tests2.NameTest.nameForStrictMock":330,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":431,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":510,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":497,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":315,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":336,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":408,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":227,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":429,"org.easymock.tests2.UsageStrictMockTest.range":362,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":188,"org.easymock.tests2.UsageConstraintsTest.lessThan":415,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":49,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":465,"org.easymock.tests2.CaptureTest.testCaptureRightOne":295,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":299,"org.easymock.tests2.UsageConstraintsTest.testOr":395,"org.easymock.tests.UsageRangeTest.combination":86,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":312,"org.easymock.tests.UsageTest.wrongArguments":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":462,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":42,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":244,"org.easymock.tests.UsageVarargTest.varargShortAccepted":156,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":229,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":179,"org.easymock.tests2.UsageConstraintsTest.cmpTo":400,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":202,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":504,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":44,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":491,"org.easymock.tests2.CaptureTest.testCaptureFromStub":296,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":104,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":430,"org.easymock.tests.UsageTest.unexpectedCallWithArray":253,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":198,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":79,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":177,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":245,"org.easymock.tests2.UsageConstraintsTest.constraints":389,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":81,"org.easymock.samples.ExampleTest.addAndChangeDocument":282,"org.easymock.tests.UsageStrictMockTest.testVerify":85,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":268,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":78,"org.easymock.tests2.CompareToTest.testGreateThan":516,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":66,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":291,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":16,"org.easymock.tests.LimitationsTest.abstractClass":125,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":17,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":209,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":374}}]
