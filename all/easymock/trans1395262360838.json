[{"transplant":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[14,15,16,17,18,19,20,21,22],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,28,29,30,0,1,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:80","failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,22],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:161","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[104],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[23,24,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,87,120,121,25,26,27,28,29,30,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,0,1,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,4,5,6,7,8,9,10,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,31,32,33,34,35,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,36,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,37,256,257,258,259,260,261,88,262,263,264,265,89,266,267,38,39,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,90,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,40,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,18,19,403,404,13,405,406,407,91,408,93,94,409,410,95,96,97,20,98,411,21,99,100,412,102,413,414,415,416,417,418,419,420,421,104,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,103,443,41,444,445,446,447,448,449,450,451,452,453,454,455,456,457,42,458,43,459,460,461,462,463,464,44,45,46,47,48,49,50,51,52,53,54,55,56,57,465,466,467,468,469,470,471,472,473,474,475,476,477,58,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,59,60,61,62,494,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,22,495,496,497],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[44,46,54,61,62,64,66,67,69,79,84],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[44,46,47,48,49,50,51,53,498,54,55,57],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[404],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[199,259],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[14,15,16,499,17,18,19,20,21,22],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[499],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[500,443,501],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[333,334,408,502,503,412,444],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[194,454],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[131],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[23,25,26,29,1,31,32,33,34,35,38,39,320,321,322,323,324,333,333,334,334,40,364,55,59,60,63,64,65,66,72,74,75,77,78,84,85,86],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[461],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[504,505,506,507,508,501],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[232],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[509,22,495,496],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[117,120],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[14,15,16,499,17,18,19,20,21,22],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[149,150,305],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"failures":[510],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,2,3,4,11,12],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[509,22,495,496],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1080","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[245,438],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[23,24,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,87,120,121,25,26,27,28,29,30,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,0,1,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,4,5,6,7,8,9,10,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,31,32,33,34,35,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,36,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,37,256,257,258,259,260,261,88,262,263,264,265,89,266,267,38,39,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,90,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,40,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,18,19,403,404,13,405,406,407,91,408,93,94,409,410,95,96,97,20,98,411,21,99,100,412,102,413,414,415,416,417,418,419,420,421,104,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,103,443,41,444,445,446,447,448,449,450,451,452,453,454,455,456,457,42,458,43,459,460,461,462,463,464,44,45,46,47,48,49,50,51,52,53,54,55,56,57,465,466,467,468,469,470,471,472,473,474,475,476,477,58,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,59,60,61,62,494,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,22,495,496,497],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:157","sourceCode":"return (((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName()))) && (java.lang.StackTraceElement[][2].getMethodName().equals(\"invoke\"))","type":"CtReturnImpl"},"failures":[395,396],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":62,"org.easymock.tests2.UsageTest.argumentsOrdered":391,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":179,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":475,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":191,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":386,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":335,"org.easymock.tests2.DelegateToTest.testReturnException":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":253,"org.easymock.tests.MockingTest.testPartialClassMocking":245,"org.easymock.tests.MockClassControlTest.testToString":271,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":404,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":177,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":419,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":280,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":356,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":14,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":68,"org.easymock.tests2.UsageTest.wrongArguments":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":25,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":489,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":309,"org.easymock.samples.ExampleTest.answerVsDelegate":326,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":89,"org.easymock.tests2.UsageConstraintsTest.testNull":64,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":250,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":440,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":474,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":276,"org.easymock.tests2.CaptureTest.testPrimitive":47,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":29,"org.easymock.tests.UsageTest.moreThanOneArgument":180,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":299,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":439,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":322,"org.easymock.tests.UsageTest.argumentsOrdered":9,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":257,"org.easymock.tests.UsageVarargTest.varargIntAccepted":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":196,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":31,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":91,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":351,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":367,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":35,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":483,"org.easymock.tests.ReplayStateInvalidUsageTest.times":130,"org.easymock.tests2.DependencyTest.testClassMocking":353,"org.easymock.tests2.AnswerTest.answer":452,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":198,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":493,"org.easymock.tests2.CaptureTest.testAnd":44,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":263,"org.easymock.tests2.UsageTest.strictResetToDefault":382,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":446,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":409,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":469,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":302,"org.easymock.tests2.DelegateToTest.testDelegate":464,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":295,"org.easymock.tests.LimitationsTest.mockFinalMethod":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":213,"org.easymock.tests2.DependencyTest.testClassMockingSupport":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":173,"org.easymock.tests2.CaptureTest.testCapture1_2446744":48,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":443,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":293,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":491,"org.easymock.tests.UsageThrowableTest.throwError":145,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":124,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":265,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":121,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":352,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":436,"org.easymock.samples.PartialClassMockTest.testGetArea":90,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":125,"org.easymock.tests.MockingTest.testInterfaceMocking":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":32,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":423,"org.easymock.tests2.UsageTest.niceToStrict":385,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":281,"org.easymock.tests2.ThreadingTest.testChangeDefault":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":181,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":95,"org.easymock.tests2.MockBuilderTest.testCreateMock":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":431,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":486,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":11,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":289,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":470,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":262,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":107,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":108,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":307,"org.easymock.tests.UsageOverloadedMethodTest.overloading":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":427,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":74,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":217,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":164,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":277,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":73,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":53,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":224,"org.easymock.tests2.EasyMockSupportClassTest.testAll":416,"org.easymock.tests.MockClassControlTest.testEquals":275,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":119,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":297,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":503,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":492,"org.easymock.tests2.CaptureTest.testCaptureAll":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":211,"org.easymock.tests.MockNameTest.defaultName":268,"org.easymock.tests2.UsageConstraintsTest.testMatches":75,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":323,"org.easymock.samples.ExampleTest.voteForRemovals":330,"org.easymock.tests.UsageVarargTest.allKinds":36,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":304,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":212,"org.easymock.samples.BasicClassMockTest.testPrintContent":338,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":151,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":357,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":463,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":256,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":348,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":17,"org.easymock.tests2.UsageConstraintsTest.greaterThan":77,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":301,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":449,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":319,"org.easymock.samples.ExampleTest.voteForRemoval":327,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":450,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":399,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":266,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":368,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":103,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":208,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":381,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":467,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":252,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":459,"org.easymock.tests2.CaptureTest.testCaptureFirst":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":468,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":393,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":220,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":160,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":401,"org.easymock.tests2.CaptureTest.testCapture2_2446744":56,"org.easymock.tests2.UsageTest.moreThanOneArgument":383,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":199,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":231,"org.easymock.tests.GenericTest.testBridgedEquals":120,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":115,"org.easymock.tests.UsageExpectAndReturnTest.longType":156,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":465,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":209,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":101,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":298,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":82,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":241,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":296,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":320,"org.easymock.tests.UsageCallCountTest.tooManyCalls":116,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":432,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":488,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":285,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":150,"org.easymock.tests.MockingTest.testNiceClassMocking":251,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":373,"org.easymock.tests.MockingTest.testClassMocking":243,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":109,"org.easymock.tests2.UsageConstraintsTest.testContains":72,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":92,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":396,"org.easymock.tests2.UsageConstraintsTest.testFind":63,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":279,"org.easymock.tests.MockTypeTest.fromEasyMockClass":264,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":138,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":43,"org.easymock.tests.UsageExpectAndReturnTest.object":163,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":487,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":473,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":15,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":226,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":238,"org.easymock.tests.UsageTest.exactCallCountByLastCall":10,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":186,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":176,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":19,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":169,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":221,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":216,"org.easymock.tests.MockClassControlTest.testHashCode":274,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":342,"org.easymock.tests2.EasyMockSupportTest.testVerify":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":425,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":259,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":106,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":214,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":490,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":58,"org.easymock.tests.UsageVarargTest.varargCharAccepted":225,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":311,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":204,"org.easymock.tests2.UsageTest.openCallCountByLastCall":387,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":476,"org.easymock.tests.DefaultClassInstantiatorTest.object":312,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":105,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":236,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":510,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":426,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":287,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":148,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":481,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":341,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":447,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":273,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":286,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":170,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":434,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":272,"org.easymock.tests2.UsageTest.resumeIfFailure":392,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":88,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":255,"org.easymock.tests2.StubTest.stubWithReturnValue":364,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":20,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":162,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":83,"org.easymock.tests2.SerializationTest.testAllMockedMethod":496,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":197,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":12,"org.easymock.samples.SupportTest.voteForRemovals":340,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":344,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":292,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":509,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":203,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":453,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":178,"org.easymock.tests.UsageExpectAndThrowTest.object":290,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":80,"org.easymock.tests2.DelegateToTest.testWrongClass":462,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":38,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":39,"org.easymock.tests.UsageStrictMockTest.range":141,"org.easymock.samples.ConstructorCalledMockTest.testTax":333,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":370,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":472,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":372,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":291,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":413,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":132,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":8,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":308,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests2.CaptureTest.testCaptureNone":52,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":234,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":505,"org.easymock.tests.UsageUnorderedTest.message":30,"org.easymock.tests.UsageVerifyTest.twoReturns":306,"org.easymock.tests.UsageVarargTest.varargByteAccepted":230,"org.easymock.tests2.ThreadingTest.testThreadSafe":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":429,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":113,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":239,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":337,"org.easymock.tests2.CaptureTest.testCapture_2617107":46,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":201,"org.easymock.tests2.UsageConstraintsTest.any":70,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":129,"org.easymock.tests2.StubTest.stub":363,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":254,"org.easymock.tests.UsageExpectAndThrowTest.longType":283,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":316,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":128,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":359,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":346,"org.easymock.tests.LimitationsTest.mockNativeMethod":136,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":172,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":480,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":362,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":506,"org.easymock.tests2.NameTest.nameForMocksControl":407,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":482,"org.easymock.tests2.MockedExceptionTest.testMockedException":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":418,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":7,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":458,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":248,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":284,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":437,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":98,"org.easymock.tests.MockingTest.testNicePartialClassMocking":246,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":442,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":478,"org.easymock.tests2.CaptureTest.testCaptureLast":51,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":174,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":67,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":379,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":81,"org.easymock.tests.MockingTest.testTwoMocks":244,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":380,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":153,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":288,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":390,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":85,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":501,"org.easymock.samples.ExampleTest.removeNonExistingDocument":331,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":485,"org.easymock.tests.UsageStrictMockTest.differentMethods":142,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":126,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":343,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":508,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":314,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":400,"org.easymock.tests2.MockBuilderTest.testCreateMockString":102,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":420,"org.easymock.tests.UsageExpectAndThrowTest.floatType":282,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":415,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":455,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":403,"org.easymock.tests.UsageVerifyTest.twoThrows":305,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":428,"org.easymock.samples.ExampleTest.voteAgainstRemoval":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":192,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":232,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":448,"org.easymock.tests.LimitationsTest.privateConstructor":135,"org.easymock.tests2.UsageConstraintsTest.testNotNull":84,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":394,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":152,"org.easymock.tests2.UsageTest.defaultResetToNice":389,"org.easymock.samples.ExampleTest.voteAgainstRemovals":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":193,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":479,"org.easymock.tests.UsageVarargTest.differentLength":227,"org.easymock.tests2.CallbackTest.callback":497,"org.easymock.tests2.UsageConstraintsTest.equals":494,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":444,"org.easymock.tests.UsageTest.openCallCountByLastCall":6,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":27,"org.easymock.tests.UsageCallCountTest.tooFewCalls":111,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":310,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":507,"org.easymock.tests.UsageThrowableTest.throwCheckedException":149,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests.MockingTest.testStrictClassMocking":242,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":24,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":378,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":484,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":374,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":131,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":377,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":457,"org.easymock.tests.ObjectMethodsTest.testHashCode":237,"org.easymock.tests2.NameTest.nameForNiceMock":406,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":402,"org.easymock.tests2.DependencyTest.testInterfaceMocking":355,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":16,"org.easymock.samples.ExampleTest.addDocument":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":430,"org.easymock.tests2.DelegateToTest.testStubDelegate":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":435,"org.easymock.tests2.AnswerTest.stubAnswer":456,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":1,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":411,"org.easymock.tests.UsageVarargTest.varargLongAccepted":229,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":190,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":171,"org.easymock.tests.UsageExpectAndReturnTest.floatType":155,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":18,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":334,"org.easymock.tests.UsageThrowableTest.noUpperLimit":146,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":78,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":350,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":60,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":365,"org.easymock.tests2.SerializationTest.test":495,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":49,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":313,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":154,"org.easymock.tests2.UsageConstraintsTest.testSame":65,"org.easymock.samples.SupportTest.addDocument":339,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":376,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":421,"org.easymock.tests.GenericTest.testPackageScope":118,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":185,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":349,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":249,"org.easymock.tests2.NameTest.nameForMock":13,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":165,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":412,"org.easymock.tests2.UsageStrictMockTest.differentMethods":361,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":445,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":157,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":294,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":235,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":303,"org.easymock.tests2.MockedExceptionTest.testRealException":397,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":195,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":371,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":194,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":26,"org.easymock.tests2.NameTest.nameForStrictMock":405,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":410,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":42,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":441,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":369,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":79,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":315,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":93,"org.easymock.tests2.UsageStrictMockTest.range":360,"org.easymock.tests2.UsageConstraintsTest.lessThan":86,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":345,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":499,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":424,"org.easymock.tests2.CaptureTest.testCaptureRightOne":54,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":504,"org.easymock.tests2.UsageConstraintsTest.testOr":66,"org.easymock.tests.UsageRangeTest.combination":300,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":438,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests2.MockBuilderTest.testWithConstructor":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":104,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":270,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":182,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":166,"org.easymock.tests.UsageVarargTest.varargShortAccepted":228,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":317,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":114,"org.easymock.tests2.UsageConstraintsTest.cmpTo":71,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":184,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":388,"org.easymock.tests2.CaptureTest.testCaptureFromStub":55,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":123,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":94,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":112,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":502,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":167,"org.easymock.tests2.CaptureTest.testCapture":498,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":140,"org.easymock.tests2.UsageConstraintsTest.constraints":61,"org.easymock.samples.ExampleTest.addAndChangeDocument":332,"org.easymock.tests.UsageStrictMockTest.testVerify":144,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":336,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":210,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":33,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":159,"org.easymock.tests.LimitationsTest.abstractClass":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":34,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":219,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":471,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":222}}]
