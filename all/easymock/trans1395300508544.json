[{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,22,23,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,6,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,4,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,5,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,46,47,48,49,51,52,53,54,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,86,87,88,89,90,91,93,94,95,101,111,114,124,130,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,157,158,159,160,163,164,165,166,167,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,197,198,199,200,201,207,214,215,216,217,218,219,222,223,224,225,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,277,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,305,306,307,308,309,334,335,4,336,337,338,339,340,341,342,343,344,345,346,350,351,353,357,359,360,361,362,363,364,365,366,367,368,369,376,377,378,379,5,380,381,382,383,384,387,388,391,392,393,394,402,403,404,405,406,407,408,409,410,411,412,414,415,418,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:210","failures":[22,22,23,23,38,49,50,155,226],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[137,184],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[22,22,23,23,35,51,52,56,57,58,59,65,67,68,70,71,77,78,79,170,305,306,307,308,309,310,314,315,324,329,365,366,367,368,369,376,380,440,441,444,465,466,467],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[326],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[7,9,10,11,12,14,18,24,25,26,27,28,29,30,33,34,38,39,42,43,44,46,48,49,51,52,53,54,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,84,85,86,87,88,89,90,91,93,94,95,101,114,124,130,133,134,135,136,137,138,139,140,142,143,145,146,148,149,151,163,165,166,167,168,170,171,172,173,174,177,178,179,181,182,183,184,187,189,190,197,207,216,222,224,225,228,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,261,277,334,335,336,337,338,339,340,341,350,351,353,357,359,360,365,366,367,368,369,376,378,5,380,381,382,383,384,393,394,396,397,409,410,411,417,440,441,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,475,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,476,477,478,81,82,83,84,85,86,87,479,88,89,90,480,91,6,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,481,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,482,219,220,483,221,222,223,224,484,225,485,226,227,228,486,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,487,488,263,264,265,266,267,489,268,269,270,271,272,273,490,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,4,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,491,373,374,375,376,377,378,379,5,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[492,493,494],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[16,25,31,32,37,46,51,67,70,79,135,163,164,165,197,230,232,233,239,245,249,251,261,326,335,394,445,451,457,461,463],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[7,19,20,22,22,23,23,38,40,49,84,85,86,87,89,90,111,114,124,130,146,147,149,150,151,152,154,157,158,159,160,495,216,218,219,220,222,223,224,225,227,228,229,277,349,350,351,353,387,388,389,391],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:105","sourceCode":"if ((java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)) {\n    throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\");\n} ","type":"CtIfImpl"},"failures":[480],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[50,496,497,498,499,500,484],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[16,25,31,32,37,46,51,67,70,79,135,163,164,165,197,230,232,233,239,245,249,251,261,322,326,335,394,436,445,451,457,461,463],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[50,496,497,498,499,500,484],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,154,166,170,230,232,261,290,295,365,366,367,368,369,376,377,5,380,440,441,442,443,444,465,466],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[94,316],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[160],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[136,142,143,172,261,501,4,336,339,340,5,382,410,411],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[7,22,23,38,49,50,114,124,155,159,162,222,485,226,227,229,386,389],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[38,39,502],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[172,173,382,383],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[22,22,23,23,35,51,52,56,57,58,59,65,67,68,70,71,72,77,78,79,170,305,306,307,308,309,365,366,367,368,369,376,380,440,441,444,465,466],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[51,70,73,503],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[386,390],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":54,"org.easymock.tests2.UsageTest.argumentsOrdered":143,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":334,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":320,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":138,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":8,"org.easymock.tests2.DelegateToTest.testReturnException":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":292,"org.easymock.tests.MockingTest.testPartialClassMocking":350,"org.easymock.tests.MockClassControlTest.testToString":299,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":192,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":374,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":445,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":114,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":496,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":61,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":440,"org.easymock.tests2.UsageTest.wrongArguments":136,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":107,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":363,"org.easymock.samples.ExampleTest.answerVsDelegate":10,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":265,"org.easymock.tests2.UsageConstraintsTest.testNull":57,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":355,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":149,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":188,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":304,"org.easymock.tests2.CaptureTest.testPrimitive":27,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":444,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":464,"org.easymock.tests.UsageTest.moreThanOneArgument":335,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":307,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":395,"org.easymock.tests.UsageTest.argumentsOrdered":340,"org.easymock.tests.UsageVarargTest.varargIntAccepted":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":365,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":500,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":218,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":477,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":212,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":312,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":369,"org.easymock.tests.ReplayStateInvalidUsageTest.times":436,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":101,"org.easymock.tests2.DependencyTest.testClassMocking":175,"org.easymock.tests2.AnswerTest.answer":91,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":327,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":201,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":488,"org.easymock.tests2.CaptureTest.testAnd":24,"org.easymock.tests2.UsageTest.strictResetToDefault":134,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":183,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":359,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":399,"org.easymock.tests2.DelegateToTest.testDelegate":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":460,"org.easymock.tests.LimitationsTest.mockFinalMethod":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":295,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":346,"org.easymock.tests2.DependencyTest.testClassMockingSupport":176,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":425,"org.easymock.tests2.CaptureTest.testCapture1_2446744":28,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":153,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":458,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":199,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":430,"org.easymock.tests.UsageThrowableTest.throwError":253,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":264,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":491,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":132,"org.easymock.samples.PartialClassMockTest.testGetArea":7,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":431,"org.easymock.tests.MockingTest.testInterfaceMocking":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":366,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":420,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":473,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":446,"org.easymock.tests2.UsageTest.niceToStrict":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":310,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":222,"org.easymock.tests2.MockBuilderTest.testCreateMock":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":104,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":454,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":184,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":487,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":424,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":400,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":361,"org.easymock.tests.UsageOverloadedMethodTest.overloading":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":123,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":415,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":67,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":392,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":244,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":66,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":33,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":282,"org.easymock.tests2.EasyMockSupportClassTest.testAll":111,"org.easymock.tests.MockClassControlTest.testEquals":303,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":388,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":494,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":462,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":495,"org.easymock.tests2.CaptureTest.testCaptureAll":25,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":344,"org.easymock.tests.MockNameTest.defaultName":474,"org.easymock.tests2.UsageConstraintsTest.testMatches":68,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":428,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":308,"org.easymock.samples.ExampleTest.voteForRemovals":14,"org.easymock.tests.UsageVarargTest.allKinds":290,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":409,"org.easymock.samples.BasicClassMockTest.testPrintContent":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":345,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":259,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":168,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":296,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":490,"org.easymock.tests2.UsageConstraintsTest.greaterThan":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":112,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":358,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":160,"org.easymock.samples.ExampleTest.voteForRemoval":11,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":274,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":164,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":161,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":266,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":478,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":152,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":391,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":133,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":181,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":291,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":41,"org.easymock.tests2.CaptureTest.testCaptureFirst":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":182,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":145,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":418,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":240,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":166,"org.easymock.tests2.UsageTest.moreThanOneArgument":135,"org.easymock.tests2.CaptureTest.testCapture2_2446744":36,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":328,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":289,"org.easymock.tests.GenericTest.testBridgedEquals":390,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":407,"org.easymock.tests.UsageExpectAndReturnTest.longType":236,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":342,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":463,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":467,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":75,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":461,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":305,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":371,"org.easymock.tests.UsageCallCountTest.tooManyCalls":408,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":106,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":450,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":258,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":85,"org.easymock.tests.MockingTest.testNiceClassMocking":356,"org.easymock.tests.MockingTest.testClassMocking":348,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":401,"org.easymock.tests2.UsageConstraintsTest.testContains":65,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":216,"org.easymock.tests2.UsageConstraintsTest.testFind":56,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":394,"org.easymock.tests.MockTypeTest.fromEasyMockClass":263,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":232,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":378,"org.easymock.tests.UsageExpectAndReturnTest.object":243,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":105,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":497,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":284,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":471,"org.easymock.tests.UsageTest.exactCallCountByLastCall":341,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":315,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":396,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":373,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":50,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":249,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":279,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":414,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":203,"org.easymock.tests.MockClassControlTest.testHashCode":302,"org.easymock.tests2.EasyMockSupportTest.testVerify":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":121,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":492,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":397,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":423,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":412,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":198,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":481,"org.easymock.tests.UsageVarargTest.varargCharAccepted":283,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":489,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":333,"org.easymock.tests2.UsageTest.openCallCountByLastCall":139,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":190,"org.easymock.tests.DefaultClassInstantiatorTest.object":268,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":422,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":469,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":501,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":122,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":256,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":99,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":202,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":158,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":301,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":451,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":250,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":370,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":130,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":300,"org.easymock.tests2.UsageTest.resumeIfFailure":144,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":262,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":294,"org.easymock.tests2.StubTest.stubWithReturnValue":48,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":484,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":76,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":242,"org.easymock.tests2.SerializationTest.testAllMockedMethod":40,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":326,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.samples.SupportTest.voteForRemovals":18,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":386,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":205,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":457,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":502,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":332,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":6,"org.easymock.tests.UsageExpectAndThrowTest.object":455,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":375,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":73,"org.easymock.tests2.DelegateToTest.testWrongClass":44,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":465,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":466,"org.easymock.samples.ConstructorCalledMockTest.testTax":22,"org.easymock.tests.UsageStrictMockTest.range":382,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":82,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":186,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":84,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":456,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":224,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":108,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":339,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":362,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":421,"org.easymock.tests2.CaptureTest.testCaptureNone":32,"org.easymock.tests.UsageUnorderedTest.message":261,"org.easymock.tests.UsageVerifyTest.twoReturns":411,"org.easymock.tests.UsageVarargTest.varargByteAccepted":288,"org.easymock.tests2.ThreadingTest.testThreadSafe":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":125,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":405,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":472,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":19,"org.easymock.tests2.CaptureTest.testCapture_2617107":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":427,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":330,"org.easymock.tests2.UsageConstraintsTest.any":63,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":435,"org.easymock.tests2.StubTest.stub":47,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":372,"org.easymock.tests.UsageExpectAndThrowTest.longType":448,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":331,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":272,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":434,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":171,"org.easymock.tests2.SerializationTest.testClass":38,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":207,"org.easymock.tests.LimitationsTest.mockNativeMethod":277,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":389,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":252,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":98,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":174,"org.easymock.tests2.NameTest.nameForMocksControl":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":100,"org.easymock.tests2.MockedExceptionTest.testMockedException":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":113,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":338,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":449,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":231,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":353,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":146,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":225,"org.easymock.tests.MockingTest.testNicePartialClassMocking":351,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":151,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":96,"org.easymock.tests2.CaptureTest.testCaptureLast":31,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":426,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":60,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":90,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":74,"org.easymock.tests.MockingTest.testTwoMocks":349,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":480,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":453,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":142,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":78,"org.easymock.samples.ExampleTest.removeNonExistingDocument":15,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":432,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":103,"org.easymock.tests.UsageStrictMockTest.differentMethods":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":204,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":270,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":165,"org.easymock.tests2.MockBuilderTest.testCreateMockString":229,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":297,"org.easymock.tests.UsageExpectAndThrowTest.floatType":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":115,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":110,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":93,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":475,"org.easymock.tests.UsageVerifyTest.twoThrows":410,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":124,"org.easymock.samples.ExampleTest.voteAgainstRemoval":12,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":321,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":159,"org.easymock.tests.LimitationsTest.privateConstructor":276,"org.easymock.tests2.UsageConstraintsTest.testNotNull":77,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":214,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":260,"org.easymock.tests2.UsageTest.defaultResetToNice":141,"org.easymock.samples.ExampleTest.voteAgainstRemovals":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":322,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":97,"org.easymock.tests.UsageVarargTest.differentLength":285,"org.easymock.tests2.CallbackTest.callback":197,"org.easymock.tests2.UsageConstraintsTest.equals":55,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":155,"org.easymock.tests.UsageTest.openCallCountByLastCall":337,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":442,"org.easymock.tests.UsageCallCountTest.tooFewCalls":403,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":87,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":364,"org.easymock.tests.UsageThrowableTest.throwCheckedException":257,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests.MockingTest.testStrictClassMocking":347,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":89,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":377,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":102,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":86,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":437,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":88,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":95,"org.easymock.tests.ObjectMethodsTest.testHashCode":470,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":499,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":167,"org.easymock.tests2.NameTest.nameForNiceMock":195,"org.easymock.tests2.DependencyTest.testInterfaceMocking":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":498,"org.easymock.samples.ExampleTest.addDocument":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":131,"org.easymock.tests2.DelegateToTest.testStubDelegate":43,"org.easymock.tests2.AnswerTest.stubAnswer":94,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":380,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":485,"org.easymock.tests.UsageVarargTest.varargLongAccepted":287,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":319,"org.easymock.tests.UsageExpectAndReturnTest.floatType":235,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":251,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":49,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":23,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":416,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":211,"org.easymock.tests.UsageThrowableTest.noUpperLimit":254,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":52,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":80,"org.easymock.tests2.SerializationTest.test":39,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":29,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":269,"org.easymock.tests2.UsageConstraintsTest.testSame":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":234,"org.easymock.samples.SupportTest.addDocument":17,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":479,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":116,"org.easymock.tests.GenericTest.testPackageScope":387,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":314,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":210,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":354,"org.easymock.tests2.NameTest.nameForMock":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":245,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":486,"org.easymock.tests2.UsageStrictMockTest.differentMethods":173,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":156,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":237,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":459,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":468,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":360,"org.easymock.tests2.MockedExceptionTest.testRealException":217,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":267,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":323,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":441,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":439,"org.easymock.tests2.NameTest.nameForStrictMock":194,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":221,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":230,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":150,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":81,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":72,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":271,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":219,"org.easymock.tests2.UsageStrictMockTest.range":172,"org.easymock.tests2.UsageConstraintsTest.lessThan":79,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":206,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":120,"org.easymock.tests2.CaptureTest.testCaptureRightOne":34,"org.easymock.tests2.UsageConstraintsTest.testOr":59,"org.easymock.tests.UsageRangeTest.combination":357,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":147,"org.easymock.tests.UsageTest.wrongArguments":336,"org.easymock.tests2.MockBuilderTest.testWithConstructor":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":117,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":298,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":311,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":273,"org.easymock.tests.UsageVarargTest.varargShortAccepted":286,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":406,"org.easymock.tests2.UsageConstraintsTest.cmpTo":64,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":313,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":140,"org.easymock.tests2.CaptureTest.testCaptureFromStub":35,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":429,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":220,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":404,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":247,"org.easymock.tests2.UsageConstraintsTest.constraints":53,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":381,"org.easymock.samples.ExampleTest.addAndChangeDocument":16,"org.easymock.tests.UsageStrictMockTest.testVerify":385,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":21,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":379,"org.easymock.tests2.CompareToTest.testGreateThan":503,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":343,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":30,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":367,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":239,"org.easymock.tests.LimitationsTest.abstractClass":275,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":368,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":185,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":280}}]
