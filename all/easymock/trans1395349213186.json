[{"transplant":{"position":"org.easymock.internal.MocksControl:225","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:29","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResults>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[0,1],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,1,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:362","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[296,297,216,245,298,299],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[39,40,52,53,301,70,71,72,73,74,75,76,77,78,79,302,80,81,82,83,84,85,86,1,87,88,89,90,91,92,93,94,95,96,97,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,164,165,166,175,176,177,178,179,216,217,252,256,257,258,259,260,266,267,283,284,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,1,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[7,8,9,10,11,12,13,14,15,29,31,32,33,35,36,37,38,39,40,41,42,43,44,98,99,100,101,128,129,130,131,133,134,137,141,141,142,142,144,155,156,303,304,180,181,182,305,306,307,211,212,213,261],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[308,309,310],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:38","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(long.long, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[311,312,313,314,315,316],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[317,318,319,320,321,322],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[52,55,56,59,323,324,217,220,221,244,280,281,282],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[325,326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[296,297,216,245,298,299],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[327,328,329,330,331,332,7,8,333,9,11,12,14,334,15,29,33,38,41,42,43,44,98,99,100,101,141,141,142,142,144,180,181,305,211,212,213,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[327,328,335,329,330,331,332,7,336,8,333,337,9,10,11,12,338,13,14,334,339,15,29,31,32,33,35,36,37,38,39,340,341,40,41,42,43,342,343,44,344,345,346,347,348,349,98,350,351,99,352,353,354,355,356,357,358,359,360,100,361,362,363,364,365,101,366,367,128,129,130,131,133,134,135,136,137,141,141,142,142,144,155,156,368,303,369,370,371,372,373,304,180,300,181,182,305,306,374,375,307,211,212,213,376,317,318,319,320,308,321,322,377,378,261,379,380,381,382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[383,314,315],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[384],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[328,335,329,330,331,7,336,8,333,337,9,10,11,12,338,13,14,339,15,29,31,32,33,35,36,37,38,39,340,341,40,41,42,43,342,343,44,344,345,346,347,348,349,98,350,351,99,352,353,354,355,356,357,358,359,360,100,361,362,363,364,365,101,366,367,128,129,130,131,133,134,135,136,137,141,141,142,142,144,155,156,368,303,369,370,371,372,373,304,180,300,181,182,305,306,374,375,307,211,212,213,376,317,318,319,320,308,321,322,377,378,261,379,380,381,382],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"message"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[83],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[385],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[386],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[310],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":73,"org.easymock.tests2.UsageTest.argumentsOrdered":67,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":243,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":26,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":62,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":143,"org.easymock.tests2.DelegateToTest.testReturnException":46,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":263,"org.easymock.tests.MockingTest.testPartialClassMocking":211,"org.easymock.tests.MockClassControlTest.testToString":369,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":355,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":183,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":99,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":311,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":79,"org.easymock.tests2.UsageTest.wrongArguments":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":256,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":270,"org.easymock.samples.ExampleTest.answerVsDelegate":149,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":382,"org.easymock.tests2.UsageConstraintsTest.testNull":75,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":35,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":25,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":304,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":327,"org.easymock.tests2.CaptureTest.testPrimitive":112,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":260,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":202,"org.easymock.tests.UsageTest.moreThanOneArgument":244,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":168,"org.easymock.tests.UsageTest.argumentsOrdered":250,"org.easymock.tests.UsageVarargTest.varargIntAccepted":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":175,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":7,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":315,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":179,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":127,"org.easymock.tests2.AnswerTest.answer":2,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":126,"org.easymock.tests2.CaptureTest.testAnd":109,"org.easymock.tests2.UsageTest.strictResetToDefault":58,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":40,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":167,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":20,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":254,"org.easymock.tests2.DelegateToTest.testDelegate":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":198,"org.easymock.tests.LimitationsTest.mockFinalMethod":379,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":276,"org.easymock.tests2.CaptureTest.testCapture1_2446744":113,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":196,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":124,"org.easymock.tests.UsageThrowableTest.throwError":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":367,"org.easymock.samples.PartialClassMockTest.testGetArea":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":184,"org.easymock.tests2.UsageTest.niceToStrict":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":356,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":380,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":9,"org.easymock.tests2.MockBuilderTest.testCreateMock":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":363,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":192,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":296,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":21,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":268,"org.easymock.tests.UsageOverloadedMethodTest.overloading":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":365,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":173,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":84,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":234,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":277,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":83,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":309,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":118,"org.easymock.tests2.EasyMockSupportClassTest.testAll":98,"org.easymock.tests.MockClassControlTest.testEquals":373,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":182,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":200,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":328,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":125,"org.easymock.tests2.CaptureTest.testCaptureAll":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":274,"org.easymock.tests2.UsageConstraintsTest.testMatches":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":169,"org.easymock.samples.ExampleTest.voteForRemovals":153,"org.easymock.tests.UsageVarargTest.allKinds":295,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":280,"org.easymock.samples.BasicClassMockTest.testPrintContent":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":275,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":209,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":50,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":267,"org.easymock.tests2.UsageConstraintsTest.greaterThan":1,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":43,"org.easymock.samples.ExampleTest.voteForRemoval":150,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":322,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":105,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":342,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":334,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":38,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":180,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":57,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":338,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":18,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":262,"org.easymock.tests2.CaptureTest.testCaptureFirst":122,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":19,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":69,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":174,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":230,"org.easymock.tests2.CaptureTest.testCapture2_2446744":121,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":107,"org.easymock.tests2.UsageTest.moreThanOneArgument":59,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":14,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":294,"org.easymock.tests.GenericTest.testBridgedEquals":306,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":162,"org.easymock.tests.UsageExpectAndReturnTest.longType":226,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":16,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":272,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":201,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":339,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":91,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":166,"org.easymock.tests.UsageCallCountTest.tooManyCalls":163,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":364,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":231,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":208,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":129,"org.easymock.tests.MockingTest.testNiceClassMocking":376,"org.easymock.tests.MockingTest.testClassMocking":375,"org.easymock.tests2.UsageConstraintsTest.testContains":82,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":336,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":137,"org.easymock.tests2.UsageConstraintsTest.testFind":74,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":279,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":97,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":214,"org.easymock.tests.UsageExpectAndReturnTest.object":233,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":39,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":24,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":312,"org.easymock.tests.UsageTest.exactCallCountByLastCall":251,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":164,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":344,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":239,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":285,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":172,"org.easymock.tests.MockClassControlTest.testHashCode":372,"org.easymock.tests2.EasyMockSupportTest.testVerify":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":358,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":171,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":123,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":301,"org.easymock.tests.UsageVarargTest.varargCharAccepted":288,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":51,"org.easymock.tests2.UsageTest.openCallCountByLastCall":63,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":27,"org.easymock.tests.DefaultClassInstantiatorTest.object":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":359,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":206,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":331,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":326,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":41,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":371,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":189,"org.easymock.tests.CapturesMatcherTest.test":222,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":101,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":370,"org.easymock.tests2.UsageTest.resumeIfFailure":68,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":265,"org.easymock.tests2.StubTest.stubWithReturnValue":140,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":92,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":232,"org.easymock.tests2.SerializationTest.testAllMockedMethod":31,"org.easymock.samples.SupportTest.voteForRemovals":147,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":297,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":300,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":325,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":195,"org.easymock.tests.UsageExpectAndThrowTest.object":193,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":89,"org.easymock.tests2.DelegateToTest.testWrongClass":48,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":283,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":284,"org.easymock.samples.ConstructorCalledMockTest.testTax":141,"org.easymock.tests.UsageStrictMockTest.range":219,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":23,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":194,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":11,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":269,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":298,"org.easymock.tests2.CaptureTest.testCaptureNone":117,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":385,"org.easymock.tests.UsageUnorderedTest.message":252,"org.easymock.tests.UsageVerifyTest.twoReturns":282,"org.easymock.tests.UsageVarargTest.varargByteAccepted":293,"org.easymock.tests2.ThreadingTest.testThreadSafe":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":361,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":160,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":155,"org.easymock.tests2.CaptureTest.testCapture_2617107":111,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":324,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":259,"org.easymock.tests2.UsageConstraintsTest.any":80,"org.easymock.tests2.StubTest.stub":139,"org.easymock.tests.UsageExpectAndThrowTest.longType":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":264,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":308,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":53,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":45,"org.easymock.tests2.SerializationTest.testClass":29,"org.easymock.tests.LimitationsTest.mockNativeMethod":261,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":242,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":305,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":330,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":56,"org.easymock.tests2.MockedExceptionTest.testMockedException":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":351,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":248,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":187,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":213,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":32,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":12,"org.easymock.tests.MockingTest.testNicePartialClassMocking":212,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":37,"org.easymock.tests2.CaptureTest.testCaptureLast":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":383,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":134,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":78,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":90,"org.easymock.tests.MockingTest.testTwoMocks":307,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":191,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":66,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":94,"org.easymock.tests.UsageStrictMockTest.differentMethods":220,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":319,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":106,"org.easymock.tests2.MockBuilderTest.testCreateMockString":15,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":368,"org.easymock.tests.UsageExpectAndThrowTest.floatType":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":352,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":349,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":3,"org.easymock.tests.UsageVerifyTest.twoThrows":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":100,"org.easymock.samples.ExampleTest.voteAgainstRemoval":151,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":42,"org.easymock.tests.LimitationsTest.privateConstructor":378,"org.easymock.tests2.UsageConstraintsTest.testNotNull":93,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":135,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":210,"org.easymock.tests2.UsageTest.defaultResetToNice":65,"org.easymock.samples.ExampleTest.voteAgainstRemovals":148,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":238,"org.easymock.tests.UsageVarargTest.differentLength":290,"org.easymock.tests2.CallbackTest.callback":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":340,"org.easymock.tests.UsageTest.openCallCountByLastCall":247,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":258,"org.easymock.tests.UsageCallCountTest.tooFewCalls":158,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":271,"org.easymock.tests.UsageThrowableTest.throwCheckedException":207,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":299,"org.easymock.tests.MockingTest.testStrictClassMocking":374,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":165,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":133,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":130,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":132,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":5,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":314,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":108,"org.easymock.tests2.DependencyTest.testInterfaceMocking":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":313,"org.easymock.samples.ExampleTest.addDocument":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":362,"org.easymock.tests2.DelegateToTest.testStubDelegate":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.AnswerTest.stubAnswer":4,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":217,"org.easymock.tests.UsageVarargTest.varargLongAccepted":292,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":221,"org.easymock.tests.UsageExpectAndReturnTest.floatType":225,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":241,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":44,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":142,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":87,"org.easymock.tests.UsageThrowableTest.noUpperLimit":204,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":71,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":345,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":114,"org.easymock.tests2.SerializationTest.test":30,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":310,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":318,"org.easymock.tests2.UsageConstraintsTest.testSame":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":224,"org.easymock.samples.SupportTest.addDocument":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":353,"org.easymock.tests.GenericTest.testPackageScope":181,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":235,"org.easymock.tests2.UsageStrictMockTest.differentMethods":55,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":341,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":227,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":197,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":255,"org.easymock.tests2.MockedExceptionTest.testRealException":138,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":386,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":257,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":337,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":96,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":36,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":346,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":88,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":320,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":8,"org.easymock.tests2.UsageStrictMockTest.range":54,"org.easymock.tests2.UsageConstraintsTest.lessThan":95,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":335,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":332,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":17,"org.easymock.tests2.CaptureTest.testCaptureRightOne":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":357,"org.easymock.tests2.UsageConstraintsTest.testOr":77,"org.easymock.tests.UsageRangeTest.combination":253,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":33,"org.easymock.tests.UsageTest.wrongArguments":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":354,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":228,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":236,"org.easymock.tests.UsageVarargTest.varargShortAccepted":291,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":321,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":161,"org.easymock.tests2.UsageConstraintsTest.cmpTo":81,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":64,"org.easymock.tests2.CaptureTest.testCaptureFromStub":120,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":333,"org.easymock.tests.UsageTest.unexpectedCallWithArray":245,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":216,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":159,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":384,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":237,"org.easymock.tests2.UsageConstraintsTest.constraints":72,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":218,"org.easymock.samples.ExampleTest.addAndChangeDocument":154,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":145,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":215,"org.easymock.tests2.CompareToTest.testGreateThan":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":273,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":177,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":329,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":229,"org.easymock.tests.LimitationsTest.abstractClass":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":178,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":22,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":286}}]
