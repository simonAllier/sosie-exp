[{"transplant":{"position":"org.easymock.EasyMock:1039","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:595","sourceCode":"org.easymock.IMocksControl.resetToStrict()","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[17,18,19,20],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[21,22,23,24],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[25,26],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[27,28,29,30,0,1,2,3,31,32,33,4,34,5,6,7,12,35,36,37,13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[38],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[39,40,41],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[1,31,32,33,42,4,34,6,43,35,36,37,14,15,44],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:551","sourceCode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\n    org.easymock.IMocksControl.reset();\n}","type":"CtForEachImpl"},"failures":[63,64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:229","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[91],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[54],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[93,94,95,96,97,16,98,99,100,63,101,102,21,103,104,105,106,107,108,109,110,17,111,112,113,114,18,115,116,22,117,91,118,119,23,120,121,19,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,45,48,157,0,1,2,158,159,160,161,70,162,26,3,163,164,165,166,167,168,169,170,82,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,5,6,7,215,12,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,13,15,239,240,241,242],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[243],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[244,245,246,247,248,249,250,251,252,127,253,157,254,255,256],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:244","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[257,258,259,260,34,43],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:47","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[93,94,95,96,97,16,98,100,63,101,102,64,21,103,104,105,106,107,108,109,110,17,111,112,113,114,18,115,116,22,117,91,118,119,261,23,120,121,19,128,262,129,130,131,132,133,134,135,139,140,141,142,143,263,144,264,265,145,146,266,147,148,267,268,149,150,151,152,269,153,154,155,156,270,45,46,47,48,49,271,0,272,1,2,273,158,70,162,26,3,163,274,164,165,32,167,168,169,275,170,276,82,277,278,279,171,174,175,280,281,89,90,282,179,180,283,181,182,284,183,285,184,286,185,186,187,188,189,190,191,192,193,194,195,197,198,199,287,288,289,290,291,292,293,294,295,296,200,297,298,202,204,205,206,50,207,208,51,299,209,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,210,211,330,331,212,4,332,5,333,6,7,334,335,215,12,216,217,36,218,57,58,59,60,61,62,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,13,14,15,336,337,338,339,340,341,342,343],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[344,345,244,245,246,247,248,249,127,157,254,346,347,348,158,349,350,159,351,352,353,354,355,356,357,358,359,160,360,361,362,363,364,161,365,366,173,177,367,255,256],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[368],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[93,94,95,96,97,16,98,99,100,63,101,102,64,21,103,104,105,106,107,108,109,110,17,111,112,113,114,18,115,116,22,117,91,118,119,261,23,120,121,19,369,122,123,370,124,125,371,126,372,127,128,262,129,130,131,132,133,134,373,135,38,136,137,138,374,375,376,377,139,140,141,142,143,263,144,264,265,145,146,266,147,148,267,268,149,150,151,152,269,153,154,155,156,270,45,46,47,48,49,157,378,271,0,272,1,2,273,158,159,160,161,70,162,26,3,31,163,274,164,165,166,32,33,167,168,169,275,170,276,82,277,278,279,171,172,173,174,175,176,177,280,281,255,256,89,178,90,282,179,180,283,181,182,284,183,285,184,286,185,186,187,188,189,190,191,192,193,194,195,197,198,199,287,288,289,290,291,379,292,293,294,295,296,200,297,202,204,205,206,50,207,208,51,299,209,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,324,325,326,327,380,328,329,210,211,212,4,381,382,383,384,385,386,332,34,5,333,6,7,334,335,215,12,43,35,216,217,36,37,218,57,58,59,60,61,62,387,388,389,390,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,13,14,15,336,337,338,339,340,239,240,241,341,342,343,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[19,391],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[106,107],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[369,392,122,393,123,370,124,125,371,126,394,372,127,262,129,130,132,133,134,373,135,38,136,137,138,395,396,397,48,157,158,159,160,161,171,172,173,174,176,177,280,281,255,255,256,256,178,200,297,201,398,399,400,212,335,401,239,240,241],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[246,247,251,127,402,403,404,405,406,407,408,157,254],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[409],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[410,411,412],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[413],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[344,345,244,245,246,247,248,249,127,157,254,346,347,348,158,349,350,159,351,352,353,354,355,356,357,358,359,160,360,361,362,363,364,161,365,366,173,177,367,255,256],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[114],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":105,"org.easymock.tests2.UsageTest.argumentsOrdered":33,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":215,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":101,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":83,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":274,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":89,"org.easymock.tests2.DelegateToTest.testReturnException":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":58,"org.easymock.tests.MockingTest.testPartialClassMocking":239,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":302,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":8,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":403,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":17,"org.easymock.tests2.UsageTest.wrongArguments":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":207,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":389,"org.easymock.samples.ExampleTest.answerVsDelegate":283,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":400,"org.easymock.tests2.UsageConstraintsTest.testNull":107,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":132,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":63,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":323,"org.easymock.tests2.CaptureTest.testPrimitive":147,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":209,"org.easymock.tests.UsageTest.moreThanOneArgument":12,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":321,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":131,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":338,"org.easymock.tests.UsageTest.argumentsOrdered":37,"org.easymock.tests.UsageVarargTest.varargIntAccepted":289,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":191,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":369,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":87,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":195,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":70,"org.easymock.tests2.AnswerTest.answer":169,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":368,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":377,"org.easymock.tests2.CaptureTest.testAnd":145,"org.easymock.tests2.UsageTest.strictResetToDefault":26,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":38,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":97,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":204,"org.easymock.tests2.DelegateToTest.testDelegate":265,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":385,"org.easymock.tests2.CaptureTest.testCapture1_2446744":148,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":40,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":315,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":375,"org.easymock.tests.UsageThrowableTest.throwError":184,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":340,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":250,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":366,"org.easymock.samples.PartialClassMockTest.testGetArea":178,"org.easymock.tests2.CompareToTest.testLessOrEqual":24,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":192,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":213,"org.easymock.tests2.UsageTest.niceToStrict":163,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":355,"org.easymock.tests2.ThreadingTest.testChangeDefault":41,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":123,"org.easymock.tests2.MockBuilderTest.testCreateMock":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":362,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":73,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":257,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":311,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":16,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":387,"org.easymock.tests.UsageOverloadedMethodTest.overloading":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":364,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":18,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":343,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":230,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":411,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":114,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":151,"org.easymock.tests2.EasyMockSupportClassTest.testAll":158,"org.easymock.tests.MockClassControlTest.testEquals":322,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":297,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":319,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":395,"org.easymock.tests2.CaptureTest.testCaptureAll":146,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":376,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":383,"org.easymock.tests2.UsageConstraintsTest.testMatches":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":339,"org.easymock.samples.ExampleTest.voteForRemovals":183,"org.easymock.tests.UsageVarargTest.allKinds":296,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":384,"org.easymock.samples.BasicClassMockTest.testPrintContent":281,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":189,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":84,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":408,"org.easymock.tests2.UsageConstraintsTest.greaterThan":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":349,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":203,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":138,"org.easymock.samples.ExampleTest.voteForRemoval":181,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":140,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":373,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":162,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":335,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":95,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":347,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":57,"org.easymock.tests2.CaptureTest.testCaptureFirst":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":96,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":44,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":226,"org.easymock.tests2.CaptureTest.testCapture2_2446744":153,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":142,"org.easymock.tests2.UsageTest.moreThanOneArgument":3,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":126,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":295,"org.easymock.tests.GenericTest.testBridgedEquals":298,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":328,"org.easymock.tests.UsageExpectAndReturnTest.longType":222,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":381,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":394,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":320,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":261,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":318,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":55,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":336,"org.easymock.tests.UsageCallCountTest.tooManyCalls":329,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":363,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":307,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":188,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":172,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":392,"org.easymock.tests2.UsageConstraintsTest.testContains":113,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":48,"org.easymock.tests2.UsageConstraintsTest.testFind":106,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":199,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":386,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":278,"org.easymock.tests.UsageExpectAndReturnTest.object":229,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":100,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":404,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":291,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":301,"org.easymock.tests.UsageTest.exactCallCountByLastCall":218,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":206,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":330,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":254,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":235,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":78,"org.easymock.tests2.EasyMockSupportTest.testVerify":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":357,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":331,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":341,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":374,"org.easymock.tests.UsageVarargTest.varargCharAccepted":290,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":271,"org.easymock.tests2.UsageTest.openCallCountByLastCall":164,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":102,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":42,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":358,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":68,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":77,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":136,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":236,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":161,"org.easymock.tests2.UsageTest.resumeIfFailure":167,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":60,"org.easymock.tests2.StubTest.stubWithReturnValue":45,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":246,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":23,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":228,"org.easymock.tests2.SerializationTest.testAllMockedMethod":262,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":252,"org.easymock.samples.SupportTest.voteForRemovals":179,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":258,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":314,"org.easymock.tests.UsageExpectAndThrowTest.object":312,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":118,"org.easymock.tests2.DelegateToTest.testWrongClass":264,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":210,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":211,"org.easymock.tests.UsageStrictMockTest.range":6,"org.easymock.samples.ConstructorCalledMockTest.testTax":255,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":99,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":171,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":313,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":124,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":36,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":388,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":259,"org.easymock.tests2.CaptureTest.testCaptureNone":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":214,"org.easymock.tests.UsageUnorderedTest.message":4,"org.easymock.tests.UsageVerifyTest.twoReturns":15,"org.easymock.tests.UsageVarargTest.varargByteAccepted":294,"org.easymock.tests2.ThreadingTest.testThreadSafe":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":360,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":327,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":280,"org.easymock.tests2.CaptureTest.testCapture_2617107":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":299,"org.easymock.tests2.UsageConstraintsTest.any":111,"org.easymock.tests2.StubTest.stub":270,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":59,"org.easymock.tests.UsageExpectAndThrowTest.longType":305,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":410,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":272,"org.easymock.tests2.SerializationTest.testClass":127,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":82,"org.easymock.tests.LimitationsTest.mockNativeMethod":212,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":201,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":238,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":397,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":67,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":273,"org.easymock.tests2.NameTest.nameForMocksControl":30,"org.easymock.tests2.MockedExceptionTest.testMockedException":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":350,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":217,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":241,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":306,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":129,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":125,"org.easymock.tests.MockingTest.testNicePartialClassMocking":240,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":134,"org.easymock.tests2.CompareToTest.testNotComparable":409,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":402,"org.easymock.tests2.CaptureTest.testCaptureLast":149,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":65,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":177,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":110,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":119,"org.easymock.tests.MockingTest.testTwoMocks":401,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":367,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":310,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":121,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":39,"org.easymock.tests.UsageStrictMockTest.differentMethods":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":72,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":79,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":141,"org.easymock.tests2.MockBuilderTest.testCreateMockString":372,"org.easymock.tests.UsageExpectAndThrowTest.floatType":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":351,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":348,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":275,"org.easymock.tests.UsageVerifyTest.twoThrows":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":160,"org.easymock.samples.ExampleTest.voteAgainstRemoval":182,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":137,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":345,"org.easymock.tests2.UsageConstraintsTest.testNotNull":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":190,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":46,"org.easymock.tests2.UsageTest.defaultResetToNice":166,"org.easymock.samples.ExampleTest.voteAgainstRemovals":180,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":234,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":66,"org.easymock.tests.UsageVarargTest.differentLength":379,"org.easymock.tests2.CallbackTest.callback":279,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":253,"org.easymock.tests.UsageTest.openCallCountByLastCall":216,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":51,"org.easymock.tests.UsageCallCountTest.tooFewCalls":325,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":174,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":390,"org.easymock.tests.UsageThrowableTest.throwCheckedException":187,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":260,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":176,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":50,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":173,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":71,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":175,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":276,"org.easymock.tests2.CompareToTest.testGreateOrEqual":20,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":407,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":143,"org.easymock.tests2.NameTest.nameForNiceMock":29,"org.easymock.tests2.DependencyTest.testInterfaceMocking":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":405,"org.easymock.samples.ExampleTest.addDocument":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":361,"org.easymock.tests2.DelegateToTest.testStubDelegate":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":365,"org.easymock.tests2.AnswerTest.stubAnswer":170,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":5,"org.easymock.tests.UsageVarargTest.varargLongAccepted":293,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":334,"org.easymock.tests.UsageExpectAndReturnTest.floatType":221,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":237,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":157,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":256,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":86,"org.easymock.tests.UsageThrowableTest.noUpperLimit":286,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":103,"org.easymock.tests2.SerializationTest.test":128,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":267,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":412,"org.easymock.tests2.UsageConstraintsTest.testSame":108,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":220,"org.easymock.samples.SupportTest.addDocument":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":352,"org.easymock.tests.GenericTest.testPackageScope":200,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":85,"org.easymock.tests2.NameTest.nameForMock":27,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":231,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":249,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":25,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":316,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":300,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":205,"org.easymock.tests2.MockedExceptionTest.testRealException":49,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":251,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":208,"org.easymock.tests2.NameTest.nameForStrictMock":28,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":277,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":133,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":9,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":91,"org.easymock.tests.ErrorMessageTest.testGetters":10,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":122,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":81,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":406,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":94,"org.easymock.tests2.CaptureTest.testCaptureRightOne":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":356,"org.easymock.tests2.UsageConstraintsTest.testOr":109,"org.easymock.tests.UsageRangeTest.combination":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":130,"org.easymock.tests.UsageTest.wrongArguments":35,"org.easymock.tests2.MockBuilderTest.testWithConstructor":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":353,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":398,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":232,"org.easymock.tests.UsageVarargTest.varargShortAccepted":292,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":380,"org.easymock.tests2.UsageConstraintsTest.cmpTo":112,"org.easymock.tests2.CompareToTest.testLessThan":391,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":165,"org.easymock.tests2.CaptureTest.testCaptureFromStub":269,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":393,"org.easymock.tests.UsageTest.unexpectedCallWithArray":43,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":34,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":326,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":248,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":233,"org.easymock.tests2.CaptureTest.testCapture":92,"org.easymock.tests2.UsageConstraintsTest.constraints":104,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":333,"org.easymock.samples.ExampleTest.addAndChangeDocument":285,"org.easymock.tests2.ConstraintsToStringTest.containsToString":413,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":90,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":332,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":382,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":268,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":193,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":194,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":98,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":11,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":288}}]
