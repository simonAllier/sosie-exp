[{"transplantationPoint":{"position":"org.easymock.EasyMock:1051","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:720","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:708","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[2,2,3,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[13,14,15,16],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"failures":[17,18,19,20,21,22,23,24,2,3,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,0,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,4,125,126,127,128,129,130,131,5,6,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,11,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,13,14,15,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,1,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1976","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"shouldFillInStackTrace"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[199],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[96,98,99,100,101,102,103,105,513,106,107,109],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:48","failures":[17,18,19,20,22,24,2,2,3,3,26,29,34,35,42,44,47,49,50,61,68,69,70,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,0,92,93,94,95,96,97,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,127,128,129,5,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,152,155,157,158,160,162,163,164,166,168,169,170,173,174,175,176,177,178,184,191,192,193,194,196,197,198,13,14,203,206,216,222,236,237,238,239,240,241,242,1,243,249,251,253,254,255,256,257,268,270,271,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,307,308,309,310,311,313,331,337,342,343,345,349,350,351,352,353,354,371,375,402,403,404,405,406,409,410,413,426,427,428,429,430,431,433,434,435,436,437,438,439,440,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,507,508,510],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[127,131,152,160],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[252],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[18,42,44,110,112,113,115,242,328,505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[2,2,3,3,26,117,122,127,128,129,5,514,151,152,153,155,157,158,160,515,161,13,203,206,216,222,516,517,518,519,520,249,251,342,343,345,371,433],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[17,19,20,22,26,29,34,35,47,49,50,116,117,118,119,120,121,124,127,128,129,5,136,152,155,157,158,160,191,192,193,194,196,197,198,203,206,216,222,238,253,254,255,256,268,270,271,274,275,276,277,278,279,282,283,285,286,287,289,290,291,292,293,300,301,302,303,342,343,345,371,426,427,428,429,430,434,439,440],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[17,19,20,22,26,29,34,35,47,49,50,61,68,69,70,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,0,92,93,94,95,96,97,99,100,103,104,105,106,108,109,110,114,116,117,118,119,120,121,124,128,5,132,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,155,157,158,162,163,164,166,168,169,173,174,184,191,192,193,194,196,197,198,13,14,203,206,216,222,238,243,249,268,270,271,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,300,302,303,307,309,310,342,343,345,352,353,354,371,405,406,409,410,413,426,427,428,429,430,434,435,438,439,440,489,491,492,493,494,495,496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"lastResult"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[521],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[24,42,44,68,84,87,95,97,103,104,109,132,134,135,164,241,242,274,280,286,290,292,327,331,354,390,406,468,474,480,484,486,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[166],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[89],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[385],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[17,18,19,20,22,24,2,2,3,3,26,29,34,35,42,44,45,47,48,49,50,51,52,53,54,55,61,62,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,0,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,126,127,128,129,131,5,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,184,185,191,192,193,194,196,197,198,13,14,203,206,216,222,236,237,238,239,240,241,242,1,243,244,245,246,247,249,251,253,254,255,256,257,265,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,307,308,309,310,311,312,313,331,337,341,342,343,345,349,350,351,352,353,354,356,359,360,361,364,365,366,367,368,371,375,396,397,398,402,403,404,405,406,407,408,409,410,411,412,413,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[225,226,227,228,229,230],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[26,122,151,522,152,153,155,156,157,158,159,160,523,161,13,518,251,361,366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":71,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":405,"org.easymock.tests2.UsageTest.argumentsOrdered":172,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":148,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":325,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":167,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":27,"org.easymock.tests2.DelegateToTest.testReturnException":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":295,"org.easymock.tests.MockingTest.testPartialClassMocking":342,"org.easymock.tests.MockClassControlTest.testToString":396,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":231,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":305,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":210,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":468,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":206,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":35,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":462,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":434,"org.easymock.tests2.UsageTest.wrongArguments":165,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":67,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":246,"org.easymock.samples.ExampleTest.answerVsDelegate":18,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":366,"org.easymock.tests2.UsageConstraintsTest.testNull":74,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":347,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":119,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":401,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":147,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":516,"org.easymock.tests2.CaptureTest.testPrimitive":99,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":438,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":487,"org.easymock.tests.UsageTest.moreThanOneArgument":406,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":255,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":497,"org.easymock.tests.UsageTest.argumentsOrdered":412,"org.easymock.tests.UsageVarargTest.varargIntAccepted":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":426,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":189,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":38,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":317,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":430,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":446,"org.easymock.tests.ReplayStateInvalidUsageTest.times":390,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":61,"org.easymock.tests2.DependencyTest.testClassMocking":32,"org.easymock.tests2.AnswerTest.answer":110,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":332,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":55,"org.easymock.tests2.CaptureTest.testAnd":96,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":363,"org.easymock.tests2.UsageTest.strictResetToDefault":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":126,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":9,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":142,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":302,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":501,"org.easymock.tests2.DelegateToTest.testDelegate":241,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":445,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":483,"org.easymock.tests.LimitationsTest.mockFinalMethod":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":467,"org.easymock.tests2.DependencyTest.testClassMockingSupport":33,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":312,"org.easymock.tests2.CaptureTest.testCapture1_2446744":100,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":123,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":481,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":53,"org.easymock.tests.UsageThrowableTest.throwError":489,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":384,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":365,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":224,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":449,"org.easymock.samples.PartialClassMockTest.testGetArea":26,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":385,"org.easymock.tests.MockingTest.testInterfaceMocking":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":427,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":350,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":469,"org.easymock.tests2.UsageTest.niceToStrict":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":211,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":360,"org.easymock.tests2.ThreadingTest.testChangeDefault":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":315,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":155,"org.easymock.tests2.MockBuilderTest.testCreateMock":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":219,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":64,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":477,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":143,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":504,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":244,"org.easymock.tests.UsageOverloadedMethodTest.overloading":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":221,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":508,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":84,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":285,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":352,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":83,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":105,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":417,"org.easymock.tests.MockClassControlTest.testEquals":400,"org.easymock.tests2.EasyMockSupportClassTest.testAll":203,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":250,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":485,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":517,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":465,"org.easymock.tests2.CaptureTest.testCaptureAll":97,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":54,"org.easymock.tests.MockNameTest.defaultName":432,"org.easymock.tests2.UsageConstraintsTest.testMatches":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":256,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":382,"org.easymock.samples.ExampleTest.voteForRemovals":22,"org.easymock.tests.UsageVarargTest.allKinds":425,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":307,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":466,"org.easymock.samples.BasicClassMockTest.testPrintContent":31,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":495,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":186,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":299,"org.easymock.tests2.UsageConstraintsTest.greaterThan":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":204,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":301,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":129,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":450,"org.easymock.samples.ExampleTest.voteForRemoval":19,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":264,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":134,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":130,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":515,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":367,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":122,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":442,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":433,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":162,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":140,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":294,"org.easymock.tests2.CaptureTest.testCaptureFirst":109,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":141,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":174,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":511,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":281,"org.easymock.tests2.UsageTest.moreThanOneArgument":164,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":136,"org.easymock.tests2.CaptureTest.testCapture2_2446744":108,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":333,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":424,"org.easymock.tests.GenericTest.testBridgedEquals":252,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":380,"org.easymock.tests.UsageExpectAndReturnTest.longType":277,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":463,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":138,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":523,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":486,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":431,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":91,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":484,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":253,"org.easymock.tests.UsageCallCountTest.tooManyCalls":381,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":220,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":282,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":66,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":473,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":494,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":192,"org.easymock.tests.MockingTest.testNiceClassMocking":348,"org.easymock.tests.MockingTest.testClassMocking":340,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":522,"org.easymock.tests2.UsageConstraintsTest.testContains":82,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":374,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":177,"org.easymock.tests2.UsageConstraintsTest.testFind":73,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":354,"org.easymock.tests.MockTypeTest.fromEasyMockClass":364,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":44,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":265,"org.easymock.tests.UsageExpectAndReturnTest.object":284,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":124,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":65,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":146,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":419,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":358,"org.easymock.tests.UsageTest.exactCallCountByLastCall":413,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":320,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":498,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":304,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":6,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":414,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":290,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":507,"org.easymock.tests.MockClassControlTest.testHashCode":399,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":180,"org.easymock.tests2.EasyMockSupportTest.testVerify":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":213,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":499,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":505,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":503,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":52,"org.easymock.tests.UsageVarargTest.varargCharAccepted":418,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":338,"org.easymock.tests2.UsageTest.openCallCountByLastCall":168,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":149,"org.easymock.tests.DefaultClassInstantiatorTest.object":258,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":502,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":356,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":214,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":520,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":492,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":59,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":179,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":448,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":398,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":127,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":474,"org.easymock.tests.ReplayStateInvalidCallsTest.times":454,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":291,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":402,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":455,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":222,"org.easymock.tests2.UsageTest.resumeIfFailure":173,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":361,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":37,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":297,"org.easymock.tests2.StubTest.stubWithReturnValue":243,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":10,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":92,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":283,"org.easymock.tests2.SerializationTest.testAllMockedMethod":15,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":331,"org.easymock.samples.SupportTest.voteForRemovals":29,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":248,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":182,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":480,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":16,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":337,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":111,"org.easymock.tests.UsageExpectAndThrowTest.object":478,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":306,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":90,"org.easymock.tests2.DelegateToTest.testWrongClass":239,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":452,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":439,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":440,"org.easymock.samples.ConstructorCalledMockTest.testTax":2,"org.easymock.tests.UsageStrictMockTest.range":270,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":40,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":145,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":191,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":479,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":157,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":411,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":245,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":444,"org.easymock.tests2.CaptureTest.testCaptureNone":104,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":351,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":226,"org.easymock.tests.UsageUnorderedTest.message":488,"org.easymock.tests.UsageVerifyTest.twoReturns":309,"org.easymock.tests.UsageVarargTest.varargByteAccepted":423,"org.easymock.tests2.ThreadingTest.testThreadSafe":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":217,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":378,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":30,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":359,"org.easymock.tests2.CaptureTest.testCapture_2617107":98,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":314,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":335,"org.easymock.tests2.UsageConstraintsTest.any":80,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":389,"org.easymock.tests2.StubTest.stub":1,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":404,"org.easymock.tests.UsageExpectAndThrowTest.longType":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":336,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":262,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":388,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":48,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":184,"org.easymock.tests2.SerializationTest.testClass":13,"org.easymock.tests.LimitationsTest.mockNativeMethod":371,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":251,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":293,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":519,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":58,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":460,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":51,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":227,"org.easymock.tests2.NameTest.nameForMocksControl":235,"org.easymock.tests2.MockedExceptionTest.testMockedException":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":205,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":410,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":472,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":43,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":345,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":116,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":158,"org.easymock.tests.MockingTest.testNicePartialClassMocking":343,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":121,"org.easymock.tests2.CaptureTest.testCaptureLast":103,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":56,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":313,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":459,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":77,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":198,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":0,"org.easymock.tests.MockingTest.testTwoMocks":341,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":456,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":199,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":476,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":171,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":94,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":230,"org.easymock.samples.ExampleTest.removeNonExistingDocument":23,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":386,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":63,"org.easymock.tests.UsageStrictMockTest.differentMethods":271,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":181,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":229,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":260,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":135,"org.easymock.tests2.MockBuilderTest.testCreateMockString":161,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":394,"org.easymock.tests.UsageExpectAndThrowTest.floatType":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":207,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":202,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":113,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":7,"org.easymock.tests.UsageVerifyTest.twoThrows":308,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":216,"org.easymock.tests.ResultTest.createDelegateResultToString":512,"org.easymock.samples.ExampleTest.voteAgainstRemoval":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":326,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":349,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":128,"org.easymock.tests.LimitationsTest.privateConstructor":370,"org.easymock.tests2.UsageConstraintsTest.testNotNull":93,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":496,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":175,"org.easymock.tests2.UsageTest.defaultResetToNice":170,"org.easymock.samples.ExampleTest.voteAgainstRemovals":17,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":327,"org.easymock.tests.UsageVarargTest.differentLength":420,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":57,"org.easymock.tests2.CallbackTest.callback":242,"org.easymock.tests2.UsageConstraintsTest.equals":72,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":4,"org.easymock.tests.UsageTest.openCallCountByLastCall":409,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":436,"org.easymock.tests.UsageCallCountTest.tooFewCalls":376,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":194,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":247,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":228,"org.easymock.tests.UsageThrowableTest.throwCheckedException":493,"org.easymock.tests.MockingTest.testStrictClassMocking":339,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":197,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":62,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":193,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":391,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":196,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":115,"org.easymock.tests.ObjectMethodsTest.testHashCode":357,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":521,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":458,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":137,"org.easymock.tests2.NameTest.nameForNiceMock":234,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":453,"org.easymock.tests2.DependencyTest.testInterfaceMocking":34,"org.easymock.samples.ExampleTest.addDocument":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":223,"org.easymock.tests2.DelegateToTest.testStubDelegate":238,"org.easymock.tests2.AnswerTest.stubAnswer":114,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":268,"org.easymock.tests.UsageVarargTest.varargLongAccepted":422,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":324,"org.easymock.tests.UsageExpectAndReturnTest.floatType":276,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":292,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":5,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":509,"org.easymock.tests.UsageThrowableTest.noUpperLimit":490,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":188,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":88,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":69,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":36,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":101,"org.easymock.tests2.SerializationTest.test":14,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":259,"org.easymock.tests2.UsageConstraintsTest.testSame":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":275,"org.easymock.samples.SupportTest.addDocument":28,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":195,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":443,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":208,"org.easymock.tests.GenericTest.testPackageScope":249,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":187,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":346,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":441,"org.easymock.tests2.NameTest.nameForMock":232,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":286,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":12,"org.easymock.tests2.UsageStrictMockTest.differentMethods":50,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":278,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":482,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":355,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":303,"org.easymock.tests2.MockedExceptionTest.testRealException":178,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":368,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":328,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":435,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":393,"org.easymock.tests2.NameTest.nameForStrictMock":233,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":154,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":42,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":120,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":39,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":89,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":261,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":152,"org.easymock.tests2.UsageStrictMockTest.range":49,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":447,"org.easymock.tests2.UsageConstraintsTest.lessThan":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":183,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":514,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":323,"org.easymock.tests2.CaptureTest.testCaptureRightOne":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":212,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":225,"org.easymock.tests2.UsageConstraintsTest.testOr":76,"org.easymock.tests.UsageRangeTest.combination":300,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":117,"org.easymock.tests.UsageTest.wrongArguments":408,"org.easymock.tests2.MockBuilderTest.testWithConstructor":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":209,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":395,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":279,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":316,"org.easymock.tests.UsageVarargTest.varargShortAccepted":421,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":263,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":379,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":461,"org.easymock.tests2.UsageConstraintsTest.cmpTo":81,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":112,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":318,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":169,"org.easymock.tests2.CaptureTest.testCaptureFromStub":107,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":383,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":153,"org.easymock.tests.UsageTest.unexpectedCallWithArray":407,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":457,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":267,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":377,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":288,"org.easymock.tests2.CaptureTest.testCapture":513,"org.easymock.tests2.UsageConstraintsTest.constraints":70,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":269,"org.easymock.samples.ExampleTest.addAndChangeDocument":24,"org.easymock.tests.UsageStrictMockTest.testVerify":273,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":25,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":464,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":102,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":518,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":428,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":280,"org.easymock.tests.LimitationsTest.abstractClass":369,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":510,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":429,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":144}}]
