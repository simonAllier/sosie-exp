[{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[6,7,8,9,10],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,6,40,7,41,42,43,44,45,46,47,48,49,50,51,52,53,54,8,55,56,57,58,9,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,1,2,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[254],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:79","sourceCode":"return (int <= int) && (int <= int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[6,7,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"result","minimum":"result","maximum":"result"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:80","failures":[21,255,102,256,257,258,103,104,105,106,259,260,254,261,262,125,3,263,264],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[265,32,266,267,33,34,39,268,7,54,269,83,270,271,90,92,94,95,97,98,102,257,258,105,106,259,260,262,272,108,273,109,110,274,275,112,276,117,277,119,120,123,124,132,133,134,135,139,278,279,152,280,281,153,154,182,186,187,188,282,283,284,285,286,263,287,288,264,289,290,197,199,200,291,292,293,294,295,296,297,204,298,299,300,301,302,303,304,305,306,307,253,308],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[11,12,13,14,15,16,17,18,18,19,19,20,21,22,23,24,25,26,27,28,29,30,265,31,32,266,267,33,34,35,36,37,38,39,6,40,7,41,42,43,44,45,46,47,48,49,50,51,52,53,54,8,55,56,57,58,9,59,60,61,62,63,64,65,309,66,67,68,69,70,71,310,311,72,73,74,75,76,312,77,269,78,79,80,81,82,83,84,85,86,87,313,314,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,260,262,272,107,108,273,109,110,315,316,111,274,275,112,276,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,317,138,139,140,141,142,143,144,145,1,2,146,147,148,149,150,278,151,279,152,280,281,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,318,283,191,192,193,194,195,196,197,198,199,200,201,202,319,320,321,322,323,324,203,297,204,298,299,325,326,300,301,302,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,327,328,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,305,329,251,252,330,331,332,333,334,253],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[11,12,13,14,15,16,335,17,18,18,19,19,20,21,22,23,24,25,26,27,28,29,30,265,31,32,266,267,33,34,35,36,37,38,39,6,40,7,41,42,43,44,45,46,47,48,49,50,51,52,53,54,8,55,56,57,58,336,9,59,60,61,62,63,64,65,309,66,67,68,69,70,71,310,311,72,73,74,75,76,77,269,78,79,80,81,255,82,83,337,84,270,85,86,87,313,314,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,257,103,104,105,106,259,260,262,272,107,108,273,109,110,315,316,111,274,275,112,276,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,317,138,139,140,141,142,143,144,145,1,2,146,147,148,149,150,338,278,151,279,152,280,281,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,318,283,191,192,193,339,194,195,284,340,341,196,197,198,199,200,201,202,291,292,293,342,319,343,320,321,344,322,345,346,323,347,324,348,203,294,295,296,349,350,351,297,204,298,299,325,326,300,301,302,205,206,207,208,209,303,210,211,212,213,214,215,216,217,218,219,220,221,222,327,328,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,305,329,251,252,330,331,332,333,334,352,306,353,354,253,308],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[355,356,357],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[46],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[18,19,358,85,359,360,361,362,363,364,365,125],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[187,331,332],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[43,5,56,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[87,313],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[54,80,110,322],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[18,18,19,19,21,25,26,388,389,77,269,79,80,81,255,82,358,390,83,337,84,270,391,271,85,359,392,102,256,257,258,393,103,104,105,106,364,259,260,254,261,262,113,114,115,118,119,120,121,123,124,125,127,394,395,396,128,397,398,129,399,400,401,402,403,404,405,406,407,130,408,409,410,411,412,131,413,414,415,416,417,418,419,420,0,1,2,3,4,338,421,422,423,355,424,425,426,427,428,191,192,193,429,286,263,264,430,431,196,432,348,203,294,295,296,349,350,351,220],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"failures":[218,227],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[187,331,332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[433,434,435],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[29,30,265,31,32,266,267,33,34,35,36,37,38,39,6,40,7,41,42,43,44,45,46,47,5,48,49,50,51,52,53,54,8,55,56,57,58,336,9,59,60,61,62,63,64,65,309,66,67,68,69,70,71,310,311,72,73,436,437,74,75,76,77,269,78,79,80,81,255,82,83,337,84,270,85,86,87,313,314,89,90,91,92,93,94,95,96,97,98,99,100,101,102,257,103,104,105,106,259,260,262,272,107,108,273,109,110,315,316,111,274,275,112,276,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,438,136,137,317,439,138,139,140,141,142,143,144,145,1,2,3,146,147,148,149,150,338,278,151,279,152,280,281,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,440,186,187,188,189,318,282,283,441,442,428,191,192,193,443,444,445,339,194,195,284,340,341,196,197,198,199,200,201,202,291,292,293,342,319,343,320,321,344,322,345,346,323,347,324,348,203,294,295,296,349,350,351,446,447,448,297,204,298,299,325,326,300,301,302,205,206,207,208,209,303,210,211,212,213,214,215,216,217,218,219,449,220,221,222,327,328,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,305,329,251,252,330,331,332,333,334,450,451,452,453,454,455,456,457,352,306,353,354,307,253,308],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:320","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = org.easymock.internal.ExpectedInvocation.getMethod().getExceptionTypes()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[116,354],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":41,"org.easymock.tests2.UsageTest.argumentsOrdered":275,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":297,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":99,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":376,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":110,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":22,"org.easymock.tests2.DelegateToTest.testReturnException":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":177,"org.easymock.tests.MockingTest.testPartialClassMocking":191,"org.easymock.tests.MockClassControlTest.testToString":294,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":129,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":231,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":28,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":221,"org.easymock.tests2.UsageTest.wrongArguments":273,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":144,"org.easymock.samples.ExampleTest.answerVsDelegate":12,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":264,"org.easymock.tests2.UsageConstraintsTest.testNull":43,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":79,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":98,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":351,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":415,"org.easymock.tests2.CaptureTest.testPrimitive":65,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":223,"org.easymock.tests.UsageTest.moreThanOneArgument":204,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":250,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":148,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":450,"org.easymock.tests.UsageTest.argumentsOrdered":301,"org.easymock.tests.UsageVarargTest.varargIntAccepted":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":215,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":435,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":102,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":219,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":39,"org.easymock.tests.ReplayStateInvalidUsageTest.times":346,"org.easymock.tests2.AnswerTest.answer":73,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":382,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":38,"org.easymock.tests2.CaptureTest.testAnd":62,"org.easymock.tests2.UsageTest.strictResetToDefault":107,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":83,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":147,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":93,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":454,"org.easymock.tests2.DelegateToTest.testDelegate":138,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":246,"org.easymock.tests.LimitationsTest.mockFinalMethod":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":230,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":282,"org.easymock.tests2.CaptureTest.testCapture1_2446744":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":244,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":36,"org.easymock.tests.UsageThrowableTest.throwError":329,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":343,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":414,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":320,"org.easymock.tests2.CompareToTest.testLessOrEqual":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":216,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":403,"org.easymock.tests2.UsageTest.niceToStrict":109,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":232,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":366,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":103,"org.easymock.tests2.MockBuilderTest.testCreateMock":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":410,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":240,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":94,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":457,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":197,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":142,"org.easymock.tests.UsageOverloadedMethodTest.overloading":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":407,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":52,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":354,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":167,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":339,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":51,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":356,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":70,"org.easymock.tests2.EasyMockSupportClassTest.testAll":128,"org.easymock.tests.MockClassControlTest.testEquals":350,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":2,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":248,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":416,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":37,"org.easymock.tests2.CaptureTest.testCaptureAll":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":228,"org.easymock.tests.MockNameTest.defaultName":304,"org.easymock.tests2.UsageConstraintsTest.testMatches":53,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":149,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":342,"org.easymock.samples.ExampleTest.voteForRemovals":16,"org.easymock.tests.UsageVarargTest.allKinds":214,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":186,"org.easymock.samples.BasicClassMockTest.testPrintContent":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":229,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":333,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":265,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":439,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":181,"org.easymock.tests2.UsageConstraintsTest.greaterThan":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":397,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":183,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":270,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":425,"org.easymock.samples.ExampleTest.voteForRemoval":13,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":391,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":87,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":254,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":289,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":255,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":220,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":272,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":91,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":176,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":438,"org.easymock.tests2.CaptureTest.testCaptureFirst":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":92,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":276,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":163,"org.easymock.tests2.UsageTest.moreThanOneArgument":108,"org.easymock.tests2.CaptureTest.testCapture2_2446744":311,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":314,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":383,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":213,"org.easymock.tests.GenericTest.testBridgedEquals":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":292,"org.easymock.tests.UsageExpectAndReturnTest.longType":159,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":89,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":226,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":249,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":261,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":449,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":336,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":247,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":447,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":146,"org.easymock.tests.UsageCallCountTest.tooManyCalls":293,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":164,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":332,"org.easymock.tests.MockingTest.testNiceClassMocking":429,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":119,"org.easymock.tests.MockingTest.testClassMocking":427,"org.easymock.tests2.UsageConstraintsTest.testContains":50,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":198,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":256,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":115,"org.easymock.tests2.UsageConstraintsTest.testFind":42,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":195,"org.easymock.tests.MockTypeTest.fromEasyMockClass":287,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":30,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":278,"org.easymock.tests.UsageExpectAndReturnTest.object":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":82,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":97,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":209,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":341,"org.easymock.tests.UsageTest.exactCallCountByLastCall":302,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":451,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":359,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":172,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":205,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":353,"org.easymock.tests.MockClassControlTest.testHashCode":349,"org.easymock.tests2.EasyMockSupportTest.testVerify":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":405,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":452,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":456,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":35,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":312,"org.easymock.tests.UsageVarargTest.varargCharAccepted":208,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":387,"org.easymock.tests2.UsageTest.openCallCountByLastCall":315,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":100,"org.easymock.tests.DefaultClassInstantiatorTest.object":338,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":455,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":406,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":238,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":420,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":330,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":296,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":337,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":237,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":173,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":131,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":295,"org.easymock.tests2.UsageTest.resumeIfFailure":112,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":179,"org.easymock.tests2.StubTest.stubWithReturnValue":141,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":363,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":165,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":9,"org.easymock.tests2.SerializationTest.testAllMockedMethod":127,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":441,"org.easymock.samples.SupportTest.voteForRemovals":24,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":243,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":442,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":436,"org.easymock.tests.UsageExpectAndThrowTest.object":241,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":57,"org.easymock.tests2.DelegateToTest.testWrongClass":317,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":224,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":225,"org.easymock.samples.ConstructorCalledMockTest.testTax":18,"org.easymock.tests.UsageStrictMockTest.range":281,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":96,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":118,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":242,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":394,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":300,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":143,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":445,"org.easymock.tests2.CaptureTest.testCaptureNone":69,"org.easymock.tests.UsageUnorderedTest.message":305,"org.easymock.tests.UsageVerifyTest.twoReturns":188,"org.easymock.tests.UsageVarargTest.varargByteAccepted":212,"org.easymock.tests2.ThreadingTest.testThreadSafe":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":408,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":202,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":25,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":285,"org.easymock.tests2.CaptureTest.testCapture_2617107":64,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":385,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":328,"org.easymock.tests2.UsageConstraintsTest.any":48,"org.easymock.tests2.StubTest.stub":140,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":345,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":178,"org.easymock.tests.UsageExpectAndThrowTest.longType":234,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":355,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":322,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":266,"org.easymock.tests2.SerializationTest.testClass":125,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":117,"org.easymock.tests.LimitationsTest.mockNativeMethod":196,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":175,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":3,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":419,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":34,"org.easymock.tests2.NameTest.nameForMocksControl":135,"org.easymock.tests2.MockedExceptionTest.testMockedException":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":398,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":326,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":235,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":77,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":106,"org.easymock.tests.MockingTest.testNicePartialClassMocking":192,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":81,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":433,"org.easymock.tests2.CaptureTest.testCaptureLast":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":283,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":124,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":46,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":58,"org.easymock.tests.MockingTest.testTwoMocks":428,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":156,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":239,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":274,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":60,"org.easymock.samples.ExampleTest.removeNonExistingDocument":335,"org.easymock.tests.UsageStrictMockTest.differentMethods":153,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":321,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":422,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":313,"org.easymock.tests2.MockBuilderTest.testCreateMockString":262,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":399,"org.easymock.tests.UsageExpectAndThrowTest.floatType":233,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":74,"org.easymock.tests.UsageVerifyTest.twoThrows":187,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":360,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":130,"org.easymock.samples.ExampleTest.voteAgainstRemoval":14,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":377,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":84,"org.easymock.tests.LimitationsTest.privateConstructor":431,"org.easymock.tests2.UsageConstraintsTest.testNotNull":59,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":334,"org.easymock.tests2.UsageTest.defaultResetToNice":111,"org.easymock.samples.ExampleTest.voteAgainstRemovals":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":378,"org.easymock.tests.UsageVarargTest.differentLength":303,"org.easymock.tests2.CallbackTest.callback":139,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":358,"org.easymock.tests.UsageTest.openCallCountByLastCall":325,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":327,"org.easymock.tests.UsageCallCountTest.tooFewCalls":200,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":121,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":145,"org.easymock.tests.UsageThrowableTest.throwCheckedException":331,"org.easymock.tests.MockingTest.testStrictClassMocking":426,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":318,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":268,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":323,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":122,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":76,"org.easymock.tests.ObjectMethodsTest.testHashCode":340,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":434,"org.easymock.tests2.NameTest.nameForNiceMock":134,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":88,"org.easymock.tests2.DependencyTest.testInterfaceMocking":27,"org.easymock.samples.ExampleTest.addDocument":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":413,"org.easymock.tests2.DelegateToTest.testStubDelegate":137,"org.easymock.tests2.AnswerTest.stubAnswer":75,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":152,"org.easymock.tests.UsageVarargTest.varargLongAccepted":211,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":375,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":174,"org.easymock.tests.UsageExpectAndReturnTest.floatType":158,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":85,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":19,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":55,"org.easymock.tests.UsageThrowableTest.noUpperLimit":251,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":307,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":40,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":388,"org.easymock.tests2.SerializationTest.test":126,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":66,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":357,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":421,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":157,"org.easymock.tests2.UsageConstraintsTest.testSame":44,"org.easymock.samples.SupportTest.addDocument":23,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":400,"org.easymock.tests.GenericTest.testPackageScope":1,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.NameTest.nameForMock":132,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":168,"org.easymock.tests2.UsageStrictMockTest.differentMethods":33,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":365,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":390,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":160,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":245,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":185,"org.easymock.tests2.MockedExceptionTest.testRealException":116,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":379,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":222,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":324,"org.easymock.tests2.NameTest.nameForStrictMock":133,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":393,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":29,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":80,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":389,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":423,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":56,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":257,"org.easymock.tests2.UsageStrictMockTest.range":267,"org.easymock.tests2.UsageConstraintsTest.lessThan":61,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":417,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":392,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":404,"org.easymock.tests2.CaptureTest.testCaptureRightOne":71,"org.easymock.tests2.UsageConstraintsTest.testOr":45,"org.easymock.tests.UsageRangeTest.combination":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":269,"org.easymock.tests.UsageTest.wrongArguments":299,"org.easymock.tests2.MockBuilderTest.testWithConstructor":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":401,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":161,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":367,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":424,"org.easymock.tests.UsageVarargTest.varargShortAccepted":210,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":291,"org.easymock.tests2.UsageConstraintsTest.cmpTo":49,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":369,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":316,"org.easymock.tests2.CaptureTest.testCaptureFromStub":310,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":319,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":258,"org.easymock.tests.UsageTest.unexpectedCallWithArray":298,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":279,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":201,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":170,"org.easymock.tests2.UsageConstraintsTest.constraints":7,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":280,"org.easymock.samples.ExampleTest.addAndChangeDocument":17,"org.easymock.tests.UsageStrictMockTest.testVerify":155,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":20,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":227,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":67,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":217,"org.easymock.tests.LimitationsTest.abstractClass":430,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":162,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":218,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":95,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":206}}]
