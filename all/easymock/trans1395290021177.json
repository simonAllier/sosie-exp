[{"position":"org.easymock.internal.RecordState:108","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,0,54,55,56,57,1,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,2,105,3,4,5,6,7,8,106,9,107,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,30,153,154,155,31,156,157,158,159,160,161,162,163,164,165,166,167,168,32,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,33,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,34,292,293,294,295,296,297,35,298,299,300,301,302,303,304,305,306,307,308,309,310,311,37,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,36,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[61,62,63,74,149,150,151,152,30,153,208,221,248,36,439,440,441,442],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[488,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","defaultValue":"key","key":"key"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[309,313,323,328],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[54,56,58,59,106,9,107,170,175,178,179,181,182,293,294,299,300,400,401,402,403,471,473,474],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[443,444,445],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[320],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[490,175],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[328],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[388,429],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[491,492,493,494,488,489],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[0,1,62,63,74,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,149,150,151,152,30,153,31,32,208,33,251,252,34,35,36,439,440,441,442],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[185],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.internal.MocksControl:105","failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,0,54,55,56,57,1,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,104,2,105,3,4,5,6,7,8,106,9,107,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,30,153,154,155,31,156,157,158,159,160,161,162,163,164,165,166,167,168,32,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,33,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,267,268,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,34,292,293,294,295,296,297,35,298,299,300,301,302,303,304,305,306,307,308,309,310,311,37,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,36,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,424,425,427,428,429,430,432,434,435,436,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,485,486,487],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[178,496],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[37,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[312,318,330,497],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[101,498,499],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[500],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[43,44,45,46,47,48,50,53,64,69,72,88,89,90,91,92,93,94,95,97,98,99,100,101,102,104,145,146,147,148,185,186,187,188,189,253,254,265,267,267,268,268,331,332,333,334,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,382,383,385,386,387,388,390,391,392,393,394,395,396,397,398,501,502,422,503,424,425,427,428,429,430,432,434,435,436,504,438,439,440,441,443,445,452,453,481,485],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"m":"result","methodName":"name"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[55,56,58,59,9,107,505,171,175,178,181,294,299,300,473],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[47,48,50,112,113,114,115,116,117,120,121,123,124,125,127,128,129,130,131,140,141,142,143,144,147,161,162,163,164,173,174,179,181,182,206,210,211,212,213,256,257,259,260,262,265,331,332,333,334,336,337,338,343,346,356,362,382,383,384,385,386,387,390,394,395,396,418,424,428,430,432,436,449,452,471,473,474,478,479],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[43,46,47,48,50,64,69,72,88,89,90,91,92,93,147,186,187,188,253,254,265,267,267,268,268,331,332,333,334,337,338,343,346,356,362,382,383,385,386,387,388,390,393,394,395,396,398,422,424,425,428,429,430,432,435,436,438,441,443,445,452],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[267,267,268,268,391,433,434,443,452,453],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[166,258,286,291,480],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[57,1,106,136,137,31,181,182,210,215,297,35,304,305,308,310,311,316,319,322,329,473,474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[55,56,58,59,9,107,505,175,178,181,294,299,300,473],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[43,44,45,46,47,48,50,53,64,69,72,88,89,90,91,92,93,94,95,97,98,99,100,101,102,104,145,146,147,148,185,186,187,188,189,253,254,265,267,267,268,268,331,332,333,334,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,382,383,385,386,387,388,390,391,392,393,394,395,396,397,398,422,424,425,427,428,429,430,432,434,435,436,438,439,440,441,443,445,452,453,481,485],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[33,217],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[0,1,74,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,149,150,151,152,30,153,31,32,208,33,34,35,36,439,440,441,442],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[305,306,311,37,313,323,455,457,465],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":306,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests2.UsageTest.argumentsOrdered":300,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":224,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":296,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":269,"org.easymock.tests2.DelegateToTest.testReturnException":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":150,"org.easymock.tests.MockingTest.testPartialClassMocking":47,"org.easymock.tests.MockClassControlTest.testToString":90,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":399,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":86,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":10,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":346,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":479,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":206,"org.easymock.tests2.UsageTest.wrongArguments":294,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":415,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":204,"org.easymock.samples.ExampleTest.answerVsDelegate":258,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":69,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":52,"org.easymock.tests2.UsageConstraintsTest.testNull":309,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":385,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":95,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":279,"org.easymock.tests2.CaptureTest.testPrimitive":458,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":209,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":29,"org.easymock.tests.UsageTest.moreThanOneArgument":54,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":163,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":135,"org.easymock.tests.UsageTest.argumentsOrdered":59,"org.easymock.tests.UsageVarargTest.varargIntAccepted":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":140,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":422,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":379,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":144,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":409,"org.easymock.tests.ReplayStateInvalidUsageTest.times":246,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":495,"org.easymock.tests2.DependencyTest.testClassMocking":476,"org.easymock.tests2.AnswerTest.answer":286,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":368,"org.easymock.tests2.CaptureTest.testAnd":455,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":66,"org.easymock.tests2.UsageTest.strictResetToDefault":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":426,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":162,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":212,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":274,"org.easymock.tests2.DelegateToTest.testDelegate":421,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":25,"org.easymock.tests.LimitationsTest.mockFinalMethod":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":30,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":160,"org.easymock.tests2.DependencyTest.testClassMockingSupport":477,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":109,"org.easymock.tests2.CaptureTest.testCapture1_2446744":459,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":389,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":23,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":366,"org.easymock.tests.UsageThrowableTest.throwError":2,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":240,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":68,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":108,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":380,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":364,"org.easymock.samples.PartialClassMockTest.testGetArea":265,"org.easymock.tests.MockingTest.testInterfaceMocking":49,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":241,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":141,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":133,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":11,"org.easymock.tests2.UsageTest.niceToStrict":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":351,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":214,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":428,"org.easymock.tests2.MockBuilderTest.testCreateMock":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":359,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":412,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":496,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":19,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":275,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":65,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":252,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":75,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":202,"org.easymock.tests.UsageOverloadedMethodTest.overloading":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":361,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":32,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":318,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":154,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":123,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":498,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":317,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":464,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":193,"org.easymock.tests.MockClassControlTest.testEquals":94,"org.easymock.tests2.EasyMockSupportClassTest.testAll":343,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":187,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":27,"org.easymock.tests2.CaptureTest.testCaptureAll":456,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":158,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":367,"org.easymock.tests.MockNameTest.defaultName":84,"org.easymock.tests2.UsageConstraintsTest.testMatches":319,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":164,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":238,"org.easymock.samples.ExampleTest.voteForRemovals":262,"org.easymock.tests.UsageVarargTest.allKinds":201,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":159,"org.easymock.samples.BasicClassMockTest.testPrintContent":254,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":7,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":469,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":153,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":376,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":103,"org.easymock.tests2.UsageConstraintsTest.greaterThan":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":211,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":396,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":104,"org.easymock.samples.ExampleTest.voteForRemoval":259,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":447,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":397,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":70,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":388,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":34,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":72,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":272,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":149,"org.easymock.tests2.CaptureTest.testCaptureFirst":468,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":273,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":302,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":171,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":119,"org.easymock.tests2.CaptureTest.testCapture2_2446744":467,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":449,"org.easymock.tests2.UsageTest.moreThanOneArgument":293,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":232,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":200,"org.easymock.tests.GenericTest.testBridgedEquals":189,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":82,"org.easymock.tests.UsageExpectAndReturnTest.longType":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":156,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":270,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":504,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":28,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":172,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":161,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":62,"org.easymock.tests.UsageCallCountTest.tooManyCalls":83,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":414,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":6,"org.easymock.tests.MockingTest.testNiceClassMocking":53,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":332,"org.easymock.tests.MockingTest.testClassMocking":45,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":503,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":76,"org.easymock.tests2.UsageConstraintsTest.testContains":316,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":441,"org.easymock.tests2.UsageConstraintsTest.testFind":308,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":31,"org.easymock.tests.MockTypeTest.fromEasyMockClass":67,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":176,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":285,"org.easymock.tests.UsageExpectAndReturnTest.object":122,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":390,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":278,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":195,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":41,"org.easymock.tests.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":219,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":136,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":85,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":453,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":190,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":128,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":168,"org.easymock.tests.MockClassControlTest.testHashCode":93,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":370,"org.easymock.tests2.EasyMockSupportTest.testVerify":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":353,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":137,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":166,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":251,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":365,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":451,"org.easymock.tests.UsageVarargTest.varargCharAccepted":194,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":96,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":237,"org.easymock.tests2.UsageTest.openCallCountByLastCall":297,"org.easymock.tests.DefaultClassInstantiatorTest.object":97,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":281,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":250,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":39,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":505,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":4,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":407,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":369,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":394,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":92,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":16,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":129,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":61,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":362,"org.easymock.tests2.UsageTest.resumeIfFailure":301,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":64,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":152,"org.easymock.tests2.StubTest.stubWithReturnValue":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":431,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":121,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":327,"org.easymock.tests2.SerializationTest.testAllMockedMethod":445,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":230,"org.easymock.samples.SupportTest.voteForRemovals":256,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":185,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":372,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":22,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":236,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":287,"org.easymock.tests.UsageExpectAndThrowTest.object":20,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":87,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":324,"org.easymock.tests2.DelegateToTest.testWrongClass":419,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":173,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":174,"org.easymock.tests.UsageStrictMockTest.range":181,"org.easymock.samples.ConstructorCalledMockTest.testTax":267,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":486,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":277,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":331,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":21,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":430,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":58,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":203,"org.easymock.tests2.CaptureTest.testCaptureNone":463,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":134,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":492,"org.easymock.tests.UsageUnorderedTest.message":175,"org.easymock.tests.UsageVerifyTest.twoReturns":107,"org.easymock.tests.UsageVarargTest.varargByteAccepted":199,"org.easymock.tests2.ThreadingTest.testThreadSafe":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":357,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":80,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":42,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":253,"org.easymock.tests2.CaptureTest.testCapture_2617107":457,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":234,"org.easymock.tests2.UsageConstraintsTest.any":314,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":245,"org.easymock.tests2.StubTest.stub":381,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":151,"org.easymock.tests.UsageExpectAndThrowTest.longType":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":235,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":101,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":244,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":472,"org.easymock.tests2.SerializationTest.testClass":443,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":374,"org.easymock.tests.LimitationsTest.mockNativeMethod":147,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":188,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":131,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":406,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":475,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":493,"org.easymock.tests2.NameTest.nameForMocksControl":403,"org.easymock.tests2.MockedExceptionTest.testMockedException":440,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":345,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":1,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":14,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":50,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":284,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":382,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":432,"org.easymock.tests.MockingTest.testNicePartialClassMocking":48,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":387,"org.easymock.tests2.CaptureTest.testCaptureLast":462,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":404,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":110,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":37,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":338,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":325,"org.easymock.tests.MockingTest.testTwoMocks":46,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":339,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":112,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":18,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":299,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":329,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":489,"org.easymock.samples.ExampleTest.removeNonExistingDocument":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":411,"org.easymock.tests.UsageStrictMockTest.differentMethods":182,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":242,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":371,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":488,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":99,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":448,"org.easymock.tests2.MockBuilderTest.testCreateMockString":438,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":88,"org.easymock.tests.UsageExpectAndThrowTest.floatType":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":347,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":342,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":289,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":454,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":356,"org.easymock.samples.ExampleTest.voteAgainstRemoval":260,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":225,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":395,"org.easymock.tests.LimitationsTest.privateConstructor":146,"org.easymock.tests2.UsageConstraintsTest.testNotNull":328,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":439,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":8,"org.easymock.tests2.UsageTest.defaultResetToNice":298,"org.easymock.samples.ExampleTest.voteAgainstRemovals":257,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":226,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":405,"org.easymock.tests.UsageVarargTest.differentLength":196,"org.easymock.tests2.CallbackTest.callback":480,"org.easymock.tests2.UsageConstraintsTest.equals":307,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":391,"org.easymock.tests.UsageTest.openCallCountByLastCall":57,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":208,"org.easymock.tests.UsageCallCountTest.tooFewCalls":78,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":205,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":494,"org.easymock.tests.UsageThrowableTest.throwCheckedException":5,"org.easymock.tests.MockingTest.testStrictClassMocking":44,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":74,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":337,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":410,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":333,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":247,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":336,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":291,"org.easymock.tests2.CompareToTest.testGreateOrEqual":497,"org.easymock.tests.ObjectMethodsTest.testHashCode":40,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":450,"org.easymock.tests2.NameTest.nameForNiceMock":402,"org.easymock.tests2.DependencyTest.testInterfaceMocking":478,"org.easymock.samples.ExampleTest.addDocument":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":358,"org.easymock.tests2.DelegateToTest.testStubDelegate":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":363,"org.easymock.tests2.AnswerTest.stubAnswer":290,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":179,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":433,"org.easymock.tests.UsageVarargTest.varargLongAccepted":198,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":223,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":130,"org.easymock.tests.UsageExpectAndReturnTest.floatType":114,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":452,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":268,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":169,"org.easymock.tests.UsageThrowableTest.noUpperLimit":105,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":322,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":378,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":304,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":481,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":460,"org.easymock.tests2.SerializationTest.test":444,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":499,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":113,"org.easymock.tests2.UsageConstraintsTest.testSame":310,"org.easymock.samples.SupportTest.addDocument":255,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":335,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":348,"org.easymock.tests.GenericTest.testPackageScope":186,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":218,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":377,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":51,"org.easymock.tests2.NameTest.nameForMock":400,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":124,"org.easymock.tests2.UsageStrictMockTest.differentMethods":474,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":437,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":392,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":116,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":24,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":38,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":213,"org.easymock.tests2.MockedExceptionTest.testRealException":442,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":71,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":228,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":227,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":207,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":249,"org.easymock.tests2.NameTest.nameForStrictMock":401,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":427,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":283,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":386,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":485,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":490,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":100,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":323,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":424,"org.easymock.tests2.UsageStrictMockTest.range":473,"org.easymock.tests2.UsageConstraintsTest.lessThan":330,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":501,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":222,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":271,"org.easymock.tests2.CaptureTest.testCaptureRightOne":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":352,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":491,"org.easymock.tests2.UsageConstraintsTest.testOr":311,"org.easymock.tests.UsageRangeTest.combination":210,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":383,"org.easymock.tests.UsageTest.wrongArguments":56,"org.easymock.tests2.MockBuilderTest.testWithConstructor":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":349,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":117,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":215,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":102,"org.easymock.tests.UsageVarargTest.varargShortAccepted":197,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":81,"org.easymock.tests2.UsageConstraintsTest.cmpTo":315,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":217,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":35,"org.easymock.tests2.CaptureTest.testCaptureFromStub":466,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":239,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":425,"org.easymock.tests.UsageTest.unexpectedCallWithArray":55,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":178,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":79,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":126,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":180,"org.easymock.tests2.UsageConstraintsTest.constraints":305,"org.easymock.samples.ExampleTest.addAndChangeDocument":264,"org.easymock.tests.UsageStrictMockTest.testVerify":184,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":266,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":157,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":461,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":502,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":142,"org.easymock.tests.LimitationsTest.abstractClass":145,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":118,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":143,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":276}}]
