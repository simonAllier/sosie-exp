[{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[0,2,3,4,5,7,9,11,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,440,441,77,78,79,80,442,81,82,83,84,85,86,92,93,100,102,109,112,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,139,140,141,142,443,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,444,161,162,445,163,446,164,165,166,168,169,170,171,172,178,179,185,186,187,188,447,189,448,191,192,193,449,195,450,451,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,452,228,453,229,454,230,240,253,254,255,256,257,258,259,260,262,263,264,265,266,267,268,269,270,271,272,289,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,314,315,317,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,338,340,341,342,344,345,346,347,348,349,352,354,355,356,357,358,359,360,361,362,363,364,367,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:169","sourceCode":"if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n    org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection);\n    java.util.List<java.lang.reflect.Field>.remove(org.easymock.internal.InjectionTarget.getTargetField());\n} ","type":"CtIfImpl"},"failures":[88,89,91,94,95,98,174,175,177,180,181,184],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[232,233,234,236,237],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[455,456],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[118,124,125,153,227,457,299,300,303,304,344,347,375,376,383],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[458,459,460,461,299,344],"status":-1,"binaryOperator":"int < (java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[0,12,13,15,16,31,33,42,43,462,73,74,440,441,77,78,80,442,99,463,100,101,102,464,103,104,465,105,106,107,109,466,110,467,468,111,112,129,130,132,133,134,135,136,137,138,139,140,141,142,143,443,185,186,187,447,469,189,448,470,190,191,192,193,471,449,194,195,450,472,451,452,229,231,232,233,234,235,236,237,238,239,240,241,260,261,262,263,264,265,266,267,311,312,313,314,315,317,320,351,352,353,354,355,356],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[473],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,128,136,148,151,156,157,196,198,227,253,258,329,330,331,332,333,340,341,344,345,405,406,407,408,409,430,431],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[193,229],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[387,388,389],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[46,62,115,118,119,120,124,125,126,127,130,140,142,149,152,153,154,159,162,445,164,168,189,195,450,451,227,474,457,248,297,299,300,303,304,305,321,475,476,342,344,346,347,348,371,372,373,375,376],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[82],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[477,478,479],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[386],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[15,15,16,16,137,480],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.MockBuilder:163","failures":[15,16,137,469,472],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[334,387],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[31,32,33,481],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[223,224,375],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[43,77,442,482,483,484,469,470,471,480,472],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[41,185,186,187,188,254,255,256,257,258,259,280,334,335,336,341,403,407],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:315","failures":[41,115,122,185,186,187,188,221,225,226,254,255,256,257,258,259,297,302,341,359,380,407,408,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:40","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(double.double, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[485],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[456],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[117,486,458,487,488,489,490,151,153,154,227,461,491,457,298,345,347,348,374,375,376,378,381,382,383,390,391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.MockBuilder:163","failures":[15,16,137,469,472],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[492],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[3,81,84,86,168,196,198,377],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[0,12,13,15,15,16,16,31,33,42,440,441,77,78,80,442,100,102,109,112,129,130,132,133,134,135,136,139,140,141,142,493,494,495,496,187,447,497,189,448,191,192,193,449,195,450,498,451,452,229,240,261,313,314,315,317,352,353,354,356],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[452],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,9,10,11,12,13,14,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,440,441,77,78,79,80,442,81,82,83,84,85,86,92,100,102,109,112,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,136,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,444,161,162,445,163,446,164,165,166,167,499,500,501,502,168,169,178,185,186,187,188,189,191,193,449,450,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,231,240,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,268,269,270,271,272,289,295,297,298,300,301,302,303,304,305,313,314,315,317,321,322,323,324,329,330,331,332,333,334,335,336,338,340,341,342,343,344,345,346,347,348,349,350,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,434],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[503,504,505,506,507,508,509,510],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[291,362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:893","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[66],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":47,"org.easymock.tests2.UsageTest.argumentsOrdered":125,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":297,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":283,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":120,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":1,"org.easymock.tests2.DelegateToTest.testReturnException":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":255,"org.easymock.tests.MockingTest.testPartialClassMocking":314,"org.easymock.tests.MockClassControlTest.testToString":262,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":338,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":410,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":102,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":157,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":405,"org.easymock.tests2.UsageTest.wrongArguments":118,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":98,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":327,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":229,"org.easymock.tests2.UsageConstraintsTest.testNull":50,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":319,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":132,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":164,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":267,"org.easymock.tests2.CaptureTest.testPrimitive":20,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":409,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":429,"org.easymock.tests.UsageTest.moreThanOneArgument":298,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":131,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":270,"org.easymock.tests.UsageTest.argumentsOrdered":304,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":360,"org.easymock.tests.UsageVarargTest.varargIntAccepted":244,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":329,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":447,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":183,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":333,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":478,"org.easymock.tests.ReplayStateInvalidUsageTest.times":401,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":92,"org.easymock.tests2.AnswerTest.answer":81,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":172,"org.easymock.tests2.CaptureTest.testAnd":17,"org.easymock.tests2.UsageTest.strictResetToDefault":116,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":470,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":161,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":323,"org.easymock.tests2.DelegateToTest.testDelegate":39,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":364,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":425,"org.easymock.tests.LimitationsTest.mockFinalMethod":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":310,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":390,"org.easymock.tests2.CaptureTest.testCapture1_2446744":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":423,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":170,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":395,"org.easymock.tests.UsageThrowableTest.throwError":219,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":453,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":476,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":272,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":114,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":396,"org.easymock.tests.MockingTest.testInterfaceMocking":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":330,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":465,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":438,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":411,"org.easymock.tests2.UsageTest.niceToStrict":119,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":273,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":191,"org.easymock.tests2.MockBuilderTest.testCreateMock":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":467,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":95,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":458,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":419,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":162,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":389,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":325,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":507,"org.easymock.tests.UsageOverloadedMethodTest.overloading":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":108,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":60,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":380,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":210,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":357,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":473,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":59,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":26,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":245,"org.easymock.tests2.EasyMockSupportClassTest.testAll":100,"org.easymock.tests.MockClassControlTest.testEquals":266,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":353,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":427,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":493,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":171,"org.easymock.tests2.CaptureTest.testCaptureAll":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":308,"org.easymock.tests.MockNameTest.defaultName":439,"org.easymock.tests2.UsageConstraintsTest.testMatches":61,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":271,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":253,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":374,"org.easymock.samples.BasicClassMockTest.testPrintContent":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":309,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":225,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":149,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":180,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":259,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":485,"org.easymock.tests2.UsageConstraintsTest.greaterThan":63,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":322,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":142,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":237,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":145,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":143,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":454,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":135,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":115,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":356,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":160,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":463,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":254,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":34,"org.easymock.tests2.CaptureTest.testCaptureFirst":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":444,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":127,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":206,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":147,"org.easymock.tests2.UsageTest.moreThanOneArgument":117,"org.easymock.tests2.CaptureTest.testCapture2_2446744":29,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":291,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":252,"org.easymock.tests.GenericTest.testBridgedEquals":355,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":508,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":505,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":372,"org.easymock.tests.UsageExpectAndReturnTest.longType":202,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":306,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":498,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":428,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":432,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":68,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":426,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":268,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":335,"org.easymock.tests.UsageCallCountTest.tooManyCalls":373,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":479,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":207,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":97,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":415,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":224,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":441,"org.easymock.tests.MockingTest.testNiceClassMocking":320,"org.easymock.tests.MockingTest.testClassMocking":312,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":497,"org.easymock.tests2.UsageConstraintsTest.testContains":58,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":366,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":187,"org.easymock.tests2.UsageConstraintsTest.testFind":49,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":359,"org.easymock.tests.MockTypeTest.fromEasyMockClass":228,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":198,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":342,"org.easymock.tests.UsageExpectAndReturnTest.object":209,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":136,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":96,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":446,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":247,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":436,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":509,"org.easymock.tests.UsageTest.exactCallCountByLastCall":305,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":278,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":337,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":361,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":215,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":242,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":174,"org.easymock.tests.MockClassControlTest.testHashCode":265,"org.easymock.tests2.EasyMockSupportTest.testVerify":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":106,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":477,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":388,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":377,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":474,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":169,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":128,"org.easymock.tests.UsageVarargTest.varargCharAccepted":246,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":296,"org.easymock.tests2.UsageTest.openCallCountByLastCall":121,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":503,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":166,"org.easymock.tests.DefaultClassInstantiatorTest.object":231,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":387,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":434,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":457,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":107,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":496,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":222,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":90,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":173,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":140,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":264,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":416,"org.easymock.tests.CapturesMatcherTest.test":456,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":334,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":112,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":263,"org.easymock.tests2.UsageTest.resumeIfFailure":126,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":257,"org.easymock.tests2.StubTest.stubWithReturnValue":41,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":471,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":69,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":208,"org.easymock.tests2.SerializationTest.testAllMockedMethod":33,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":289,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":459,"org.easymock.samples.SupportTest.voteForRemovals":11,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":351,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":176,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":422,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":481,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":295,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":82,"org.easymock.tests.UsageExpectAndThrowTest.object":420,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":339,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":66,"org.easymock.tests2.DelegateToTest.testWrongClass":37,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":430,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":431,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests.UsageStrictMockTest.range":347,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":75,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":163,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":440,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":506,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":421,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":193,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":99,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":326,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":460,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":386,"org.easymock.tests2.CaptureTest.testCaptureNone":25,"org.easymock.tests.UsageUnorderedTest.message":227,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":475,"org.easymock.tests.UsageVerifyTest.twoReturns":376,"org.easymock.tests.UsageVarargTest.varargByteAccepted":251,"org.easymock.tests2.ThreadingTest.testThreadSafe":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":466,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":370,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":437,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":12,"org.easymock.tests2.CaptureTest.testCapture_2617107":19,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":392,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":293,"org.easymock.tests2.UsageConstraintsTest.any":56,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":400,"org.easymock.tests2.StubTest.stub":40,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":336,"org.easymock.tests.UsageExpectAndThrowTest.longType":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":294,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":235,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":399,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":152,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":178,"org.easymock.tests2.SerializationTest.testClass":31,"org.easymock.tests.LimitationsTest.mockNativeMethod":240,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":218,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":354,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":495,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":89,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":155,"org.easymock.tests2.NameTest.nameForMocksControl":502,"org.easymock.tests2.MockedExceptionTest.testMockedException":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":101,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":302,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":414,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":197,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":317,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":129,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":449,"org.easymock.tests.MockingTest.testNicePartialClassMocking":315,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":134,"org.easymock.tests2.CaptureTest.testCaptureLast":24,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":87,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":391,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":442,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":53,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":67,"org.easymock.tests.MockingTest.testTwoMocks":313,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":418,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":124,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":71,"org.easymock.samples.ExampleTest.removeNonExistingDocument":8,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":397,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":94,"org.easymock.tests.UsageStrictMockTest.differentMethods":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":175,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":233,"org.easymock.tests2.ConstraintsToStringTest.andToString":489,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":146,"org.easymock.tests2.MockBuilderTest.testCreateMockString":451,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":464,"org.easymock.tests.UsageExpectAndThrowTest.floatType":412,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":62,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":84,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":462,"org.easymock.tests.UsageVerifyTest.twoThrows":375,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":109,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":284,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":141,"org.easymock.tests.LimitationsTest.privateConstructor":239,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":484,"org.easymock.tests2.UsageConstraintsTest.testNotNull":70,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":226,"org.easymock.tests2.UsageTest.defaultResetToNice":123,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":285,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":88,"org.easymock.tests.UsageVarargTest.differentLength":248,"org.easymock.tests2.CallbackTest.callback":168,"org.easymock.tests2.UsageConstraintsTest.equals":48,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":137,"org.easymock.tests.UsageTest.openCallCountByLastCall":301,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":407,"org.easymock.tests.UsageCallCountTest.tooFewCalls":368,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":328,"org.easymock.tests.UsageThrowableTest.throwCheckedException":223,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":461,"org.easymock.tests.MockingTest.testStrictClassMocking":311,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":80,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":341,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":93,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":402,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":79,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":86,"org.easymock.tests.ObjectMethodsTest.testHashCode":435,"org.easymock.tests2.NameTest.nameForNiceMock":501,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":148,"org.easymock.tests2.DependencyTest.testInterfaceMocking":156,"org.easymock.samples.ExampleTest.addDocument":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":113,"org.easymock.tests2.DelegateToTest.testStubDelegate":36,"org.easymock.tests2.AnswerTest.stubAnswer":85,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":345,"org.easymock.tests.UsageVarargTest.varargLongAccepted":250,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":282,"org.easymock.tests.UsageExpectAndReturnTest.floatType":201,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":217,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":42,"org.easymock.tests2.ConstraintsToStringTest.orToString":486,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":182,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":64,"org.easymock.tests.UsageThrowableTest.noUpperLimit":220,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":45,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":73,"org.easymock.tests2.SerializationTest.test":32,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":22,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":232,"org.easymock.tests2.UsageConstraintsTest.testSame":51,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":200,"org.easymock.samples.SupportTest.addDocument":10,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":103,"org.easymock.tests.GenericTest.testPackageScope":352,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":277,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":181,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":318,"org.easymock.tests2.NameTest.nameForMock":499,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":211,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":472,"org.easymock.tests2.UsageStrictMockTest.differentMethods":154,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":138,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":203,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":424,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":433,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":324,"org.easymock.tests2.MockedExceptionTest.testRealException":188,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":230,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":287,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":491,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":286,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":406,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":404,"org.easymock.tests2.NameTest.nameForStrictMock":500,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":190,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":504,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":196,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":133,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":74,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":65,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":234,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":189,"org.easymock.tests2.UsageStrictMockTest.range":153,"org.easymock.tests2.UsageConstraintsTest.lessThan":72,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":492,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":177,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":105,"org.easymock.tests2.CaptureTest.testCaptureRightOne":27,"org.easymock.tests2.UsageConstraintsTest.testOr":52,"org.easymock.tests.UsageRangeTest.combination":321,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":130,"org.easymock.tests.UsageTest.wrongArguments":300,"org.easymock.tests2.MockBuilderTest.testWithConstructor":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":104,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":261,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":274,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":236,"org.easymock.tests.UsageVarargTest.varargShortAccepted":249,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":371,"org.easymock.tests2.UsageConstraintsTest.cmpTo":57,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":276,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":122,"org.easymock.tests2.CaptureTest.testCaptureFromStub":28,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":394,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":448,"org.easymock.tests.UsageTest.unexpectedCallWithArray":299,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":344,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":369,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":480,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":213,"org.easymock.tests2.CaptureTest.testCapture":455,"org.easymock.tests2.UsageConstraintsTest.constraints":46,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":346,"org.easymock.samples.ExampleTest.addAndChangeDocument":9,"org.easymock.tests2.ConstraintsToStringTest.notToString":487,"org.easymock.tests.UsageStrictMockTest.testVerify":350,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":14,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":343,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":307,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":23,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":494,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":331,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":205,"org.easymock.tests.LimitationsTest.abstractClass":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":332,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":445,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":243}}]
