[{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[16,17],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[18,19,20,21,22,23],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[24,25,26,27],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[24,25,26,27],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[28,29,30,31,32,33,34,35,36,37,38,39,39,40,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,16,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,21,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,25,26,27,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,17,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[18,19,20,21,22,23],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[345,236],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[134,135,248,280,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[71,16,112,113,114,115,140,188,189,190,191,192,207,208,221,227,228,233,305,322,17],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[346],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[25,26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[347,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[348,349],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[350],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[248],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"failures":[351,220,221,222,223,224,225,226,227,229,230,231,232,233],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[352,353,354],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,39,40,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,16,96,100,355,356,357,358,359,360,361,362,363,364,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,20,122,123,124,125,126,127,128,129,130,131,132,133,137,138,139,21,140,141,142,143,144,145,146,147,148,173,365,174,175,176,177,181,182,183,184,185,186,187,366,367,368,369,370,371,188,189,190,191,192,196,197,198,199,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,372,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,251,252,253,25,26,27,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,284,373,286,374,287,288,289,375,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,376,377,378,379,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,17,326,327,328,329,330,331,332,333,334,335,336,338,339,340,341,342,343,344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:121","sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[380],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[18,19,20,21,22,23],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[348],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[39,40,381,382,383,239,384,385,240,386,387,388,389,390,391,392,393,394,241,395,396,397,398,399,242,400,401,25,270,274,402,403,404,405,406,407,408,409,410,344,411],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":318,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":120,"org.easymock.tests2.UsageTest.argumentsOrdered":300,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":159,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":295,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":43,"org.easymock.tests2.DelegateToTest.testReturnException":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":129,"org.easymock.tests.MockingTest.testPartialClassMocking":146,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":389,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":44,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":240,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":311,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":324,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":112,"org.easymock.tests2.UsageTest.wrongArguments":293,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":7,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":357,"org.easymock.samples.ExampleTest.answerVsDelegate":30,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":347,"org.easymock.tests2.UsageConstraintsTest.testNull":320,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":213,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":263,"org.easymock.tests2.CaptureTest.testPrimitive":223,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":116,"org.easymock.tests.UsageTest.moreThanOneArgument":121,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":63,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":185,"org.easymock.tests.UsageTest.argumentsOrdered":126,"org.easymock.tests.UsageVarargTest.varargIntAccepted":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":188,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":373,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":14,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":151,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":192,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":267,"org.easymock.tests2.AnswerTest.answer":248,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":166,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":379,"org.easymock.tests2.CaptureTest.testAnd":220,"org.easymock.tests2.UsageTest.strictResetToDefault":291,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":406,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":372,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":184,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":258,"org.easymock.tests2.DelegateToTest.testDelegate":284,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":363,"org.easymock.tests2.CaptureTest.testCapture1_2446744":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":57,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":377,"org.easymock.tests.UsageThrowableTest.throwError":104,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":15,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":187,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":401,"org.easymock.samples.PartialClassMockTest.testGetArea":28,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":367,"org.easymock.tests2.CompareToTest.testLessOrEqual":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":189,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":390,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":45,"org.easymock.tests2.UsageTest.niceToStrict":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":149,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":352,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":397,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":4,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":22,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":53,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":259,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":195,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":355,"org.easymock.tests.UsageOverloadedMethodTest.overloading":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":394,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":136,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":329,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":180,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":83,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":328,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":229,"org.easymock.tests2.EasyMockSupportClassTest.testAll":239,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":69,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":61,"org.easymock.tests2.CaptureTest.testCaptureAll":221,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":361,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":378,"org.easymock.tests2.UsageConstraintsTest.testMatches":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":186,"org.easymock.samples.ExampleTest.voteForRemovals":34,"org.easymock.tests.UsageVarargTest.allKinds":206,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":117,"org.easymock.samples.BasicClassMockTest.testPrintContent":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":362,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":110,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":11,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":283,"org.easymock.tests2.UsageConstraintsTest.greaterThan":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":384,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":93,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":219,"org.easymock.samples.ExampleTest.voteForRemoval":31,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":235,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":345,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":100,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":290,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":256,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":128,"org.easymock.tests2.CaptureTest.testCaptureFirst":233,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":155,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":257,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":302,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":79,"org.easymock.tests2.CaptureTest.testCapture2_2446744":232,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":237,"org.easymock.tests2.UsageTest.moreThanOneArgument":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":167,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":289,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":205,"org.easymock.tests.GenericTest.testBridgedEquals":349,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":178,"org.easymock.tests.UsageExpectAndReturnTest.longType":75,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":359,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":62,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":97,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":183,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":102,"org.easymock.tests.UsageCallCountTest.tooManyCalls":179,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":80,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":6,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":49,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":269,"org.easymock.tests2.UsageConstraintsTest.testContains":327,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":365,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":246,"org.easymock.tests2.UsageConstraintsTest.testFind":319,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":182,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":138,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":343,"org.easymock.tests.UsageExpectAndReturnTest.object":82,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":5,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":262,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":200,"org.easymock.tests.UsageTest.exactCallCountByLastCall":127,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":154,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":98,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":411,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":88,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":196,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":135,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":8,"org.easymock.tests2.EasyMockSupportTest.testVerify":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":392,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":99,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":134,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":376,"org.easymock.tests.UsageVarargTest.varargCharAccepted":199,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":172,"org.easymock.tests2.UsageTest.openCallCountByLastCall":296,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":265,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":353,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":393,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":107,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":217,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":50,"org.easymock.tests.CapturesMatcherTest.test":351,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":89,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":242,"org.easymock.tests2.UsageTest.resumeIfFailure":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":131,"org.easymock.tests2.StubTest.stubWithReturnValue":313,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":407,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":81,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":338,"org.easymock.tests2.SerializationTest.testAllMockedMethod":27,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":165,"org.easymock.samples.SupportTest.voteForRemovals":37,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":23,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":56,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":24,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":171,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":249,"org.easymock.tests.UsageExpectAndThrowTest.object":54,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":335,"org.easymock.tests2.DelegateToTest.testWrongClass":282,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":207,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":208,"org.easymock.tests.UsageStrictMockTest.range":142,"org.easymock.samples.ConstructorCalledMockTest.testTax":39,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":261,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":268,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":55,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":287,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":356,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":18,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":66,"org.easymock.tests2.CaptureTest.testCaptureNone":228,"org.easymock.tests.UsageUnorderedTest.message":71,"org.easymock.tests.UsageVerifyTest.twoReturns":119,"org.easymock.tests.UsageVarargTest.varargByteAccepted":204,"org.easymock.tests2.ThreadingTest.testThreadSafe":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":395,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":177,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":41,"org.easymock.tests2.CaptureTest.testCapture_2617107":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":115,"org.easymock.tests2.UsageConstraintsTest.any":17,"org.easymock.tests2.StubTest.stub":312,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":130,"org.easymock.tests.UsageExpectAndThrowTest.longType":47,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":369,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":306,"org.easymock.tests2.SerializationTest.testClass":25,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":314,"org.easymock.tests.LimitationsTest.mockNativeMethod":209,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":70,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":91,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":1,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":309,"org.easymock.tests2.NameTest.nameForMocksControl":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":2,"org.easymock.tests2.MockedExceptionTest.testMockedException":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":385,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":124,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":48,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":210,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":288,"org.easymock.tests.MockingTest.testNicePartialClassMocking":147,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":215,"org.easymock.tests2.CaptureTest.testCaptureLast":227,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":274,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":323,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":336,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":402,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":72,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":52,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":299,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":340,"org.easymock.tests.UsageStrictMockTest.differentMethods":143,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":3,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":9,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":236,"org.easymock.tests2.MockBuilderTest.testCreateMockString":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":386,"org.easymock.tests.UsageExpectAndThrowTest.floatType":46,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":251,"org.easymock.tests.UsageVerifyTest.twoThrows":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":241,"org.easymock.samples.ExampleTest.voteAgainstRemoval":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":160,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":64,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":218,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":404,"org.easymock.tests2.UsageConstraintsTest.testNotNull":339,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":111,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":244,"org.easymock.tests2.UsageTest.defaultResetToNice":298,"org.easymock.samples.ExampleTest.voteAgainstRemovals":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":161,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":0,"org.easymock.tests.UsageVarargTest.differentLength":201,"org.easymock.tests2.CallbackTest.callback":243,"org.easymock.tests.UsageTest.openCallCountByLastCall":123,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":315,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":114,"org.easymock.tests.UsageCallCountTest.tooFewCalls":175,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":271,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":358,"org.easymock.tests.UsageThrowableTest.throwCheckedException":108,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":19,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":96,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":273,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":270,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":370,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":272,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":253,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":238,"org.easymock.tests2.NameTest.nameForNiceMock":277,"org.easymock.tests2.DependencyTest.testInterfaceMocking":310,"org.easymock.samples.ExampleTest.addDocument":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":400,"org.easymock.tests2.DelegateToTest.testStubDelegate":281,"org.easymock.tests2.AnswerTest.stubAnswer":252,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":140,"org.easymock.tests.UsageVarargTest.varargLongAccepted":203,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":158,"org.easymock.tests.UsageExpectAndReturnTest.floatType":74,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":90,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":344,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":40,"org.easymock.tests.UsageThrowableTest.noUpperLimit":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":13,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":333,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":316,"org.easymock.tests2.SerializationTest.test":26,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":73,"org.easymock.tests2.UsageConstraintsTest.testSame":321,"org.easymock.samples.SupportTest.addDocument":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":387,"org.easymock.tests.GenericTest.testPackageScope":68,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":153,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":12,"org.easymock.tests2.NameTest.nameForMock":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":84,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":410,"org.easymock.tests2.UsageStrictMockTest.differentMethods":308,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":76,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":58,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":95,"org.easymock.tests2.MockedExceptionTest.testRealException":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":162,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":305,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":113,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":371,"org.easymock.tests2.NameTest.nameForStrictMock":276,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":342,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":354,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":214,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":334,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":285,"org.easymock.tests2.UsageStrictMockTest.range":307,"org.easymock.tests2.UsageConstraintsTest.lessThan":341,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":157,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":255,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":391,"org.easymock.tests2.CaptureTest.testCaptureRightOne":230,"org.easymock.tests2.UsageConstraintsTest.testOr":322,"org.easymock.tests.UsageRangeTest.combination":92,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":211,"org.easymock.tests.UsageTest.wrongArguments":122,"org.easymock.tests2.MockBuilderTest.testWithConstructor":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":388,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":364,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":150,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":85,"org.easymock.tests.UsageVarargTest.varargShortAccepted":202,"org.easymock.tests2.UsageConstraintsTest.cmpTo":326,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":152,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":297,"org.easymock.tests2.CaptureTest.testCaptureFromStub":231,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":366,"org.easymock.tests.UsageTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":21,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":176,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":409,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":86,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":141,"org.easymock.tests2.UsageConstraintsTest.constraints":317,"org.easymock.samples.ExampleTest.addAndChangeDocument":35,"org.easymock.tests.UsageStrictMockTest.testVerify":145,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":38,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":360,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":190,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":191,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":137,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":260}}]
