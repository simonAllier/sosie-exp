[{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,0,9,10,2,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[4,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[21,22],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[23,24],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[51,52,53,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[4,8,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[55,56,57,58,59],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[60,61],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"returnedType","type":"returnedType"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[51,52,53,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[63,64,65,66],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[51,52,53,54],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[67,68,15,16,17,18,69,70,71,72,73,74,75,19,20,76,77],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[78,79,80,36,81,82],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[83,84,85,86,62,87,88,89],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[90,91],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[92,93,94,95,96,97,60,98,99,100,61,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,125,126,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,52,54,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[109,113],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests2.UsageTest.argumentsOrdered":43,"org.easymock.tests2.SerializationTest.testAllMockedMethod":54,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":1,"org.easymock.tests.MockingTest.testPartialClassMocking":104,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":82,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":60,"org.easymock.tests.MockClassControlTest.testToString":117,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":154,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":51,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":150,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":30,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":12,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":9,"org.easymock.tests2.UsageTest.wrongArguments":41,"org.easymock.tests.UsageStrictMockTest.range":38,"org.easymock.samples.ConstructorCalledMockTest.testTax":125,"org.easymock.samples.ExampleTest.answerVsDelegate":84,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":93,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":169,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":131,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":122,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":181,"org.easymock.tests2.CaptureTest.testPrimitive":18,"org.easymock.tests.UsageTest.moreThanOneArgument":25,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":144,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":78,"org.easymock.tests2.CaptureTest.testCaptureNone":73,"org.easymock.tests.UsageUnorderedTest.message":29,"org.easymock.tests.UsageVerifyTest.twoReturns":35,"org.easymock.tests.UsageTest.argumentsOrdered":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":161,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":127,"org.easymock.tests2.CaptureTest.testCapture_2617107":17,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":175,"org.easymock.tests2.UsageConstraintsTest.any":2,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":180,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":112,"org.easymock.tests2.SerializationTest.testClass":52,"org.easymock.tests.LimitationsTest.mockNativeMethod":96,"org.easymock.tests2.AnswerTest.answer":62,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":100,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":58,"org.easymock.tests2.CaptureTest.testAnd":15,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":138,"org.easymock.tests2.NameTest.nameForMocksControl":47,"org.easymock.tests2.MockedExceptionTest.testMockedException":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":149,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":106,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":129,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":182,"org.easymock.tests.MockingTest.testNicePartialClassMocking":105,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":133,"org.easymock.tests.LimitationsTest.mockFinalMethod":97,"org.easymock.tests2.CaptureTest.testCaptureLast":72,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":174,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":64,"org.easymock.tests.MockingTest.testTwoMocks":103,"org.easymock.tests2.CaptureTest.testCapture1_2446744":69,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":14,"org.easymock.tests.UsageThrowableTest.throwError":21,"org.easymock.tests.UsageStrictMockTest.differentMethods":39,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":110,"org.easymock.tests2.MockBuilderTest.testCreateMockString":186,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":146,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":87,"org.easymock.tests.UsageVerifyTest.twoThrows":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":160,"org.easymock.samples.PartialClassMockTest.testGetArea":124,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":155,"org.easymock.tests.LimitationsTest.privateConstructor":95,"org.easymock.tests2.UsageConstraintsTest.testNotNull":13,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":192,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":179,"org.easymock.tests2.MockBuilderTest.testCreateMock":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":163,"org.easymock.tests2.CallbackTest.callback":89,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":136,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":165,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":90,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":63,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":172,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":74,"org.easymock.tests.MockClassControlTest.testEquals":121,"org.easymock.tests2.EasyMockSupportClassTest.testAll":147,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":99,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":79,"org.easymock.tests.MockingTest.testStrictClassMocking":101,"org.easymock.tests2.CaptureTest.testCaptureAll":16,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":173,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":171,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":88,"org.easymock.tests2.NameTest.nameForNiceMock":46,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":33,"org.easymock.samples.BasicClassMockTest.testPrintContent":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":167,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":148,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":141,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":114,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":134,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":190,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":126,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":123,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":187,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":70,"org.easymock.tests2.SerializationTest.test":53,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":183,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":109,"org.easymock.tests2.UsageConstraintsTest.testSame":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":145,"org.easymock.tests2.CaptureTest.testCaptureFirst":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":152,"org.easymock.tests.GenericTest.testPackageScope":98,"org.easymock.tests2.CaptureTest.testCapture2_2446744":76,"org.easymock.tests2.UsageTest.moreThanOneArgument":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":59,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":185,"org.easymock.tests.GenericTest.testBridgedEquals":61,"org.easymock.tests2.NameTest.nameForMock":44,"org.easymock.tests2.UsageStrictMockTest.differentMethods":50,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":137,"org.easymock.tests2.MockedExceptionTest.testRealException":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":164,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":23,"org.easymock.tests.MockingTest.testNiceClassMocking":107,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":170,"org.easymock.tests.MockingTest.testClassMocking":102,"org.easymock.tests2.NameTest.nameForStrictMock":45,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":194,"org.easymock.tests2.UsageConstraintsTest.testFind":5,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":178,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":85,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":132,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":86,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":189,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":11,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":31,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":111,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":135,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":176,"org.easymock.tests2.UsageStrictMockTest.range":49,"org.easymock.tests2.UsageConstraintsTest.lessThan":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":56,"org.easymock.tests2.CaptureTest.testCaptureRightOne":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":156,"org.easymock.tests2.UsageConstraintsTest.testOr":8,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":191,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":130,"org.easymock.tests.UsageTest.wrongArguments":26,"org.easymock.tests.MockClassControlTest.testHashCode":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":153,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":157,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":83,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":113,"org.easymock.tests2.CaptureTest.testCaptureMultiple":68,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":24,"org.easymock.tests2.CompareToTest.testLessThan":66,"org.easymock.tests.DefaultClassInstantiatorTest.object":108,"org.easymock.tests2.CaptureTest.testCaptureFromStub":20,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":177,"org.easymock.tests.UsageTest.unexpectedCallWithArray":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":158,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":22,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":36,"org.easymock.tests2.CaptureTest.testCapture":75,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":119,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":139,"org.easymock.tests.CapturesMatcherTest.test":67,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":166,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":71,"org.easymock.tests.LimitationsTest.abstractClass":94,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":92,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":32,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":188}}]
