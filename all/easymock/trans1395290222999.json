[{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,249,250,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:58","sourceCode":"return java.util.List<org.easymock.IArgumentMatcher>","type":"CtReturnImpl"},"failures":[0,1,19,20,21,22,23,24,43,44,121,122,123,124,125,149,174,184,185,274,309,344,358,360,367,368,369,370,371,372,373,374,375,376,377,378,379,380,408,409,410,411,413,414,415,416,417,418,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[353,356,357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:217","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,84,85,86,87,88,89,90,91,92,109,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,154,155,156,159,162,163,164,166,170,171,172,173,174,175,176,177,178,179,180,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,236,237,238,239,240,241,242,243,244,245,246,247,248,249,249,250,250,251,252,253,254,255,256,257,263,270,271,272,273,274,275,276,277,278,279,280,441,442,285,286,287,288,443,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,444,445,446,447,448,314,316,317,318,449,320,450,451,322,324,331,334,337,338,339,340,341,342,343,344,347,348,349,350,352,353,354,355,356,357,358,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,452,384,385,453,386,454,387,388,389,390,391,397,404,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[455,456,457,458,459,312,460],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[0,1,15,19,20,23,24,39,44,46,47,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,88,89,92,109,121,122,123,124,125,126,131,133,134,136,163,164,166,174,184,185,187,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,241,242,243,244,246,251,257,263,270,271,274,276,277,280,441,442,285,286,287,288,443,289,290,291,293,295,296,297,300,301,304,306,307,308,309,310,311,314,316,318,449,450,322,324,331,334,337,338,339,340,341,342,344,348,349,350,352,356,357,362,363,364,366,367,368,369,370,371,374,375,376,377,379,380,381,382,383,452,384,385,453,386,454,387,388,389,397,408,409,410,411,413,414,415,416,417,418,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,440],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[367,369,370,371,372,373,374,376,461,377],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:178","failures":[462,449],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[0,15,17,19,20,23,39,44,46,47,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,84,85,88,89,92,109,115,121,122,123,124,125,136,151,152,159,163,164,166,184,185,195,196,197,218,219,220,221,222,224,236,237,238,239,240,241,243,244,246,249,249,250,250,251,257,263,270,271,274,276,277,280,441,442,285,286,287,288,443,289,290,291,293,295,296,297,300,301,304,306,307,308,309,310,311,314,316,318,449,450,322,324,331,334,337,338,339,340,341,342,344,348,349,350,352,356,363,367,368,370,371,374,375,376,377,378,379,380,381,382,383,452,384,385,453,386,454,387,388,389,397,408,409,410,411,413,414,415,416,417,418,420,421,422,423,424,425,426,427,428,429,430,431,433,434,435,436,437,438],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[463],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[464],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[233,465,466],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:100","sourceCode":"return this","type":"CtReturnImpl"},"failures":[251,316,318,449],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[24,33,58,64,70,74,76,85,105,109,197,198,204,210,214,216,248,291,306,307,358,360,366,368,374,375,380,408,424,427,436,440],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[2,3,4,22,50,52,53,54,55,56,57,84,89,96,134,174,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,223,280,289,296],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[17,462,182,251,467,448,468,314,469,316,317,318,449,320,450,470,451,343,437],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[471,418,424,436],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[252,253,258,259,260,261,262,263,264,265,266,267,268,269,392,393,394,395,396,397,398,399,400,401,402,403],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[294,341],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[24,472],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[43,473,474,86,475,476],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[14,15,16,17,18,37,38,39,40,120,158,160,161,162,163,164,166,169,462,182,187,188,189,190,191,192,193,194,229,230,231,232,233,234,235,249,249,250,250,251,254,255,467,281,282,441,442,285,286,288,443,302,303,304,311,312,448,468,314,469,315,316,317,318,449,319,320,450,470,451,321,477,478,322,479,323,324,480,325,326,481,482,327,328,329,330,331,483,332,484,485,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,486,437,439],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[487],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[43,473,474,86,475,476],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[14,15,16,17,18,37,38,39,40,120,158,160,161,162,163,164,166,169,462,182,187,188,189,190,191,192,193,194,229,230,231,232,233,234,235,249,249,250,250,251,254,255,489,490,491,467,492,493,281,282,441,442,285,286,288,443,302,303,304,311,312,463,448,468,314,469,315,316,317,318,449,319,320,450,494,470,451,321,477,478,322,479,323,324,480,325,326,481,482,327,328,329,330,331,483,332,484,485,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,486,437,439],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[495,408,410,427,433],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[0,1,5,8,9,10,12,13,15,16,19,20,21,22,23,24,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,63,68,73,78,79,87,90,91,92,120,121,122,123,124,125,126,131,132,133,134,135,136,138,139,140,142,143,144,145,146,147,148,149,150,163,164,166,174,184,185,187,195,196,200,201,203,208,213,218,223,224,241,242,243,244,245,246,248,251,252,253,254,255,256,257,263,270,271,272,273,274,275,276,277,278,441,442,285,286,287,288,443,289,290,292,293,294,297,298,299,301,304,309,310,311,444,445,446,447,314,316,318,449,450,322,324,331,334,337,338,339,340,341,342,344,348,349,350,352,355,357,362,364,366,367,368,369,370,371,372,373,374,375,376,377,380,381,382,383,452,384,385,453,386,454,387,388,389,390,397,411,413,414,415,417,418,419,420,421,423,424,426,427,429,430,431,432,433,434,437,438,439,440],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[39,122,163,164,166,251,441,442,285,286,287,288,443,309,311,314,316,318,449,450,322,324,331,334,337,339,340,342],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[455,456,457,458,459,312,460],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[131,242,352,355,357,358,360,440],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[43,473,474,86,475,476],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":411,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":84,"org.easymock.tests2.UsageTest.argumentsOrdered":299,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":388,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":103,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":294,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":252,"org.easymock.tests2.DelegateToTest.testReturnException":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":171,"org.easymock.tests.MockingTest.testPartialClassMocking":163,"org.easymock.tests.MockClassControlTest.testToString":189,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":313,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":481,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":198,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":324,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":271,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":455,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":19,"org.easymock.tests2.UsageTest.wrongArguments":292,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":403,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":227,"org.easymock.samples.ExampleTest.answerVsDelegate":242,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":182,"org.easymock.tests2.UsageConstraintsTest.testNull":414,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":168,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":340,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":387,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":194,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":489,"org.easymock.tests2.CaptureTest.testPrimitive":370,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":23,"org.easymock.tests.UsageTest.moreThanOneArgument":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":217,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":238,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":176,"org.easymock.tests.UsageTest.argumentsOrdered":91,"org.easymock.tests.UsageVarargTest.varargIntAccepted":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":459,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":448,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":268,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":95,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":125,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":397,"org.easymock.tests.ReplayStateInvalidUsageTest.times":33,"org.easymock.tests2.AnswerTest.answer":352,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":407,"org.easymock.tests2.CaptureTest.testAnd":367,"org.easymock.tests2.UsageTest.strictResetToDefault":290,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":237,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":384,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":220,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":180,"org.easymock.tests2.DelegateToTest.testDelegate":366,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":213,"org.easymock.tests.LimitationsTest.mockFinalMethod":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":130,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":78,"org.easymock.tests2.CaptureTest.testCapture1_2446744":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":405,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":27,"org.easymock.tests.UsageThrowableTest.throwError":50,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":269,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":336,"org.easymock.samples.PartialClassMockTest.testGetArea":251,"org.easymock.tests.MockingTest.testInterfaceMocking":165,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":28,"org.easymock.tests2.CompareToTest.testLessOrEqual":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":122,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":482,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":199,"org.easymock.tests2.UsageTest.niceToStrict":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":93,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":316,"org.easymock.tests2.MockBuilderTest.testCreateMock":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":484,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":400,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":475,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":207,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":385,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":5,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":225,"org.easymock.tests.UsageOverloadedMethodTest.overloading":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":333,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":424,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":134,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":69,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":195,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":465,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":423,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":376,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":141,"org.easymock.tests.MockClassControlTest.testEquals":193,"org.easymock.tests2.EasyMockSupportClassTest.testAll":322,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":16,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":215,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":490,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":406,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":128,"org.easymock.tests2.CaptureTest.testCaptureAll":368,"org.easymock.tests.MockNameTest.defaultName":186,"org.easymock.tests2.UsageConstraintsTest.testMatches":425,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":239,"org.easymock.samples.ExampleTest.voteForRemovals":246,"org.easymock.tests.UsageVarargTest.allKinds":149,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":129,"org.easymock.samples.BasicClassMockTest.testPrintContent":255,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":56,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":272,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":265,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":365,"org.easymock.tests2.UsageConstraintsTest.greaterThan":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":479,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":219,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":350,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":235,"org.easymock.samples.ExampleTest.voteForRemoval":243,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":307,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":351,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":494,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":343,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":120,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":289,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":383,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":170,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":361,"org.easymock.tests2.CaptureTest.testCaptureFirst":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":99,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":452,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":301,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":137,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":65,"org.easymock.tests2.UsageTest.moreThanOneArgument":291,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":309,"org.easymock.tests2.CaptureTest.testCapture2_2446744":379,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":111,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":148,"org.easymock.tests.GenericTest.testBridgedEquals":18,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":12,"org.easymock.tests.UsageExpectAndReturnTest.longType":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":126,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":381,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":470,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":216,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":432,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":159,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":214,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":236,"org.easymock.tests.UsageCallCountTest.tooManyCalls":13,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":485,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":402,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":203,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":55,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":442,"org.easymock.tests.MockingTest.testNiceClassMocking":169,"org.easymock.tests.MockingTest.testClassMocking":161,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":468,"org.easymock.tests2.UsageConstraintsTest.testContains":422,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":6,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":304,"org.easymock.tests2.UsageConstraintsTest.testFind":413,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":197,"org.easymock.tests.MockTypeTest.fromEasyMockClass":181,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":41,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":360,"org.easymock.tests.UsageExpectAndReturnTest.object":68,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":344,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":401,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":487,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":454,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":456,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":143,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":156,"org.easymock.tests.UsageTest.exactCallCountByLastCall":92,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":98,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":177,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":81,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":312,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":138,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":74,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":133,"org.easymock.tests.MockClassControlTest.testHashCode":192,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":259,"org.easymock.tests2.EasyMockSupportTest.testVerify":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":328,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":178,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":131,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":3,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":404,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":391,"org.easymock.tests.UsageVarargTest.varargCharAccepted":142,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":116,"org.easymock.tests2.UsageTest.openCallCountByLastCall":295,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":389,"org.easymock.tests.DefaultClassInstantiatorTest.object":229,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":2,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":154,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":329,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":493,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":53,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":395,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":258,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":191,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":348,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":204,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":75,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":117,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":334,"org.easymock.tests2.UsageTest.resumeIfFailure":300,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":173,"org.easymock.tests2.StubTest.stubWithReturnValue":280,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":460,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":433,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":67,"org.easymock.tests2.SerializationTest.testAllMockedMethod":439,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":109,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":476,"org.easymock.samples.SupportTest.voteForRemovals":257,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":14,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":261,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":210,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":115,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":353,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":83,"org.easymock.tests.UsageExpectAndThrowTest.object":208,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":430,"org.easymock.tests2.DelegateToTest.testWrongClass":364,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":184,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":185,"org.easymock.tests.UsageStrictMockTest.range":46,"org.easymock.samples.ConstructorCalledMockTest.testTax":249,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":283,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":386,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":441,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":488,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":209,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":318,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":35,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":321,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":226,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":473,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":152,"org.easymock.tests2.CaptureTest.testCaptureNone":375,"org.easymock.tests.UsageUnorderedTest.message":24,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":464,"org.easymock.tests.UsageVerifyTest.twoReturns":224,"org.easymock.tests.UsageVarargTest.varargByteAccepted":147,"org.easymock.tests2.ThreadingTest.testThreadSafe":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":483,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":10,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":157,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":254,"org.easymock.tests2.CaptureTest.testCapture_2617107":369,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":22,"org.easymock.tests2.UsageConstraintsTest.any":420,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":32,"org.easymock.tests2.StubTest.stub":279,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":114,"org.easymock.tests.UsageExpectAndThrowTest.longType":201,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":233,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":31,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":275,"org.easymock.tests2.SerializationTest.testClass":437,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":263,"org.easymock.tests.LimitationsTest.mockNativeMethod":39,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":17,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":77,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":492,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":394,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":278,"org.easymock.tests2.NameTest.nameForMocksControl":447,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":396,"org.easymock.tests2.MockedExceptionTest.testMockedException":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":323,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":89,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":166,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":202,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":359,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":337,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":449,"org.easymock.tests.MockingTest.testNicePartialClassMocking":164,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":342,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":392,"org.easymock.tests2.CaptureTest.testCaptureLast":374,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":79,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":443,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":417,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":431,"org.easymock.tests.MockingTest.testTwoMocks":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":206,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":298,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":435,"org.easymock.samples.ExampleTest.removeNonExistingDocument":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":399,"org.easymock.tests.UsageStrictMockTest.differentMethods":47,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":29,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":260,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":231,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":308,"org.easymock.tests2.MockBuilderTest.testCreateMockString":451,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":480,"org.easymock.tests.UsageExpectAndThrowTest.floatType":200,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":478,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":355,"org.easymock.tests.UsageVerifyTest.twoThrows":223,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":331,"org.easymock.samples.ExampleTest.voteAgainstRemoval":244,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":104,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":349,"org.easymock.tests.LimitationsTest.privateConstructor":38,"org.easymock.tests2.UsageConstraintsTest.testNotNull":434,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":57,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":302,"org.easymock.tests2.UsageTest.defaultResetToNice":297,"org.easymock.samples.ExampleTest.voteAgainstRemovals":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":73,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":393,"org.easymock.tests.UsageVarargTest.differentLength":144,"org.easymock.tests2.CallbackTest.callback":440,"org.easymock.tests2.UsageConstraintsTest.equals":412,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":345,"org.easymock.tests.UsageTest.openCallCountByLastCall":88,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":408,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":21,"org.easymock.tests.UsageCallCountTest.tooFewCalls":8,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":286,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":228,"org.easymock.tests.UsageThrowableTest.throwCheckedException":54,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":474,"org.easymock.tests.MockingTest.testStrictClassMocking":160,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":1,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":288,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":398,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":285,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":34,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":287,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":357,"org.easymock.tests2.CompareToTest.testGreateOrEqual":471,"org.easymock.tests.ObjectMethodsTest.testHashCode":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":458,"org.easymock.tests2.NameTest.nameForNiceMock":446,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":310,"org.easymock.tests2.DependencyTest.testInterfaceMocking":270,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":457,"org.easymock.samples.ExampleTest.addDocument":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":335,"org.easymock.tests2.DelegateToTest.testStubDelegate":363,"org.easymock.tests2.AnswerTest.stubAnswer":356,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":44,"org.easymock.tests.UsageVarargTest.varargLongAccepted":146,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":102,"org.easymock.tests.UsageExpectAndReturnTest.floatType":60,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":76,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":311,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":250,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":428,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":135,"org.easymock.tests.UsageThrowableTest.noUpperLimit":51,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":267,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":409,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":281,"org.easymock.tests2.SerializationTest.test":438,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":372,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":466,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":230,"org.easymock.tests2.UsageConstraintsTest.testSame":415,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":59,"org.easymock.samples.SupportTest.addDocument":256,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":325,"org.easymock.tests.GenericTest.testPackageScope":15,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":97,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":266,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":167,"org.easymock.tests2.NameTest.nameForMock":444,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":70,"org.easymock.tests2.UsageStrictMockTest.differentMethods":277,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":346,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":62,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":212,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":153,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":221,"org.easymock.tests2.MockedExceptionTest.testRealException":305,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":107,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":106,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":274,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":20,"org.easymock.tests2.NameTest.nameForStrictMock":445,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":315,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":358,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":341,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":282,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":472,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":429,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":232,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":314,"org.easymock.tests2.UsageStrictMockTest.range":276,"org.easymock.tests2.UsageConstraintsTest.lessThan":436,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":491,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":262,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":101,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":327,"org.easymock.tests2.CaptureTest.testCaptureRightOne":377,"org.easymock.tests2.UsageConstraintsTest.testOr":416,"org.easymock.tests.UsageRangeTest.combination":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":338,"org.easymock.tests.UsageTest.wrongArguments":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":326,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":63,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":94,"org.easymock.tests.UsageVarargTest.varargShortAccepted":145,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":234,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":11,"org.easymock.tests2.UsageConstraintsTest.cmpTo":421,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":96,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":296,"org.easymock.tests2.CaptureTest.testCaptureFromStub":378,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":26,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":469,"org.easymock.tests.UsageTest.unexpectedCallWithArray":86,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":43,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":9,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":72,"org.easymock.tests2.CaptureTest.testCapture":461,"org.easymock.tests2.UsageConstraintsTest.constraints":410,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":45,"org.easymock.samples.ExampleTest.addAndChangeDocument":248,"org.easymock.tests.UsageStrictMockTest.testVerify":49,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":253,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":127,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":373,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":467,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":123,"org.easymock.tests.LimitationsTest.abstractClass":37,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":64,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":136,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":453,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":139}}]
