[{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[8,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,15,19,20,29,33,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,74,75,75],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:83","failures":[93,94,95,96,97,98,99,100,101,102,103,104,105,106,38,107,80,81,108,109,82,83,110,42,111,112,51,54,113,114,115,116,117,118,119,120,121,122,123,124,125,87,89,126,127,90,91,128,92,70,129,130,131,72,73,132],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[55,133],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[134,135,136,137,138,139,140,141,1,142,143,144,145,146,3,147,148,149,150,151,152,153,154,155,156,54,114,115,157,158,159,160,9,117,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,55,56,57,58,59,61,62,63,64,178,179,180,181,68,69,182,183,184,70,130,131,71,185,186,187,188,189,190],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[191],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[192],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[11,193,194,12,195],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Invocation:99","failures":[196,197,3,111,198,178,186,187,188,199,189,190],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[200,201,202,203,204],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[205,206,207,5,208,209,210,211,152,156,212,213,214,215,157,216,217,158,218,219,220,221,222,223,224,225,226,159,227,228,229,230,231,160,232,233,8,9,10,74,75],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[81,82,83,114,234,118,121,122,235,88,89,90,91,92,130],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[207,5,236,237,238,239,240,8,10],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[147,241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[76,78,84,85,88,92],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[12],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,74,75,75],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[0,205,206,207,5,208,209,242,243,244,8,9,10,74,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[245,246,247,248,134,135,136,137,138,139,140,249,141,1,142,250,251,252,253,254,255,256,257,258,196,259,197,97,260,261,262,98,263,264,265,266,143,267,268,269,270,271,144,145,272,99,100,273,101,102,103,104,105,274,275,37,276,106,277,146,3,147,148,149,7,278,279,38,107,280,80,81,281,282,108,109,283,82,83,284,110,39,40,285,286,41,42,43,44,287,288,289,111,290,45,291,46,47,112,48,49,50,292,293,294,295,51,52,53,150,151,152,153,154,155,156,296,54,113,114,115,297,298,299,157,158,159,160,8,13,14,9,116,300,301,117,302,303,304,305,306,307,308,161,162,163,164,165,166,309,310,167,168,311,169,170,171,312,172,173,174,175,176,177,193,12,55,56,57,58,59,313,314,315,118,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,119,60,342,61,62,63,64,65,343,344,120,121,122,345,346,133,347,348,349,350,123,351,352,353,354,355,178,179,180,181,67,356,357,358,359,360,361,362,363,124,364,68,69,365,125,87,88,89,126,127,90,91,128,182,183,184,366,92,70,129,130,131,367,368,369,370,371,71,72,372,373,73,374,375,376,132,185,377,186,187,188,199,74,74,75,75,189,190],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[93,94,95,96,80,81,82,83,54,114,115,120,121,122,378,87,89,90,91,92,70,130,131],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.internal.RecordState:262","failures":[268,269,270,271,38,107,109,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,121,349,123,351,352,353,354,355,358,360,361,362,363,124,364,125,127,369,370,372,373,132],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[114,121,122,379,130],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[207,236,237,238,239,240,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[380,93,94,95,96,245,246,247,381,382,383,384,385,386,248,387,388,389,390,391,392,134,135,136,137,138,139,393,394,140,0,395,249,141,1,142,396,2,250,251,252,253,254,255,256,257,258,196,259,197,397,97,260,261,262,98,263,264,265,266,143,267,268,269,270,271,398,399,144,145,272,99,100,273,101,102,103,104,105,274,275,37,276,106,277,205,146,400,206,401,3,402,147,207,148,4,5,6,149,209,7,403,404,405,406,407,278,408,409,410,411,412,413,279,38,107,280,80,81,281,282,108,109,283,82,83,284,110,39,40,285,286,414,41,42,43,44,287,288,289,111,290,45,291,46,47,112,48,49,50,292,293,294,295,51,52,53,415,150,151,152,153,416,154,155,156,212,296,417,54,113,114,115,297,298,418,299,419,420,421,422,423,424,425,213,214,215,157,216,217,158,218,219,220,221,222,223,224,225,226,159,227,228,229,230,231,160,232,233,8,13,14,9,10,426,116,300,301,117,302,303,304,305,306,427,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,307,31,32,33,34,35,308,36,428,429,430,431,432,433,434,435,436,437,438,439,440,441,161,162,163,164,165,166,309,310,167,168,311,169,170,171,312,172,173,174,175,176,442,443,444,177,445,11,193,194,12,195,55,56,57,58,59,446,447,448,449,450,241,451,452,313,314,315,118,316,317,318,453,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,454,455,456,457,458,459,460,461,462,463,464,119,60,342,61,62,63,64,65,465,343,344,466,467,120,121,122,345,346,133,347,348,66,468,469,470,471,472,473,474,475,476,477,478,349,350,123,351,352,353,354,355,479,178,179,180,181,67,356,480,357,358,481,359,235,360,361,362,363,124,364,68,69,482,483,365,484,485,486,487,488,489,125,87,88,89,126,127,90,91,128,490,491,492,182,183,493,184,494,495,496,497,366,498,92,70,129,130,131,367,499,368,369,370,500,371,501,71,72,372,373,73,502,374,503,504,505,506,507,508,509,375,376,132,185,377,186,187,510,188,511,199,512,513,74,75,189,514,515,190,516],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[466],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[349,351],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[466],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.RecordState:163","failures":[98,263],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":286,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":125,"org.easymock.tests2.UsageTest.argumentsOrdered":83,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":25,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":282,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":516,"org.easymock.tests2.DelegateToTest.testReturnException":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":361,"org.easymock.tests.MockingTest.testPartialClassMocking":182,"org.easymock.tests.MockClassControlTest.testToString":430,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":380,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":33,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":221,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":322,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":378,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":145,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":236,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":71,"org.easymock.tests2.UsageTest.wrongArguments":81,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":413,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":318,"org.easymock.samples.ExampleTest.answerVsDelegate":377,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":241,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":495,"org.easymock.tests2.UsageConstraintsTest.testNull":42,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":137,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":435,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":196,"org.easymock.tests2.CaptureTest.testPrimitive":273,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":73,"org.easymock.tests.UsageTest.moreThanOneArgument":87,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":341,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":63,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":465,"org.easymock.tests.UsageTest.argumentsOrdered":91,"org.easymock.tests.UsageVarargTest.varargIntAccepted":456,"org.easymock.tests.InvocationTest.testEquals":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":30,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":55,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":240,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":277,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":421,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":391,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":17,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":59,"org.easymock.tests.ReplayStateInvalidUsageTest.times":475,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":278,"org.easymock.tests2.DependencyTest.testClassMocking":398,"org.easymock.tests2.AnswerTest.answer":97,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":31,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":381,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":448,"org.easymock.tests2.CaptureTest.testAnd":272,"org.easymock.tests2.UsageTest.strictResetToDefault":280,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":62,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":254,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":467,"org.easymock.tests2.DelegateToTest.testDelegate":304,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":337,"org.easymock.tests.LimitationsTest.mockFinalMethod":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":348,"org.easymock.tests2.DependencyTest.testClassMockingSupport":399,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":305,"org.easymock.tests2.CaptureTest.testCapture1_2446744":101,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":394,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":335,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":246,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":469,"org.easymock.tests.UsageThrowableTest.throwError":349,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":450,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":479,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":392,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":65,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":242,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":233,"org.easymock.samples.PartialClassMockTest.testGetArea":189,"org.easymock.tests.MockingTest.testInterfaceMocking":493,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":470,"org.easymock.tests2.CompareToTest.testLessOrEqual":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":56,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":314,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":222,"org.easymock.tests2.UsageTest.niceToStrict":281,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":15,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":3,"org.easymock.tests2.MockBuilderTest.testCreateMock":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":229,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":410,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":76,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":331,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":255,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":447,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":321,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":482,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":316,"org.easymock.tests.UsageOverloadedMethodTest.overloading":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":231,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":46,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":358,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":169,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":375,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":291,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":274,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":457,"org.easymock.tests.MockClassControlTest.testEquals":434,"org.easymock.tests2.EasyMockSupportClassTest.testAll":157,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":194,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":77,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":133,"org.easymock.tests2.CaptureTest.testCaptureAll":99,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":247,"org.easymock.tests.MockNameTest.defaultName":442,"org.easymock.tests2.UsageConstraintsTest.testMatches":47,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":64,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":66,"org.easymock.samples.ExampleTest.voteForRemovals":188,"org.easymock.tests.UsageVarargTest.allKinds":119,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":120,"org.easymock.samples.BasicClassMockTest.testPrintContent":513,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":347,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":354,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":296,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":388,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":364,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":508,"org.easymock.tests2.UsageConstraintsTest.greaterThan":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":216,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":179,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":142,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":509,"org.easymock.samples.ExampleTest.voteForRemoval":186,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":396,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":265,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":451,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":422,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":393,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":497,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":107,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":252,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":360,"org.easymock.tests2.CaptureTest.testCaptureFirst":106,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":253,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":110,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":235,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":310,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":143,"org.easymock.tests2.UsageTest.moreThanOneArgument":80,"org.easymock.tests2.CaptureTest.testCapture2_2446744":276,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":32,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":464,"org.easymock.tests.GenericTest.testBridgedEquals":195,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":488,"org.easymock.tests.UsageExpectAndReturnTest.longType":164,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":345,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":340,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":67,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":294,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":61,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":369,"org.easymock.tests.UsageCallCountTest.tooManyCalls":489,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":230,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":167,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":412,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":327,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":353,"org.easymock.tests.MockingTest.testNiceClassMocking":496,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":151,"org.easymock.tests.MockingTest.testClassMocking":491,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":483,"org.easymock.tests2.UsageConstraintsTest.testContains":45,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":270,"org.easymock.tests2.UsageConstraintsTest.testFind":41,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":132,"org.easymock.tests.MockTypeTest.fromEasyMockClass":449,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":299,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":366,"org.easymock.tests.UsageExpectAndReturnTest.object":311,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":411,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":258,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":459,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":237,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":439,"org.easymock.tests.UsageTest.exactCallCountByLastCall":128,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":20,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":500,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":343,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":10,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":454,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":173,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":357,"org.easymock.tests.MockClassControlTest.testHashCode":433,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":383,"org.easymock.tests2.EasyMockSupportTest.testVerify":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":224,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":344,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":320,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":356,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":245,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":415,"org.easymock.tests.UsageVarargTest.varargCharAccepted":458,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":502,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":36,"org.easymock.tests2.UsageTest.openCallCountByLastCall":108,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":197,"org.easymock.tests.DefaultClassInstantiatorTest.object":374,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":319,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":437,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":329,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":382,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":432,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":141,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":328,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":174,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":368,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":160,"org.easymock.tests2.UsageTest.resumeIfFailure":284,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":446,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":363,"org.easymock.tests2.StubTest.stubWithReturnValue":38,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":207,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":168,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":295,"org.easymock.tests2.SerializationTest.testAllMockedMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":307,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":244,"org.easymock.samples.SupportTest.voteForRemovals":190,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":78,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":11,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":334,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":308,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":260,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":501,"org.easymock.tests.UsageExpectAndThrowTest.object":332,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":292,"org.easymock.tests2.DelegateToTest.testWrongClass":302,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":68,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":69,"org.easymock.tests.UsageStrictMockTest.range":130,"org.easymock.samples.ConstructorCalledMockTest.testTax":74,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":424,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":257,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":150,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":333,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":147,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":477,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":317,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":84,"org.easymock.tests2.CaptureTest.testCaptureNone":105,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":315,"org.easymock.tests.UsageUnorderedTest.message":118,"org.easymock.tests.UsageVerifyTest.twoReturns":122,"org.easymock.tests.UsageVarargTest.varargByteAccepted":463,"org.easymock.tests2.ThreadingTest.testThreadSafe":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":227,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":486,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":512,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":440,"org.easymock.tests2.CaptureTest.testCapture_2617107":100,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":79,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":373,"org.easymock.tests2.UsageConstraintsTest.any":111,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":474,"org.easymock.tests2.StubTest.stub":279,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":35,"org.easymock.tests.UsageExpectAndThrowTest.longType":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":362,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":506,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":473,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":113,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":248,"org.easymock.tests.LimitationsTest.mockNativeMethod":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":176,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":12,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":405,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":297,"org.easymock.tests2.NameTest.nameForMocksControl":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":407,"org.easymock.tests2.MockedExceptionTest.testMockedException":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":217,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":127,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":418,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":184,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":326,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":148,"org.easymock.tests.MockingTest.testNicePartialClassMocking":183,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":139,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":403,"org.easymock.tests2.CaptureTest.testCaptureLast":104,"org.easymock.tests2.CompareToTest.testCompareEqual":202,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":306,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":156,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":287,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":293,"org.easymock.tests.MockingTest.testTwoMocks":492,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":212,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":330,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":82,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":52,"org.easymock.samples.ExampleTest.removeNonExistingDocument":511,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":471,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":409,"org.easymock.tests.UsageStrictMockTest.differentMethods":131,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":384,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":504,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":266,"org.easymock.tests2.MockBuilderTest.testCreateMockString":7,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":218,"org.easymock.tests.UsageExpectAndThrowTest.floatType":324,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":215,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":426,"org.easymock.tests.UsageVerifyTest.twoThrows":121,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":159,"org.easymock.samples.ExampleTest.voteAgainstRemoval":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":26,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":313,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":1,"org.easymock.tests.LimitationsTest.privateConstructor":444,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":211,"org.easymock.tests2.UsageConstraintsTest.testNotNull":51,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":268,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":355,"org.easymock.tests2.UsageTest.defaultResetToNice":283,"org.easymock.samples.ExampleTest.voteAgainstRemovals":185,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":27,"org.easymock.tests.UsageVarargTest.differentLength":460,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":404,"org.easymock.tests2.CallbackTest.callback":116,"org.easymock.tests2.UsageConstraintsTest.equals":414,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":0,"org.easymock.tests.UsageTest.openCallCountByLastCall":126,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":372,"org.easymock.tests.UsageCallCountTest.tooFewCalls":484,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":153,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":453,"org.easymock.tests.UsageThrowableTest.throwCheckedException":352,"org.easymock.tests.MockingTest.testStrictClassMocking":490,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":85,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":155,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":342,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":408,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":152,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":476,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":154,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":263,"org.easymock.tests.ObjectMethodsTest.testHashCode":438,"org.easymock.tests2.CompareToTest.testGreateOrEqual":203,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":191,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":239,"org.easymock.tests2.NameTest.nameForNiceMock":95,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":267,"org.easymock.tests2.DependencyTest.testInterfaceMocking":144,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":238,"org.easymock.samples.ExampleTest.addDocument":510,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":228,"org.easymock.tests2.DelegateToTest.testStubDelegate":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":232,"org.easymock.tests2.AnswerTest.stubAnswer":98,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":70,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":4,"org.easymock.tests.UsageVarargTest.varargLongAccepted":462,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":24,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":175,"org.easymock.tests.UsageExpectAndReturnTest.floatType":163,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":9,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":75,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":481,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":390,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":49,"org.easymock.tests.UsageThrowableTest.noUpperLimit":350,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":40,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":419,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":102,"org.easymock.tests2.SerializationTest.test":13,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":503,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":162,"org.easymock.tests2.UsageConstraintsTest.testSame":43,"org.easymock.samples.SupportTest.addDocument":515,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":416,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":219,"org.easymock.tests.GenericTest.testPackageScope":193,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":19,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":389,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":494,"org.easymock.tests2.NameTest.nameForMock":93,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":170,"org.easymock.tests2.UsageStrictMockTest.differentMethods":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":209,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":395,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":165,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":336,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":436,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":181,"org.easymock.tests2.MockedExceptionTest.testRealException":271,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":452,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":29,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":28,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":54,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":478,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":72,"org.easymock.tests2.NameTest.nameForStrictMock":94,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":401,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":298,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":138,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":423,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":505,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":50,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":146,"org.easymock.tests2.UsageStrictMockTest.range":114,"org.easymock.tests2.UsageConstraintsTest.lessThan":53,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":23,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":223,"org.easymock.tests2.CaptureTest.testCaptureRightOne":275,"org.easymock.tests2.UsageConstraintsTest.testOr":44,"org.easymock.tests.UsageRangeTest.combination":178,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":135,"org.easymock.tests.UsageTest.wrongArguments":89,"org.easymock.tests2.MockBuilderTest.testWithConstructor":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":220,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":429,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":166,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":16,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":507,"org.easymock.tests.UsageVarargTest.varargShortAccepted":461,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":487,"org.easymock.tests2.UsageConstraintsTest.cmpTo":290,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":261,"org.easymock.tests2.CompareToTest.testLessThan":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":18,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":109,"org.easymock.tests2.CaptureTest.testCaptureFromStub":37,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":468,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":400,"org.easymock.tests.UsageTest.unexpectedCallWithArray":88,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":92,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":485,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":208,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":312,"org.easymock.tests2.CaptureTest.testCapture":192,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":129,"org.easymock.tests2.UsageConstraintsTest.constraints":285,"org.easymock.samples.ExampleTest.addAndChangeDocument":199,"org.easymock.tests.UsageStrictMockTest.testVerify":499,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":514,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":498,"org.easymock.tests2.CompareToTest.testGreateThan":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":346,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":57,"org.easymock.tests.LimitationsTest.abstractClass":443,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":58,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":359,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":455,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":256,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":379}}]
