[{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[28,29,30,31,32,33,34,35,35,36,36,37,38,39,40,41,42,43,44,45,0,46,47,48,49,50,51,2,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,10,11,12,13,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,14,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,15,16,17,18,19,20,21,22,23,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,24,255,256,257,258,259,260,261,25,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[145,146],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[40,298],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:327","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[299,300,301,302,197,290],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[15,279],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[47,50,51,140,303,304,305,155,177,178,179,306,198,201,202,307,203,308,289],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[309,310,311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:37","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(int.int, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[374,375],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[41,117,135,268],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[47,49,50,140,303,304,305,155,156,162,163,177,178,179,197,198,200,201,250,289,291,294,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[49,50,200,201],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[16,280],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"this.org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[14,18,19,20,21,22,23,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[29,30,31,32,376,33,34,38,39,40,41,42,44,0,46,377,47,48,49,50,51,2,52,314,53,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,85,87,88,10,11,12,13,378,90,91,92,379,94,95,96,98,111,14,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,303,304,305,141,144,145,146,318,148,321,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,174,175,176,380,177,178,179,180,181,182,183,184,187,188,189,190,191,192,193,194,195,196,381,197,198,199,200,201,202,382,18,19,20,21,22,23,307,383,203,308,384,385,204,356,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,386,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,254,24,255,256,257,258,259,260,261,25,262,263,265,266,267,387,388,389,390,391,392,393,394,268,269,270,271,272,273,274,275,276,277,278,366,373,284,285,286,287,288,289,290,291,292,293,294,295,296],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[120],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[47,49,50,78,80,197,198,200,201,382],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1831","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(double , double))","type":"CtInvocationImpl"},"failures":[131],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[35,35,36,36,315,395],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":115,"org.easymock.tests2.UsageTest.argumentsOrdered":163,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":288,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":109,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":158,"org.easymock.tests2.DelegateToTest.testReturnException":94,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":19,"org.easymock.tests.MockingTest.testPartialClassMocking":276,"org.easymock.tests.MockClassControlTest.testToString":367,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":185,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":167,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":230,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":45,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":3,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":121,"org.easymock.tests2.UsageTest.wrongArguments":156,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":260,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":176,"org.easymock.samples.ExampleTest.answerVsDelegate":30,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":354,"org.easymock.tests2.UsageConstraintsTest.testNull":117,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":78,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":108,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":372,"org.easymock.tests2.CaptureTest.testPrimitive":64,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":263,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":249,"org.easymock.tests.UsageTest.moreThanOneArgument":289,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":77,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":273,"org.easymock.tests.UsageTest.argumentsOrdered":295,"org.easymock.tests.UsageVarargTest.varargIntAccepted":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":180,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":318,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":310,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":184,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":43,"org.easymock.tests2.AnswerTest.answer":141,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":122,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":379,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests2.UsageTest.strictResetToDefault":154,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":286,"org.easymock.tests2.DelegateToTest.testDelegate":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":245,"org.easymock.tests.LimitationsTest.mockFinalMethod":360,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":22,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":259,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":186,"org.easymock.tests2.CaptureTest.testCapture1_2446744":65,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":243,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":91,"org.easymock.tests.UsageThrowableTest.throwError":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":345,"org.easymock.samples.PartialClassMockTest.testGetArea":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":181,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":172,"org.easymock.tests2.UsageTest.niceToStrict":157,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":334,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":148,"org.easymock.tests2.MockBuilderTest.testCreateMock":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":341,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":239,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":299,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":104,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":281,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":174,"org.easymock.tests.UsageOverloadedMethodTest.overloading":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":343,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":127,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":228,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":217,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":264,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":126,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":70,"org.easymock.tests2.EasyMockSupportClassTest.testAll":166,"org.easymock.tests.MockClassControlTest.testEquals":371,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":356,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":247,"org.easymock.tests2.CaptureTest.testCaptureAll":62,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":92,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":257,"org.easymock.tests2.UsageConstraintsTest.testMatches":128,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":274,"org.easymock.samples.ExampleTest.voteForRemovals":33,"org.easymock.tests.UsageVarargTest.allKinds":268,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":258,"org.easymock.samples.BasicClassMockTest.testPrintContent":313,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":194,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":46,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":23,"org.easymock.tests2.UsageConstraintsTest.greaterThan":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":328,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":285,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":86,"org.easymock.samples.ExampleTest.voteForRemoval":31,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":352,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":39,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":311,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":81,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":153,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":373,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":26,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":101,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":18,"org.easymock.tests2.CaptureTest.testCaptureFirst":74,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":93,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":102,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":165,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":213,"org.easymock.tests2.UsageTest.moreThanOneArgument":155,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":41,"org.easymock.tests2.CaptureTest.testCapture2_2446744":73,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":151,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":394,"org.easymock.tests.GenericTest.testBridgedEquals":357,"org.easymock.tests.UsageExpectAndReturnTest.longType":209,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":248,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":170,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":135,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":246,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":271,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":342,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":214,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":235,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":193,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":55,"org.easymock.tests.MockingTest.testNiceClassMocking":364,"org.easymock.tests.MockingTest.testClassMocking":362,"org.easymock.tests2.UsageConstraintsTest.testContains":125,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":383,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":12,"org.easymock.tests2.UsageConstraintsTest.testFind":116,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":266,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":88,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":196,"org.easymock.tests.UsageExpectAndReturnTest.object":216,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":82,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":107,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":390,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":4,"org.easymock.tests.UsageTest.exactCallCountByLastCall":296,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":254,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":222,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":267,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":227,"org.easymock.tests.MockClassControlTest.testHashCode":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":336,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":253,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":226,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":280,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":90,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":378,"org.easymock.tests.UsageVarargTest.varargCharAccepted":389,"org.easymock.tests2.CaptureTest.testCaptureMultiple":27,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":377,"org.easymock.tests2.UsageTest.openCallCountByLastCall":159,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":110,"org.easymock.tests.DefaultClassInstantiatorTest.object":346,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":279,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":337,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":191,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":84,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":369,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":236,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":223,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":169,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":368,"org.easymock.tests2.UsageTest.resumeIfFailure":164,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":353,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":21,"org.easymock.tests2.StubTest.stubWithReturnValue":14,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":8,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":136,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":215,"org.easymock.tests2.SerializationTest.testAllMockedMethod":314,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":282,"org.easymock.samples.SupportTest.voteForRemovals":28,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":300,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":355,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":242,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":283,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":142,"org.easymock.tests.UsageExpectAndThrowTest.object":240,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":133,"org.easymock.tests2.DelegateToTest.testWrongClass":96,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":269,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":270,"org.easymock.samples.ConstructorCalledMockTest.testTax":35,"org.easymock.tests.UsageStrictMockTest.range":200,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":106,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":54,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":241,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":149,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":325,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":175,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":301,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":173,"org.easymock.tests2.CaptureTest.testCaptureNone":69,"org.easymock.tests.UsageUnorderedTest.message":250,"org.easymock.tests.UsageVerifyTest.twoReturns":179,"org.easymock.tests.UsageVarargTest.varargByteAccepted":393,"org.easymock.tests2.ThreadingTest.testThreadSafe":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":339,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":385,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":312,"org.easymock.tests2.CaptureTest.testCapture_2617107":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":306,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":262,"org.easymock.tests2.UsageConstraintsTest.any":123,"org.easymock.tests2.StubTest.stub":111,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":17,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":20,"org.easymock.tests.UsageExpectAndThrowTest.longType":233,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":350,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":48,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":89,"org.easymock.tests.LimitationsTest.mockNativeMethod":251,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":205,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":225,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":51,"org.easymock.tests2.NameTest.nameForMocksControl":305,"org.easymock.tests2.MockedExceptionTest.testMockedException":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":329,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":293,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":234,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":278,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":75,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":150,"org.easymock.tests.MockingTest.testNicePartialClassMocking":277,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":80,"org.easymock.tests2.CaptureTest.testCaptureLast":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":187,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":120,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":60,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":134,"org.easymock.tests.MockingTest.testTwoMocks":363,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":238,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":162,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":138,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":386,"org.easymock.tests.UsageStrictMockTest.differentMethods":201,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":348,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":40,"org.easymock.tests2.MockBuilderTest.testCreateMockString":152,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":365,"org.easymock.tests.UsageExpectAndThrowTest.floatType":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":330,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":327,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":144,"org.easymock.tests.UsageVerifyTest.twoThrows":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":168,"org.easymock.samples.ExampleTest.voteAgainstRemoval":32,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":171,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":85,"org.easymock.tests.LimitationsTest.privateConstructor":359,"org.easymock.tests2.UsageConstraintsTest.testNotNull":137,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":10,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":195,"org.easymock.tests2.UsageTest.defaultResetToNice":161,"org.easymock.samples.ExampleTest.voteAgainstRemovals":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":221,"org.easymock.tests2.CallbackTest.callback":53,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":315,"org.easymock.tests.UsageTest.openCallCountByLastCall":292,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":112,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":25,"org.easymock.tests.UsageCallCountTest.tooFewCalls":308,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":57,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":380,"org.easymock.tests.UsageThrowableTest.throwCheckedException":192,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":302,"org.easymock.tests.MockingTest.testStrictClassMocking":361,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":24,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":59,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":56,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":58,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":146,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":42,"org.easymock.tests2.NameTest.nameForNiceMock":304,"org.easymock.tests2.DependencyTest.testInterfaceMocking":44,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":5,"org.easymock.samples.ExampleTest.addDocument":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":340,"org.easymock.tests2.DelegateToTest.testStubDelegate":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.AnswerTest.stubAnswer":145,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":198,"org.easymock.tests.UsageVarargTest.varargLongAccepted":392,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":202,"org.easymock.tests.UsageExpectAndReturnTest.floatType":208,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":224,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":0,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":36,"org.easymock.tests.UsageThrowableTest.noUpperLimit":189,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":131,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":113,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":323,"org.easymock.tests2.SerializationTest.test":52,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":66,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":347,"org.easymock.tests2.UsageConstraintsTest.testSame":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":331,"org.easymock.tests.GenericTest.testPackageScope":204,"org.easymock.tests2.NameTest.nameForMock":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":218,"org.easymock.tests2.UsageStrictMockTest.differentMethods":50,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":316,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":210,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":244,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":287,"org.easymock.tests2.MockedExceptionTest.testRealException":13,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":261,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":375,"org.easymock.tests2.NameTest.nameForStrictMock":303,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":320,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":87,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":79,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":324,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":132,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":349,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":147,"org.easymock.tests2.UsageStrictMockTest.range":49,"org.easymock.tests2.UsageConstraintsTest.lessThan":139,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":100,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":6,"org.easymock.tests2.CaptureTest.testCaptureRightOne":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":335,"org.easymock.tests2.UsageConstraintsTest.testOr":119,"org.easymock.tests.UsageRangeTest.combination":284,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":76,"org.easymock.tests.UsageTest.wrongArguments":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":332,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":366,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":211,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":219,"org.easymock.tests.UsageVarargTest.varargShortAccepted":391,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":351,"org.easymock.tests2.UsageConstraintsTest.cmpTo":124,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":143,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":160,"org.easymock.tests2.CaptureTest.testCaptureFromStub":72,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":374,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":319,"org.easymock.tests.UsageTest.unexpectedCallWithArray":290,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":197,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":384,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":395,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":220,"org.easymock.tests2.CaptureTest.testCapture":297,"org.easymock.tests2.UsageConstraintsTest.constraints":114,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":199,"org.easymock.samples.ExampleTest.addAndChangeDocument":34,"org.easymock.tests.UsageStrictMockTest.testVerify":382,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":381,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":256,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":182,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":212,"org.easymock.tests.LimitationsTest.abstractClass":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":183,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":229,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":105}}]
