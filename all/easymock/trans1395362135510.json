[{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[12,13,14,15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:115","sourceCode":"for (final org.easymock.internal.MethodSerializationWrapper org.easymock.internal.MethodSerializationWrapper : java.util.Set<org.easymock.internal.MethodSerializationWrapper>) {\n    try {\n        java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod());\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n    }\n}","type":"CtForEachImpl"},"failures":[16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:269","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[12,17,13,18],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,36,37,38,39,40,41,42,43,44,45,46,47,48,19,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[74,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[20,0,37,40,41,44,52,57,59,61,64,65,68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1621","sourceCode":"return null","type":"CtReturnImpl"},"failures":[8],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:105","sourceCode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()","type":"CtInvocationImpl"},"failures":[77],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,20,21,22,23,100,101,102,103,104,105,12,106,17,9,107,24,108,109,110,111,25,112,113,8,114,115,26,13,116,117,14,118,119,18,27,120,121,122,28,29,123,30,31,32,33,34,124,125,126,127,35,0,128,36,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,37,170,38,39,171,172,40,41,173,42,43,174,44,175,176,177,178,179,180,181,182,183,184,185,186,16,187,188,189,190,191,192,1,19,2,193,49,194,50,195,196,197,198,199,200,201,202,203,204,205,206,207,51,52,53,54,55,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,56,233,234,235,236,57,58,59,237,238,239,240,241,242,242,243,244,60,245,246,247,248,249,250,251,252,61,62,253,63,64,65,66,67,68,254,255,256,257,258,259,260,261,262,263,69,264,265,266,267,268,269,270,70,271,272,71,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,72,300,301,73,302,303,304,305,306,3,4,307,308],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[309],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[58,303,304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[310,69],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[311,312,313,314,315,316,317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:441","sourceCode":"return java.util.List<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.List<java.lang.reflect.Method>.size()])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[318],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[131],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":9,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests2.UsageTest.argumentsOrdered":43,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":232,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":172,"org.easymock.tests2.StubTest.stubWithReturnValue":50,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":312,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":218,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":89,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":18,"org.easymock.tests2.SerializationTest.testAllMockedMethod":188,"org.easymock.tests2.DelegateToTest.testReturnException":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":230,"org.easymock.tests.MockingTest.testPartialClassMocking":239,"org.easymock.samples.SupportTest.voteForRemovals":91,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":280,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":190,"org.easymock.tests.UsageExpectAndThrowTest.object":290,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":95,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":14,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":313,"org.easymock.tests2.DelegateToTest.testWrongClass":2,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":273,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":77,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":274,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":270,"org.easymock.tests2.UsageTest.wrongArguments":39,"org.easymock.samples.ConstructorCalledMockTest.testTax":85,"org.easymock.tests.UsageStrictMockTest.range":54,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":197,"org.easymock.samples.ExampleTest.answerVsDelegate":79,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":155,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":180,"org.easymock.tests2.UsageConstraintsTest.testNull":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":291,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":133,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":157,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":165,"org.easymock.tests2.CaptureTest.testPrimitive":123,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":71,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":299,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":66,"org.easymock.tests.UsageTest.moreThanOneArgument":62,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":196,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":132,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":203,"org.easymock.tests2.CaptureTest.testCaptureNone":34,"org.easymock.tests.UsageUnorderedTest.message":72,"org.easymock.tests.UsageVerifyTest.twoReturns":59,"org.easymock.tests.UsageVarargTest.varargByteAccepted":262,"org.easymock.tests2.ThreadingTest.testThreadSafe":143,"org.easymock.tests.UsageTest.argumentsOrdered":67,"org.easymock.tests.UsageVarargTest.varargIntAccepted":256,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":249,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":92,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":264,"org.easymock.tests2.CaptureTest.testCapture_2617107":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":317,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":272,"org.easymock.tests2.UsageConstraintsTest.any":25,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":164,"org.easymock.tests2.StubTest.stub":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":268,"org.easymock.tests.UsageExpectAndThrowTest.longType":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":231,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":21,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":179,"org.easymock.tests.LimitationsTest.mockNativeMethod":245,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":105,"org.easymock.tests2.DependencyTest.testClassMocking":5,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":228,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":104,"org.easymock.tests2.CaptureTest.testAnd":122,"org.easymock.tests2.UsageTest.strictResetToDefault":170,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":318,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":138,"org.easymock.tests2.NameTest.nameForMocksControl":48,"org.easymock.tests2.MockedExceptionTest.testMockedException":176,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":202,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":152,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":65,"org.easymock.tests2.DelegateToTest.testDelegate":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":284,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":241,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":130,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":166,"org.easymock.tests.MockingTest.testNicePartialClassMocking":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":295,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":135,"org.easymock.tests2.CompareToTest.testCompareEqual":10,"org.easymock.tests2.CaptureTest.testCaptureLast":33,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":56,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":110,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":279,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":118,"org.easymock.tests2.DependencyTest.testClassMockingSupport":6,"org.easymock.tests2.CaptureTest.testCapture1_2446744":30,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":288,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":102,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":120,"org.easymock.tests.UsageThrowableTest.throwError":300,"org.easymock.tests.UsageStrictMockTest.differentMethods":55,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":145,"org.easymock.tests2.MockBuilderTest.testCreateMockString":169,"org.easymock.tests.UsageExpectAndThrowTest.floatType":282,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":205,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":26,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":128,"org.easymock.tests.UsageVerifyTest.twoThrows":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":191,"org.easymock.samples.PartialClassMockTest.testGetArea":88,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":265,"org.easymock.samples.ExampleTest.voteAgainstRemoval":81,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":140,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":281,"org.easymock.tests2.UsageTest.niceToStrict":171,"org.easymock.tests2.UsageConstraintsTest.testNotNull":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":306,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":175,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":163,"org.easymock.tests2.MockBuilderTest.testCreateMock":167,"org.easymock.tests2.UsageTest.defaultResetToNice":173,"org.easymock.samples.ExampleTest.voteAgainstRemovals":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":224,"org.easymock.tests.UsageVarargTest.differentLength":259,"org.easymock.tests2.CallbackTest.callback":49,"org.easymock.tests2.UsageConstraintsTest.equals":310,"org.easymock.tests.UsageTest.openCallCountByLastCall":64,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":289,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":153,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":12,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":271,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":195,"org.easymock.tests.UsageCallCountTest.tooFewCalls":247,"org.easymock.tests.UsageOverloadedMethodTest.overloading":244,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":307,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":114,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":220,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":183,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":8,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":124,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":198,"org.easymock.tests.UsageThrowableTest.throwCheckedException":303,"org.easymock.tests2.EasyMockSupportClassTest.testAll":189,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":200,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":297,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":277,"org.easymock.tests2.CaptureTest.testCaptureAll":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":103,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":238,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":185,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":182,"org.easymock.tests2.UsageConstraintsTest.testMatches":115,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":184,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":204,"org.easymock.samples.ExampleTest.voteForRemovals":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":316,"org.easymock.tests2.NameTest.nameForNiceMock":47,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":147,"org.easymock.tests.UsageVarargTest.allKinds":69,"org.easymock.tests2.DependencyTest.testInterfaceMocking":94,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":278,"org.easymock.samples.BasicClassMockTest.testPrintContent":93,"org.easymock.samples.ExampleTest.addDocument":82,"org.easymock.tests2.DelegateToTest.testStubDelegate":19,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":305,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":98,"org.easymock.tests2.AnswerTest.stubAnswer":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":233,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":52,"org.easymock.tests2.UsageConstraintsTest.greaterThan":13,"org.easymock.tests.UsageVarargTest.varargLongAccepted":261,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":141,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":208,"org.easymock.samples.ExampleTest.voteForRemoval":80,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":227,"org.easymock.tests.UsageExpectAndReturnTest.floatType":211,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":136,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":142,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":86,"org.easymock.tests.UsageThrowableTest.noUpperLimit":301,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":116,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":269,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":106,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":31,"org.easymock.tests2.SerializationTest.test":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":150,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":73,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":210,"org.easymock.tests2.UsageConstraintsTest.testSame":108,"org.easymock.samples.SupportTest.addDocument":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":229,"org.easymock.tests2.CaptureTest.testCaptureFirst":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":151,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":44,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":216,"org.easymock.tests.GenericTest.testPackageScope":199,"org.easymock.tests2.UsageTest.moreThanOneArgument":38,"org.easymock.tests2.CaptureTest.testCapture2_2446744":127,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":146,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":168,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":263,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":251,"org.easymock.tests2.NameTest.nameForMock":45,"org.easymock.tests.UsageExpectAndReturnTest.longType":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":275,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":298,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":221,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":75,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":119,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":296,"org.easymock.tests2.UsageStrictMockTest.differentMethods":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":201,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":213,"org.easymock.tests.UsageCallCountTest.tooManyCalls":252,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":294,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":236,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":246,"org.easymock.tests2.MockedExceptionTest.testRealException":178,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":217,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":285,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":304,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":70,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":181,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":74,"org.easymock.tests2.NameTest.nameForStrictMock":46,"org.easymock.tests2.UsageConstraintsTest.testContains":113,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":177,"org.easymock.tests2.UsageConstraintsTest.testFind":107,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":60,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":96,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":134,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":206,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":97,"org.easymock.tests.UsageExpectAndReturnTest.object":219,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":117,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":137,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":162,"org.easymock.tests2.UsageStrictMockTest.range":22,"org.easymock.tests2.UsageConstraintsTest.lessThan":121,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":314,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":258,"org.easymock.tests.UsageTest.exactCallCountByLastCall":68,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":237,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":149,"org.easymock.tests2.CaptureTest.testCaptureRightOne":125,"org.easymock.tests2.UsageConstraintsTest.testOr":109,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":311,"org.easymock.tests.UsageRangeTest.combination":234,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":254,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":225,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":131,"org.easymock.tests.UsageTest.wrongArguments":63,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":4,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":214,"org.easymock.tests2.EasyMockSupportTest.testVerify":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":222,"org.easymock.tests.UsageVarargTest.varargShortAccepted":260,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":3,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":250,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":101,"org.easymock.tests2.UsageConstraintsTest.cmpTo":112,"org.easymock.tests.UsageVarargTest.varargCharAccepted":257,"org.easymock.tests2.CompareToTest.testLessThan":76,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":99,"org.easymock.tests2.UsageTest.openCallCountByLastCall":40,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":41,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":159,"org.easymock.tests2.CaptureTest.testCaptureFromStub":126,"org.easymock.tests.UsageTest.unexpectedCallWithArray":253,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":287,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":302,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":51,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":248,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":11,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":223,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":53,"org.easymock.tests2.UsageConstraintsTest.constraints":17,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":139,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":286,"org.easymock.samples.ExampleTest.addAndChangeDocument":84,"org.easymock.tests.CapturesMatcherTest.test":242,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":226,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":87,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":276,"org.easymock.tests2.CompareToTest.testGreateThan":15,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":32,"org.easymock.tests2.UsageTest.resumeIfFailure":174,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":266,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":267,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":255,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":154}}]
