[{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[4,4,5,5,6,7,8,9,10,11,12,13,14,15,16,0,1,17,18,19,20,21,22,3,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[63,64,65,66,29,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[110,111],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[112,113,114,115,116],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:64","sourceCode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], int, int)","type":"CtInvocationImpl"},"failures":[117,118,119,120,121,122,123,124,125,126,127,128,129,130],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"this.org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[131,132],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:203","sourceCode":"return java.io.ObjectInputStream.readObject()","type":"CtReturnImpl"},"failures":[133,134,135],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[137],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[138,45],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[19,139,140,141,36,142,143,144,145,146],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[147,148,149,150,116],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[151],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[152],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[117,153,154,155,156,118,157,158,4,4,5,5,159,6,160,161,119,7,8,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,147,196,148,110,197,111,198,199,200,201,202,203,137,204,205,206,207,208,209,149,210,151,211,212,213,150,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,131,232,233,234,235,9,10,236,11,12,13,14,237,15,238,239,16,0,1,17,240,18,19,139,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,20,21,22,259,3,23,24,25,141,26,27,28,63,260,261,262,263,264,265,64,266,267,268,269,270,65,66,29,67,271,272,273,274,275,276,277,278,279,280,281,282,30,31,32,33,283,34,35,36,284,37,285,286,287,38,288,289,39,290,291,292,293,294,295,296,297,298,40,299,300,301,302,303,41,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,68,319,320,321,322,138,42,43,44,45,323,324,325,326,327,328,329,330,331,133,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,69,70,71,72,73,74,363,364,365,366,367,368,369,370,75,371,372,76,373,374,375,376,377,378,379,380,381,132,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,46,47,48,401,49,402,403,404,405,406,407,408,409,77,410,411,412,413,414,50,51,415,416,52,417,418,419,420,53,421,422,423,424,425,426,427,428,429,430,431,432,433,152,434,435,436,437,438,439,440,441,54,55,56,57,58,59,60,61,442,443,444,78,445,446,447,448,79,449,450,451,120,121,122,452,123,124,125,126,127,128,129,130,453,454,455,456,457,458,459,62,460,461,80,81,462,463,464,465,466,467,468,469,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,470,102,471,103,104,105,106,107,108,472,473,474,475,476,477,478,479,480,481,482,109,483,484,485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[486,218,229,230,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[153,170,172,231,233,235,317,480],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[4,4,5,5,6,7,8,166,167,9,10,11,12,13,14,15,238,239,16,0,1,17,240,18,19,139,20,21,22,259,3,23,24,25,141,26,27,28,65,66,29,30,31,32,33,34,35,36,37,285,286,287,38,288,289,39,290,291,292,293,294,295,296,297,298,40,299,300,301,302,303,41,304,305,488,489,138,42,43,44,45,328,329,330,331,133,332,333,399,400,46,47,48,49,404,50,51,52,419,420,53,421,54,56,57,58,59,60,61,62],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1065","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[212,213],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":110,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":78,"org.easymock.tests2.UsageTest.argumentsOrdered":268,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":256,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":385,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":264,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":160,"org.easymock.tests2.DelegateToTest.testReturnException":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":70,"org.easymock.tests.MockingTest.testPartialClassMocking":47,"org.easymock.tests.MockClassControlTest.testToString":56,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":306,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":293,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":39,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":82,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":142,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":202,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":460,"org.easymock.tests2.UsageTest.wrongArguments":262,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":195,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":321,"org.easymock.samples.ExampleTest.answerVsDelegate":153,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":52,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":403,"org.easymock.tests2.UsageConstraintsTest.testNull":198,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":11,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":61,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":255,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":488,"org.easymock.tests2.CaptureTest.testPrimitive":220,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":462,"org.easymock.tests.UsageTest.moreThanOneArgument":445,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":101,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":325,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":472,"org.easymock.tests.UsageTest.argumentsOrdered":450,"org.easymock.tests.UsageVarargTest.varargIntAccepted":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":390,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":453,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":20,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":281,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":457,"org.easymock.tests.ReplayStateInvalidUsageTest.times":438,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":189,"org.easymock.tests2.DependencyTest.testClassMocking":162,"org.easymock.tests2.AnswerTest.answer":231,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":392,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":183,"org.easymock.tests2.CaptureTest.testAnd":217,"org.easymock.tests2.UsageTest.strictResetToDefault":260,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":365,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":476,"org.easymock.tests2.DelegateToTest.testDelegate":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":97,"org.easymock.tests.LimitationsTest.mockFinalMethod":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":469,"org.easymock.tests2.DependencyTest.testClassMockingSupport":163,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":373,"org.easymock.tests2.CaptureTest.testCapture1_2446744":221,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":95,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":181,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":433,"org.easymock.tests.UsageThrowableTest.throwError":102,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":416,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":282,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":305,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.MockingTest.testInterfaceMocking":401,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":152,"org.easymock.tests2.CompareToTest.testLessOrEqual":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":454,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":406,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":83,"org.easymock.tests2.UsageTest.niceToStrict":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":376,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":3,"org.easymock.tests2.MockBuilderTest.testCreateMock":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":301,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":192,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":91,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":251,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":479,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":422,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":319,"org.easymock.tests.UsageOverloadedMethodTest.overloading":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":303,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":109,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":207,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":408,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":354,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":134,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":206,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":226,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":452,"org.easymock.tests2.EasyMockSupportClassTest.testAll":38,"org.easymock.tests.MockClassControlTest.testEquals":60,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":43,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":182,"org.easymock.tests2.CaptureTest.testCaptureAll":218,"org.easymock.tests.MockNameTest.defaultName":459,"org.easymock.tests2.UsageConstraintsTest.testMatches":208,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":326,"org.easymock.samples.ExampleTest.voteForRemovals":118,"org.easymock.tests.UsageVarargTest.allKinds":130,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":370,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":468,"org.easymock.samples.BasicClassMockTest.testPrintContent":8,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":107,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":173,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":74,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":278,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":315,"org.easymock.tests2.UsageConstraintsTest.greaterThan":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":364,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":17,"org.easymock.samples.ExampleTest.voteForRemoval":154,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":333,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":240,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":242,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":417,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":14,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":62,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":248,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":69,"org.easymock.tests2.CaptureTest.testCaptureFirst":230,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":249,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":270,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":485,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":350,"org.easymock.tests2.CaptureTest.testCapture2_2446744":229,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":244,"org.easymock.tests2.UsageTest.moreThanOneArgument":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":393,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":27,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":129,"org.easymock.tests.GenericTest.testBridgedEquals":45,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":429,"org.easymock.tests.UsageExpectAndReturnTest.longType":346,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":465,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":246,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":100,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":458,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":213,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":98,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":443,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":323,"org.easymock.tests.UsageCallCountTest.tooManyCalls":430,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":302,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":194,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":87,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":106,"org.easymock.tests.MockingTest.testNiceClassMocking":404,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":31,"org.easymock.tests.MockingTest.testClassMocking":400,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":423,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":2,"org.easymock.tests2.UsageConstraintsTest.testContains":205,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":29,"org.easymock.tests2.UsageConstraintsTest.testFind":111,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":77,"org.easymock.tests.MockTypeTest.fromEasyMockClass":415,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":172,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":334,"org.easymock.tests.UsageExpectAndReturnTest.object":353,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":143,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":124,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":413,"org.easymock.tests.UsageTest.exactCallCountByLastCall":451,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":473,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":139,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":120,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":359,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":482,"org.easymock.tests.MockClassControlTest.testHashCode":59,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":272,"org.easymock.tests2.EasyMockSupportTest.testVerify":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":296,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":474,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":480,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":478,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":180,"org.easymock.tests.UsageVarargTest.varargCharAccepted":123,"org.easymock.tests2.CaptureTest.testCaptureMultiple":486,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":398,"org.easymock.tests2.UsageTest.openCallCountByLastCall":265,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":257,"org.easymock.tests.DefaultClassInstantiatorTest.object":328,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":477,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":411,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":297,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":489,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":187,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":271,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":0,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":58,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":88,"org.easymock.tests.CapturesMatcherTest.test":487,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":360,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":41,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":57,"org.easymock.tests2.UsageTest.resumeIfFailure":269,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":51,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":72,"org.easymock.tests2.StubTest.stubWithReturnValue":68,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":140,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":150,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":352,"org.easymock.tests2.SerializationTest.testAllMockedMethod":37,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":391,"org.easymock.samples.SupportTest.voteForRemovals":119,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":274,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":94,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":397,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":131,"org.easymock.tests.UsageExpectAndThrowTest.object":92,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":369,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":211,"org.easymock.tests2.DelegateToTest.testWrongClass":314,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":463,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":464,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests.UsageStrictMockTest.range":339,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":168,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":30,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":93,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":24,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":449,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":285,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":320,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":407,"org.easymock.tests2.CaptureTest.testCaptureNone":225,"org.easymock.tests.UsageUnorderedTest.message":470,"org.easymock.tests.UsageVerifyTest.twoReturns":371,"org.easymock.tests.UsageVarargTest.varargByteAccepted":128,"org.easymock.tests2.ThreadingTest.testThreadSafe":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":299,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":427,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":414,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":7,"org.easymock.tests2.CaptureTest.testCapture_2617107":219,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":395,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":81,"org.easymock.tests2.UsageConstraintsTest.any":137,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":437,"org.easymock.tests2.StubTest.stub":318,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":71,"org.easymock.tests.UsageExpectAndThrowTest.longType":85,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":133,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":436,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":176,"org.easymock.tests2.SerializationTest.testClass":36,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":276,"org.easymock.tests.LimitationsTest.mockNativeMethod":53,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":44,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":362,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":186,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":179,"org.easymock.tests2.NameTest.nameForMocksControl":310,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":188,"org.easymock.tests2.MockedExceptionTest.testMockedException":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":289,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":79,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":171,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":49,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":86,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":9,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":25,"org.easymock.tests.MockingTest.testNicePartialClassMocking":48,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":13,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":184,"org.easymock.tests2.CompareToTest.testCompareEqual":114,"org.easymock.tests2.CaptureTest.testCaptureLast":224,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":374,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":35,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":201,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":212,"org.easymock.tests.MockingTest.testTwoMocks":46,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":90,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":267,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":215,"org.easymock.samples.ExampleTest.removeNonExistingDocument":157,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":434,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":191,"org.easymock.tests.UsageStrictMockTest.differentMethods":340,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":273,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":330,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":243,"org.easymock.tests2.MockBuilderTest.testCreateMockString":28,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":54,"org.easymock.tests.UsageExpectAndThrowTest.floatType":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":290,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":287,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":233,"org.easymock.tests.UsageVerifyTest.twoThrows":75,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":40,"org.easymock.samples.ExampleTest.voteAgainstRemoval":155,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":1,"org.easymock.tests.LimitationsTest.privateConstructor":420,"org.easymock.tests2.UsageConstraintsTest.testNotNull":214,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":108,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":65,"org.easymock.tests2.UsageTest.defaultResetToNice":266,"org.easymock.samples.ExampleTest.voteAgainstRemovals":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":185,"org.easymock.tests.UsageVarargTest.differentLength":125,"org.easymock.tests2.CallbackTest.callback":317,"org.easymock.tests2.UsageConstraintsTest.equals":197,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":238,"org.easymock.tests.UsageTest.openCallCountByLastCall":448,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":147,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":80,"org.easymock.tests.UsageCallCountTest.tooFewCalls":425,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":322,"org.easymock.tests.UsageThrowableTest.throwCheckedException":105,"org.easymock.tests.MockingTest.testStrictClassMocking":399,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":34,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":190,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":32,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":439,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":283,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":235,"org.easymock.tests.ObjectMethodsTest.testHashCode":412,"org.easymock.tests2.CompareToTest.testGreateOrEqual":115,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":245,"org.easymock.tests2.NameTest.nameForNiceMock":309,"org.easymock.tests2.DependencyTest.testInterfaceMocking":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":144,"org.easymock.samples.ExampleTest.addDocument":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":304,"org.easymock.tests2.DelegateToTest.testStubDelegate":313,"org.easymock.tests2.AnswerTest.stubAnswer":234,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":337,"org.easymock.tests.UsageVarargTest.varargLongAccepted":127,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":384,"org.easymock.tests.UsageExpectAndReturnTest.floatType":345,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":361,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":19,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":483,"org.easymock.tests.UsageThrowableTest.noUpperLimit":471,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":210,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":280,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":196,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":166,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":222,"org.easymock.tests2.SerializationTest.test":284,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":135,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":329,"org.easymock.tests2.UsageConstraintsTest.testSame":199,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":344,"org.easymock.samples.SupportTest.addDocument":161,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":291,"org.easymock.tests.GenericTest.testPackageScope":42,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":279,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":402,"org.easymock.tests2.NameTest.nameForMock":307,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":355,"org.easymock.tests2.UsageStrictMockTest.differentMethods":178,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":239,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":96,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":410,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":366,"org.easymock.tests2.MockedExceptionTest.testRealException":67,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":389,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":388,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":461,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":441,"org.easymock.tests2.NameTest.nameForStrictMock":308,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":259,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":170,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":12,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":167,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":151,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":331,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":21,"org.easymock.tests2.UsageStrictMockTest.range":177,"org.easymock.tests2.UsageConstraintsTest.lessThan":216,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":275,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":145,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":383,"org.easymock.tests2.CaptureTest.testCaptureRightOne":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":295,"org.easymock.tests2.UsageConstraintsTest.testOr":200,"org.easymock.tests.UsageRangeTest.combination":363,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":10,"org.easymock.tests.UsageTest.wrongArguments":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":292,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":377,"org.easymock.tests.UsageVarargTest.varargShortAccepted":126,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":332,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":428,"org.easymock.tests2.UsageConstraintsTest.cmpTo":204,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":232,"org.easymock.tests2.CompareToTest.testLessThan":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":379,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":64,"org.easymock.tests2.CaptureTest.testCaptureFromStub":228,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":432,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":22,"org.easymock.tests.UsageTest.unexpectedCallWithArray":446,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":336,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":426,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":357,"org.easymock.tests2.UsageConstraintsTest.constraints":148,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":338,"org.easymock.samples.ExampleTest.addAndChangeDocument":158,"org.easymock.tests.UsageStrictMockTest.testVerify":342,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":159,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":466,"org.easymock.tests2.CompareToTest.testGreateThan":113,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":455,"org.easymock.tests.LimitationsTest.abstractClass":419,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":349,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":484,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":456,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":121,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":252}}]
