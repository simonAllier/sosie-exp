[{"position":"org.easymock.internal.MockBuilder:80","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,33,34,35],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[36,37],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[38,39,6,40,41,42],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,34,43,44,45,46,47,48,49,50,51,52,53,1,54,55,38,39,56,57,58,59,60,61,62,2,3,4,5,6,7,8,9,10,11,13,14,40,63,41,64,65,66,67,15,68,69,70,71,16,17,72,73,74,18,75,75,76,76],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:175","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Constructor<?>.getModifiers())) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[77],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[78,79,80,81,82,83,84,85,86,87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[88,89,90],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[0,33,19,20,22,23,26,91,27,28,30,31,92,93,94,43,95,96,97,98,44,45,46,47,48,78,99,79,100,101,102,103,104,105,106,107,108,109,110,80,111,112,81,113,114,115,116,117,118,119,82,49,50,120,51,52,53,54,38,39,56,121,122,123,124,125,57,58,59,60,126,61,62,127,128,129,4,6,8,9,11,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,66,15,69,70,71,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,72,197,198,199,200,201,202,203,204,205,206,207,208,18,209,210,211,212],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[96,97,98,44,45,46,47,48,49,50,120,51,52,53,54,38,39,56,124,57,58,59,60,126,61,62,128,129,4,6,8,9,11,151,152,153,154,155,156,157,158,161,162,163,214,215,216,217,69,70,71,172,173,174,175,176,177,180,181,183,184,185,187,188,189,190,191,192,193,194,195,196,72,208,18,209,210,211,212],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[218,219],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[78,81,115],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[19,21,22,23,24,25,26,27,220,28,29,31],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[54,221,222,55,38,39,56,223,224,57,58,59,60,61,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[225,226,227,97,98,79,112,50,38,56,4,10,11,14,130,228,133,229,230,231,137,138,140,144,145,148,154,232,233,234,235,236,162,163,237,238,239,240,241,242,243,197,244,245,246,247,201,248,207],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[249,19,21,22,23,24,25,26,27,220,28,29,31],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[250,251,252,253,254,255,77],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[256,257,235,258,259,244],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[133],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[260,261,0,33,19,20,22,23,26,91,27,28,29,30,31,92,218,262,263,93,264,94,265,266,43,267,225,95,96,97,98,44,45,46,47,48,78,99,79,100,101,102,103,104,105,106,107,108,109,110,80,111,112,81,113,114,115,116,117,118,119,82,49,50,120,51,52,53,54,38,39,56,121,122,123,124,125,57,58,59,60,126,61,62,268,127,128,129,4,6,8,9,11,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,269,270,151,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,64,294,295,296,297,298,299,300,301,152,153,154,155,156,157,302,158,159,303,304,160,305,306,307,308,161,162,163,164,309,165,166,167,168,169,170,66,15,214,215,216,217,310,311,69,70,71,312,313,314,315,316,317,318,319,320,171,321,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,322,323,324,243,192,193,194,195,196,72,197,198,199,200,201,325,326,327,202,203,204,205,206,248,207,208,18,75,75,76,76,209,328,210,211,212,329],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[19,21,28,79,100,102,104,105,330,114,118],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[331,332,333,334,335,94,336,337,338,339,340,341,342,343,344,345,346,95,347,348,349,350,351,352,353,354],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[19,20,21,22,23,24,25,26,91,27,28,29,30,31,32],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[114,115],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1385","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[114,115],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[355,356,357],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[358],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:229","failures":[45,38,224,4,11],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[359,360,361,362,260,261,363,19,20,21,22,23,24,25,26,91,27,28,29,30,31,96,78,99,79,100,101,102,103,104,105,106,330,107,108,109,110,80,111,112,81,113,114,115,116,364,117,118,119,82,54,125,128,129,152,153,158,159,303,304,160,235,161,316,171,321,365,243,192,193,194,195,196],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[262,366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[334,345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[81,84],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[359,360,361,362,260,261,0,33,34,19,20,21,22,23,24,25,26,91,27,28,30,31,92,263,93,264,94,43,225,95,226,367,96,227,97,98,368,44,45,46,47,48,78,99,79,100,101,102,103,104,105,106,330,107,108,109,110,80,111,112,81,113,114,115,116,364,117,118,119,82,49,50,120,51,52,53,54,38,39,56,121,122,123,124,125,57,58,59,60,126,61,62,268,127,128,129,4,6,8,9,11,130,131,132,228,133,229,134,135,136,230,231,137,138,139,140,141,142,143,144,145,146,147,148,149,150,369,270,151,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,64,298,299,152,153,154,155,156,157,158,159,303,304,160,234,370,235,161,236,162,163,371,372,164,309,165,166,167,168,169,170,66,67,69,70,71,316,171,321,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,373,374,375,376,377,239,378,379,380,381,365,382,322,383,384,385,241,242,243,192,193,194,195,196,72,197,198,245,199,200,246,247,201,325,326,327,202,203,204,205,206,248,207,386,208,73,74,353,18,354,209,328,210,211,387,212,329],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":100,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":213,"org.easymock.tests2.UsageTest.argumentsOrdered":231,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":197,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":149,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":347,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":315,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":229,"org.easymock.tests2.StubTest.stubWithReturnValue":127,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":251,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":353,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":117,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":181,"org.easymock.tests2.SerializationTest.testAllMockedMethod":34,"org.easymock.tests2.DelegateToTest.testReturnException":270,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":323,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":313,"org.easymock.tests.MockingTest.testPartialClassMocking":69,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":257,"org.easymock.samples.SupportTest.voteForRemovals":208,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":345,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":302,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":286,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":224,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":35,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":324,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":274,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":45,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":218,"org.easymock.tests.UsageExpectAndThrowTest.object":284,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":115,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":129,"org.easymock.tests2.DelegateToTest.testWrongClass":271,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":252,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":152,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":153,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":106,"org.easymock.tests2.UsageTest.wrongArguments":228,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":158,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":341,"org.easymock.samples.ConstructorCalledMockTest.testTax":75,"org.easymock.tests.UsageStrictMockTest.range":162,"org.easymock.samples.ExampleTest.answerVsDelegate":328,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":146,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":57,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":17,"org.easymock.tests2.UsageConstraintsTest.testNull":102,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":285,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":51,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":8,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":148,"org.easymock.tests2.CaptureTest.testPrimitive":22,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":160,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":293,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":246,"org.easymock.tests.UsageTest.moreThanOneArgument":198,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":120,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":216,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":296,"org.easymock.tests2.CaptureTest.testCaptureNone":91,"org.easymock.tests.UsageUnorderedTest.message":243,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":232,"org.easymock.tests.UsageVerifyTest.twoReturns":207,"org.easymock.tests.UsageVarargTest.varargByteAccepted":380,"org.easymock.tests2.ThreadingTest.testThreadSafe":121,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":297,"org.easymock.tests.UsageTest.argumentsOrdered":247,"org.easymock.tests.UsageVarargTest.varargIntAccepted":375,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":385,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":192,"org.easymock.tests2.CaptureTest.testCapture_2617107":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":77,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":351,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":304,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":7,"org.easymock.tests2.UsageConstraintsTest.any":107,"org.easymock.tests2.StubTest.stub":268,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":196,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":314,"org.easymock.tests.UsageExpectAndThrowTest.longType":277,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":88,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":227,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":95,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":94,"org.easymock.tests.LimitationsTest.mockNativeMethod":72,"org.easymock.tests2.AnswerTest.answer":92,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":15,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":191,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":330,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":333,"org.easymock.tests2.CaptureTest.testAnd":19,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":41,"org.easymock.tests2.UsageTest.strictResetToDefault":131,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":368,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":55,"org.easymock.tests2.NameTest.nameForMocksControl":362,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":335,"org.easymock.tests2.MockedExceptionTest.testMockedException":266,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":143,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":156,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":200,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":301,"org.easymock.tests2.DelegateToTest.testDelegate":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":278,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":71,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":49,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":9,"org.easymock.tests.MockingTest.testNicePartialClassMocking":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":289,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":53,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":331,"org.easymock.tests2.CompareToTest.testCompareEqual":85,"org.easymock.tests2.CaptureTest.testCaptureLast":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":316,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":311,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":62,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":105,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":116,"org.easymock.tests.MockingTest.testTwoMocks":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":358,"org.easymock.tests2.CaptureTest.testCapture1_2446744":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":172,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":287,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":282,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":230,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":119,"org.easymock.tests.UsageThrowableTest.throwError":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":337,"org.easymock.tests.UsageStrictMockTest.differentMethods":163,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":344,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":123,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":352,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":233,"org.easymock.tests2.MockBuilderTest.testCreateMockString":14,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":310,"org.easymock.tests.UsageExpectAndThrowTest.floatType":276,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":112,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":263,"org.easymock.tests.UsageVerifyTest.twoThrows":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":46,"org.easymock.samples.PartialClassMockTest.testGetArea":18,"org.easymock.tests2.CompareToTest.testLessOrEqual":87,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":193,"org.easymock.samples.ExampleTest.voteAgainstRemoval":211,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":295,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":294,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":39,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":275,"org.easymock.tests2.UsageTest.niceToStrict":133,"org.easymock.tests2.UsageConstraintsTest.testNotNull":118,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":265,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":170,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":355,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":6,"org.easymock.tests2.MockBuilderTest.testCreateMock":10,"org.easymock.tests2.UsageTest.defaultResetToNice":136,"org.easymock.samples.ExampleTest.voteAgainstRemovals":209,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":187,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":332,"org.easymock.tests.UsageVarargTest.differentLength":239,"org.easymock.tests2.CallbackTest.callback":225,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":338,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":221,"org.easymock.tests.UsageTest.openCallCountByLastCall":199,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":283,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":256,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":144,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":78,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":320,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":382,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":303,"org.easymock.tests.UsageCallCountTest.tooFewCalls":383,"org.easymock.tests.UsageOverloadedMethodTest.overloading":204,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":327,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":80,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":203,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":60,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":183,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":89,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":110,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":27,"org.easymock.tests.UsageThrowableTest.throwCheckedException":167,"org.easymock.tests2.EasyMockSupportClassTest.testAll":44,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":67,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":291,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":259,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":40,"org.easymock.tests2.CaptureTest.testCaptureAll":20,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":321,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":336,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":59,"org.easymock.tests2.UsageConstraintsTest.testMatches":111,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":126,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":217,"org.easymock.tests2.CompareToTest.testGreateOrEqual":86,"org.easymock.samples.ExampleTest.voteForRemovals":212,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":255,"org.easymock.tests2.NameTest.nameForNiceMock":361,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":125,"org.easymock.tests.UsageVarargTest.allKinds":365,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":206,"org.easymock.tests2.DependencyTest.testInterfaceMocking":128,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":254,"org.easymock.samples.BasicClassMockTest.testPrintContent":74,"org.easymock.samples.ExampleTest.addDocument":387,"org.easymock.tests2.DelegateToTest.testStubDelegate":151,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":169,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":226,"org.easymock.tests2.AnswerTest.stubAnswer":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":317,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":272,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":161,"org.easymock.tests2.UsageConstraintsTest.greaterThan":81,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":155,"org.easymock.tests.UsageVarargTest.varargLongAccepted":379,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":56,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":371,"org.easymock.samples.ExampleTest.voteForRemoval":210,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":223,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":122,"org.easymock.tests.UsageExpectAndReturnTest.floatType":174,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":190,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":12,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":1,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":76,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":350,"org.easymock.tests.UsageThrowableTest.noUpperLimit":309,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":113,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":64,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":99,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":130,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":24,"org.easymock.tests2.SerializationTest.test":33,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":90,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":36,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":141,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":165,"org.easymock.tests2.UsageConstraintsTest.testSame":103,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":173,"org.easymock.samples.SupportTest.addDocument":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":312,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":269,"org.easymock.tests2.CaptureTest.testCaptureFirst":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":219,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":142,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":138,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":179,"org.easymock.tests.GenericTest.testPackageScope":66,"org.easymock.tests2.CaptureTest.testCapture2_2446744":30,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":124,"org.easymock.tests2.UsageTest.moreThanOneArgument":132,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":300,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":11,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":349,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":381,"org.easymock.tests2.NameTest.nameForMock":359,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":241,"org.easymock.tests.UsageExpectAndReturnTest.longType":175,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":292,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":13,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":184,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":364,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":305,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":290,"org.easymock.tests2.UsageStrictMockTest.differentMethods":98,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":307,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":214,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":222,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":176,"org.easymock.tests.UsageCallCountTest.tooManyCalls":242,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":157,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":322,"org.easymock.tests2.MockedExceptionTest.testRealException":267,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":180,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":366,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":279,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":159,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":168,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":58,"org.easymock.tests2.NameTest.nameForStrictMock":360,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":3,"org.easymock.tests2.UsageConstraintsTest.testContains":109,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":43,"org.easymock.tests2.UsageConstraintsTest.testFind":101,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":205,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":357,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":260,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":52,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":261,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":234,"org.easymock.tests.UsageExpectAndReturnTest.object":182,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":114,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":54,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":4,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":339,"org.easymock.tests2.UsageStrictMockTest.range":97,"org.easymock.tests2.UsageConstraintsTest.lessThan":82,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":147,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":377,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":253,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":346,"org.easymock.tests.UsageTest.exactCallCountByLastCall":201,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":171,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":140,"org.easymock.tests2.CaptureTest.testCaptureRightOne":28,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":298,"org.easymock.tests2.UsageConstraintsTest.testOr":104,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":250,"org.easymock.tests.UsageRangeTest.combination":154,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":373,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":50,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":188,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":326,"org.easymock.tests.UsageTest.wrongArguments":245,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":343,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":65,"org.easymock.tests2.EasyMockSupportTest.testVerify":369,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":185,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":299,"org.easymock.tests.UsageVarargTest.varargShortAccepted":378,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":325,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":319,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":37,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":240,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":237,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":363,"org.easymock.tests2.UsageConstraintsTest.cmpTo":108,"org.easymock.tests.UsageVarargTest.varargCharAccepted":376,"org.easymock.tests2.CaptureTest.testCaptureMultiple":249,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":262,"org.easymock.tests2.CompareToTest.testLessThan":83,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":367,"org.easymock.tests2.UsageTest.openCallCountByLastCall":134,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":135,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":356,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":150,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":318,"org.easymock.tests2.CaptureTest.testCaptureFromStub":29,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":5,"org.easymock.tests.UsageTest.unexpectedCallWithArray":244,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":238,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":281,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":235,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":42,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":166,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":384,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":334,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":342,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":186,"org.easymock.tests2.CaptureTest.testCapture":220,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":236,"org.easymock.tests2.UsageConstraintsTest.constraints":79,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":38,"org.easymock.samples.ExampleTest.addAndChangeDocument":329,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":280,"org.easymock.tests.CapturesMatcherTest.test":32,"org.easymock.tests.UsageStrictMockTest.testVerify":372,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":189,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":306,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":354,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":47,"org.easymock.tests2.CompareToTest.testGreateThan":84,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":25,"org.easymock.tests2.UsageTest.resumeIfFailure":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":194,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":63,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":16,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":178,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":195,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":145}}]
