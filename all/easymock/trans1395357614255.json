[{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[18,19,20,21,22,23],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,5,6,7,8,9,10,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,0,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,18,95,96,97,98,19,99,100,101,102,11,103,104,105,106,107,20,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,21,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,12,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,1,2,3,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,4,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,13,14,15,16,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,22,400,401,402,403,404,405,23,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,17,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[314,315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[488,489,96,234,490,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[28,28,29,29,83,84,85,86,87,102,152,153,154,155,156,183,184,186,218,219,220,235,250,254,255,263,268,293,294,298,299,300,301,307,309,310,312,313,319,320,321,363,17,458],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"failures":[308],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[302],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[74,188],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[492,352,353,354,355,356,357,358,359,361,362,363,364,365],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[314],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[28,28,29,29,83,84,85,86,87,102,152,153,154,155,156,183,184,186,219,220,235,293,294,298,299,300,301,307,309,310,312,313,319,320,321,363,17,458],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[24,25,26,28,28,29,29,52,53,54,58,82,124,125,126,128,172,190,195,15,370,372,383,493,385,386,389,390,391,393,396,397,494,399,411,495,496,497,423,424,426,427,428,429,431,434,435,436,437,440,441,442,443,446,447,466,469,479,485],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[9,69,102,11,152,153,154,155,156,170,183,184,12,185,186,219,220,234,235,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,352,353,354,355,356,357,358,359,360,361,362,363,364,365,420,422,431,458],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[295,296,299,301,302,304,314,319,352,354,362],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[114,115,119],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[69,95,97,99,100,157,21,158,234,235,237,238,401,402,407,408,452,453,454,455,458,460,461],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[298],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":296,"org.easymock.tests2.UsageTest.argumentsOrdered":408,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":18,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":283,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":259,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":404,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":27,"org.easymock.tests2.DelegateToTest.testReturnException":374,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":6,"org.easymock.tests.MockingTest.testPartialClassMocking":125,"org.easymock.tests.MockClassControlTest.testToString":173,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":451,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":92,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":473,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":469,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":198,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":369,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":303,"org.easymock.tests2.UsageTest.wrongArguments":402,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":183,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":230,"org.easymock.samples.ExampleTest.answerVsDelegate":34,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":195,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":130,"org.easymock.tests2.UsageConstraintsTest.testNull":299,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":426,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":178,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":282,"org.easymock.tests2.CaptureTest.testPrimitive":355,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":186,"org.easymock.tests.UsageTest.moreThanOneArgument":95,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":217,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":425,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":85,"org.easymock.tests.UsageTest.argumentsOrdered":100,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":41,"org.easymock.tests.UsageVarargTest.varargIntAccepted":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":264,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":152,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":383,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":288,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":333,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":156,"org.easymock.tests.ReplayStateInvalidUsageTest.times":78,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":345,"org.easymock.tests2.DependencyTest.testClassMocking":366,"org.easymock.tests2.AnswerTest.answer":414,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":266,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":382,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":192,"org.easymock.tests2.CaptureTest.testAnd":352,"org.easymock.tests2.UsageTest.strictResetToDefault":400,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":434,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":387,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":84,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":277,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":45,"org.easymock.tests2.DelegateToTest.testDelegate":378,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":213,"org.easymock.tests.LimitationsTest.mockFinalMethod":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":9,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":50,"org.easymock.tests2.DependencyTest.testClassMockingSupport":367,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":187,"org.easymock.tests2.CaptureTest.testCapture1_2446744":356,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":380,"org.easymock.tests.UsageThrowableTest.throwError":106,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":72,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":194,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":81,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":334,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":487,"org.easymock.samples.PartialClassMockTest.testGetArea":24,"org.easymock.tests.MockingTest.testInterfaceMocking":127,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":153,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":474,"org.easymock.tests2.UsageTest.niceToStrict":403,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":199,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":249,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":250,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":389,"org.easymock.tests2.MockBuilderTest.testCreateMock":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":482,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":348,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":490,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":207,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":278,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":191,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":105,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":60,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":228,"org.easymock.tests.UsageOverloadedMethodTest.overloading":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":478,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":224,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":143,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":88,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":308,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":361,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":162,"org.easymock.tests2.EasyMockSupportClassTest.testAll":466,"org.easymock.tests.MockClassControlTest.testEquals":177,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":53,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":215,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":495,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":48,"org.easymock.tests2.CaptureTest.testCaptureAll":353,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":381,"org.easymock.tests.MockNameTest.defaultName":94,"org.easymock.tests2.UsageConstraintsTest.testMatches":310,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":86,"org.easymock.samples.ExampleTest.voteForRemovals":38,"org.easymock.tests.UsageVarargTest.allKinds":170,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":157,"org.easymock.samples.BasicClassMockTest.testPrintContent":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":49,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":111,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":330,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":377,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":120,"org.easymock.tests2.UsageConstraintsTest.greaterThan":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":467,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":180,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":437,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":121,"org.easymock.samples.ExampleTest.voteForRemoval":35,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":438,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":336,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":196,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":289,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":429,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":22,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":82,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":275,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":5,"org.easymock.tests2.CaptureTest.testCaptureFirst":365,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":256,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":276,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":410,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":227,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":139,"org.easymock.tests2.UsageTest.moreThanOneArgument":401,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":338,"org.easymock.tests2.CaptureTest.testCapture2_2446744":364,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":267,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":169,"org.easymock.tests.GenericTest.testBridgedEquals":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":67,"org.easymock.tests.UsageExpectAndReturnTest.longType":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":46,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":273,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":494,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":216,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":218,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":317,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":214,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":2,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":83,"org.easymock.tests.UsageCallCountTest.tooManyCalls":68,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":350,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":203,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":110,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":441,"org.easymock.tests.MockingTest.testNiceClassMocking":131,"org.easymock.tests.MockingTest.testClassMocking":123,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":493,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":61,"org.easymock.tests2.UsageConstraintsTest.testContains":307,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":15,"org.easymock.tests2.UsageConstraintsTest.testFind":298,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":90,"org.easymock.tests.MockTypeTest.fromEasyMockClass":193,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":422,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":232,"org.easymock.tests.UsageExpectAndReturnTest.object":142,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":431,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":349,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":281,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":164,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":247,"org.easymock.tests.UsageTest.exactCallCountByLastCall":101,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":255,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":42,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":412,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":159,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":148,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":223,"org.easymock.tests.MockClassControlTest.testHashCode":176,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":324,"org.easymock.tests2.EasyMockSupportTest.testVerify":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":476,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":43,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":104,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":379,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":322,"org.easymock.tests.UsageVarargTest.varargCharAccepted":163,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":113,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":272,"org.easymock.tests2.UsageTest.openCallCountByLastCall":405,"org.easymock.tests.DefaultClassInstantiatorTest.object":114,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":284,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":103,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":477,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":323,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":435,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":175,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":204,"org.easymock.tests.CapturesMatcherTest.test":492,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":149,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":485,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":174,"org.easymock.tests2.UsageTest.resumeIfFailure":409,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":190,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":8,"org.easymock.tests2.StubTest.stubWithReturnValue":17,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":392,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":141,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":318,"org.easymock.tests2.SerializationTest.testAllMockedMethod":372,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":265,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":491,"org.easymock.samples.SupportTest.voteForRemovals":32,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":51,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":326,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":210,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":271,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":415,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":93,"org.easymock.tests.UsageExpectAndThrowTest.object":208,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":315,"org.easymock.tests2.DelegateToTest.testWrongClass":376,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":219,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":220,"org.easymock.samples.ConstructorCalledMockTest.testTax":28,"org.easymock.tests.UsageStrictMockTest.range":237,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":291,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":280,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":440,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":209,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":463,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":99,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":0,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":229,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":488,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":243,"org.easymock.tests2.CaptureTest.testCaptureNone":360,"org.easymock.tests.UsageUnorderedTest.message":69,"org.easymock.tests.UsageVerifyTest.twoReturns":158,"org.easymock.tests.UsageVarargTest.varargByteAccepted":168,"org.easymock.tests2.ThreadingTest.testThreadSafe":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":480,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":65,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":25,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":248,"org.easymock.tests2.CaptureTest.testCapture_2617107":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":269,"org.easymock.tests2.UsageConstraintsTest.any":305,"org.easymock.tests2.StubTest.stub":449,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":77,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":7,"org.easymock.tests.UsageExpectAndThrowTest.longType":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":270,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":118,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":76,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":459,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":328,"org.easymock.tests2.SerializationTest.testClass":370,"org.easymock.tests.LimitationsTest.mockNativeMethod":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":151,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":54,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":497,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":342,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":462,"org.easymock.tests2.NameTest.nameForMocksControl":455,"org.easymock.tests2.MockedExceptionTest.testMockedException":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":468,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":19,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":421,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":128,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":202,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":423,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":393,"org.easymock.tests.MockingTest.testNicePartialClassMocking":126,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":428,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":340,"org.easymock.tests2.CaptureTest.testCaptureLast":359,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":188,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":447,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":302,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":316,"org.easymock.tests.MockingTest.testTwoMocks":124,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":448,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":132,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":206,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":407,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":320,"org.easymock.samples.ExampleTest.removeNonExistingDocument":39,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":74,"org.easymock.tests.UsageStrictMockTest.differentMethods":238,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":325,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":116,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":337,"org.easymock.tests2.MockBuilderTest.testCreateMockString":399,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":470,"org.easymock.tests.UsageExpectAndThrowTest.floatType":200,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":465,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":417,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":413,"org.easymock.tests.UsageVerifyTest.twoThrows":21,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":479,"org.easymock.samples.ExampleTest.voteAgainstRemoval":36,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":260,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":436,"org.easymock.tests.LimitationsTest.privateConstructor":57,"org.easymock.tests2.UsageConstraintsTest.testNotNull":319,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":112,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":13,"org.easymock.tests2.UsageTest.defaultResetToNice":406,"org.easymock.samples.ExampleTest.voteAgainstRemovals":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":261,"org.easymock.tests.UsageVarargTest.differentLength":165,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":341,"org.easymock.tests2.CallbackTest.callback":450,"org.easymock.tests2.UsageConstraintsTest.equals":297,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":432,"org.easymock.tests.UsageTest.openCallCountByLastCall":98,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":293,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":12,"org.easymock.tests.UsageCallCountTest.tooFewCalls":63,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":443,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":231,"org.easymock.tests.UsageThrowableTest.throwCheckedException":109,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":489,"org.easymock.tests.MockingTest.testStrictClassMocking":122,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":446,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":11,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":442,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":346,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":79,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":445,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":419,"org.easymock.tests.ObjectMethodsTest.testHashCode":246,"org.easymock.tests2.NameTest.nameForNiceMock":454,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":339,"org.easymock.tests2.DependencyTest.testInterfaceMocking":368,"org.easymock.samples.ExampleTest.addDocument":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":486,"org.easymock.tests2.DelegateToTest.testStubDelegate":375,"org.easymock.tests2.AnswerTest.stubAnswer":418,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":235,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":394,"org.easymock.tests.UsageVarargTest.varargLongAccepted":167,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":258,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":150,"org.easymock.tests.UsageExpectAndReturnTest.floatType":134,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":411,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":29,"org.easymock.tests.UsageThrowableTest.noUpperLimit":107,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":225,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":313,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":332,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":294,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":286,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":357,"org.easymock.tests2.SerializationTest.test":371,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":115,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":133,"org.easymock.tests2.UsageConstraintsTest.testSame":300,"org.easymock.samples.SupportTest.addDocument":31,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":444,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":471,"org.easymock.tests.GenericTest.testPackageScope":52,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":254,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":331,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":129,"org.easymock.tests2.NameTest.nameForMock":452,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":144,"org.easymock.tests2.UsageStrictMockTest.differentMethods":461,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":398,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":433,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":136,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":212,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":244,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":182,"org.easymock.tests2.MockedExceptionTest.testRealException":16,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":263,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":292,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":262,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":184,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":80,"org.easymock.tests2.NameTest.nameForStrictMock":453,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":388,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":420,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":427,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":290,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":117,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":314,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":385,"org.easymock.tests2.UsageStrictMockTest.range":460,"org.easymock.tests2.UsageConstraintsTest.lessThan":321,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":257,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":475,"org.easymock.tests2.CaptureTest.testCaptureRightOne":362,"org.easymock.tests2.UsageConstraintsTest.testOr":301,"org.easymock.tests.UsageRangeTest.combination":179,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":424,"org.easymock.tests.UsageTest.wrongArguments":97,"org.easymock.tests2.MockBuilderTest.testWithConstructor":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":472,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":137,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":251,"org.easymock.tests.UsageVarargTest.varargShortAccepted":166,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":119,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":66,"org.easymock.tests2.UsageConstraintsTest.cmpTo":306,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":253,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":23,"org.easymock.tests2.CaptureTest.testCaptureFromStub":363,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":71,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":386,"org.easymock.tests.UsageTest.unexpectedCallWithArray":96,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":234,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":64,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":146,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":236,"org.easymock.tests2.UsageConstraintsTest.constraints":295,"org.easymock.samples.ExampleTest.addAndChangeDocument":40,"org.easymock.tests.UsageStrictMockTest.testVerify":240,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":30,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":47,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":358,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":496,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":154,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":138,"org.easymock.tests.LimitationsTest.abstractClass":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":155,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":226,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":160,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":279}}]
