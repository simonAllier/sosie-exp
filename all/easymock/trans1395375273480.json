[{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[5,6,7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[9,10,11,12,13,14],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[30,31,32,33,34,24,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,67,68,68,69],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[70,71,72,73,74],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[75,76,77,78,79,80,81,3,82,83,4,84,85,86,61,87,88,8,89,90],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[3,83,91,92,93,4,84,94,95,96,97,98,99,100],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod())))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[101,102,103,104,105,106,107,108,109,34,110,111],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"failures":[61,87,88,8,112,113,114,115,116,89,90,117,118,119],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[71,72,121,74,122],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[76,77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[124,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[78,79,82,83,4,84,85,86],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[126,127,128,129],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:35","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(short.short, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[130,131,120,132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[133,134,135,136,137,138,139,140,141,142],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":76,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":105,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":109,"org.easymock.tests.ObjectMethodsTest.testHashCode":5,"org.easymock.tests2.StubTest.stubWithReturnValue":30,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":133,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":140,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":95,"org.easymock.tests2.DelegateToTest.testReturnException":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":107,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":139,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":10,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":47,"org.easymock.tests2.AnswerTest.stubAnswer":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":110,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":39,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":54,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":126,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":20,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":142,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":84,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":137,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":22,"org.easymock.tests2.DelegateToTest.testWrongClass":72,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":3,"org.easymock.samples.ConstructorCalledMockTest.testTax":67,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":60,"org.easymock.samples.ExampleTest.answerVsDelegate":122,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":68,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":131,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":93,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":31,"org.easymock.tests2.UsageConstraintsTest.testNull":78,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":113,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":46,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":97,"org.easymock.tests2.CaptureTest.testPrimitive":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":96,"org.easymock.tests.UsageTest.moreThanOneArgument":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":53,"org.easymock.tests2.UsageConstraintsTest.testSame":79,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":106,"org.easymock.tests2.CaptureTest.testCaptureFirst":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":129,"org.easymock.tests.UsageUnorderedTest.message":29,"org.easymock.tests.GenericTest.testPackageScope":65,"org.easymock.tests2.CaptureTest.testCapture2_2446744":117,"org.easymock.tests2.UsageTest.moreThanOneArgument":18,"org.easymock.tests.UsageVerifyTest.twoReturns":25,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":98,"org.easymock.tests2.NameTest.nameForMock":64,"org.easymock.tests2.CaptureTest.testCapture_2617107":88,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":141,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":27,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":35,"org.easymock.tests2.UsageStrictMockTest.differentMethods":16,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":50,"org.easymock.tests2.UsageConstraintsTest.any":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":108,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":49,"org.easymock.tests2.SerializationTest.testClass":134,"org.easymock.tests2.DependencyTest.testClassMocking":124,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":66,"org.easymock.tests2.AnswerTest.answer":70,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":82,"org.easymock.tests2.MockedExceptionTest.testRealException":104,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":17,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":62,"org.easymock.tests2.MockedExceptionTest.testMockedException":102,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":15,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":38,"org.easymock.tests2.DelegateToTest.testDelegate":121,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":41,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":103,"org.easymock.tests2.UsageConstraintsTest.testFind":77,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":33,"org.easymock.tests2.CompareToTest.testNotComparable":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":1,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":136,"org.easymock.tests2.CaptureTest.testCaptureLast":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":34,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":132,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":28,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":4,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":81,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":94,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":56,"org.easymock.tests2.DependencyTest.testClassMockingSupport":125,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":120,"org.easymock.tests2.CaptureTest.testCapture1_2446744":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":138,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":48,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":44,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":99,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":86,"org.easymock.tests.UsageStrictMockTest.differentMethods":21,"org.easymock.tests2.CaptureTest.testCaptureRightOne":89,"org.easymock.tests2.UsageConstraintsTest.testOr":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":135,"org.easymock.tests.UsageRangeTest.combination":100,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":74,"org.easymock.tests2.MockBuilderTest.testCreateMockString":59,"org.easymock.tests.MockClassControlTest.testHashCode":7,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":6,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":92,"org.easymock.tests.UsageVerifyTest.twoThrows":24,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":73,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":55,"org.easymock.samples.PartialClassMockTest.testGetArea":69,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":63,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":36,"org.easymock.tests2.UsageConstraintsTest.testNotNull":85,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":101,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":32,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":0,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":2,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":57,"org.easymock.tests2.CaptureTest.testCaptureFromStub":90,"org.easymock.tests2.MockBuilderTest.testCreateMock":58,"org.easymock.tests.UsageTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":45,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":43,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":9,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":111,"org.easymock.tests2.UsageConstraintsTest.constraints":75,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":42,"org.easymock.tests.CapturesMatcherTest.test":119,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":91,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":116,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":114,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":12,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":19,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":51,"org.easymock.tests2.CaptureTest.testCaptureAll":87}}]
