[{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:315","failures":[17,18,19,20,46,53,60,169,206,211,216,217,218,219,220,221,241,247,248,281,295,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[100,163,358],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[47,359],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[110,112,113,114,115,116,117,119,360,120,121,123],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[15,16,21,361,27,31,362,363,364,365,366,367,61,368,369,62,370,371,372,373,374,375,376,377,378,63,379,380,381,382,383,64,384,385,137,386,387,388,389,390,391],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[390],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[1,2,3,4,6,13,14,19,21,22,23,24,25,26,27,28,29,30,31,32,35,37,38,45,46,47,48,50,52,53,54,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,105,106,107,109,110,111,112,113,114,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,140,144,145,147,148,150,151,153,155,156,157,158,159,160,162,164,165,166,167,168,169,174,175,176,177,181,189,190,191,192,193,194,195,200,202,203,206,207,210,211,214,215,220,238,240,241,243,245,246,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,280,281,293,295,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,326,327,328,356,357],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[392],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[142],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[84],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[46,53,60,169,193,206,211,220,241,248,293,295,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,361,393,394,395,396,397,398,22,399,400,401,402,403,404,405,406,23,24,25,26,27,28,407,29,30,31,362,408,409,410,411,412,32,413,414,415,416,417,418,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,419,420,421,422,423,424,425,365,366,367,61,368,369,62,370,371,372,373,374,375,376,377,378,63,379,380,381,382,383,64,384,385,65,66,67,68,69,70,71,72,73,426,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,427,98,99,100,101,102,428,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,386,147,429,387,430,148,149,150,388,151,431,389,152,153,391,154,155,156,157,158,159,160,161,432,162,433,359,163,164,165,166,434,358,167,168,169,170,171,172,173,174,175,176,177,178,179,180,435,181,182,183,392,436,437,438,439,440,441,442,443,184,185,186,187,188,189,190,191,192,193,194,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,195,460,461,462,463,464,196,465,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,466,467,215,468,216,217,218,219,220,221,222,469,223,224,225,470,471,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,472,285,286,287,288,289,290,291,292,473,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,474,475,325,326,327,476,328,477,478,479,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,480,346,481,347,348,349,350,351,352,353,354,482,355,483,484,485,486,487,488,489,490,356,357,491],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:60","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[37,191,193,194,202,492,493],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[361,137,494,495,496,497,498,499,500,388],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[141,144,145,450],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,361,393,394,395,396,397,398,22,399,400,401,402,403,404,405,406,23,24,25,26,27,28,407,29,30,31,362,408,409,410,411,412,32,413,414,415,416,417,418,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,419,420,421,422,423,424,425,365,366,367,61,368,369,62,370,371,372,373,374,375,376,377,378,63,379,380,381,382,383,64,384,385,65,66,67,68,69,70,71,72,73,426,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,427,98,99,100,101,102,428,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,386,147,429,387,430,148,149,150,388,151,431,389,152,153,391,154,155,156,157,158,159,160,161,432,162,433,359,163,164,165,166,434,358,167,168,169,170,171,172,173,174,175,176,177,178,179,180,435,181,182,183,392,436,437,438,439,440,441,442,443,184,185,186,187,188,189,190,191,192,193,194,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,195,460,461,462,463,464,196,465,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,466,467,215,468,216,217,218,219,220,221,222,469,223,224,225,470,471,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,472,285,286,287,288,289,290,291,292,473,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,474,475,325,326,327,476,328,477,478,479,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,480,346,481,347,348,349,350,351,352,353,354,482,355,483,484,485,486,487,488,489,490,356,357,491],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:193","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isArray()) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n                return false;\n            } \n            break;\n        } \n    } \n    if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[361,137,495,496,497,498,499,388,389],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[110,112,114,115,116,119,120,121,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"captured"}},{"position":"org.easymock.internal.MockBuilder:163","failures":[15,16,386,391,433],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[2,45,102,103,140,141,142,143,144,145,238],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,105,107,108,109,446,240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[491],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[451],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,143,144,145,146,148,149,150,151,153,154,155,156,157,158,159,160,162,163,165,168,169,170,171,172,173,174,175,176,177,181,182,184,185,186,187,188,189,190,191,192,193,194,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,227,229,230,232,235,237,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,326,327,328,329,330,331,332,333,334,339,347,348,349,350,351,357],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[503,504,199,208,505,506],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[8,45,48,65,66,67,70,85,88,97,102,103,109,111,117,118,123,169,191,456,195,207,234,255,261,267,271,273,302,308,314,318,320],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[17,18,19,20,216,217,218,219,220,221,247,281],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":73,"org.easymock.tests2.UsageTest.argumentsOrdered":56,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":206,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":134,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":454,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":51,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":0,"org.easymock.tests2.DelegateToTest.testReturnException":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":217,"org.easymock.tests.MockingTest.testPartialClassMocking":326,"org.easymock.tests.MockClassControlTest.testToString":340,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":427,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":302,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":24,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":495,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":79,"org.easymock.tests2.UsageTest.wrongArguments":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":245,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":404,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":172,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":441,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":478,"org.easymock.tests2.UsageConstraintsTest.testNull":75,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":158,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":133,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":345,"org.easymock.tests2.CaptureTest.testPrimitive":113,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":249,"org.easymock.tests.UsageTest.moreThanOneArgument":207,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":321,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":349,"org.easymock.tests.UsageTest.argumentsOrdered":213,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":275,"org.easymock.tests.UsageVarargTest.varargIntAccepted":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":459,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":499,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":146,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":421,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":417,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":446,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":254,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":22,"org.easymock.tests.ReplayStateInvalidUsageTest.times":234,"org.easymock.tests2.DependencyTest.testClassMocking":405,"org.easymock.tests2.AnswerTest.answer":140,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":460,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":44,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":438,"org.easymock.tests2.CaptureTest.testAnd":110,"org.easymock.tests2.UsageTest.strictResetToDefault":47,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":348,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":176,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":128,"org.easymock.tests2.DelegateToTest.testDelegate":109,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":279,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":317,"org.easymock.tests.LimitationsTest.mockFinalMethod":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":188,"org.easymock.tests2.DependencyTest.testClassMockingSupport":406,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":356,"org.easymock.tests2.CaptureTest.testCapture1_2446744":114,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":432,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":315,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":42,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":228,"org.easymock.tests.UsageThrowableTest.throwError":293,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":440,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":490,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":418,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":351,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":385,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.MockingTest.testInterfaceMocking":476,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":251,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":323,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":471,"org.easymock.tests2.UsageTest.niceToStrict":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":148,"org.easymock.tests2.MockBuilderTest.testCreateMock":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":381,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":401,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":503,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":311,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":129,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":437,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":180,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":170,"org.easymock.tests.UsageOverloadedMethodTest.overloading":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":383,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":85,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":241,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":167,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":266,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":84,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":119,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":472,"org.easymock.tests2.EasyMockSupportClassTest.testAll":61,"org.easymock.tests.MockClassControlTest.testEquals":344,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":182,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":319,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":186,"org.easymock.tests2.CaptureTest.testCaptureAll":111,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":43,"org.easymock.tests.MockNameTest.defaultName":473,"org.easymock.tests2.UsageConstraintsTest.testMatches":86,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":350,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests.UsageVarargTest.allKinds":292,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":187,"org.easymock.samples.BasicClassMockTest.testPrintContent":11,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":299,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":414,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":221,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":500,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":488,"org.easymock.tests2.UsageConstraintsTest.greaterThan":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":368,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":175,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":166,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":489,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":434,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":66,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":442,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":422,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":161,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":46,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":222,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":451,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":126,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":216,"org.easymock.tests2.CaptureTest.testCaptureFirst":123,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":127,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":58,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":262,"org.easymock.tests2.CaptureTest.testCapture2_2446744":122,"org.easymock.tests2.UsageTest.moreThanOneArgument":48,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":461,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":153,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":291,"org.easymock.tests.GenericTest.testBridgedEquals":392,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":336,"org.easymock.tests.UsageExpectAndReturnTest.longType":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":184,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":124,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":320,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":93,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":301,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":347,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":353,"org.easymock.tests.UsageCallCountTest.tooManyCalls":337,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":382,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":403,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":307,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":298,"org.easymock.tests.MockingTest.testNiceClassMocking":479,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":26,"org.easymock.tests.MockingTest.testClassMocking":475,"org.easymock.tests2.UsageConstraintsTest.testContains":83,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":330,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":19,"org.easymock.tests2.UsageConstraintsTest.testFind":74,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":169,"org.easymock.tests.MockTypeTest.fromEasyMockClass":439,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":103,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":197,"org.easymock.tests.UsageExpectAndReturnTest.object":265,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":402,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":496,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":286,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":225,"org.easymock.tests.UsageTest.exactCallCountByLastCall":214,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":480,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":276,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":361,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":271,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":282,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":240,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":409,"org.easymock.tests.MockClassControlTest.testHashCode":343,"org.easymock.tests2.EasyMockSupportTest.testVerify":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":376,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":277,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":179,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":238,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":41,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":40,"org.easymock.tests.UsageVarargTest.varargCharAccepted":285,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":482,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":465,"org.easymock.tests2.UsageTest.openCallCountByLastCall":52,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":135,"org.easymock.tests.DefaultClassInstantiatorTest.object":355,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":178,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":377,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":296,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":397,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":408,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":164,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":342,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":272,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":64,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":341,"org.easymock.tests2.UsageTest.resumeIfFailure":57,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":436,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":219,"org.easymock.tests2.StubTest.stubWithReturnValue":60,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":388,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":264,"org.easymock.tests2.SerializationTest.testAllMockedMethod":139,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":195,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":504,"org.easymock.samples.SupportTest.voteForRemovals":13,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":411,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":314,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":196,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":141,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":481,"org.easymock.tests.UsageExpectAndThrowTest.object":312,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":91,"org.easymock.tests2.DelegateToTest.testWrongClass":107,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":189,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":190,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests.UsageStrictMockTest.range":202,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":424,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":131,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":25,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":313,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":150,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":212,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":171,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":505,"org.easymock.tests2.CaptureTest.testCaptureNone":118,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":324,"org.easymock.tests.UsageUnorderedTest.message":191,"org.easymock.tests.UsageVerifyTest.twoReturns":194,"org.easymock.tests.UsageVarargTest.varargByteAccepted":290,"org.easymock.tests2.ThreadingTest.testThreadSafe":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":379,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":334,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":470,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":10,"org.easymock.tests2.CaptureTest.testCapture_2617107":112,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":248,"org.easymock.tests2.UsageConstraintsTest.any":81,"org.easymock.tests2.StubTest.stub":59,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":218,"org.easymock.tests.UsageExpectAndThrowTest.longType":305,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":486,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":232,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":36,"org.easymock.tests2.SerializationTest.testClass":137,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":32,"org.easymock.tests.LimitationsTest.mockNativeMethod":215,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":274,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":396,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":39,"org.easymock.tests2.NameTest.nameForMocksControl":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":398,"org.easymock.tests2.MockedExceptionTest.testMockedException":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":369,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":211,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":428,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":306,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":328,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":155,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":151,"org.easymock.tests.MockingTest.testNicePartialClassMocking":327,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":494,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":394,"org.easymock.tests2.CaptureTest.testCaptureLast":117,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":357,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":31,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":78,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":92,"org.easymock.tests.MockingTest.testTwoMocks":325,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":362,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":310,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":55,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":96,"org.easymock.samples.ExampleTest.removeNonExistingDocument":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":400,"org.easymock.tests.UsageStrictMockTest.differentMethods":203,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":230,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":410,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":484,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":67,"org.easymock.tests2.MockBuilderTest.testCreateMockString":154,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":338,"org.easymock.tests.UsageExpectAndThrowTest.floatType":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":370,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":367,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":143,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":393,"org.easymock.tests.UsageVerifyTest.twoThrows":193,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":63,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":322,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":165,"org.easymock.tests.LimitationsTest.privateConstructor":467,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":364,"org.easymock.tests2.UsageConstraintsTest.testNotNull":95,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":17,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":300,"org.easymock.tests2.UsageTest.defaultResetToNice":54,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":270,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":395,"org.easymock.tests.UsageVarargTest.differentLength":287,"org.easymock.tests2.CallbackTest.callback":45,"org.easymock.tests2.UsageConstraintsTest.equals":426,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":433,"org.easymock.tests.UsageTest.openCallCountByLastCall":210,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":247,"org.easymock.tests.UsageCallCountTest.tooFewCalls":332,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":28,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":173,"org.easymock.tests.UsageThrowableTest.throwCheckedException":297,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":506,"org.easymock.tests.MockingTest.testStrictClassMocking":474,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":30,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":281,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":399,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":27,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":235,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":29,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":145,"org.easymock.tests.ObjectMethodsTest.testHashCode":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":498,"org.easymock.tests2.NameTest.nameForNiceMock":100,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":69,"org.easymock.tests2.DependencyTest.testInterfaceMocking":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":497,"org.easymock.samples.ExampleTest.addDocument":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":384,"org.easymock.tests2.DelegateToTest.testStubDelegate":106,"org.easymock.tests2.AnswerTest.stubAnswer":144,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":200,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":431,"org.easymock.tests.UsageVarargTest.varargLongAccepted":289,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.floatType":257,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":273,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":21,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":416,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":89,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":242,"org.easymock.tests.UsageThrowableTest.noUpperLimit":294,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":71,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":419,"org.easymock.tests2.SerializationTest.test":138,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":115,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":483,"org.easymock.tests2.UsageConstraintsTest.testSame":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":256,"org.easymock.samples.SupportTest.addDocument":12,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":407,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":371,"org.easymock.tests.GenericTest.testPackageScope":181,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":415,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":477,"org.easymock.tests2.NameTest.nameForMock":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":267,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":391,"org.easymock.tests2.UsageStrictMockTest.differentMethods":38,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":359,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":259,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":316,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":469,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":177,"org.easymock.tests2.MockedExceptionTest.testRealException":20,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":457,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":35,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":237,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":246,"org.easymock.tests2.NameTest.nameForStrictMock":99,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":430,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":102,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":159,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":423,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":492,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":485,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":147,"org.easymock.tests2.UsageStrictMockTest.range":37,"org.easymock.tests2.UsageConstraintsTest.lessThan":97,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":501,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":125,"org.easymock.tests2.CaptureTest.testCaptureRightOne":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":375,"org.easymock.tests2.UsageConstraintsTest.testOr":77,"org.easymock.tests.UsageRangeTest.combination":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":156,"org.easymock.tests.UsageTest.wrongArguments":209,"org.easymock.tests2.MockBuilderTest.testWithConstructor":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":372,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":339,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":445,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":268,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":487,"org.easymock.tests.UsageVarargTest.varargShortAccepted":288,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":335,"org.easymock.tests2.UsageConstraintsTest.cmpTo":82,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":142,"org.easymock.tests2.CompareToTest.testLessThan":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":447,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":53,"org.easymock.tests2.CaptureTest.testCaptureFromStub":121,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":227,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":429,"org.easymock.tests.UsageTest.unexpectedCallWithArray":208,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":199,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":333,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":390,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":269,"org.easymock.tests2.CaptureTest.testCapture":360,"org.easymock.tests2.UsageConstraintsTest.constraints":72,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":201,"org.easymock.samples.ExampleTest.addAndChangeDocument":8,"org.easymock.tests.UsageStrictMockTest.testVerify":205,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":9,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":185,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":252,"org.easymock.tests.LimitationsTest.abstractClass":466,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":261,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":253,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":493,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":130,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":283}}]
