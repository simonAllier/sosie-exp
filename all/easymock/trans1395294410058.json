[{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[20,11,21,22,23,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (this.org.easymock.Capture<T>.hasCaptured()) {\n    this.org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[24,25,26,27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"capture"}},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[47,54,67,74,79,81],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[97,41,98,99,100,101,102,103,104,105,106],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[107,108,109],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[110,111,112,113,114,115,116,117,118,119,120,121,28,30,31,32,33,36,37,38,39,122,24,105,123,124,125,126,26,127,45,128,129,130,131,132,133,62,66,67,134,69,70,71,75,77,78,135,14,136,137,138,139,140,93,141,142,143,144,145,146,147,148,149,150,94,95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[97,41,98,99,100,101,102,103,104,105,106],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[29,151,152,153,154,155,156,68,157,158],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"position":"org.easymock.internal.RecordState:222","failures":[87,90,94,95],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[118,119,159,160,160,161,161,3,162,163,164,165,166,167,168,169,170,171,172,173,131,174,175,176,177,178,179,180,132,181,182,183,184,185,186,187,188,58,189,190,191,192,193,194,195,60,61,196,133,197,19,198,86,135,199,200,201,202,203],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:508","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:172","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[204,205,42,206],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[1,2,3,4,34,207,5,208,209,210,7,8,9,10,11,12,89,14,211,15,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[41],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[235],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[236],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[237,238,239],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[104,105,240,241,123,124,125,242,243,106,244,26],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[162,245,173,246,247,248,249,250,251,252,253,254,255],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[110,111,256,112,113,114,115,257,116,117,118,119,120,121,159,160,161,1,2,3,4,162,245,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,163,164,165,166,275,276,167,168,277,278,279,280,281,282,283,284,285,286,287,288,289,290,28,29,30,31,32,33,291,292,293,294,295,296,34,297,35,36,298,37,299,207,300,38,39,301,302,40,5,303,304,305,306,307,308,309,310,311,312,169,313,314,170,315,316,317,318,319,320,321,322,323,171,324,325,326,327,328,172,329,330,331,332,333,334,335,205,336,97,41,337,338,98,339,99,100,340,101,20,341,342,343,344,345,0,42,151,102,346,347,122,206,103,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,104,24,105,240,241,123,124,125,126,242,106,244,25,26,364,365,43,127,366,367,44,368,369,45,128,129,130,173,370,131,57,371,372,373,374,375,177,376,179,180,377,378,132,181,182,253,183,379,254,184,185,380,187,188,58,59,189,190,191,192,381,193,382,383,194,195,60,61,384,385,386,387,208,388,389,390,391,392,393,394,395,396,397,398,399,196,133,197,400,19,401,402,403,404,198,405,406,407,408,409,410,411,412,413,62,63,64,65,152,414,415,416,153,154,417,6,418,419,420,421,422,423,155,424,425,426,427,156,428,429,430,431,432,66,67,68,134,69,70,71,72,209,73,74,75,76,210,77,78,433,434,435,86,436,7,8,9,10,11,12,135,437,438,439,440,441,442,157,443,444,445,446,447,448,449,450,451,13,452,453,87,88,89,90,91,92,454,21,14,211,22,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,23,15,136,137,138,485,139,140,486,93,141,142,143,144,487,488,145,212,489,490,491,213,214,158,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,492,493,494,495,496,199,200,201,497,202,498,499,500,501,502,503,146,147,148,504,149,150,505,203,506,507,508,509,510,511,512,513,514,515,516,517,518,519,16,17,18,520,521,522,523,524,237,525,526,527,528,94,95,529],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[41,99,101],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[530],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[27],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[159,173,175,177,178,179,180,132,181,182,183,184,185,186,187,192,197,19,198],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((this.org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[160,161,376,531,380,382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[399,400],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[20,11,21,22,23,15],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[399,400],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":41,"org.easymock.tests2.UsageTest.argumentsOrdered":39,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":209,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":420,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":37,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":110,"org.easymock.tests2.DelegateToTest.testReturnException":359,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":8,"org.easymock.tests.MockingTest.testPartialClassMocking":200,"org.easymock.tests.MockClassControlTest.testToString":506,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":350,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":513,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":318,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":170,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":215,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":274,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":247,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":340,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":454,"org.easymock.tests2.UsageTest.wrongArguments":36,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":270,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":390,"org.easymock.samples.ExampleTest.answerVsDelegate":256,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":198,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":499,"org.easymock.tests2.UsageConstraintsTest.testNull":98,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":189,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":511,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":45,"org.easymock.tests2.CaptureTest.testPrimitive":240,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":22,"org.easymock.tests.UsageTest.moreThanOneArgument":73,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":234,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":517,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":480,"org.easymock.tests.UsageTest.argumentsOrdered":78,"org.easymock.tests.UsageVarargTest.varargIntAccepted":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":424,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":455,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":288,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":305,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":459,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":50,"org.easymock.tests.ReplayStateInvalidUsageTest.times":450,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":264,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":530,"org.easymock.tests2.DependencyTest.testClassMocking":271,"org.easymock.tests2.AnswerTest.answer":57,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":426,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":295,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":402,"org.easymock.tests2.CaptureTest.testAnd":104,"org.easymock.tests2.UsageTest.strictResetToDefault":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":194,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":377,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":516,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":394,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":366,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":484,"org.easymock.tests2.DelegateToTest.testDelegate":363,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":230,"org.easymock.tests.LimitationsTest.mockFinalMethod":436,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":11,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":411,"org.easymock.tests2.DependencyTest.testClassMockingSupport":272,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":94,"org.easymock.tests2.CaptureTest.testCapture1_2446744":241,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":381,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":228,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":293,"org.easymock.tests.UsageThrowableTest.throwError":488,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":444,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":404,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":528,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":289,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":519,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":330,"org.easymock.samples.PartialClassMockTest.testGetArea":159,"org.easymock.tests.MockingTest.testInterfaceMocking":497,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":445,"org.easymock.tests2.CompareToTest.testLessOrEqual":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":456,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":493,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":442,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":216,"org.easymock.tests2.UsageTest.niceToStrict":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":152,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":132,"org.easymock.tests2.MockBuilderTest.testCreateMock":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":326,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":267,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":224,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":367,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":401,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":398,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":501,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":388,"org.easymock.tests.UsageOverloadedMethodTest.overloading":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":328,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":89,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":344,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":471,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":386,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":238,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":343,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":242,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":485,"org.easymock.tests.MockClassControlTest.testEquals":510,"org.easymock.tests2.EasyMockSupportClassTest.testAll":169,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":133,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":52,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":232,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":409,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":96,"org.easymock.tests2.CaptureTest.testCaptureAll":24,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":294,"org.easymock.tests.MockNameTest.defaultName":487,"org.easymock.tests2.UsageConstraintsTest.testMatches":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":518,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":157,"org.easymock.samples.ExampleTest.voteForRemovals":115,"org.easymock.tests.UsageVarargTest.allKinds":144,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":410,"org.easymock.samples.BasicClassMockTest.testPrintContent":119,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":213,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":12,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":285,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":362,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":526,"org.easymock.tests2.UsageConstraintsTest.greaterThan":42,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":313,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":393,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":61,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":527,"org.easymock.samples.ExampleTest.voteForRemoval":112,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":384,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":332,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":405,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":306,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":192,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":135,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":34,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":6,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":43,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":7,"org.easymock.tests2.CaptureTest.testCaptureFirst":26,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":127,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":302,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":92,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":467,"org.easymock.tests2.UsageTest.moreThanOneArgument":35,"org.easymock.tests2.CaptureTest.testCapture2_2446744":25,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":427,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":185,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":143,"org.easymock.tests.GenericTest.testBridgedEquals":400,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":149,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":235,"org.easymock.tests.UsageExpectAndReturnTest.longType":463,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":407,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":364,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":186,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":233,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":158,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":122,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":515,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":17,"org.easymock.tests.UsageCallCountTest.tooManyCalls":150,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":80,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":327,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":468,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":269,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":220,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":491,"org.easymock.tests.MockingTest.testNiceClassMocking":500,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":164,"org.easymock.tests.MockingTest.testClassMocking":496,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":502,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":178,"org.easymock.tests2.UsageConstraintsTest.testContains":342,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":3,"org.easymock.tests2.UsageConstraintsTest.testFind":338,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":208,"org.easymock.tests.MockTypeTest.fromEasyMockClass":403,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":432,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":357,"org.easymock.tests.UsageExpectAndReturnTest.object":470,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":193,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":268,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":369,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":248,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":440,"org.easymock.tests.UsageTest.exactCallCountByLastCall":433,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":154,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":512,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":481,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":84,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":245,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":476,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":136,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":88,"org.easymock.tests.MockClassControlTest.testHashCode":509,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":279,"org.easymock.tests2.EasyMockSupportTest.testVerify":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":321,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":49,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":482,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":453,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":397,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":292,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":291,"org.easymock.tests.UsageVarargTest.varargCharAccepted":139,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":520,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":431,"org.easymock.tests2.UsageTest.openCallCountByLastCall":299,"org.easymock.tests.DefaultClassInstantiatorTest.object":521,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":129,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":396,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":438,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":85,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":322,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":489,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":262,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":278,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":508,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":195,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":221,"org.easymock.tests.CapturesMatcherTest.test":27,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":477,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":16,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":507,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":172,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":51,"org.easymock.tests2.UsageTest.resumeIfFailure":301,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":19,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":10,"org.easymock.tests2.StubTest.stubWithReturnValue":5,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":253,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":469,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":206,"org.easymock.tests2.SerializationTest.testAllMockedMethod":131,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":425,"org.easymock.samples.SupportTest.voteForRemovals":121,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":54,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":399,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":227,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":430,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":371,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":514,"org.easymock.tests.UsageExpectAndThrowTest.object":225,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":346,"org.easymock.tests2.DelegateToTest.testWrongClass":361,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":412,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":413,"org.easymock.samples.ConstructorCalledMockTest.testTax":160,"org.easymock.tests.UsageStrictMockTest.range":69,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":308,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":368,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":226,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":182,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":13,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":389,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":79,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":494,"org.easymock.tests2.CaptureTest.testCaptureNone":126,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":107,"org.easymock.tests.UsageUnorderedTest.message":62,"org.easymock.tests.UsageVerifyTest.twoReturns":65,"org.easymock.tests.UsageVarargTest.varargByteAccepted":142,"org.easymock.tests2.ThreadingTest.testThreadSafe":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":324,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":148,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":441,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":118,"org.easymock.tests2.CaptureTest.testCapture_2617107":105,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":56,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":529,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":428,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":211,"org.easymock.tests2.UsageConstraintsTest.any":20,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":449,"org.easymock.tests2.StubTest.stub":40,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":9,"org.easymock.tests.UsageExpectAndThrowTest.longType":218,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":237,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":448,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":30,"org.easymock.tests2.SerializationTest.testClass":173,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":283,"org.easymock.tests.LimitationsTest.mockNativeMethod":86,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":479,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":197,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":176,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":261,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":33,"org.easymock.tests2.NameTest.nameForMocksControl":354,"org.easymock.tests2.MockedExceptionTest.testMockedException":2,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":314,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":210,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":202,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":219,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":356,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":188,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":183,"org.easymock.tests.MockingTest.testNicePartialClassMocking":201,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":191,"org.easymock.tests2.CaptureTest.testCaptureLast":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":246,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":259,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":95,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":168,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":100,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":347,"org.easymock.tests.MockingTest.testTwoMocks":199,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":277,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":460,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":223,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":38,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":348,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":109,"org.easymock.samples.ExampleTest.removeNonExistingDocument":257,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":446,"org.easymock.tests.UsageStrictMockTest.differentMethods":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":266,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":280,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":523,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":108,"org.easymock.tests2.ConstraintsToStringTest.andToString":53,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":333,"org.easymock.tests2.MockBuilderTest.testCreateMockString":187,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":505,"org.easymock.tests.UsageExpectAndThrowTest.floatType":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":315,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":312,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":373,"org.easymock.tests.UsageVerifyTest.twoThrows":64,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":258,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":171,"org.easymock.samples.ExampleTest.voteAgainstRemoval":113,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":421,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":60,"org.easymock.tests.LimitationsTest.privateConstructor":435,"org.easymock.tests2.UsageConstraintsTest.testNotNull":103,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":1,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":214,"org.easymock.tests2.UsageTest.defaultResetToNice":300,"org.easymock.samples.ExampleTest.voteAgainstRemovals":111,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":422,"org.easymock.tests.UsageVarargTest.differentLength":486,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":260,"org.easymock.tests2.CallbackTest.callback":296,"org.easymock.tests2.UsageConstraintsTest.equals":337,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":82,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":382,"org.easymock.tests.UsageTest.openCallCountByLastCall":76,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":14,"org.easymock.tests.UsageCallCountTest.tooFewCalls":146,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":166,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":391,"org.easymock.tests.UsageThrowableTest.throwCheckedException":490,"org.easymock.tests.MockingTest.testStrictClassMocking":495,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":81,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":167,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":15,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":165,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":265,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":276,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":375,"org.easymock.tests.ObjectMethodsTest.testHashCode":439,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":251,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":335,"org.easymock.tests2.NameTest.nameForNiceMock":353,"org.easymock.tests2.DependencyTest.testInterfaceMocking":273,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":249,"org.easymock.samples.ExampleTest.addDocument":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":329,"org.easymock.tests2.DelegateToTest.testStubDelegate":360,"org.easymock.tests2.AnswerTest.stubAnswer":374,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":68,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":379,"org.easymock.tests.UsageVarargTest.varargLongAccepted":141,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":478,"org.easymock.tests.UsageExpectAndReturnTest.floatType":462,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":162,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":161,"org.easymock.tests2.ConstraintsToStringTest.orToString":46,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":151,"org.easymock.tests.UsageThrowableTest.noUpperLimit":145,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":287,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":336,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":303,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":123,"org.easymock.tests2.SerializationTest.test":370,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":239,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":522,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":461,"org.easymock.tests2.UsageConstraintsTest.testSame":339,"org.easymock.samples.SupportTest.addDocument":120,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":275,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":316,"org.easymock.tests.GenericTest.testPackageScope":196,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":153,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":286,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":498,"org.easymock.tests2.NameTest.nameForMock":351,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":472,"org.easymock.tests2.UsageStrictMockTest.differentMethods":32,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":380,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":383,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":464,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":229,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":437,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":395,"org.easymock.tests2.MockedExceptionTest.testRealException":4,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":155,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":309,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":83,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":423,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":29,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":452,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":21,"org.easymock.tests2.NameTest.nameForStrictMock":352,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":378,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":355,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":190,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":307,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":524,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":102,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":179,"org.easymock.tests2.UsageStrictMockTest.range":31,"org.easymock.tests2.UsageConstraintsTest.lessThan":349,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":418,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":250,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":365,"org.easymock.tests2.CaptureTest.testCaptureRightOne":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":320,"org.easymock.tests2.UsageConstraintsTest.testOr":99,"org.easymock.tests.UsageRangeTest.combination":392,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":58,"org.easymock.tests.UsageTest.wrongArguments":75,"org.easymock.tests2.MockBuilderTest.testWithConstructor":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":317,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":465,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":414,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":525,"org.easymock.tests.UsageVarargTest.varargShortAccepted":93,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":504,"org.easymock.tests2.UsageConstraintsTest.cmpTo":341,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":416,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":207,"org.easymock.tests2.CaptureTest.testCaptureFromStub":244,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":443,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":180,"org.easymock.tests.UsageTest.unexpectedCallWithArray":74,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":67,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":147,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":531,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":474,"org.easymock.tests2.CaptureTest.testCapture":243,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":134,"org.easymock.tests2.UsageConstraintsTest.constraints":97,"org.easymock.samples.ExampleTest.addAndChangeDocument":116,"org.easymock.tests2.ConstraintsToStringTest.notToString":48,"org.easymock.tests.UsageStrictMockTest.testVerify":72,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":117,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":408,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":124,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":457,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":175,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":466,"org.easymock.tests.LimitationsTest.abstractClass":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":458,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":91,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":44}}]
