[{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[1,2,3,4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,16,17,115,116,117,118,119,18,19,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,20,138,139,140,141,142,143,144,145,146,147,148,149,21,150,22,23,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,1,173,3,174,175,4,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,24,25,26,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,27,237,238,29,30,239,240,241,242,243,244,31,245,246,247,39,40,41,248,249,42,43,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,44,45,274,46,47,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,49,339,340,341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[342,343,344,345,346,347,50,51,52,53,54,55,56,57,348,349,349,350,350,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,79,351,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,104,105,106,107,108,109,110,111,112,113,114,16,17,115,116,117,118,119,18,19,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,20,138,139,140,141,142,143,144,145,146,147,352,353,354,355,356,357,358,359,360,361,362,363,364,148,149,21,150,22,23,151,365,152,153,366,367,154,155,368,369,370,371,372,156,157,160,161,373,374,162,163,164,165,166,167,168,169,170,171,172,1,173,3,174,175,4,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,195,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,24,25,26,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,29,30,239,240,241,242,243,244,31,245,246,247,39,40,41,248,249,42,43,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,44,45,274,46,47,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,336,337,338,340,341],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[375,376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[71,377,86,156,161],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[6,13,32,34,40,44],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[378,379,380,381,382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[18,383,42],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[342,343,344,345,346,347,50,51,52,53,54,55,56,57,348,349,350,58,59,60,61,62,63,64,65,66,67,68,69,70,71,384,72,385,73,74,75,76,77,78,377,386,387,79,351,80,388,81,82,389,390,83,84,85,86,87,88,89,90,391,91,92,93,94,95,96,392,393,394,395,396,97,397,98,99,101,398,102,399,400,401,402,403,103,404,405,406,407,408,409,0,104,105,106,107,108,410,411,109,110,111,412,112,113,114,16,17,115,116,117,118,119,18,19,120,121,122,123,124,125,383,126,127,128,129,130,131,413,132,133,134,135,136,137,20,138,139,140,141,142,143,144,145,146,147,352,353,354,355,356,357,358,359,360,361,362,363,364,148,149,21,150,22,23,151,365,152,153,366,414,367,154,155,415,416,417,418,368,419,420,369,421,422,423,424,425,426,427,428,429,370,430,431,432,433,434,371,435,436,437,438,439,440,441,372,442,443,444,445,446,447,156,157,158,159,160,161,373,374,448,449,162,163,164,165,166,167,168,169,170,171,172,1,173,3,174,175,4,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,450,194,195,196,197,198,199,200,201,202,203,204,205,206,207,451,208,209,210,211,212,213,214,215,24,25,26,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,452,453,454,455,456,457,236,27,237,238,28,29,30,239,240,241,242,243,244,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,31,245,246,247,39,40,41,248,249,42,43,250,481,482,251,483,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,375,269,270,484,376,271,485,486,487,488,489,490,272,273,44,45,274,46,47,275,276,277,278,279,280,281,491,492,493,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,494,495,496,497,498,499,500,501,502,302,303,304,305,306,307,308,309,503,504,505,506,507,508,509,510,511,378,512,379,513,514,515,516,517,518,519,520,380,381,521,382,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,522,523,331,332,333,334,335,524,336,337,338,525,526,48,49,339,340,341],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:171","sourceCode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())","type":"CtInvocationImpl"},"failures":[345,346,347,349,349,350,350,58,60,65,66,68,69,70,71,72,385,73,74,75,76,77,78,377,86,87,88,397,101,108,410,365,152,153,366,154,155,416,417,418,368,419,420,369,421,422,423,424,425,426,427,428,429,370,430,431,432,433,434,371,435,436,156,157,158,159,160,161,373,374,449,162,163,164,192,193,450,194,195,197,200,239,481,482,251,483,375,269,270,484,376,271,485,486,487,488,489,490,282,283,284,285,286,287,288,289,330,333],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[69,20],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[132],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[78,92],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[58,59,60,527],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[528,138],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[529,136,142,147],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[485,489],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:131","failures":[384],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:225","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1205","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[302,305],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[6,13,32,34,40,44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[497,498,499,510],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[130],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[58,59,60,527],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[530],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[77],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[135],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[17,18,19,22,23,25,26,31,531,38,40,41,42,43,44,46,47,532,533],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Invocation:99","failures":[344,347,52,53,55,57,132,361,363,160,182,534],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":125,"org.easymock.tests2.UsageTest.argumentsOrdered":19,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":247,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":362,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":512,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":116,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":342,"org.easymock.tests2.DelegateToTest.testReturnException":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":187,"org.easymock.tests.MockingTest.testPartialClassMocking":194,"org.easymock.tests.MockClassControlTest.testToString":284,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":0,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":520,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":424,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":310,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":369,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":351,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":480,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":131,"org.easymock.tests2.UsageTest.wrongArguments":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":240,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":447,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":203,"org.easymock.samples.ExampleTest.answerVsDelegate":51,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":333,"org.easymock.tests2.UsageConstraintsTest.testNull":127,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":199,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":68,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":289,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":361,"org.easymock.tests2.CaptureTest.testPrimitive":168,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":244,"org.easymock.tests.UsageTest.moreThanOneArgument":39,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":329,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":67,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":279,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":453,"org.easymock.tests.UsageTest.argumentsOrdered":43,"org.easymock.tests.UsageVarargTest.varargIntAccepted":207,"org.easymock.tests.InvocationTest.testEquals":534,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":516,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":177,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":408,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":99,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":505,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":181,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":464,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":9,"org.easymock.tests.ReplayStateInvalidUsageTest.times":298,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":372,"org.easymock.tests2.DependencyTest.testClassMocking":386,"org.easymock.tests2.AnswerTest.answer":82,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":518,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":64,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":523,"org.easymock.tests2.CaptureTest.testAnd":165,"org.easymock.tests2.UsageTest.strictResetToDefault":114,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":278,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":356,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":457,"org.easymock.tests2.DelegateToTest.testDelegate":112,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":463,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":325,"org.easymock.tests.LimitationsTest.mockFinalMethod":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":268,"org.easymock.tests2.DependencyTest.testClassMockingSupport":387,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":48,"org.easymock.tests2.CaptureTest.testCapture1_2446744":169,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":384,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":323,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":62,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":292,"org.easymock.tests.UsageThrowableTest.throwError":302,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":332,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":533,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":409,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":436,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":467,"org.easymock.samples.PartialClassMockTest.testGetArea":347,"org.easymock.tests.MockingTest.testInterfaceMocking":196,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":495,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":526,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":425,"org.easymock.tests2.UsageTest.niceToStrict":115,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":311,"org.easymock.tests2.ThreadingTest.testChangeDefault":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":503,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":160,"org.easymock.tests2.MockBuilderTest.testCreateMock":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":432,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":444,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":6,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":319,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":357,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":522,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":502,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":252,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":201,"org.easymock.tests.UsageOverloadedMethodTest.overloading":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":429,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":136,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":227,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":261,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":135,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":173,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":451,"org.easymock.tests.MockClassControlTest.testEquals":288,"org.easymock.tests2.EasyMockSupportClassTest.testAll":368,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":270,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":11,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":327,"org.easymock.tests2.CaptureTest.testCaptureAll":166,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":266,"org.easymock.tests.MockNameTest.defaultName":452,"org.easymock.tests2.UsageConstraintsTest.testMatches":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":280,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":290,"org.easymock.samples.ExampleTest.voteForRemovals":55,"org.easymock.tests.UsageVarargTest.allKinds":215,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":24,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":267,"org.easymock.samples.BasicClassMockTest.testPrintContent":346,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":308,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":148,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":412,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":191,"org.easymock.tests2.UsageConstraintsTest.greaterThan":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":419,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":183,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":77,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":468,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":490,"org.easymock.samples.ExampleTest.voteForRemoval":52,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":78,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":91,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":334,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":71,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":460,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":113,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":239,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":510,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":354,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":186,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":411,"org.easymock.tests2.CaptureTest.testCaptureFirst":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":509,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":355,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":121,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":30,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":223,"org.easymock.tests2.CaptureTest.testCapture2_2446744":175,"org.easymock.tests2.UsageTest.moreThanOneArgument":16,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":519,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":163,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":214,"org.easymock.tests.GenericTest.testBridgedEquals":376,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":259,"org.easymock.tests.UsageExpectAndReturnTest.longType":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":264,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":352,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":328,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":458,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":143,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":326,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":498,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":277,"org.easymock.tests.UsageCallCountTest.tooManyCalls":260,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":33,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":433,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":446,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":315,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":307,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":152,"org.easymock.tests.MockingTest.testNiceClassMocking":200,"org.easymock.tests.MockingTest.testClassMocking":193,"org.easymock.tests2.UsageConstraintsTest.testContains":134,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":253,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":88,"org.easymock.tests2.UsageConstraintsTest.testFind":126,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":263,"org.easymock.tests.MockTypeTest.fromEasyMockClass":331,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":81,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":272,"org.easymock.tests.UsageExpectAndReturnTest.object":226,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":445,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":530,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":360,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":209,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":338,"org.easymock.tests.UsageTest.exactCallCountByLastCall":250,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":508,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":491,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":454,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":37,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":410,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":205,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":232,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":237,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":400,"org.easymock.tests.MockClassControlTest.testHashCode":287,"org.easymock.tests2.EasyMockSupportTest.testVerify":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":427,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":8,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":455,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":501,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":236,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":531,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":61,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":97,"org.easymock.tests.UsageVarargTest.varargCharAccepted":208,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":382,"org.easymock.tests2.UsageTest.openCallCountByLastCall":117,"org.easymock.tests.DefaultClassInstantiatorTest.object":271,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":363,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":500,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":336,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":428,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":305,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":440,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":399,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":466,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":75,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":286,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":316,"org.easymock.tests.ReplayStateInvalidCallsTest.times":472,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":497,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":473,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":10,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":371,"org.easymock.tests2.UsageTest.resumeIfFailure":120,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":330,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":98,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":189,"org.easymock.tests2.StubTest.stubWithReturnValue":96,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":144,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":225,"org.easymock.tests2.SerializationTest.testAllMockedMethod":60,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":517,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":13,"org.easymock.samples.SupportTest.voteForRemovals":344,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":375,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":402,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":322,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":527,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":521,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":389,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":493,"org.easymock.tests.UsageExpectAndThrowTest.object":320,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":141,"org.easymock.tests2.DelegateToTest.testWrongClass":111,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":470,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":245,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":246,"org.easymock.tests.UsageStrictMockTest.range":46,"org.easymock.samples.ConstructorCalledMockTest.testTax":349,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":398,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":359,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":321,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":416,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":202,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":32,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":462,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":496,"org.easymock.tests2.CaptureTest.testCaptureNone":1,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":393,"org.easymock.tests.UsageUnorderedTest.message":31,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":532,"org.easymock.tests.UsageVerifyTest.twoReturns":26,"org.easymock.tests.UsageVarargTest.varargByteAccepted":213,"org.easymock.tests2.ThreadingTest.testThreadSafe":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":430,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":257,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":525,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":345,"org.easymock.tests2.CaptureTest.testCapture_2617107":167,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":15,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":339,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":380,"org.easymock.tests2.UsageConstraintsTest.any":132,"org.easymock.tests2.StubTest.stub":95,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":297,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":499,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":188,"org.easymock.tests.UsageExpectAndThrowTest.longType":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":381,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":488,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":296,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":150,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":103,"org.easymock.tests2.SerializationTest.testClass":58,"org.easymock.tests.LimitationsTest.mockNativeMethod":251,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":484,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":235,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":439,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":478,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":151,"org.easymock.tests2.NameTest.nameForMocksControl":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":441,"org.easymock.tests2.MockedExceptionTest.testMockedException":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":420,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":249,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":388,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":197,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":314,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":65,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":374,"org.easymock.tests.MockingTest.testNicePartialClassMocking":195,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":70,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":437,"org.easymock.tests2.CaptureTest.testCaptureLast":172,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":49,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":477,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":155,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":130,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":142,"org.easymock.tests.MockingTest.testTwoMocks":450,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":474,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":415,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":318,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":146,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":396,"org.easymock.samples.ExampleTest.removeNonExistingDocument":56,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":443,"org.easymock.tests.UsageStrictMockTest.differentMethods":47,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":294,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":401,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":486,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":395,"org.easymock.tests2.ConstraintsToStringTest.andToString":12,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":92,"org.easymock.tests2.MockBuilderTest.testCreateMockString":164,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":421,"org.easymock.tests.UsageExpectAndThrowTest.floatType":312,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":418,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":83,"org.easymock.tests.UsageVerifyTest.twoThrows":25,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":370,"org.easymock.samples.ExampleTest.voteAgainstRemoval":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":379,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":76,"org.easymock.tests.LimitationsTest.privateConstructor":482,"org.easymock.tests2.UsageConstraintsTest.testNotNull":145,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":86,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":309,"org.easymock.tests2.UsageTest.defaultResetToNice":119,"org.easymock.samples.ExampleTest.voteAgainstRemovals":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":513,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":231,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":438,"org.easymock.tests.UsageVarargTest.differentLength":210,"org.easymock.tests2.CallbackTest.callback":176,"org.easymock.tests2.UsageConstraintsTest.equals":383,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":385,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":35,"org.easymock.tests.UsageTest.openCallCountByLastCall":248,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":122,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":242,"org.easymock.tests.UsageCallCountTest.tooFewCalls":255,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":204,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":394,"org.easymock.tests.UsageThrowableTest.throwCheckedException":306,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":34,"org.easymock.tests.MockingTest.testStrictClassMocking":192,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":154,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":341,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":442,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":153,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":367,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":85,"org.easymock.tests.ObjectMethodsTest.testHashCode":337,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":476,"org.easymock.tests2.NameTest.nameForNiceMock":106,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":94,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":471,"org.easymock.tests2.DependencyTest.testInterfaceMocking":79,"org.easymock.samples.ExampleTest.addDocument":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":435,"org.easymock.tests2.DelegateToTest.testStubDelegate":110,"org.easymock.tests2.AnswerTest.stubAnswer":84,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":45,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":448,"org.easymock.tests.UsageVarargTest.varargLongAccepted":212,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":378,"org.easymock.tests.UsageExpectAndReturnTest.floatType":218,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":108,"org.easymock.tests2.ConstraintsToStringTest.orToString":5,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":350,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":407,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":139,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":28,"org.easymock.tests.UsageThrowableTest.noUpperLimit":303,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":123,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":397,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":170,"org.easymock.tests2.SerializationTest.test":59,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":485,"org.easymock.tests2.UsageConstraintsTest.testSame":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":217,"org.easymock.samples.SupportTest.addDocument":343,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":414,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":461,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":422,"org.easymock.tests.GenericTest.testPackageScope":269,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":507,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":406,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":198,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":459,"org.easymock.tests2.NameTest.nameForMock":104,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":228,"org.easymock.tests2.UsageStrictMockTest.differentMethods":23,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":73,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":220,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":324,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":524,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":185,"org.easymock.tests2.MockedExceptionTest.testRealException":89,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":515,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":102,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":514,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":241,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":301,"org.easymock.tests2.NameTest.nameForStrictMock":105,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":159,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":80,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":69,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":101,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":487,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":140,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":157,"org.easymock.tests2.UsageStrictMockTest.range":22,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":465,"org.easymock.tests2.UsageConstraintsTest.lessThan":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":511,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":426,"org.easymock.tests2.CaptureTest.testCaptureRightOne":3,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":392,"org.easymock.tests2.UsageConstraintsTest.testOr":129,"org.easymock.tests.UsageRangeTest.combination":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":66,"org.easymock.tests.UsageTest.wrongArguments":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":423,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":283,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":504,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":229,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":489,"org.easymock.tests.UsageVarargTest.varargShortAccepted":211,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":258,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":479,"org.easymock.tests2.UsageConstraintsTest.cmpTo":133,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":390,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":469,"org.easymock.tests2.CompareToTest.testLessThan":529,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":506,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":118,"org.easymock.tests2.CaptureTest.testCaptureFromStub":174,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":291,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":158,"org.easymock.tests.UsageTest.unexpectedCallWithArray":40,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":475,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":256,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":230,"org.easymock.tests2.CaptureTest.testCapture":2,"org.easymock.tests2.UsageConstraintsTest.constraints":124,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":274,"org.easymock.samples.ExampleTest.addAndChangeDocument":57,"org.easymock.tests2.ConstraintsToStringTest.notToString":7,"org.easymock.tests.UsageStrictMockTest.testVerify":276,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":348,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":273,"org.easymock.tests2.CompareToTest.testGreateThan":528,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":265,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":171,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":179,"org.easymock.tests.LimitationsTest.abstractClass":481,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":180,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":29,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":358}}]
