[{"position":"org.easymock.internal.RecordState:305","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:170","sourceCode":"org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[208,209,210,211,212,213,214,215],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[44,46,52,72,73,75,77,78,216,89,94],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[179,180,184],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[217,218,219,107,184,185,220,221,222,223,224,225,226,227,193],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1039","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[99,106,107,108,183,184,185,187,226,228,229,230,231,192,193,194],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[232,233,68],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[46,52,72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:71","sourceCode":"return org.easymock.MockType","type":"CtReturnImpl"},"failures":[234,235,236,237,238,239,240,241,242,243,244,195,196,245,197,246,247,248],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[249,250,251,252,253,254],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[255,256,257,258,222,227],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[259,260,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[89,90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[262,263,22,264,67,97,102,265,266,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,168,172,267,268,269,270,175,271,177,181,182,186,189,200],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:163","failures":[37,38],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[272,87],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[68,69,273,274],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,275,12,13,14,15,16,17,276,18,277,19,20,21,262,263,22,264,23,24,25,26,27,28,278,29,30,279,31,32,280,33,281,34,35,36,282,37,38,283,284,285,286,39,40,41,42,43,287,288,44,45,46,47,48,289,290,49,50,51,52,291,53,54,55,56,57,58,59,60,61,62,63,64,65,66,292,67,68,69,273,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,217,100,293,101,102,103,218,219,104,105,294,295,106,296,107,108,297,109,111,112,265,266,113,298,298,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,299,300,301,302,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,303,170,171,172,304,305,306,307,308,309,310,267,268,269,270,175,271,176,311,177,178,179,180,181,182,183,184,185,312,313,314,315,316,186,187,222,223,188,189,224,225,190,226,317,318,319,320,321,322,323,324,325,326,327,191,328,329,330,331,332,333,334,335,336,227,192,337,193,194,338,195,196,197,198,199,200,339,340,201,202,203,204,341,205,342,343,206,344,345,346,347,207],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[12,14,15,17,24,27,29,30,31,32,33,40,41,42,43,55,56,57,58,59,60,61,65,160,170,195,196,197,206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[348],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[18,349,272,350,351,352,70,72,79,81,84,87,90,91,93,96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[353],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[352,70,72,87,93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[354],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[107,184,185,226,229,231,193],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[355,356,357],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[349,96],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[358,359,360,361,339,340],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,275,362,363,364,365,366,12,13,14,15,16,17,276,367,18,358,368,277,19,20,21,369,370,262,263,22,264,371,23,24,25,372,26,373,27,374,375,208,209,376,377,28,378,379,210,380,381,211,278,29,382,383,30,279,31,32,384,232,280,33,281,385,386,387,388,389,390,391,392,34,35,36,393,394,282,37,38,283,284,285,286,39,395,396,397,40,398,399,41,400,401,402,403,404,405,406,407,408,42,409,410,411,412,413,43,414,415,287,416,288,44,45,46,47,48,289,290,49,50,51,52,291,53,54,55,56,57,58,234,59,60,61,417,62,418,63,64,65,66,292,67,419,348,420,421,422,423,68,69,273,70,71,72,73,424,74,75,76,77,78,79,216,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,217,100,293,101,102,103,218,219,104,105,294,295,106,296,107,108,297,425,212,213,426,427,109,428,429,214,430,431,215,432,433,434,435,353,436,437,438,439,440,441,442,443,444,445,446,447,110,448,449,450,451,452,453,454,111,112,265,266,113,114,455,456,457,458,459,460,461,462,463,464,465,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,466,467,468,299,300,301,302,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,469,470,471,472,473,474,159,160,161,162,163,164,165,475,166,476,167,168,477,169,303,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,170,502,503,504,505,506,507,508,509,510,511,512,513,171,172,514,515,304,305,306,307,308,309,310,173,174,516,267,268,269,270,175,271,235,236,237,238,239,240,241,242,517,518,519,520,521,176,311,177,178,179,180,181,182,183,184,185,312,313,314,315,316,186,187,222,223,188,189,224,225,190,226,317,318,319,522,320,321,322,323,324,325,326,327,249,250,251,252,355,253,254,523,191,328,524,525,329,330,331,332,333,334,335,336,227,192,337,193,194,338,526,527,528,529,243,244,530,195,196,245,197,246,247,248,531,532,533,198,199,200,339,340,201,202,203,204,341,205,534,342,343,206,344,345,346,347,207],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[358,20,370,27,374,30,384,232,280,281,41,42,68,523,524,339,340,206],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":73,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":186,"org.easymock.tests2.UsageTest.argumentsOrdered":219,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":442,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":293,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":344,"org.easymock.tests2.DelegateToTest.testReturnException":23,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":268,"org.easymock.tests.MockingTest.testPartialClassMocking":195,"org.easymock.tests.MockClassControlTest.testToString":508,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":362,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":528,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":403,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":115,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":41,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":228,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":35,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":499,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":79,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":111,"org.easymock.tests2.UsageTest.wrongArguments":217,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":301,"org.easymock.samples.ExampleTest.answerVsDelegate":202,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":240,"org.easymock.tests2.UsageConstraintsTest.testNull":75,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":247,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":15,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":513,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":9,"org.easymock.tests2.CaptureTest.testPrimitive":47,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":113,"org.easymock.tests.UsageTest.moreThanOneArgument":187,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":134,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":14,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":332,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":517,"org.easymock.tests.UsageTest.argumentsOrdered":225,"org.easymock.tests.UsageVarargTest.varargIntAccepted":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":447,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":159,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":278,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":431,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":387,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":435,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":163,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":483,"org.easymock.tests.ReplayStateInvalidUsageTest.times":462,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":28,"org.easymock.tests2.DependencyTest.testClassMocking":391,"org.easymock.tests2.AnswerTest.answer":36,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":448,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":286,"org.easymock.tests2.CaptureTest.testAnd":44,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":237,"org.easymock.tests2.UsageTest.strictResetToDefault":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":277,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":331,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":4,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":521,"org.easymock.tests2.DelegateToTest.testDelegate":26,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":482,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":130,"org.easymock.tests.LimitationsTest.mockFinalMethod":502,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":316,"org.easymock.tests2.DependencyTest.testClassMockingSupport":392,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":173,"org.easymock.tests2.CaptureTest.testCapture1_2446744":48,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":367,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":128,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":284,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":456,"org.easymock.tests.UsageThrowableTest.throwError":176,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":239,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":215,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":415,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":486,"org.easymock.samples.PartialClassMockTest.testGetArea":206,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":457,"org.easymock.tests.MockingTest.testInterfaceMocking":245,"org.easymock.tests2.CompareToTest.testLessOrEqual":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":160,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":467,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":404,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":116,"org.easymock.tests2.UsageTest.niceToStrict":100,"org.easymock.tests2.ThreadingTest.testChangeDefault":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":30,"org.easymock.tests2.MockBuilderTest.testCreateMock":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":411,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":210,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":124,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":255,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":5,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":236,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":533,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":514,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":299,"org.easymock.tests.UsageOverloadedMethodTest.overloading":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":408,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":168,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":84,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":150,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":198,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":83,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":356,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":51,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":522,"org.easymock.tests.MockClassControlTest.testEquals":512,"org.easymock.tests2.EasyMockSupportClassTest.testAll":40,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":328,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":132,"org.easymock.tests2.CaptureTest.testCaptureAll":45,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":314,"org.easymock.tests.MockNameTest.defaultName":432,"org.easymock.tests2.UsageConstraintsTest.testMatches":85,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":333,"org.easymock.samples.ExampleTest.voteForRemovals":205,"org.easymock.tests.UsageVarargTest.allKinds":327,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":183,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":315,"org.easymock.samples.BasicClassMockTest.testPrintContent":346,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":181,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":294,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":271,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":372,"org.easymock.tests2.UsageConstraintsTest.greaterThan":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":398,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":136,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":21,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":487,"org.easymock.samples.ExampleTest.voteForRemoval":203,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":254,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":63,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":369,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":276,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":479,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":329,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":2,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":267,"org.easymock.tests2.CaptureTest.testCaptureFirst":54,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":3,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":105,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":146,"org.easymock.tests2.UsageTest.moreThanOneArgument":99,"org.easymock.tests2.CaptureTest.testCapture2_2446744":53,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":449,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":33,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":326,"org.easymock.tests.GenericTest.testBridgedEquals":525,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":309,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":354,"org.easymock.tests.UsageExpectAndReturnTest.longType":142,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":312,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":133,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":475,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":131,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":504,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":330,"org.easymock.tests.UsageCallCountTest.tooManyCalls":310,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":412,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":147,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":381,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":180,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":56,"org.easymock.tests.MockingTest.testNiceClassMocking":248,"org.easymock.tests.MockingTest.testClassMocking":244,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":515,"org.easymock.tests2.UsageConstraintsTest.testContains":82,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":22,"org.easymock.tests2.UsageConstraintsTest.testFind":74,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":200,"org.easymock.tests.MockTypeTest.fromEasyMockClass":238,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":288,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":335,"org.easymock.tests.UsageExpectAndReturnTest.object":149,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":380,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":8,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":321,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":472,"org.easymock.tests.UsageTest.exactCallCountByLastCall":190,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":527,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":518,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":374,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":155,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":317,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":167,"org.easymock.tests.ResultTest.createThrowResultToString":261,"org.easymock.tests.MockClassControlTest.testHashCode":511,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":212,"org.easymock.tests2.EasyMockSupportTest.testVerify":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":406,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":519,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":532,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":166,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":283,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":373,"org.easymock.tests.UsageVarargTest.varargCharAccepted":320,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":454,"org.easymock.tests2.UsageTest.openCallCountByLastCall":101,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":11,"org.easymock.tests.DefaultClassInstantiatorTest.object":249,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":531,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":470,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":407,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":122,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":178,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":425,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":510,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":485,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":19,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":121,"org.easymock.tests.CapturesMatcherTest.test":298,"org.easymock.tests.ReplayStateInvalidCallsTest.times":491,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":156,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":503,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":492,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":43,"org.easymock.tests2.UsageTest.resumeIfFailure":104,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":235,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":270,"org.easymock.tests2.StubTest.stubWithReturnValue":67,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":148,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":93,"org.easymock.tests2.SerializationTest.testAllMockedMethod":273,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":110,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":233,"org.easymock.samples.SupportTest.voteForRemovals":207,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":256,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":523,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":426,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":127,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":274,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":453,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":393,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":529,"org.easymock.tests.UsageExpectAndThrowTest.object":125,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":90,"org.easymock.tests2.DelegateToTest.testWrongClass":25,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":489,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":164,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":165,"org.easymock.tests.UsageStrictMockTest.range":193,"org.easymock.samples.ConstructorCalledMockTest.testTax":339,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":389,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":7,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":55,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":126,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":31,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":395,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":224,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":300,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":257,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":481,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":468,"org.easymock.tests2.CaptureTest.testCaptureNone":50,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":348,"org.easymock.tests.UsageUnorderedTest.message":226,"org.easymock.tests.UsageVerifyTest.twoReturns":185,"org.easymock.tests.UsageVarargTest.varargByteAccepted":325,"org.easymock.tests2.ThreadingTest.testThreadSafe":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":409,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":307,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":473,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":345,"org.easymock.tests2.CaptureTest.testCapture_2617107":46,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":266,"org.easymock.tests2.UsageConstraintsTest.any":80,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":461,"org.easymock.tests2.StubTest.stub":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndThrowTest.longType":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":269,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":355,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":460,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":109,"org.easymock.tests2.SerializationTest.testClass":68,"org.easymock.tests.LimitationsTest.mockNativeMethod":170,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":524,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":158,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":209,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":497,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":297,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":420,"org.easymock.tests2.NameTest.nameForMocksControl":366,"org.easymock.tests2.MockedExceptionTest.testMockedException":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":399,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":189,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":416,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":119,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":197,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":12,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":32,"org.easymock.tests.MockingTest.testNicePartialClassMocking":196,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":17,"org.easymock.tests2.CaptureTest.testCaptureLast":49,"org.easymock.tests2.CompareToTest.testCompareEqual":350,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":375,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":174,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":496,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":61,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":78,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":91,"org.easymock.tests.MockingTest.testTwoMocks":530,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":493,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":417,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":123,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":218,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":95,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":423,"org.easymock.samples.ExampleTest.removeNonExistingDocument":534,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":458,"org.easymock.tests.UsageStrictMockTest.differentMethods":194,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":213,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":422,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":251,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":64,"org.easymock.tests2.MockBuilderTest.testCreateMockString":281,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":400,"org.easymock.tests.UsageExpectAndThrowTest.floatType":117,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":397,"org.easymock.tests.ResultTest.createReturnResultToString":260,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":282,"org.easymock.tests.UsageVerifyTest.twoThrows":184,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":42,"org.easymock.tests.ResultTest.createDelegateResultToString":259,"org.easymock.samples.ExampleTest.voteAgainstRemoval":204,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":443,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":20,"org.easymock.tests.LimitationsTest.privateConstructor":501,"org.easymock.tests2.UsageConstraintsTest.testNotNull":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":182,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":262,"org.easymock.tests2.UsageTest.defaultResetToNice":103,"org.easymock.samples.ExampleTest.voteAgainstRemovals":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":154,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":208,"org.easymock.tests.UsageVarargTest.differentLength":322,"org.easymock.tests2.CallbackTest.callback":39,"org.easymock.tests2.UsageConstraintsTest.equals":424,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":358,"org.easymock.tests.UsageTest.openCallCountByLastCall":188,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":265,"org.easymock.tests.UsageCallCountTest.tooFewCalls":305,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":58,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":302,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":421,"org.easymock.tests.UsageThrowableTest.throwCheckedException":179,"org.easymock.tests.MockingTest.testStrictClassMocking":243,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":258,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":172,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":60,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":57,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":378,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":463,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":59,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":38,"org.easymock.tests.ObjectMethodsTest.testHashCode":471,"org.easymock.tests2.CompareToTest.testGreateOrEqual":351,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":495,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":66,"org.easymock.tests2.NameTest.nameForNiceMock":365,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":490,"org.easymock.tests2.DependencyTest.testInterfaceMocking":34,"org.easymock.samples.ExampleTest.addDocument":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":414,"org.easymock.tests2.DelegateToTest.testStubDelegate":24,"org.easymock.tests2.AnswerTest.stubAnswer":37,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":192,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":384,"org.easymock.tests.UsageVarargTest.varargLongAccepted":324,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":441,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":157,"org.easymock.tests.UsageExpectAndReturnTest.floatType":141,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":27,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":340,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":477,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":430,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":88,"org.easymock.tests.UsageThrowableTest.noUpperLimit":311,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":71,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":385,"org.easymock.tests2.SerializationTest.test":69,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":289,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":357,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":250,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":140,"org.easymock.tests2.UsageConstraintsTest.testSame":76,"org.easymock.samples.SupportTest.addDocument":347,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":234,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":480,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":401,"org.easymock.tests.GenericTest.testPackageScope":191,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":520,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":214,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":246,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":478,"org.easymock.tests2.NameTest.nameForMock":363,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":151,"org.easymock.tests2.UsageStrictMockTest.differentMethods":108,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":361,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":368,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":143,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":129,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":469,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":138,"org.easymock.tests2.MockedExceptionTest.testRealException":264,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":390,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":445,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":106,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":465,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":112,"org.easymock.tests2.NameTest.nameForStrictMock":364,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":383,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":287,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":16,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":388,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":89,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":229,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":252,"org.easymock.tests.ErrorMessageTest.testGetters":230,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":29,"org.easymock.tests2.UsageStrictMockTest.range":107,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":484,"org.easymock.tests2.UsageConstraintsTest.lessThan":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":405,"org.easymock.tests2.CaptureTest.testCaptureRightOne":52,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":419,"org.easymock.tests2.UsageConstraintsTest.testOr":77,"org.easymock.tests.UsageRangeTest.combination":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":13,"org.easymock.tests.UsageTest.wrongArguments":223,"org.easymock.tests2.MockBuilderTest.testWithConstructor":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":402,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":507,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":152,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":253,"org.easymock.tests.UsageVarargTest.varargShortAccepted":323,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":308,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":498,"org.easymock.tests2.UsageConstraintsTest.cmpTo":81,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":394,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":488,"org.easymock.tests2.CompareToTest.testLessThan":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":353,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":102,"org.easymock.tests2.CaptureTest.testCaptureFromStub":291,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":455,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":382,"org.easymock.tests.UsageTest.unexpectedCallWithArray":222,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":494,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":227,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":306,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":360,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":153,"org.easymock.tests2.UsageConstraintsTest.constraints":72,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":337,"org.easymock.samples.ExampleTest.addAndChangeDocument":342,"org.easymock.tests.UsageStrictMockTest.testVerify":526,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":343,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":336,"org.easymock.tests2.CompareToTest.testGreateThan":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":313,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":290,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":161,"org.easymock.tests.LimitationsTest.abstractClass":500,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":145,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":169,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":162,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":6,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":231,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":318}}]
