[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[5,6,7,8,8,9,9,10,11,12,13,14,15,16,17,18,19,0,1,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:247","sourceCode":"return ((T)(net.sf.cglib.proxy.Factory))","type":"CtReturnImpl"},"failures":[5,6,7,10,11,12,13,14,15,16,18,19,0,1,20,21,22,23,25,26,27,31,32,34,35,36,38,39,41,42,43,44,45,46,47,48,50,51,52,53,54,56,58,59,60,61,62,64,65,66,67,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:70","failures":[113,114,115,116,117,118,119,120,5,121,6,7,8,8,9,9,122,123,124,125,16,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[193],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[194],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[5,6,7,8,8,9,9,10,11,12,13,14,15,16,19,0,1,20,23,27,2,195,3,30,31,35,36,37,38,39,40,41,196,42,43,45,46,47,48,50,51,197,52,56,59,69,75,78,87,88,89,92,101,102,103,104,106,107,110],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[113,114,115,116,117,118,120,5,121,6,7,8,9,122,123,124,10,11,198,12,13,14,15,16,19,0,1,20,23,126,127,199,25,26,27,200,128,129,201,202,130,203,204,205,206,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,207,208,209,210,211,30,212,31,213,214,215,216,217,218,219,220,221,222,223,224,225,35,36,37,38,226,39,40,227,228,229,230,231,159,232,233,234,235,236,237,41,42,45,46,47,48,50,51,52,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,160,161,162,163,164,165,166,167,168,169,170,171,172,173,56,59,69,75,78,255,256,257,258,259,260,261,262,174,175,263,263,87,88,264,265,266,267,268,269,270,271,272,273,176,274,275,276,277,278,279,280,281,282,283,177,178,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,179,180,181,182,183,184,299,300,301,302,185,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,102,103,104,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,186,187,188,189,190,110,359,360,361,362,363,364,365,366,367,191,192],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:280","failures":[114,369,208,209,210,370,211,296],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[371,251,365],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[106],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[113,114,115,116,117,118,120,5,121,6,7,8,9,122,123,124,10,198,12,13,14,16,19,1,23,126,127,199,25,26,27,200,128,129,372,373,374,375,202,130,205,206,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,207,208,209,211,30,212,31,213,214,215,216,217,218,219,220,221,222,223,224,225,35,36,37,38,226,39,40,227,228,229,159,232,233,234,235,236,237,41,45,46,47,48,238,239,240,241,243,244,246,247,250,253,160,161,162,163,165,166,167,168,169,170,173,56,59,69,75,78,255,256,257,258,259,261,262,174,87,88,264,265,266,267,268,270,271,272,273,176,274,275,276,277,278,279,280,281,283,178,286,287,376,288,377,289,290,92,291,292,293,294,378,379,179,180,183,299,300,301,302,185,303,380,381,304,305,306,307,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,102,103,104,332,333,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,186,187,188,189,190,110,360,191,192],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[382,383,384,385,177,361],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[236,182],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[386,387,388],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[240,241],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[114,372,373,374,375,130,204,205,136,137,142,143,156,157,211,238,242,244,245,248,249,251,252,254,262,264,176,274,275,276,177,178,285,286,184,305,307,310,333,359,360,362,363,364,365,366,367,389,390],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[392],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[393],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[113,114,115,116,117,118,119,120,5,121,6,7,8,9,122,123,124,125,10,11,198,12,13,14,15,394,16,17,18,19,0,1,20,21,22,23,24,395,126,396,127,397,398,399,400,401,199,402,403,404,405,406,407,25,26,27,200,28,29,128,129,408,372,373,374,375,201,202,130,203,204,205,206,131,132,133,134,371,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,409,410,411,412,413,207,414,415,416,417,418,419,369,208,209,210,370,211,30,212,31,32,33,420,421,34,422,423,213,214,215,216,217,218,219,220,221,222,223,224,225,35,36,37,38,424,226,39,40,425,227,228,229,230,231,159,232,233,234,235,236,237,41,426,42,43,427,44,45,46,47,428,48,429,49,50,51,430,52,238,431,432,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,160,161,162,163,164,165,166,167,168,169,170,171,172,173,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,433,434,435,78,255,256,257,258,259,260,261,262,174,175,436,79,80,81,82,83,84,437,85,86,87,88,89,90,264,265,266,438,267,268,269,270,271,272,273,176,274,275,276,439,440,441,277,278,279,280,281,282,283,177,178,284,285,286,287,376,288,377,289,290,91,92,93,94,95,96,97,98,291,292,293,294,442,443,378,295,444,296,297,445,379,298,179,180,181,182,183,446,447,448,449,450,451,184,299,300,301,302,185,303,452,453,454,455,380,381,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,99,100,101,102,103,456,104,457,458,105,331,332,333,334,335,336,337,338,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,495,496,186,187,188,189,190,106,497,498,499,500,107,501,502,108,109,110,111,359,360,361,362,363,364,365,366,367,191,192,503,389,390,504,505,194,506,507],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[5,6,7,8,8,9,9,10,11,12,13,14,15,16,19,0,1,20,22,23,27,30,31,35,36,37,38,39,40,41,42,43,45,46,47,48,50,51,52,56,59,69,75,78,87,88,89,90,91,92,93,94,95,96,97,98,451,101,102,103,104,106,107,110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"failures":[508],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[113,115,116,118,5,123,10,11,198,12,13,14,16,0,1,20,23,199,27,128,129,130,204,205,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,207,209,30,212,213,214,215,216,217,218,219,220,221,222,223,224,35,36,37,38,226,39,40,228,229,230,231,159,237,42,45,47,48,51,238,240,242,243,244,246,248,249,250,253,254,160,161,163,164,167,168,169,170,172,173,56,59,69,75,260,261,262,174,87,89,274,276,178,285,286,288,377,289,290,379,179,180,183,102,103,104,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,186,187,188,189,190,110,359,360,363,364,367,191,192],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:71","failures":[5,15,0,1,22,30,41,42,43,45,46,47,48,50,51,52,59,69,75,89,106,107],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":134,"org.easymock.tests2.UsageTest.argumentsOrdered":252,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":359,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":223,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":481,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":247,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":124,"org.easymock.tests2.DelegateToTest.testReturnException":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":300,"org.easymock.tests.MockingTest.testPartialClassMocking":102,"org.easymock.tests.MockClassControlTest.testToString":93,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":408,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":63,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":311,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":129,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":140,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":179,"org.easymock.tests2.UsageTest.wrongArguments":245,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":419,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":293,"org.easymock.samples.ExampleTest.answerVsDelegate":114,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":107,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":458,"org.easymock.tests2.UsageConstraintsTest.testNull":136,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":12,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":98,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":222,"org.easymock.tests2.CaptureTest.testPrimitive":163,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":183,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":330,"org.easymock.tests.UsageTest.moreThanOneArgument":360,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":279,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":503,"org.easymock.tests.UsageTest.argumentsOrdered":366,"org.easymock.tests.UsageVarargTest.varargIntAccepted":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":486,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":186,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":41,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":420,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":406,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":473,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":190,"org.easymock.tests.ReplayStateInvalidUsageTest.times":467,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":207,"org.easymock.tests2.DependencyTest.testClassMocking":28,"org.easymock.tests2.AnswerTest.answer":238,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":488,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":235,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":498,"org.easymock.tests2.CaptureTest.testAnd":160,"org.easymock.tests2.UsageTest.strictResetToDefault":243,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":427,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":19,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":278,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":217,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":289,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":505,"org.easymock.tests2.DelegateToTest.testDelegate":211,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":326,"org.easymock.tests.LimitationsTest.mockFinalMethod":111,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":259,"org.easymock.tests2.DependencyTest.testClassMockingSupport":29,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":442,"org.easymock.tests2.CaptureTest.testCapture1_2446744":164,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":394,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":324,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":233,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":461,"org.easymock.tests.UsageThrowableTest.throwError":331,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":500,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":452,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":77,"org.easymock.samples.PartialClassMockTest.testGetArea":5,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":462,"org.easymock.tests.MockingTest.testInterfaceMocking":456,"org.easymock.tests2.CompareToTest.testLessOrEqual":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":187,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":506,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":64,"org.easymock.tests2.UsageTest.niceToStrict":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":471,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":45,"org.easymock.tests2.MockBuilderTest.testCreateMock":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":72,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":416,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":320,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":382,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":218,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":497,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":455,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":291,"org.easymock.tests.UsageOverloadedMethodTest.overloading":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":74,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":146,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":297,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":350,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":145,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":169,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":438,"org.easymock.tests.MockClassControlTest.testEquals":97,"org.easymock.tests2.EasyMockSupportClassTest.testAll":56,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":88,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":328,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":2,"org.easymock.tests2.CaptureTest.testCaptureAll":161,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":234,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":257,"org.easymock.tests.MockNameTest.defaultName":495,"org.easymock.tests2.UsageConstraintsTest.testMatches":147,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":459,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":280,"org.easymock.samples.ExampleTest.voteForRemovals":118,"org.easymock.tests2.ConstraintsToStringTest.notNullToString":508,"org.easymock.tests.UsageVarargTest.allKinds":176,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":274,"org.easymock.samples.BasicClassMockTest.testPrintContent":7,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":258,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":337,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":201,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":303,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":370,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":437,"org.easymock.tests2.UsageConstraintsTest.greaterThan":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":57,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":377,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":20,"org.easymock.samples.ExampleTest.voteForRemoval":115,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":85,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":21,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":229,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":501,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":421,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":15,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":78,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":242,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":215,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":299,"org.easymock.tests2.CaptureTest.testCaptureFirst":173,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":477,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":216,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":254,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":298,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":346,"org.easymock.tests2.CaptureTest.testCapture2_2446744":172,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":231,"org.easymock.tests2.UsageTest.moreThanOneArgument":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":489,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":51,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":273,"org.easymock.tests.GenericTest.testBridgedEquals":90,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":309,"org.easymock.tests.UsageExpectAndReturnTest.longType":342,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":255,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":197,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":329,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":496,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":154,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":327,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":440,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":277,"org.easymock.tests.UsageCallCountTest.tooManyCalls":310,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":73,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":347,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":418,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":316,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":336,"org.easymock.tests.MockingTest.testNiceClassMocking":105,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":36,"org.easymock.tests.MockingTest.testClassMocking":100,"org.easymock.tests2.UsageConstraintsTest.testContains":144,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":196,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":381,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":27,"org.easymock.tests2.UsageConstraintsTest.testFind":135,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":262,"org.easymock.tests.MockTypeTest.fromEasyMockClass":499,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":127,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":282,"org.easymock.tests.UsageExpectAndReturnTest.object":349,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":221,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":268,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":449,"org.easymock.tests.UsageTest.exactCallCountByLastCall":367,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":476,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":433,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":389,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":24,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":264,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":355,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":296,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":398,"org.easymock.tests.MockClassControlTest.testHashCode":96,"org.easymock.tests2.EasyMockSupportTest.testVerify":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":66,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":390,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":454,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":232,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":125,"org.easymock.tests.UsageVarargTest.varargCharAccepted":267,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":436,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":494,"org.easymock.tests2.UsageTest.openCallCountByLastCall":248,"org.easymock.tests.DefaultClassInstantiatorTest.object":79,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":224,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":453,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":67,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":318,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":4,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":412,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":397,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":0,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":95,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":317,"org.easymock.tests.CapturesMatcherTest.test":263,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":356,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":75,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":94,"org.easymock.tests2.UsageTest.resumeIfFailure":253,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":106,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":33,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":302,"org.easymock.tests2.StubTest.stubWithReturnValue":237,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":428,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":155,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":348,"org.easymock.tests2.SerializationTest.testAllMockedMethod":31,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":487,"org.easymock.samples.SupportTest.voteForRemovals":123,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":383,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":86,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":400,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":323,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":493,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":431,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":435,"org.easymock.tests.UsageExpectAndThrowTest.object":321,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":152,"org.easymock.tests2.DelegateToTest.testWrongClass":210,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":191,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":192,"org.easymock.samples.ConstructorCalledMockTest.testTax":8,"org.easymock.tests.UsageStrictMockTest.range":285,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":422,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":220,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":35,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":322,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":47,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":53,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":292,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":384,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":507,"org.easymock.tests2.CaptureTest.testCaptureNone":168,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":387,"org.easymock.tests.UsageUnorderedTest.message":184,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":193,"org.easymock.tests.UsageVerifyTest.twoReturns":276,"org.easymock.tests.UsageVarargTest.varargByteAccepted":272,"org.easymock.tests2.ThreadingTest.testThreadSafe":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":70,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":307,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":450,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":6,"org.easymock.tests2.CaptureTest.testCapture_2617107":162,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":491,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":182,"org.easymock.tests2.UsageConstraintsTest.any":142,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":466,"org.easymock.tests2.StubTest.stub":236,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":492,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":301,"org.easymock.tests.UsageExpectAndThrowTest.longType":314,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":83,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":465,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":203,"org.easymock.tests2.SerializationTest.testClass":30,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":199,"org.easymock.tests.LimitationsTest.mockNativeMethod":110,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":89,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":411,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":3,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":206,"org.easymock.tests2.NameTest.nameForMocksControl":375,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":413,"org.easymock.tests2.MockedExceptionTest.testMockedException":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":58,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":364,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":396,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":104,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":315,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":10,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":48,"org.easymock.tests.MockingTest.testNicePartialClassMocking":103,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":14,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":409,"org.easymock.tests2.CaptureTest.testCaptureLast":167,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":443,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":139,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":40,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":153,"org.easymock.tests.MockingTest.testTwoMocks":101,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":339,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":319,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":251,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":157,"org.easymock.samples.ExampleTest.removeNonExistingDocument":119,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":463,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":415,"org.easymock.tests.UsageStrictMockTest.differentMethods":286,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":399,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":388,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":81,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":230,"org.easymock.tests2.MockBuilderTest.testCreateMockString":52,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":60,"org.easymock.tests.UsageExpectAndThrowTest.floatType":313,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":55,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":239,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":395,"org.easymock.tests.UsageVerifyTest.twoThrows":275,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":69,"org.easymock.samples.ExampleTest.voteAgainstRemoval":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":482,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":194,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":1,"org.easymock.tests.LimitationsTest.privateConstructor":109,"org.easymock.tests2.UsageConstraintsTest.testNotNull":156,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":25,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":338,"org.easymock.tests2.UsageTest.defaultResetToNice":250,"org.easymock.samples.ExampleTest.voteAgainstRemovals":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":354,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":410,"org.easymock.tests.UsageVarargTest.differentLength":269,"org.easymock.tests2.CallbackTest.callback":227,"org.easymock.tests2.UsageConstraintsTest.equals":371,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":17,"org.easymock.tests.UsageTest.openCallCountByLastCall":363,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":131,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":181,"org.easymock.tests.UsageCallCountTest.tooFewCalls":305,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":38,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":294,"org.easymock.tests.UsageThrowableTest.throwCheckedException":335,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":385,"org.easymock.tests.MockingTest.testStrictClassMocking":99,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":175,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":414,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":37,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":468,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":226,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":241,"org.easymock.tests.ObjectMethodsTest.testHashCode":448,"org.easymock.tests2.CompareToTest.testGreateOrEqual":391,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":159,"org.easymock.tests2.NameTest.nameForNiceMock":374,"org.easymock.tests2.DependencyTest.testInterfaceMocking":128,"org.easymock.samples.ExampleTest.addDocument":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":76,"org.easymock.tests2.DelegateToTest.testStubDelegate":209,"org.easymock.tests2.AnswerTest.stubAnswer":240,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":178,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":429,"org.easymock.tests.UsageVarargTest.varargLongAccepted":271,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndReturnTest.floatType":341,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":357,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":23,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":9,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":445,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":405,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":150,"org.easymock.tests.UsageThrowableTest.noUpperLimit":332,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":132,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":32,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":165,"org.easymock.tests2.SerializationTest.test":212,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":80,"org.easymock.tests2.UsageConstraintsTest.testSame":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":340,"org.easymock.samples.SupportTest.addDocument":122,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":424,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":61,"org.easymock.tests.GenericTest.testPackageScope":87,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":475,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":404,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":457,"org.easymock.tests2.NameTest.nameForMock":372,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":351,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":430,"org.easymock.tests2.UsageStrictMockTest.differentMethods":205,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":18,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":325,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":446,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":290,"org.easymock.tests2.MockedExceptionTest.testRealException":200,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":485,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":484,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":130,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":470,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":180,"org.easymock.tests2.NameTest.nameForStrictMock":373,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":44,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":126,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":13,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":34,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":151,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":82,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":42,"org.easymock.tests2.UsageStrictMockTest.range":204,"org.easymock.tests2.UsageConstraintsTest.lessThan":158,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":479,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":214,"org.easymock.tests2.CaptureTest.testCaptureRightOne":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":65,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":386,"org.easymock.tests2.UsageConstraintsTest.testOr":138,"org.easymock.tests.UsageRangeTest.combination":288,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":11,"org.easymock.tests.UsageTest.wrongArguments":362,"org.easymock.tests2.MockBuilderTest.testWithConstructor":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":62,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":472,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":352,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":84,"org.easymock.tests.UsageVarargTest.varargShortAccepted":270,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":308,"org.easymock.tests2.UsageConstraintsTest.cmpTo":143,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":432,"org.easymock.tests2.CompareToTest.testLessThan":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":474,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":249,"org.easymock.tests2.CaptureTest.testCaptureFromStub":171,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":460,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":43,"org.easymock.tests.UsageTest.unexpectedCallWithArray":361,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":177,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":306,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":392,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":353,"org.easymock.tests2.UsageConstraintsTest.constraints":133,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":284,"org.easymock.samples.ExampleTest.addAndChangeDocument":120,"org.easymock.tests.UsageStrictMockTest.testVerify":376,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":121,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":256,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":188,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":195,"org.easymock.tests.LimitationsTest.abstractClass":108,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":189,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":219,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":265}}]
