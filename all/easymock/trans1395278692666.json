[{"position":"org.easymock.internal.MockBuilder:80","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[35,36,37,38,39,40],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[0,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,1,2,3,4,103,5,6,7,8,104,9,10,12,13,105,106,107,108,109,110,14,111,112,113,114,115,116,117,118,119,120,121,122,123,123,124,124,15,125,126,16,17,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,18,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[159,160,161,120,121,122,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[33],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[41,42,43,44,45,46,47,48,49,50,51,52,0,199,67,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,159,217,218,219,220,221,222,160,223,224,225,226,227,68,228,229,230,69,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,70,71,72,73,247,248,74,75,249,76,77,250,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,251,252,253,254,255,256,161,1,257,3,4,258,103,5,6,7,259,8,260,104,9,10,261,13,262,19,20,21,22,23,24,25,26,27,28,29,30,31,32,106,107,263,108,109,110,14,264,111,112,113,114,115,116,117,118,119,265,266,267,268,269,34,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,120,121,122,162,53,54,55,56,57,58,59,60,61,62,63,64,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,65,313,314,315,316,317,318,319,320,66,123,124,15,125,126,321,322,323,324,163,325,326,164,327,328,329,330,331,332,333,165,166,334,16,335,336,337,338,17,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,127,167,361,37,362,363,168,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,128,129,130,131,132,133,386,134,387,388,389,390,391,392,393,394,395,396,397,398,399,135,136,137,138,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,400,401,402,403,404,189,405,406,407,190,191,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,139,192,193,194,195,196,197,442,443,444,445,446,447,448,449,450,451,452,453,140,141,142,18,143,144,145,146,147,148,149,150,151,454,455,456,457,458,459,460,461,462,463,464,198,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,40,483,484,485,486,487,488,152,153,154,155,156,489,157,490,491,158,492,493,494,495,496],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:354","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[468,469,470],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[161,30,265,266,34,270,271,272,278,280,281,283,284,290,291,292,306,123,123,124,124,324,331,332,333,334,379,380,381,382,383,408,409,410,414,415,424,429,457,458,459,460,461,483],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[220,234,238,239,242,246,10,304,308,309,477,481,485,486],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[293],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[251,252,107,119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.Capture:82","failures":[19,21,22,23,24,25,26,28,497,29,30,32],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[0,76,77,259,104,498,499,500,501],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[46,0,199,67,200,201,202,203,204,207,208,209,212,213,214,216,217,218,220,221,223,226,233,234,235,236,237,238,239,240,241,242,243,244,245,246,70,71,72,73,248,74,75,76,81,84,94,100,252,253,254,255,256,161,1,5,6,7,8,19,20,21,22,24,25,26,27,28,29,32,106,263,108,109,110,111,114,116,265,266,267,268,34,270,271,272,273,274,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,120,121,122,162,58,294,295,298,299,300,303,305,306,309,310,311,312,65,313,314,315,316,317,318,320,66,123,124,15,125,126,324,326,164,327,328,329,330,332,333,334,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,127,361,370,371,372,373,374,375,379,380,381,382,383,137,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,404,189,408,409,192,193,194,195,196,197,442,443,444,446,447,449,450,451,452,453,141,142,145,454,455,456,457,458,459,460,461,466,472,473,474,475,476,477,478,479,480,482,483,486,487,488,155,156,157],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[41,42,43,44,45,46,47,48,49,50,51,52,0,199,67,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,159,217,218,219,220,221,222,160,223,224,225,226,227,68,228,229,230,69,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,70,71,72,73,247,248,74,75,249,76,77,250,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,251,252,253,254,255,256,161,1,257,3,4,258,103,5,6,7,259,8,260,104,9,10,261,13,262,19,20,21,22,23,24,25,26,27,28,29,30,31,32,106,107,263,108,109,110,14,264,111,112,113,114,115,116,117,118,119,265,266,267,268,269,34,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,120,121,122,162,53,54,55,56,57,58,59,60,61,62,63,64,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,65,313,314,315,316,317,318,319,320,66,123,124,15,125,126,321,322,323,324,163,325,326,164,327,328,329,330,331,332,333,165,166,334,16,335,336,337,338,17,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,127,167,361,37,362,363,168,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,128,129,130,131,132,133,386,134,387,388,389,390,391,392,393,394,395,396,397,398,399,135,136,137,138,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,400,401,402,403,404,189,405,406,407,190,191,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,139,192,193,194,195,196,197,442,443,444,445,446,447,448,449,450,451,452,453,140,141,142,18,143,144,145,146,147,148,149,150,151,454,455,456,457,458,459,460,461,462,463,464,198,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,40,483,484,485,486,487,488,152,153,154,155,156,489,157,490,491,158,492,493,494,495,496],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[84,94,13,123,124,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[218,219,224,225,252,253,254,255,306,308,309,361,362,364,365,384,502,503,504,454,455,456,40,483,485,486],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[128,129,133],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[159,160,161,120,121,122,162,163,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,403,189,405,406,407,190,191,192,193,194,195,196,197,455,198],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[285],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[76,505,123,124],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[290],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[159,160,161,120,121,122,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,403,189,405,406,407,190,191,192,193,194,195,196,197,455,198],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[506,283],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:33","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResult>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":268,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":167,"org.easymock.tests2.UsageTest.argumentsOrdered":225,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":420,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":221,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":65,"org.easymock.tests2.DelegateToTest.testReturnException":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":193,"org.easymock.tests.MockingTest.testPartialClassMocking":155,"org.easymock.tests.MockClassControlTest.testToString":146,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":251,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":88,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":169,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":84,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":502,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":213,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":498,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":274,"org.easymock.tests2.UsageTest.wrongArguments":219,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":332,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":329,"org.easymock.samples.ExampleTest.answerVsDelegate":314,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":17,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":491,"org.easymock.tests2.UsageConstraintsTest.testNull":270,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":108,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":151,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":242,"org.easymock.tests2.CaptureTest.testPrimitive":22,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":334,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":188,"org.easymock.tests.UsageTest.moreThanOneArgument":361,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":459,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":492,"org.easymock.tests.UsageTest.argumentsOrdered":365,"org.easymock.tests.UsageVarargTest.varargIntAccepted":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":379,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":63,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":229,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":412,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":383,"org.easymock.tests.ReplayStateInvalidUsageTest.times":396,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":46,"org.easymock.tests2.DependencyTest.testClassMocking":210,"org.easymock.tests2.AnswerTest.answer":204,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":427,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":203,"org.easymock.tests2.CaptureTest.testAnd":19,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":336,"org.easymock.tests2.UsageTest.strictResetToDefault":217,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":114,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":458,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":479,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":237,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":496,"org.easymock.tests2.DelegateToTest.testDelegate":298,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":184,"org.easymock.tests.LimitationsTest.mockFinalMethod":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":476,"org.easymock.tests2.DependencyTest.testClassMockingSupport":211,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":400,"org.easymock.tests2.CaptureTest.testCapture1_2446744":23,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":264,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":182,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":201,"org.easymock.tests.UsageThrowableTest.throwError":403,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":390,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":338,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":471,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":461,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":102,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.MockingTest.testInterfaceMocking":489,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":380,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":322,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":170,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":89,"org.easymock.tests2.UsageTest.niceToStrict":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":5,"org.easymock.tests2.MockBuilderTest.testCreateMock":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":97,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":49,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":178,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":35,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":238,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":335,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":470,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":327,"org.easymock.tests.UsageOverloadedMethodTest.overloading":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":93,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":198,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":280,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":325,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":352,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":279,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":28,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":445,"org.easymock.tests.MockClassControlTest.testEquals":150,"org.easymock.tests2.EasyMockSupportClassTest.testAll":81,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":142,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":474,"org.easymock.tests2.CaptureTest.testCaptureAll":20,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":202,"org.easymock.tests.MockNameTest.defaultName":387,"org.easymock.tests2.UsageConstraintsTest.testMatches":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":460,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":388,"org.easymock.samples.ExampleTest.voteForRemovals":318,"org.easymock.tests.UsageVarargTest.allKinds":453,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":454,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":475,"org.easymock.samples.BasicClassMockTest.testPrintContent":126,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":190,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":304,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":197,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":297,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":501,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":386,"org.easymock.tests2.UsageConstraintsTest.greaterThan":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":82,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":478,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":117,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":134,"org.easymock.samples.ExampleTest.voteForRemoval":315,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":118,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":300,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":11,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":339,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":230,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":14,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":159,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":127,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":235,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":192,"org.easymock.tests2.CaptureTest.testCaptureFirst":32,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":416,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":236,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":227,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":467,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":348,"org.easymock.tests2.CaptureTest.testCapture2_2446744":31,"org.easymock.tests2.UsageTest.moreThanOneArgument":218,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":428,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":10,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":452,"org.easymock.tests.GenericTest.testBridgedEquals":143,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":377,"org.easymock.tests.UsageExpectAndReturnTest.longType":344,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":472,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":233,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":187,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":12,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":288,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":457,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":368,"org.easymock.tests.UsageCallCountTest.tooManyCalls":378,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":349,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":51,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":174,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":407,"org.easymock.tests.MockingTest.testNiceClassMocking":158,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":71,"org.easymock.tests.MockingTest.testClassMocking":153,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":2,"org.easymock.tests2.UsageConstraintsTest.testContains":278,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":371,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":122,"org.easymock.tests2.UsageConstraintsTest.testFind":34,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":164,"org.easymock.tests.MockTypeTest.fromEasyMockClass":337,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":481,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":216,"org.easymock.tests.UsageExpectAndReturnTest.object":351,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":111,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":50,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":499,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":447,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":440,"org.easymock.tests.UsageTest.exactCallCountByLastCall":366,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":493,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":434,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":77,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":442,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":357,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":464,"org.easymock.tests.MockClassControlTest.testHashCode":149,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":54,"org.easymock.tests2.EasyMockSupportTest.testVerify":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":91,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":494,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":469,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":462,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":200,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":262,"org.easymock.tests.UsageVarargTest.varargCharAccepted":446,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":385,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":433,"org.easymock.tests2.UsageTest.openCallCountByLastCall":222,"org.easymock.tests.DefaultClassInstantiatorTest.object":128,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":244,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":468,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":438,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":92,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":405,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":44,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":53,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":148,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":115,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":175,"org.easymock.tests.CapturesMatcherTest.test":33,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":358,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":367,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":100,"org.easymock.tests2.UsageTest.resumeIfFailure":226,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":16,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":195,"org.easymock.tests2.StubTest.stubWithReturnValue":161,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":259,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":289,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":350,"org.easymock.tests2.SerializationTest.testAllMockedMethod":67,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":426,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":36,"org.easymock.samples.SupportTest.voteForRemovals":312,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":181,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":432,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":205,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":436,"org.easymock.tests.UsageExpectAndThrowTest.object":179,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":286,"org.easymock.tests2.DelegateToTest.testWrongClass":296,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":408,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":409,"org.easymock.tests.UsageStrictMockTest.range":485,"org.easymock.samples.ConstructorCalledMockTest.testTax":123,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":231,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":70,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":180,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":7,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":78,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":328,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":38,"org.easymock.tests2.CaptureTest.testCaptureNone":27,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":323,"org.easymock.tests.UsageUnorderedTest.message":384,"org.easymock.tests.UsageVerifyTest.twoReturns":456,"org.easymock.tests.UsageVarargTest.varargByteAccepted":451,"org.easymock.tests2.ThreadingTest.testThreadSafe":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":95,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":375,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":441,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":125,"org.easymock.tests2.CaptureTest.testCapture_2617107":21,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":166,"org.easymock.tests2.UsageConstraintsTest.any":276,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":395,"org.easymock.tests2.StubTest.stub":256,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndThrowTest.longType":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":194,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":132,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":394,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":307,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":58,"org.easymock.tests.LimitationsTest.mockNativeMethod":137,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":18,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":360,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":43,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":310,"org.easymock.tests2.NameTest.nameForMocksControl":255,"org.easymock.tests2.MockedExceptionTest.testMockedException":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":83,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":168,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":173,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":157,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":215,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":106,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":8,"org.easymock.tests.MockingTest.testNicePartialClassMocking":156,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":110,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":41,"org.easymock.tests2.CaptureTest.testCaptureLast":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":401,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":75,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":273,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":287,"org.easymock.tests.MockingTest.testTwoMocks":154,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":341,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":177,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":224,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":291,"org.easymock.samples.ExampleTest.removeNonExistingDocument":319,"org.easymock.tests.UsageStrictMockTest.differentMethods":486,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":392,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":48,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":55,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":130,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":301,"org.easymock.tests2.MockBuilderTest.testCreateMockString":13,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":144,"org.easymock.tests.UsageExpectAndThrowTest.floatType":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":85,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":80,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":207,"org.easymock.tests.UsageVerifyTest.twoThrows":455,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":250,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":94,"org.easymock.samples.ExampleTest.voteAgainstRemoval":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":421,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":321,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":116,"org.easymock.tests.LimitationsTest.privateConstructor":136,"org.easymock.tests2.UsageConstraintsTest.testNotNull":290,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":191,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":120,"org.easymock.tests2.UsageTest.defaultResetToNice":223,"org.easymock.samples.ExampleTest.voteAgainstRemovals":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":356,"org.easymock.tests.UsageVarargTest.differentLength":448,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":42,"org.easymock.tests2.CallbackTest.callback":246,"org.easymock.tests2.UsageConstraintsTest.equals":269,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":112,"org.easymock.tests.UsageTest.openCallCountByLastCall":363,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":265,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":165,"org.easymock.tests.UsageCallCountTest.tooFewCalls":373,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":73,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":330,"org.easymock.tests.UsageThrowableTest.throwCheckedException":406,"org.easymock.tests.MockingTest.testStrictClassMocking":152,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":39,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":163,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":47,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":72,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":397,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":248,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":209,"org.easymock.tests.ObjectMethodsTest.testHashCode":439,"org.easymock.tests2.NameTest.nameForNiceMock":254,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":303,"org.easymock.tests2.DependencyTest.testInterfaceMocking":212,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":500,"org.easymock.samples.ExampleTest.addDocument":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":101,"org.easymock.tests2.DelegateToTest.testStubDelegate":295,"org.easymock.tests2.AnswerTest.stubAnswer":208,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":483,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":260,"org.easymock.tests.UsageVarargTest.varargLongAccepted":450,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndReturnTest.floatType":343,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":359,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":76,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":124,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":465,"org.easymock.tests.UsageThrowableTest.noUpperLimit":404,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":62,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":284,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":266,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":68,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":24,"org.easymock.tests2.SerializationTest.test":199,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":129,"org.easymock.tests2.UsageConstraintsTest.testSame":271,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":342,"org.easymock.samples.SupportTest.addDocument":311,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":247,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":86,"org.easymock.tests.GenericTest.testPackageScope":141,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":61,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":490,"org.easymock.tests2.NameTest.nameForMock":252,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":353,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":261,"org.easymock.tests2.UsageStrictMockTest.differentMethods":309,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":113,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":345,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":183,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":437,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":480,"org.easymock.tests2.MockedExceptionTest.testRealException":162,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":423,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":306,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":399,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":333,"org.easymock.tests2.NameTest.nameForStrictMock":253,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":103,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":109,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":69,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":503,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":131,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":285,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":3,"org.easymock.tests2.UsageStrictMockTest.range":308,"org.easymock.tests2.UsageConstraintsTest.lessThan":292,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":234,"org.easymock.tests2.CaptureTest.testCaptureRightOne":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":90,"org.easymock.tests2.UsageConstraintsTest.testOr":272,"org.easymock.tests.UsageRangeTest.combination":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":107,"org.easymock.tests.UsageTest.wrongArguments":362,"org.easymock.tests2.MockBuilderTest.testWithConstructor":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":87,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":145,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":354,"org.easymock.tests.UsageVarargTest.varargShortAccepted":449,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":133,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":376,"org.easymock.tests2.UsageConstraintsTest.cmpTo":277,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":413,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":160,"org.easymock.tests2.CaptureTest.testCaptureFromStub":30,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":389,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":4,"org.easymock.tests.UsageTest.unexpectedCallWithArray":37,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":40,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":374,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":355,"org.easymock.tests2.CaptureTest.testCapture":497,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":484,"org.easymock.tests2.UsageConstraintsTest.constraints":267,"org.easymock.samples.ExampleTest.addAndChangeDocument":320,"org.easymock.tests.UsageStrictMockTest.testVerify":488,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":66,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":482,"org.easymock.tests2.CompareToTest.testGreateThan":506,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":473,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":25,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":105,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":381,"org.easymock.tests.LimitationsTest.abstractClass":135,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":347,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":382,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":504,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":443,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":239}}]
