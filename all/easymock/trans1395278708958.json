[{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[55],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[71,72],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[45,73,74,75],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[56,57,58,59,60,61,62,63,64,65,66,68,69,70],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[119,120,121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:41","sourceCode":"java.lang.StringBuffer.append(((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[122],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[123],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[124,125,126,59,127,69,128,70,129,130],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[131],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[132,133,134,135,136],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[137,138,139,134,140,141,142,143,144],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[57,131,62],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[45,145,146,147,46,47,148,149,150,151,152,153,154,16,155,156,157,17,158,159,160,161,162,18,163,164,165,166,167,168,169,170,171,48,49,172,173,174,175,176,177],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[178,179],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[0,1,2,3,4,5,6,7,8,9,10,11,45,73,74,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,76,197,198,56,199,200,201,77,71,57,58,202,203,204,205,206,207,208,209,210,211,212,213,12,214,215,13,72,14,216,217,218,219,220,15,221,145,222,223,224,225,146,147,46,47,226,148,149,150,151,152,153,154,16,155,156,157,17,158,159,160,161,162,18,163,164,165,166,167,168,169,19,20,21,22,23,227,78,228,170,229,230,171,231,232,233,234,48,235,236,49,237,238,173,239,240,137,241,138,242,243,244,245,246,247,248,139,249,250,251,252,24,253,124,254,125,255,256,257,258,259,25,260,261,26,262,27,133,263,134,140,131,264,265,266,141,142,267,143,268,269,270,271,272,273,274,135,275,144,276,277,278,136,279,280,179,79,80,81,82,28,29,30,31,32,33,34,35,36,37,38,39,281,282,283,284,285,286,287,288,289,290,291,292,293,126,294,59,127,295,296,297,40,298,299,300,301,302,303,304,305,41,176,177,306,307,308,309,310,311,312,83,313,314,84,315,316,317,318,319,320,321,85,86,322,323,324,325,326,42,327,43,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,87,350,60,61,351,88,62,63,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,64,370,371,372,373,374,375,376,377,378,379,380,44,381,382,383,384,385,386,387,388,389,390,391,392,393,394,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,395,396,397,398,399,109,400,401,402,110,111,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,112,113,114,115,116,117,438,439,440,441,442,443,444,445,446,447,448,449,450,119,451,120,121,452,453,454,455,456,457,458,459,460,65,66,461,462,463,464,465,466,467,468,118,469,470,67,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,69,128,486,70,129,487,130,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[503,504,505],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[382],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[138,134,142,144],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:114","sourceCode":"return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs)","type":"CtReturnImpl"},"failures":[0,1,2,4,5,6,7,8,11,45,73,74,180,181,182,183,184,185,186,187,188,189,192,193,194,196,76,197,198,56,199,200,201,77,71,57,58,202,203,204,208,209,210,211,212,213,12,214,215,13,72,14,216,217,218,219,220,15,221,145,222,224,225,146,46,47,226,148,149,150,151,152,153,154,16,155,156,157,17,158,159,160,161,162,18,163,164,165,166,167,168,169,19,20,21,22,23,227,78,228,170,229,230,171,231,232,233,234,48,235,49,237,238,173,239,240,137,241,138,242,243,244,245,246,247,248,139,249,250,251,252,24,253,124,254,125,255,257,258,259,25,260,261,26,262,27,133,263,134,140,264,265,266,141,142,267,143,268,269,270,271,272,273,274,135,275,144,276,277,278,136,279,280,179,79,80,81,82,28,29,30,32,33,34,35,36,39,281,282,283,284,285,286,287,288,289,290,291,292,293,126,294,59,127,295,296,297,40,298,299,300,301,302,303,304,305,41,176,176,177,177,306,307,308,309,310,311,312,83,313,314,84,315,316,317,318,319,320,321,85,86,322,323,326,42,327,43,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,87,350,60,61,351,88,62,63,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,64,370,371,372,373,374,375,376,377,378,379,380,44,381,382,383,384,385,386,387,388,389,390,391,393,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,395,396,397,398,399,109,400,401,402,110,111,403,404,421,427,430,432,433,434,435,436,112,113,114,115,116,117,438,439,440,442,443,444,445,446,447,448,449,450,119,451,120,121,452,453,454,455,456,457,458,459,460,65,66,461,462,463,464,465,466,467,468,118,469,470,67,471,472,473,475,476,477,478,479,480,481,482,483,484,485,69,128,486,70,129,487,130,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[45,74,204,208,15,221,145,222,225,146,46,47,148,149,150,151,152,153,154,16,155,156,157,17,158,159,160,161,162,18,163,164,165,166,167,168,169,228,506,229,230,231,232,233,234,235,49,237,238,507,239,508,509,252,24,124,254,125,255,257,258,259,25,260,261,26,262,27,79,80,81,176,176,177,177,306,307,308,323,327,349,371,372,373,374,375,376,378,391,392,393,394,437,450,119,451,120,121,452,453,454,455,456,457,458,459,488,489,490,491,492,494,497],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","bridgeMethod":"result"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[195],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:79","sourceCode":"return (int <= int) && (int <= int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[132,133,134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"result","minimum":"result","maximum":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[329,330,337,344,404,464],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[178,510,511,512,132,257,133,134,267,269,272,135,276,277,136,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[45,74,204,208,15,221,145,222,225,146,46,47,148,149,150,151,152,153,154,16,155,156,157,17,158,159,160,161,162,18,163,164,165,166,167,168,169,228,506,229,230,231,232,233,234,235,49,237,238,507,239,509,252,24,124,254,125,255,257,258,259,25,260,261,26,262,27,79,80,81,176,176,177,177,306,307,308,323,327,349,371,372,373,374,375,376,378,391,392,393,394,437,450,119,451,120,121,452,453,454,455,456,457,458,459,488,489,490,491,492,494,497],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[45,46,47,48,49,50,51,52,53,54],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":140,"org.easymock.tests2.UsageTest.argumentsOrdered":58,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":87,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":217,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":415,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":200,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":40,"org.easymock.tests2.DelegateToTest.testReturnException":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":113,"org.easymock.tests.MockingTest.testPartialClassMocking":491,"org.easymock.tests.MockClassControlTest.testToString":454,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":19,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":157,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":89,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":50,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":267,"org.easymock.tests2.UsageTest.wrongArguments":56,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":320,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":11,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":317,"org.easymock.samples.ExampleTest.answerVsDelegate":299,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":327,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":496,"org.easymock.tests2.UsageConstraintsTest.testNull":265,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":124,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":459,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":216,"org.easymock.tests2.CaptureTest.testPrimitive":242,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":322,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":108,"org.easymock.tests.UsageTest.moreThanOneArgument":350,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":463,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":498,"org.easymock.tests.UsageTest.argumentsOrdered":63,"org.easymock.tests.UsageVarargTest.varargIntAccepted":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":365,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":228,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":38,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":206,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":369,"org.easymock.tests.ReplayStateInvalidUsageTest.times":387,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":5,"org.easymock.tests2.DependencyTest.testClassMocking":190,"org.easymock.tests2.AnswerTest.answer":184,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":422,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":183,"org.easymock.tests2.CaptureTest.testAnd":137,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":325,"org.easymock.tests2.UsageTest.strictResetToDefault":197,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":171,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":462,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":482,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":214,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":502,"org.easymock.tests2.DelegateToTest.testDelegate":286,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":104,"org.easymock.tests.LimitationsTest.mockFinalMethod":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":479,"org.easymock.tests2.DependencyTest.testClassMockingSupport":191,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":395,"org.easymock.tests2.CaptureTest.testCapture1_2446744":243,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":256,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":102,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":181,"org.easymock.tests.UsageThrowableTest.throwError":398,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":381,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":42,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":474,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":465,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":169,"org.easymock.samples.PartialClassMockTest.testGetArea":306,"org.easymock.tests.MockingTest.testInterfaceMocking":493,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":382,"org.easymock.tests2.CompareToTest.testLessOrEqual":132,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":366,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":310,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":90,"org.easymock.tests2.UsageTest.niceToStrict":199,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":232,"org.easymock.tests2.MockBuilderTest.testCreateMock":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":164,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":98,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":215,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":324,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":473,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":315,"org.easymock.tests.UsageOverloadedMethodTest.overloading":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":161,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":118,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":272,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":313,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":340,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":271,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":248,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":441,"org.easymock.tests.MockClassControlTest.testEquals":458,"org.easymock.tests2.EasyMockSupportClassTest.testAll":151,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":451,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":477,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":182,"org.easymock.tests2.CaptureTest.testCaptureAll":241,"org.easymock.tests.MockNameTest.defaultName":379,"org.easymock.tests2.UsageConstraintsTest.testMatches":273,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":464,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":380,"org.easymock.samples.ExampleTest.voteForRemovals":303,"org.easymock.tests.UsageVarargTest.allKinds":449,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":460,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":478,"org.easymock.samples.BasicClassMockTest.testPrintContent":308,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":110,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":35,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":285,"org.easymock.tests2.UsageConstraintsTest.greaterThan":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":54,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":152,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":481,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":26,"org.easymock.samples.ExampleTest.voteForRemoval":300,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":378,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":262,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":288,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":43,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":255,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":76,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":349,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":213,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":112,"org.easymock.tests2.CaptureTest.testCaptureFirst":251,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":411,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":12,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":203,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":67,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":336,"org.easymock.tests2.UsageTest.moreThanOneArgument":198,"org.easymock.tests2.CaptureTest.testCapture2_2446744":250,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":423,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":238,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":448,"org.easymock.tests.GenericTest.testBridgedEquals":121,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":363,"org.easymock.tests.UsageExpectAndReturnTest.longType":332,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":475,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":211,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":507,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":107,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":278,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":319,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":461,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":354,"org.easymock.tests.UsageCallCountTest.tooManyCalls":364,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":165,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":337,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":10,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":402,"org.easymock.tests.MockingTest.testNiceClassMocking":497,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":221,"org.easymock.tests.MockingTest.testClassMocking":489,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":506,"org.easymock.tests2.UsageConstraintsTest.testContains":270,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":357,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":81,"org.easymock.tests2.UsageConstraintsTest.testFind":264,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":84,"org.easymock.tests.MockTypeTest.fromEasyMockClass":326,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":484,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":196,"org.easymock.tests.UsageExpectAndReturnTest.object":339,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":257,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":14,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":443,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":51,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":435,"org.easymock.tests.UsageTest.exactCallCountByLastCall":352,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":499,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":429,"org.easymock.tests2.ConstraintsToStringTest.findToString":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":47,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":438,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":345,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":468,"org.easymock.tests.MockClassControlTest.testHashCode":457,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":29,"org.easymock.tests2.EasyMockSupportTest.testVerify":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":159,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":500,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":472,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":466,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":180,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":240,"org.easymock.tests.UsageVarargTest.varargCharAccepted":442,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":370,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":428,"org.easymock.tests2.UsageTest.openCallCountByLastCall":201,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":503,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":218,"org.easymock.tests.DefaultClassInstantiatorTest.object":371,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":471,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":433,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":160,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":96,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":400,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":3,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":28,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":456,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":260,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":346,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":353,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":167,"org.easymock.tests2.UsageTest.resumeIfFailure":202,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":323,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":115,"org.easymock.tests2.StubTest.stubWithReturnValue":78,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":48,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":136,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":338,"org.easymock.tests2.SerializationTest.testAllMockedMethod":74,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":421,"org.easymock.samples.SupportTest.voteForRemovals":297,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":450,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":101,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":75,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":427,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":185,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":431,"org.easymock.tests.UsageExpectAndThrowTest.object":99,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":276,"org.easymock.tests2.DelegateToTest.testWrongClass":284,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":403,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":404,"org.easymock.samples.ConstructorCalledMockTest.testTax":176,"org.easymock.tests.UsageStrictMockTest.range":70,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":209,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":72,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":100,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":234,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":148,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":62,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":316,"org.easymock.tests2.CaptureTest.testCaptureNone":247,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":311,"org.easymock.tests.UsageUnorderedTest.message":64,"org.easymock.tests.UsageVerifyTest.twoReturns":66,"org.easymock.tests.UsageVarargTest.varargByteAccepted":447,"org.easymock.tests2.ThreadingTest.testThreadSafe":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":18,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":361,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":436,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":307,"org.easymock.tests2.CaptureTest.testCapture_2617107":138,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":86,"org.easymock.tests2.UsageConstraintsTest.any":268,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":386,"org.easymock.tests2.StubTest.stub":227,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":114,"org.easymock.tests.UsageExpectAndThrowTest.longType":92,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":375,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":385,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":294,"org.easymock.tests2.SerializationTest.testClass":45,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":33,"org.easymock.tests.LimitationsTest.mockNativeMethod":393,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":120,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":348,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":2,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":295,"org.easymock.tests2.NameTest.nameForMocksControl":23,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":4,"org.easymock.tests2.MockedExceptionTest.testMockedException":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":153,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":88,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":494,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":93,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":195,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":252,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":235,"org.easymock.tests.MockingTest.testNicePartialClassMocking":492,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":125,"org.easymock.tests2.CompareToTest.testNotComparable":55,"org.easymock.tests2.CompareToTest.testCompareEqual":511,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":0,"org.easymock.tests2.CaptureTest.testCaptureLast":246,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":396,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":146,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":142,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":277,"org.easymock.tests.MockingTest.testTwoMocks":490,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":329,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":97,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":280,"org.easymock.samples.ExampleTest.removeNonExistingDocument":304,"org.easymock.tests.UsageStrictMockTest.differentMethods":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":7,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":30,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":373,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":289,"org.easymock.tests2.MockBuilderTest.testCreateMockString":239,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":16,"org.easymock.tests.UsageExpectAndThrowTest.floatType":91,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":150,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":187,"org.easymock.tests.UsageVerifyTest.twoThrows":65,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":226,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":162,"org.easymock.samples.ExampleTest.voteAgainstRemoval":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":416,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":309,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":261,"org.easymock.tests.LimitationsTest.privateConstructor":392,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":175,"org.easymock.tests2.UsageConstraintsTest.testNotNull":279,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":111,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":79,"org.easymock.tests2.UsageTest.defaultResetToNice":71,"org.easymock.samples.ExampleTest.voteAgainstRemovals":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":344,"org.easymock.tests.UsageVarargTest.differentLength":444,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":1,"org.easymock.tests2.CallbackTest.callback":220,"org.easymock.tests2.UsageConstraintsTest.equals":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":258,"org.easymock.tests.UsageTest.openCallCountByLastCall":351,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":85,"org.easymock.tests.UsageCallCountTest.tooFewCalls":359,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":318,"org.easymock.tests.UsageThrowableTest.throwCheckedException":401,"org.easymock.tests.MockingTest.testStrictClassMocking":488,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":83,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":225,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":6,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":388,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":224,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":189,"org.easymock.tests2.CompareToTest.testGreateOrEqual":512,"org.easymock.tests.ObjectMethodsTest.testHashCode":434,"org.easymock.tests2.NameTest.nameForNiceMock":22,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":291,"org.easymock.tests2.DependencyTest.testInterfaceMocking":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":52,"org.easymock.samples.ExampleTest.addDocument":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":168,"org.easymock.tests2.DelegateToTest.testStubDelegate":283,"org.easymock.tests2.AnswerTest.stubAnswer":188,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":128,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":236,"org.easymock.tests.UsageVarargTest.varargLongAccepted":446,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndReturnTest.floatType":331,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":347,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":46,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":177,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":469,"org.easymock.tests.UsageThrowableTest.noUpperLimit":399,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":37,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":275,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":263,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":204,"org.easymock.tests2.SerializationTest.test":73,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":244,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":372,"org.easymock.tests2.UsageConstraintsTest.testSame":266,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":330,"org.easymock.samples.SupportTest.addDocument":296,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":223,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":155,"org.easymock.tests.GenericTest.testPackageScope":119,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":36,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":495,"org.easymock.tests2.NameTest.nameForMock":20,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":341,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":173,"org.easymock.tests2.UsageStrictMockTest.differentMethods":127,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":259,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":333,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":103,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":432,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":483,"org.easymock.tests2.MockedExceptionTest.testRealException":82,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":418,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":126,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":390,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":321,"org.easymock.tests2.NameTest.nameForStrictMock":21,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":231,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":504,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":194,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":254,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":208,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":144,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":374,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":229,"org.easymock.tests2.UsageStrictMockTest.range":59,"org.easymock.tests2.UsageConstraintsTest.lessThan":179,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":508,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":32,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":413,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":53,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":158,"org.easymock.tests2.CaptureTest.testCaptureRightOne":139,"org.easymock.tests2.UsageConstraintsTest.testOr":141,"org.easymock.tests.UsageRangeTest.combination":480,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":24,"org.easymock.tests.UsageTest.wrongArguments":61,"org.easymock.tests2.MockBuilderTest.testWithConstructor":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":156,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":453,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":342,"org.easymock.tests.UsageVarargTest.varargShortAccepted":445,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":376,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":362,"org.easymock.tests2.UsageConstraintsTest.cmpTo":269,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":186,"org.easymock.tests2.CompareToTest.testLessThan":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":408,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":77,"org.easymock.tests2.CaptureTest.testCaptureFromStub":249,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":44,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":230,"org.easymock.tests.UsageTest.unexpectedCallWithArray":60,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":69,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":360,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":172,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":343,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":486,"org.easymock.tests2.UsageConstraintsTest.constraints":134,"org.easymock.samples.ExampleTest.addAndChangeDocument":305,"org.easymock.tests.UsageStrictMockTest.testVerify":130,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":41,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":485,"org.easymock.tests2.CompareToTest.testGreateThan":510,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":476,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":245,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":509,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":367,"org.easymock.tests.LimitationsTest.abstractClass":391,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":335,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":470,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":368,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":13}}]
