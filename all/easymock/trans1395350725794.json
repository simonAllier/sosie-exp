[{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,0,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,1,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[10,15,51,61,215],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[509,510,511,512,513,514,19,42,63],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[7,226,226,227,227],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,0,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,1,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:29","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResults>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[18],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[314,380,459,460,461],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[515],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[95,220,270,310,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,360,425,442,457,482,484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[516],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[189,190],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[112],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:60","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[296],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[111,112,115,117,118,120,130,135,176,178,186],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[398,517,518],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[519,520,521,54,226,227],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs","constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[174,176,376,468,470],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:116","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[112,118,130],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[172,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[130],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":112,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":425,"org.easymock.tests2.UsageTest.argumentsOrdered":105,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":317,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":100,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":228,"org.easymock.tests2.DelegateToTest.testReturnException":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":454,"org.easymock.tests.MockingTest.testPartialClassMocking":364,"org.easymock.tests.MockClassControlTest.testToString":261,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":221,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":151,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":333,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":169,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":509,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":439,"org.easymock.tests2.UsageTest.wrongArguments":98,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":205,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":473,"org.easymock.samples.ExampleTest.answerVsDelegate":234,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":506,"org.easymock.tests2.UsageConstraintsTest.testNull":115,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":369,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":48,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":32,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":266,"org.easymock.tests2.CaptureTest.testPrimitive":179,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":443,"org.easymock.tests.UsageTest.moreThanOneArgument":426,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":352,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":47,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":256,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":448,"org.easymock.tests.UsageTest.argumentsOrdered":432,"org.easymock.tests.UsageVarargTest.varargIntAccepted":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":296,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":513,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":74,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":91,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":300,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":279,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":199,"org.easymock.tests.ReplayStateInvalidUsageTest.times":378,"org.easymock.tests2.DependencyTest.testClassMocking":166,"org.easymock.tests2.AnswerTest.answer":3,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":0,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":193,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":503,"org.easymock.tests2.CaptureTest.testAnd":176,"org.easymock.tests2.UsageTest.strictResetToDefault":96,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":255,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":437,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":27,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":452,"org.easymock.tests2.DelegateToTest.testDelegate":81,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":278,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":348,"org.easymock.tests.LimitationsTest.mockFinalMethod":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":457,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":479,"org.easymock.tests2.DependencyTest.testClassMockingSupport":167,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":382,"org.easymock.tests2.CaptureTest.testCapture1_2446744":180,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":52,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":191,"org.easymock.tests.UsageThrowableTest.throwError":353,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":373,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":505,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":165,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":282,"org.easymock.samples.PartialClassMockTest.testGetArea":229,"org.easymock.tests.MockingTest.testInterfaceMocking":366,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":297,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":423,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":152,"org.easymock.tests2.UsageTest.niceToStrict":99,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":334,"org.easymock.tests2.ThreadingTest.testChangeDefault":171,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":307,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":14,"org.easymock.tests2.MockBuilderTest.testCreateMock":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":160,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":202,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":342,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":28,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":502,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":332,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":243,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":471,"org.easymock.tests.UsageOverloadedMethodTest.overloading":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":156,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":125,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":270,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":480,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":412,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":517,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":124,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":185,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":492,"org.easymock.tests2.EasyMockSupportClassTest.testAll":144,"org.easymock.tests.MockClassControlTest.testEquals":265,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":304,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":350,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":477,"org.easymock.tests2.CaptureTest.testCaptureAll":177,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":192,"org.easymock.tests.MockNameTest.defaultName":421,"org.easymock.tests2.UsageConstraintsTest.testMatches":126,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":257,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":371,"org.easymock.samples.ExampleTest.voteForRemovals":238,"org.easymock.tests.UsageVarargTest.allKinds":500,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":483,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":478,"org.easymock.samples.BasicClassMockTest.testPrintContent":242,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":359,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":458,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":71,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":80,"org.easymock.tests2.UsageConstraintsTest.greaterThan":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":145,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":436,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":59,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":283,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":400,"org.easymock.samples.ExampleTest.voteForRemoval":235,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":172,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":60,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":507,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":51,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":275,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":95,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":301,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":25,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":453,"org.easymock.tests2.CaptureTest.testCaptureFirst":189,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":26,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":107,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":273,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":408,"org.easymock.tests2.CaptureTest.testCapture2_2446744":188,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":174,"org.easymock.tests2.UsageTest.moreThanOneArgument":97,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":324,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":499,"org.easymock.tests.GenericTest.testBridgedEquals":306,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":250,"org.easymock.tests.UsageExpectAndReturnTest.longType":404,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":475,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":23,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":351,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":488,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":133,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":349,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":460,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":254,"org.easymock.tests.UsageCallCountTest.tooManyCalls":251,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":161,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":409,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":204,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":338,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":358,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":207,"org.easymock.tests.MockingTest.testNiceClassMocking":370,"org.easymock.tests.MockingTest.testClassMocking":362,"org.easymock.tests2.UsageConstraintsTest.testContains":123,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":244,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":217,"org.easymock.tests2.UsageConstraintsTest.testFind":114,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":482,"org.easymock.tests.MockTypeTest.fromEasyMockClass":504,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":385,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":140,"org.easymock.tests.UsageExpectAndReturnTest.object":411,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":53,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":203,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":31,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":510,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":494,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":465,"org.easymock.tests.UsageTest.exactCallCountByLastCall":433,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":468,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":449,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":63,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":489,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":417,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":269,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":65,"org.easymock.tests.MockClassControlTest.testHashCode":264,"org.easymock.tests2.EasyMockSupportTest.testVerify":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":154,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":450,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":267,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":331,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":190,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":108,"org.easymock.tests.UsageVarargTest.varargCharAccepted":493,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":329,"org.easymock.tests2.UsageTest.openCallCountByLastCall":101,"org.easymock.tests.DefaultClassInstantiatorTest.object":394,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":34,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":330,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":155,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":340,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":356,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":197,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":64,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":57,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":263,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":281,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":339,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":418,"org.easymock.tests.ReplayStateInvalidCallsTest.times":287,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":459,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":163,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":262,"org.easymock.tests2.UsageTest.resumeIfFailure":106,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":501,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":456,"org.easymock.tests2.StubTest.stubWithReturnValue":220,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":514,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":410,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":134,"org.easymock.tests2.SerializationTest.testAllMockedMethod":44,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":323,"org.easymock.samples.SupportTest.voteForRemovals":232,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":302,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":345,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":328,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":4,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":470,"org.easymock.tests.UsageExpectAndThrowTest.object":343,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":131,"org.easymock.tests2.DelegateToTest.testWrongClass":79,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":486,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":285,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":487,"org.easymock.tests.UsageStrictMockTest.range":390,"org.easymock.samples.ConstructorCalledMockTest.testTax":226,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":93,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":30,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":344,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":16,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":141,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":472,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":277,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":424,"org.easymock.tests2.CaptureTest.testCaptureNone":184,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":37,"org.easymock.tests.UsageUnorderedTest.message":434,"org.easymock.tests.UsageVerifyTest.twoReturns":485,"org.easymock.tests.UsageVarargTest.varargByteAccepted":498,"org.easymock.tests2.ThreadingTest.testThreadSafe":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":158,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":248,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":466,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":241,"org.easymock.tests2.CaptureTest.testCapture_2617107":178,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":326,"org.easymock.tests2.UsageConstraintsTest.any":121,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":1,"org.easymock.tests2.StubTest.stub":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":327,"org.easymock.tests.UsageExpectAndThrowTest.longType":336,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":398,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":377,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":85,"org.easymock.tests2.SerializationTest.testClass":42,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":69,"org.easymock.tests.LimitationsTest.mockNativeMethod":446,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":420,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":305,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":196,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":293,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":88,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":38,"org.easymock.tests2.NameTest.nameForMocksControl":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":198,"org.easymock.tests2.MockedExceptionTest.testMockedException":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":146,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":430,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":337,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":367,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":45,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":17,"org.easymock.tests.MockingTest.testNicePartialClassMocking":365,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":50,"org.easymock.tests2.CompareToTest.testCompareEqual":516,"org.easymock.tests2.CaptureTest.testCaptureLast":183,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":194,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":383,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":118,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":213,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":292,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":132,"org.easymock.tests.MockingTest.testTwoMocks":363,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":289,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":214,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":401,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":341,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":104,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":136,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":41,"org.easymock.samples.ExampleTest.removeNonExistingDocument":239,"org.easymock.tests.UsageStrictMockTest.differentMethods":391,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":201,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":375,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":66,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":396,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":40,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":173,"org.easymock.tests2.MockBuilderTest.testCreateMockString":22,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":148,"org.easymock.tests.UsageExpectAndThrowTest.floatType":335,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":143,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":6,"org.easymock.tests.UsageVerifyTest.twoThrows":484,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":157,"org.easymock.samples.ExampleTest.voteAgainstRemoval":236,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":318,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":58,"org.easymock.tests.LimitationsTest.privateConstructor":445,"org.easymock.tests2.UsageConstraintsTest.testNotNull":135,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":215,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":360,"org.easymock.tests2.UsageTest.defaultResetToNice":103,"org.easymock.samples.ExampleTest.voteAgainstRemovals":233,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":319,"org.easymock.tests.UsageVarargTest.differentLength":495,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":195,"org.easymock.tests2.CallbackTest.callback":9,"org.easymock.tests2.UsageConstraintsTest.equals":113,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":54,"org.easymock.tests.UsageTest.openCallCountByLastCall":429,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":441,"org.easymock.tests.UsageCallCountTest.tooFewCalls":246,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":209,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":474,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":39,"org.easymock.tests.UsageThrowableTest.throwCheckedException":357,"org.easymock.tests.MockingTest.testStrictClassMocking":361,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":212,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":253,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":200,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":208,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":379,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":211,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":8,"org.easymock.tests.ObjectMethodsTest.testHashCode":464,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":512,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":175,"org.easymock.tests2.NameTest.nameForNiceMock":224,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":291,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":286,"org.easymock.tests2.DependencyTest.testInterfaceMocking":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":511,"org.easymock.samples.ExampleTest.addDocument":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":164,"org.easymock.tests2.DelegateToTest.testStubDelegate":78,"org.easymock.tests2.AnswerTest.stubAnswer":7,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":388,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":18,"org.easymock.tests.UsageVarargTest.varargLongAccepted":497,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":316,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":419,"org.easymock.tests.UsageExpectAndReturnTest.floatType":403,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":62,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":227,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":129,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":73,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":271,"org.easymock.tests.UsageThrowableTest.noUpperLimit":354,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":110,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":89,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":181,"org.easymock.tests2.SerializationTest.test":43,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":518,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":395,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":402,"org.easymock.tests2.UsageConstraintsTest.testSame":116,"org.easymock.samples.SupportTest.addDocument":231,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":210,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":276,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":149,"org.easymock.tests.GenericTest.testPackageScope":303,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":311,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":72,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":368,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":274,"org.easymock.tests2.NameTest.nameForMock":222,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":413,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":521,"org.easymock.tests2.UsageStrictMockTest.differentMethods":87,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":55,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":405,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":347,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":462,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":438,"org.easymock.tests2.MockedExceptionTest.testRealException":218,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":508,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":320,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":440,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":381,"org.easymock.tests2.NameTest.nameForStrictMock":223,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":13,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":138,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":92,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":397,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":130,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":11,"org.easymock.tests2.UsageStrictMockTest.range":86,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":280,"org.easymock.tests2.UsageConstraintsTest.lessThan":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":68,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":315,"org.easymock.tests2.CaptureTest.testCaptureRightOne":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":153,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":36,"org.easymock.tests2.UsageConstraintsTest.testOr":117,"org.easymock.tests.UsageRangeTest.combination":435,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":46,"org.easymock.tests.UsageTest.wrongArguments":428,"org.easymock.tests2.MockBuilderTest.testWithConstructor":519,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":150,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":308,"org.easymock.tests.UsageVarargTest.varargShortAccepted":496,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":399,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":249,"org.easymock.tests2.UsageConstraintsTest.cmpTo":122,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":294,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":5,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":310,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":102,"org.easymock.tests2.CaptureTest.testCaptureFromStub":187,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":372,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":12,"org.easymock.tests.UsageTest.unexpectedCallWithArray":427,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":290,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":387,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":247,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":520,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":415,"org.easymock.tests2.CaptureTest.testCapture":2,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":389,"org.easymock.tests2.UsageConstraintsTest.constraints":111,"org.easymock.samples.ExampleTest.addAndChangeDocument":240,"org.easymock.tests.UsageStrictMockTest.testVerify":393,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":230,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":386,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":476,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":298,"org.easymock.tests.LimitationsTest.abstractClass":444,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":407,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":299,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":490,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":29}}]
