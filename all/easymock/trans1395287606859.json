[{"position":"org.easymock.internal.MockBuilder:235","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[16],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[17,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[16,19,20],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[21,35,36,37,38,39,40,41,23,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,16,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[99,100],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[101,102,103,104,105,106,107,2,3,4,8,9,13,14],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:946","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[35,22,108,23,109,110,29,30,111,112,113,114,52,31,115,116],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[21,35,117,22,108,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,17,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,36,37,38,39,40,173,174,175,176,41,177,23,42,43,44,45,46,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,109,24,25,199,200,26,27,201,202,203,204,205,206,47,48,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,49,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,110,29,30,256,257,258,259,260,50,51,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,0,0,1,1,284,285,286,287,288,289,290,291,52,292,31,115,293,294,295,296,18,297,298,299,300,301,302,303,304,305,306,307,2,308,309,310,311,312,53,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,54,55,336,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,16,73,74,75,76,77,78,79,80,81,82,3,337,338,116,32,339,19,340,341,342,33,34,343,344,345,346,347,348,349,350,351,352,20,353,354,84,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[267],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[143,145,15],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[378,379],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[16,78,86,87,89,90,91,92,93,98],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[0,1,5,6,11],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[75],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[380],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[381,2,308,309],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[382,85,87,88,89,90,91,92,94,100,95,96,98],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[102,103,104,383,107,2,3,4,8,9],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[381,2,308,309],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[58,59,60,61,62,63,64,65,66,67,75,76,80,81,85,86,87,88,95,96],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[21,24,384,385,386,387],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[21,35,22,108,140,388,23,109,24,25,26,27,389,390,391,234,235,110,29,30,52,31,115,333,336,116,32,33,34,392],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[35,22,108,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,143,154,165,167,168,169,170,171,172,36,37,38,39,40,42,43,46,198,109,199,200,201,47,48,207,208,209,219,220,221,222,223,110,30,50,51,262,393,394,395,396,397,269,270,271,272,273,274,276,278,279,281,288,289,52,31,115,296,297,298,299,300,301,302,303,2,308,398,399,310,311,312,53,400,315,320,321,322,323,324,325,326,327,328,329,330,331,333,335,336,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,16,73,74,75,76,77,78,79,80,81,82,3,337,338,116,339,340,341,342,343,344,345,346,347,348,349,350,351,352,20,353,84,356,357,358,360,361,363,364,366,372,376,85,86,87,88,89,92,93,94,95,97,98],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[381,2,308,309],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[143,144,145,15,211,217,218,223,268,269,270,271,0,0,1,1,284,285,289,296,297,298,299,300,302,303,2,309,3,345,346,347,348,349,350,352,20,353,354,84,355,356,357,358,359,360,361,362,363,364,365,366,367],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[21,24,384,385,386,387],"status":-1,"binaryOperator":"int < (java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[21,22,155,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[401,402,403],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[58,59,61,63,64,66,75,80,85,87,95],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:318","failures":[165,168],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[275,286,404,405,406,407,408,333,409,410,411,412,413,414,415,416,417,418,419,336,420,421,422,423,424,425],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[102,103,104,383,107,2,3,4,8,9],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":59,"org.easymock.tests2.UsageTest.argumentsOrdered":34,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":198,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":330,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":409,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":19,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":275,"org.easymock.tests2.DelegateToTest.testReturnException":314,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":174,"org.easymock.tests.MockingTest.testPartialClassMocking":269,"org.easymock.tests.MockClassControlTest.testToString":212,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":236,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":346,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":111,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":399,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":102,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":42,"org.easymock.tests2.UsageTest.wrongArguments":32,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":425,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":148,"org.easymock.samples.ExampleTest.answerVsDelegate":277,"org.easymock.tests2.UsageConstraintsTest.testNull":61,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":352,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":217,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":329,"org.easymock.tests2.CaptureTest.testPrimitive":88,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":46,"org.easymock.tests.UsageTest.moreThanOneArgument":109,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":255,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":180,"org.easymock.tests.UsageTest.argumentsOrdered":27,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":256,"org.easymock.tests.UsageVarargTest.varargIntAccepted":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":36,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":106,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":359,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":413,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":40,"org.easymock.tests.ReplayStateInvalidUsageTest.times":194,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":336,"org.easymock.tests2.DependencyTest.testClassMocking":378,"org.easymock.tests2.AnswerTest.answer":372,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":307,"org.easymock.tests2.CaptureTest.testAnd":85,"org.easymock.tests2.UsageTest.strictResetToDefault":338,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":7,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":179,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":324,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":260,"org.easymock.tests2.DelegateToTest.testDelegate":318,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":206,"org.easymock.tests2.DependencyTest.testClassMockingSupport":379,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":234,"org.easymock.tests2.CaptureTest.testCapture1_2446744":89,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":249,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":305,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":188,"org.easymock.tests.UsageThrowableTest.throwError":165,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":414,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":182,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":12,"org.easymock.samples.PartialClassMockTest.testGetArea":289,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":37,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":208,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":237,"org.easymock.tests2.UsageTest.niceToStrict":339,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":361,"org.easymock.tests2.MockBuilderTest.testCreateMock":365,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":422,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":386,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":245,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":325,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":185,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":156,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":146,"org.easymock.tests.UsageOverloadedMethodTest.overloading":273,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":17,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":71,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":131,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":272,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":402,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":70,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":94,"org.easymock.tests.MockClassControlTest.testEquals":216,"org.easymock.tests2.EasyMockSupportClassTest.testAll":345,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":144,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":253,"org.easymock.tests2.CaptureTest.testCaptureAll":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":204,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":306,"org.easymock.tests.MockNameTest.defaultName":389,"org.easymock.tests2.UsageConstraintsTest.testMatches":72,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":181,"org.easymock.samples.ExampleTest.voteForRemovals":281,"org.easymock.tests.UsageVarargTest.allKinds":49,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":205,"org.easymock.samples.BasicClassMockTest.testPrintContent":285,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":171,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":290,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":177,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":317,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":107,"org.easymock.tests2.UsageConstraintsTest.greaterThan":73,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":220,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":358,"org.easymock.samples.ExampleTest.voteForRemoval":278,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":311,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":354,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":218,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":337,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":322,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":173,"org.easymock.tests2.CaptureTest.testCaptureFirst":98,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":380,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":323,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":344,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":155,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":127,"org.easymock.tests2.UsageTest.moreThanOneArgument":116,"org.easymock.tests2.CaptureTest.testCapture2_2446744":97,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":53,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":366,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":233,"org.easymock.tests.GenericTest.testBridgedEquals":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":163,"org.easymock.tests.UsageExpectAndReturnTest.longType":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":202,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":320,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":254,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":78,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":178,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":264,"org.easymock.tests.UsageCallCountTest.tooManyCalls":164,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":158,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":128,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":424,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":241,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":170,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":298,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":157,"org.easymock.tests2.UsageConstraintsTest.testContains":69,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":296,"org.easymock.tests2.UsageConstraintsTest.testFind":60,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":274,"org.easymock.tests.MockTypeTest.fromEasyMockClass":390,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":55,"org.easymock.tests.UsageExpectAndReturnTest.object":130,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":84,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":328,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":103,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":228,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":142,"org.easymock.tests.UsageTest.exactCallCountByLastCall":201,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":50,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":4,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":136,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":224,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":152,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":405,"org.easymock.tests.MockClassControlTest.testHashCode":215,"org.easymock.tests2.EasyMockSupportTest.testVerify":332,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":258,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":184,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":150,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":304,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":83,"org.easymock.tests.UsageVarargTest.varargCharAccepted":227,"org.easymock.tests2.CaptureTest.testCaptureMultiple":382,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":397,"org.easymock.tests2.UsageTest.openCallCountByLastCall":340,"org.easymock.tests.DefaultClassInstantiatorTest.object":261,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":331,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":183,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":140,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":28,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":243,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":168,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":418,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":404,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":214,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":356,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":242,"org.easymock.tests.CapturesMatcherTest.test":99,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":263,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":348,"org.easymock.tests2.UsageTest.resumeIfFailure":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":176,"org.easymock.tests2.StubTest.stubWithReturnValue":335,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":8,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":129,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":79,"org.easymock.tests2.SerializationTest.testAllMockedMethod":309,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":266,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":14,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":387,"org.easymock.samples.SupportTest.voteForRemovals":288,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":407,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":248,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":381,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":267,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":373,"org.easymock.tests.UsageExpectAndThrowTest.object":246,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":76,"org.easymock.tests2.DelegateToTest.testWrongClass":316,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":47,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":48,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":22,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":392,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":327,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":297,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":247,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":363,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":26,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":196,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":147,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":384,"org.easymock.tests2.CaptureTest.testCaptureNone":93,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":209,"org.easymock.tests.UsageUnorderedTest.message":23,"org.easymock.tests.UsageVerifyTest.twoReturns":30,"org.easymock.tests.UsageVarargTest.varargByteAccepted":232,"org.easymock.tests2.ThreadingTest.testThreadSafe":310,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":161,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":388,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":284,"org.easymock.tests2.CaptureTest.testCapture_2617107":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":395,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":45,"org.easymock.tests2.UsageConstraintsTest.any":67,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":193,"org.easymock.tests2.StubTest.stub":334,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":175,"org.easymock.tests.UsageExpectAndThrowTest.longType":239,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":401,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":192,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":292,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":333,"org.easymock.tests.LimitationsTest.mockNativeMethod":223,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":145,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":139,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":417,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":293,"org.easymock.tests2.NameTest.nameForMocksControl":371,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":419,"org.easymock.tests2.MockedExceptionTest.testMockedException":295,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":200,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":240,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":271,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":349,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":364,"org.easymock.tests.MockingTest.testNicePartialClassMocking":270,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":353,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":415,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":101,"org.easymock.tests2.CaptureTest.testCaptureLast":92,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":235,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":64,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":303,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":77,"org.easymock.tests.MockingTest.testTwoMocks":268,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":120,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":244,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":81,"org.easymock.samples.ExampleTest.removeNonExistingDocument":282,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":421,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":190,"org.easymock.tests.UsageStrictMockTest.differentMethods":108,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":406,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":312,"org.easymock.tests2.MockBuilderTest.testCreateMockString":367,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":210,"org.easymock.tests.UsageExpectAndThrowTest.floatType":238,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":16,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":375,"org.easymock.tests.UsageVerifyTest.twoThrows":29,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":347,"org.easymock.samples.ExampleTest.voteAgainstRemoval":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":394,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":207,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":357,"org.easymock.tests2.UsageConstraintsTest.testNotNull":80,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":172,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":294,"org.easymock.tests2.UsageTest.defaultResetToNice":342,"org.easymock.samples.ExampleTest.voteAgainstRemovals":276,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":135,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":416,"org.easymock.tests.UsageVarargTest.differentLength":229,"org.easymock.tests2.CallbackTest.callback":319,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":5,"org.easymock.tests.UsageTest.openCallCountByLastCall":199,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":56,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":44,"org.easymock.tests.UsageCallCountTest.tooFewCalls":159,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":149,"org.easymock.tests.UsageThrowableTest.throwCheckedException":169,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":385,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":51,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":302,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":420,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":299,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":195,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":301,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":377,"org.easymock.tests.ObjectMethodsTest.testHashCode":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":105,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":400,"org.easymock.tests2.NameTest.nameForNiceMock":370,"org.easymock.tests2.DependencyTest.testInterfaceMocking":398,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":104,"org.easymock.samples.ExampleTest.addDocument":280,"org.easymock.tests2.DelegateToTest.testStubDelegate":315,"org.easymock.tests2.AnswerTest.stubAnswer":376,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":35,"org.easymock.tests.UsageVarargTest.varargLongAccepted":231,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":393,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":138,"org.easymock.tests.UsageExpectAndReturnTest.floatType":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":3,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":412,"org.easymock.tests.UsageThrowableTest.noUpperLimit":166,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":153,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":74,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":57,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":90,"org.easymock.tests2.SerializationTest.test":308,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":403,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":121,"org.easymock.tests2.UsageConstraintsTest.testSame":62,"org.easymock.samples.SupportTest.addDocument":287,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":191,"org.easymock.tests.GenericTest.testPackageScope":143,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":259,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":411,"org.easymock.tests2.NameTest.nameForMock":368,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":132,"org.easymock.tests2.UsageStrictMockTest.differentMethods":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":11,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":124,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":222,"org.easymock.tests2.MockedExceptionTest.testRealException":18,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":391,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":13,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":43,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":197,"org.easymock.tests2.NameTest.nameForStrictMock":369,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":54,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":20,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":112,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":75,"org.easymock.tests.ErrorMessageTest.testGetters":113,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":360,"org.easymock.tests2.UsageStrictMockTest.range":31,"org.easymock.tests2.UsageConstraintsTest.lessThan":82,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":408,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":321,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":383,"org.easymock.tests2.CaptureTest.testCaptureRightOne":95,"org.easymock.tests2.UsageConstraintsTest.testOr":63,"org.easymock.tests.UsageRangeTest.combination":219,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":350,"org.easymock.tests.UsageTest.wrongArguments":25,"org.easymock.tests2.MockBuilderTest.testWithConstructor":6,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":211,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":125,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":133,"org.easymock.tests.UsageVarargTest.varargShortAccepted":230,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":162,"org.easymock.tests2.UsageConstraintsTest.cmpTo":68,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":374,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":341,"org.easymock.tests2.CaptureTest.testCaptureFromStub":96,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":187,"org.easymock.tests.UsageTest.unexpectedCallWithArray":24,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":21,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":160,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":10,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":134,"org.easymock.tests2.CaptureTest.testCapture":100,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":117,"org.easymock.tests2.UsageConstraintsTest.constraints":58,"org.easymock.samples.ExampleTest.addAndChangeDocument":283,"org.easymock.tests.UsageStrictMockTest.testVerify":119,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":286,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":203,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":38,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":126,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":39,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":114,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":326}}]
