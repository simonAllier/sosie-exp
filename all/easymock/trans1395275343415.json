[{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[1,2,3,4],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[5,6,7,8,0,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[20],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[1,2,3,4],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[21,22,23],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[24],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[25,26,27,28,29,30],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:36","failures":[31,32,25,33,34,35,36,37,26,38,39,40,41,42,27,43,44,45,46,47,48,28,49,29,50,51,30,52,53,54],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[20,55],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,9,74,10,75,11,76,77,78,79,80,81,12,82,83,13,84,85,14,86,87,15,88,89,16,17,90,18,91,92,19,93,94,39,95,96,97,98,99,100,101,102,103,104,105,106,107,108,43,109,110,111,112,113,55,30,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.RecordState:318","failures":[114,115],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[40,41,46,53,54],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[1,116,117,118,119,120,121,122,123],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:70","failures":[40,41,53,54],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[31,124,125,126,127,128,129,130,39,41,42,131,132,133,43,47,48,30,52,54],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[134,135,136,137,138,139,140,141,142,143,144,145,1,2,3,146,147,148,149,150,151,152,153,154,155,156,157,158,159,56,160,57,58,161,31,124,162,163,164,165,166,125,126,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,116,117,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,127,128,129,130,221,222,223,224,225,226,227,228,229,230,231,118,232,119,233,234,235,236,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,237,238,239,240,241,242,243,244,9,245,246,74,247,248,249,250,251,10,75,11,76,20,77,78,79,80,81,12,82,83,13,84,85,14,86,87,15,88,89,16,17,90,18,91,92,19,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,93,277,94,278,39,95,40,41,279,280,281,282,283,284,285,286,287,288,289,290,291,292,292,293,293,294,295,296,297,298,299,96,97,98,300,301,302,303,304,305,306,99,100,101,102,103,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,42,27,131,335,336,132,133,337,338,339,340,341,342,343,344,345,346,347,348,349,104,105,106,107,108,43,350,109,351,352,353,21,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,44,45,394,114,395,396,115,397,398,399,400,110,111,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,24,423,424,425,426,427,428,429,430,431,432,433,434,435,436,112,113,437,438,439,440,441,442,443,444,445,446,447,55,448,449,450,451,452,453,454,455,456,457,458,459,460,46,47,48,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,30,52,487,53,54,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[339,340,474,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[158,159,187,188,189,190,191,192,193,116,198,201,211,217,225,229,231,232,234,237,238,239,240,241,242,9,247,248,249,270,93,39,40,41,281,283,285,286,288,294,99,313,314,315,316,317,318,321,322,324,325,326,328,329,330,331,332,104,105,106,107,108,372,110,111,461,462,463,464,481,482,483,484,52,53,54,493,494,496],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[1,223,505,225,226,229,230,231,232,233,234,506,236,507,243,294,307,310,451],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[85,55],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.LastControl:92","failures":[60,62,70,11,76,78,80,81,82,89,91],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[1,189,193,508,116,117,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,224,227,118,119,509,235,510,511,512,292,293],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[134,135,136,137,138,139,140,141,142,143,144,145,1,2,3,146,147,148,149,150,151,152,153,154,155,156,157,158,159,56,160,57,58,161,31,124,162,163,164,165,166,125,126,167,168,169,513,514,515,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,516,191,192,193,508,116,117,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,127,128,129,130,221,222,223,224,225,226,227,228,229,230,231,118,232,517,119,233,234,235,236,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,237,238,239,240,241,242,243,244,9,245,246,74,247,248,249,250,251,10,75,11,76,20,77,78,79,80,81,12,82,83,13,84,85,14,86,87,15,88,89,16,17,90,18,91,92,19,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,93,277,94,278,39,95,40,41,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,96,97,98,300,301,302,303,304,305,306,99,100,101,102,103,307,518,519,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,42,27,131,335,336,132,133,337,338,339,340,341,342,343,344,345,346,347,348,349,104,105,106,107,108,43,350,109,351,352,353,21,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,44,45,394,114,395,396,115,397,398,399,400,110,111,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,24,423,424,425,426,427,428,429,430,431,432,433,434,435,436,112,113,437,438,439,440,441,442,443,444,445,446,447,55,448,449,450,451,452,453,454,455,456,457,458,459,460,46,47,48,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,520,476,477,478,479,480,481,482,483,484,485,486,30,52,487,53,54,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[89],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[1,2,3,146,147,148,149,150,153,154,155,158,56,57,58,161,31,124,162,163,164,165,166,125,126,167,168,186,188,189,192,193,116,127,128,129,130,221,222,223,229,230,234,236,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,237,238,239,240,241,242,9,74,248,10,75,11,76,77,78,79,80,81,12,83,13,84,85,14,86,87,15,88,89,16,17,18,91,92,19,252,253,254,255,269,270,271,273,274,275,276,93,277,94,278,39,95,40,41,279,283,284,285,286,287,288,290,96,97,300,301,302,303,304,305,99,100,101,102,103,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,42,27,131,335,336,132,133,337,341,342,343,344,345,346,104,105,106,107,108,43,362,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,45,114,395,396,115,397,398,399,400,110,111,433,434,435,436,112,113,437,438,439,441,442,444,445,446,447,55,449,450,454,46,47,48,461,462,463,464,465,471,476,477,478,479,480,481,482,483,484,485,486,30,52,487,53,54,488,489,493,494,496],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[505,506],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[249],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[76,82],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[139,1,2,3,150,153,155,158,159,58,161,124,162,163,166,125,126,168,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,116,198,201,211,217,127,128,129,130,225,229,231,232,234,60,61,62,63,64,65,66,67,68,69,70,73,237,238,239,240,241,242,9,247,248,249,76,77,78,79,81,12,82,83,13,85,14,87,15,89,16,17,90,18,91,254,261,269,271,273,93,277,94,278,39,95,40,41,279,280,281,282,283,284,285,286,287,288,290,291,294,295,296,96,97,98,300,99,100,101,102,103,315,316,318,323,328,333,131,132,133,337,341,344,345,346,348,349,104,105,106,107,108,43,372,376,377,379,384,389,44,45,114,395,396,115,397,398,399,400,110,111,112,437,438,439,441,442,443,444,445,446,447,55,449,450,47,48,466,467,468,469,470,471,481,485,486,30,52,487,53,54,488,489,493,494,496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:45","sourceCode":"final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":76,"org.easymock.tests2.UsageTest.argumentsOrdered":126,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":334,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":411,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":163,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":282,"org.easymock.tests2.DelegateToTest.testReturnException":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":434,"org.easymock.tests.MockingTest.testPartialClassMocking":493,"org.easymock.tests.MockClassControlTest.testToString":455,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":220,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":205,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":201,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":374,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":120,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":12,"org.easymock.tests2.UsageTest.wrongArguments":124,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":99,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":145,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":304,"org.easymock.samples.ExampleTest.answerVsDelegate":284,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":310,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":498,"org.easymock.tests2.UsageConstraintsTest.testNull":78,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":240,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":460,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":182,"org.easymock.tests2.CaptureTest.testPrimitive":63,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":103,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":393,"org.easymock.tests.UsageTest.moreThanOneArgument":42,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":463,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":500,"org.easymock.tests.UsageTest.argumentsOrdered":133,"org.easymock.tests.UsageVarargTest.varargIntAccepted":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":416,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":38,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":104,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":223,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":514,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":266,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":108,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":35,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":139,"org.easymock.tests.ReplayStateInvalidUsageTest.times":366,"org.easymock.tests2.DependencyTest.testClassMocking":156,"org.easymock.tests2.AnswerTest.answer":150,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":418,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":149,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":519,"org.easymock.tests2.CaptureTest.testAnd":60,"org.easymock.tests2.UsageTest.strictResetToDefault":161,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":462,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":483,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":177,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":504,"org.easymock.tests2.DelegateToTest.testDelegate":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":389,"org.easymock.tests.LimitationsTest.mockFinalMethod":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":480,"org.easymock.tests2.DependencyTest.testClassMockingSupport":157,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":44,"org.easymock.tests2.CaptureTest.testCapture1_2446744":64,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":244,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":387,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":147,"org.easymock.tests.UsageThrowableTest.throwError":114,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":360,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":309,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":520,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":465,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":510,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":219,"org.easymock.samples.PartialClassMockTest.testGetArea":294,"org.easymock.tests.MockingTest.testInterfaceMocking":495,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":361,"org.easymock.tests2.CompareToTest.testLessOrEqual":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":105,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":298,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":432,"org.easymock.tests2.UsageTest.niceToStrict":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":229,"org.easymock.tests2.MockBuilderTest.testCreateMock":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":214,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":142,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":25,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":383,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":178,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":518,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":475,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":341,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":302,"org.easymock.tests.UsageOverloadedMethodTest.overloading":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":216,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":469,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":14,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":324,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":22,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":85,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":69,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":440,"org.easymock.tests.MockClassControlTest.testEquals":459,"org.easymock.tests2.EasyMockSupportClassTest.testAll":198,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":450,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":391,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":478,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":148,"org.easymock.tests2.CaptureTest.testCaptureAll":61,"org.easymock.tests.MockNameTest.defaultName":357,"org.easymock.tests2.UsageConstraintsTest.testMatches":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":464,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":358,"org.easymock.samples.ExampleTest.voteForRemovals":288,"org.easymock.tests.UsageVarargTest.allKinds":55,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":46,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":479,"org.easymock.samples.BasicClassMockTest.testPrintContent":296,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":399,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":94,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":263,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":123,"org.easymock.tests2.UsageConstraintsTest.greaterThan":15,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":199,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":482,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":249,"org.easymock.samples.ExampleTest.voteForRemoval":285,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":356,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":250,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":275,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":311,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":515,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":243,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":58,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":333,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":175,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":196,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":433,"org.easymock.tests2.CaptureTest.testCaptureFirst":73,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":176,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":472,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":320,"org.easymock.tests2.UsageTest.moreThanOneArgument":31,"org.easymock.tests2.CaptureTest.testCapture2_2446744":72,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":419,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":234,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":447,"org.easymock.tests.GenericTest.testBridgedEquals":452,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":348,"org.easymock.tests.UsageExpectAndReturnTest.longType":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":476,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":173,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":506,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":392,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":90,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":306,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":390,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":461,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":339,"org.easymock.tests.UsageCallCountTest.tooManyCalls":349,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":49,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":215,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":321,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":144,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":379,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":398,"org.easymock.tests.MockingTest.testNiceClassMocking":499,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":188,"org.easymock.tests.MockingTest.testClassMocking":491,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":505,"org.easymock.tests2.UsageConstraintsTest.testContains":84,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":342,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":254,"org.easymock.tests2.UsageConstraintsTest.testFind":77,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":301,"org.easymock.tests.MockTypeTest.fromEasyMockClass":308,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":485,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":57,"org.easymock.tests.UsageExpectAndReturnTest.object":323,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":9,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":143,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":181,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":442,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":121,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":430,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":512,"org.easymock.tests.UsageTest.exactCallCountByLastCall":337,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":501,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":424,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":117,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":437,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":329,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":468,"org.easymock.tests.MockClassControlTest.testHashCode":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":257,"org.easymock.tests2.EasyMockSupportTest.testVerify":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":208,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":34,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":502,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":474,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":466,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":146,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":59,"org.easymock.tests.UsageVarargTest.varargCharAccepted":441,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":350,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":423,"org.easymock.tests2.UsageTest.openCallCountByLastCall":164,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":184,"org.easymock.tests.DefaultClassInstantiatorTest.object":109,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":473,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":428,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":209,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":381,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":137,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":256,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":457,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":247,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":380,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":330,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":338,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":456,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":217,"org.easymock.tests2.UsageTest.resumeIfFailure":167,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":307,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":513,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":436,"org.easymock.tests2.StubTest.stubWithReturnValue":222,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":118,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":322,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":417,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":26,"org.easymock.samples.SupportTest.voteForRemovals":281,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":448,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":259,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":386,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":24,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":151,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":426,"org.easymock.tests.UsageExpectAndThrowTest.object":384,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":16,"org.easymock.tests2.DelegateToTest.testWrongClass":271,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":110,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":111,"org.easymock.tests.UsageStrictMockTest.range":53,"org.easymock.samples.ConstructorCalledMockTest.testTax":292,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":171,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":180,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":187,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":385,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":231,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":195,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":368,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":303,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":28,"org.easymock.tests2.CaptureTest.testCaptureNone":68,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":299,"org.easymock.tests.UsageUnorderedTest.message":43,"org.easymock.tests.UsageVerifyTest.twoReturns":48,"org.easymock.tests.UsageVarargTest.varargByteAccepted":446,"org.easymock.tests2.ThreadingTest.testThreadSafe":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":212,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":346,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":431,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":295,"org.easymock.tests2.CaptureTest.testCapture_2617107":62,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":421,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":102,"org.easymock.tests2.UsageConstraintsTest.any":83,"org.easymock.tests2.StubTest.stub":221,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":365,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndThrowTest.longType":377,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":21,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":364,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":95,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":261,"org.easymock.tests.LimitationsTest.mockNativeMethod":372,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":451,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":332,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":136,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":279,"org.easymock.tests2.NameTest.nameForMocksControl":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":138,"org.easymock.tests2.MockedExceptionTest.testMockedException":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":200,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":336,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":496,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":160,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":378,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":237,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":232,"org.easymock.tests.MockingTest.testNicePartialClassMocking":494,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":242,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":134,"org.easymock.tests2.CompareToTest.testCompareEqual":7,"org.easymock.tests2.CaptureTest.testCaptureLast":67,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":45,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":81,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":193,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":17,"org.easymock.tests.MockingTest.testTwoMocks":492,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":508,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":382,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":125,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":92,"org.easymock.samples.ExampleTest.removeNonExistingDocument":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":141,"org.easymock.tests.UsageStrictMockTest.differentMethods":54,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":362,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":258,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":352,"org.easymock.tests2.ConstraintsToStringTest.andToString":37,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":276,"org.easymock.tests2.MockBuilderTest.testCreateMockString":236,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":202,"org.easymock.tests.UsageExpectAndThrowTest.floatType":376,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":197,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":153,"org.easymock.tests.UsageVerifyTest.twoThrows":47,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":194,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":211,"org.easymock.samples.ExampleTest.voteAgainstRemoval":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":412,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":297,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":248,"org.easymock.tests.LimitationsTest.privateConstructor":371,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":511,"org.easymock.tests2.UsageConstraintsTest.testNotNull":91,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":400,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":252,"org.easymock.tests2.UsageTest.defaultResetToNice":166,"org.easymock.samples.ExampleTest.voteAgainstRemovals":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":328,"org.easymock.tests.UsageVarargTest.differentLength":443,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":135,"org.easymock.tests2.CallbackTest.callback":186,"org.easymock.tests2.UsageConstraintsTest.equals":20,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":245,"org.easymock.tests.UsageTest.openCallCountByLastCall":335,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":101,"org.easymock.tests.UsageCallCountTest.tooFewCalls":344,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":190,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":305,"org.easymock.tests.UsageThrowableTest.throwCheckedException":397,"org.easymock.tests.MockingTest.testStrictClassMocking":490,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":29,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":97,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":192,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":140,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":367,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":191,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":155,"org.easymock.tests.ObjectMethodsTest.testHashCode":429,"org.easymock.tests2.CompareToTest.testGreateOrEqual":8,"org.easymock.tests2.NameTest.nameForNiceMock":129,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":277,"org.easymock.tests2.DependencyTest.testInterfaceMocking":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":122,"org.easymock.samples.ExampleTest.addDocument":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":218,"org.easymock.tests2.DelegateToTest.testStubDelegate":270,"org.easymock.tests2.AnswerTest.stubAnswer":154,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":52,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":517,"org.easymock.tests.UsageVarargTest.varargLongAccepted":445,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":410,"org.easymock.tests.UsageExpectAndReturnTest.floatType":315,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":331,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":116,"org.easymock.tests2.ConstraintsToStringTest.orToString":32,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":293,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":470,"org.easymock.tests.UsageThrowableTest.noUpperLimit":395,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":88,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":265,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":75,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":169,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":65,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":23,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":351,"org.easymock.tests2.UsageConstraintsTest.testSame":79,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":314,"org.easymock.samples.SupportTest.addDocument":280,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":516,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":203,"org.easymock.tests.GenericTest.testPackageScope":449,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":264,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":497,"org.easymock.tests2.NameTest.nameForMock":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":325,"org.easymock.tests2.UsageStrictMockTest.differentMethods":41,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":235,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":246,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":388,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":427,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":484,"org.easymock.tests2.MockedExceptionTest.testRealException":255,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":172,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":414,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":100,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":369,"org.easymock.tests2.NameTest.nameForStrictMock":128,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":228,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":56,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":241,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":170,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":89,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":353,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":225,"org.easymock.tests2.UsageStrictMockTest.range":40,"org.easymock.tests2.UsageConstraintsTest.lessThan":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":174,"org.easymock.tests2.CaptureTest.testCaptureRightOne":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":207,"org.easymock.tests2.UsageConstraintsTest.testOr":80,"org.easymock.tests.UsageRangeTest.combination":481,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":238,"org.easymock.tests.UsageTest.wrongArguments":131,"org.easymock.tests2.MockBuilderTest.testWithConstructor":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":204,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":326,"org.easymock.tests.UsageVarargTest.varargShortAccepted":444,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":354,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":347,"org.easymock.tests2.UsageConstraintsTest.cmpTo":13,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":152,"org.easymock.tests2.CompareToTest.testLessThan":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":404,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":165,"org.easymock.tests2.CaptureTest.testCaptureFromStub":71,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":359,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":226,"org.easymock.tests.UsageTest.unexpectedCallWithArray":27,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":345,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":509,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":327,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":487,"org.easymock.tests2.UsageConstraintsTest.constraints":11,"org.easymock.samples.ExampleTest.addAndChangeDocument":290,"org.easymock.tests2.ConstraintsToStringTest.notToString":33,"org.easymock.tests.UsageStrictMockTest.testVerify":489,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":291,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":486,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":477,"org.easymock.tests2.CompareToTest.testGreateThan":6,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":66,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":507,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":106,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":319,"org.easymock.tests.LimitationsTest.abstractClass":370,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":471,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":107,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":179}}]
