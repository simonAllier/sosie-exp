[{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[4,5,6,7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[8,9,10,11],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[23,24,25,26,27,28,29,30,31,32,33,34,2,35,36],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[23,24,25,26,27,28,29,30,31,32,33,34,2,35,36],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[37,38,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[40,41,42,43],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[44,45,46,12,47,48,49,50,51,52,53,54,55,56,57,58,59,13,8,9,10,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,14,91,15,92,93,94,95,96,97,4,98,99,100,40,5,101,102,103,104,41,105,106,107,108,6,109,110,111,112,7,113,42,16,114,17,18,115,19,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,37,140,38,141,142,143,144,145,146,23,147,148,149,150,151,24,25,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,26,256,257,258,259,260,261,262,263,264,265,266,267,0,268,269,270,1,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,22,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,28,29,387,388,30,31,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,32,33,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,20,440,441,442,443,444,34,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,39,460,461,21,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,2,480,481,35,482,483,36,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[44,45,512,513,8,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,514,515,516,183,517,518,206,211,212,234,235],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[16,140,141,20,441],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[44,44,45,45,53,54,57,8,10,60,63,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,519,174,520,175,176,177,178,179,180,181,183,184,185,521,522,186,187,188,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,210,211,523,524,525,526,527,528,234,235,248,249,250,267,0,268,269,270,1,271,272,273,274,275,276,278,281,310,315,316,317,318,319,320,321,322,323,324,325,22,326,367,417,422,436,437,438,439],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[529,530,531],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[46,12,47,48,49,50,52,53,54,55,56,58,59,13,8,9,14,15,92,93,94,95,97,4,98,99,100,40,5,101,102,103,104,41,105,106,107,108,6,109,110,111,112,7,113,42,16,114,17,18,115,19,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,37,140,38,141,142,143,144,145,146,23,147,148,149,150,151,24,25,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,178,180,181,188,191,195,198,199,200,201,215,216,222,241,252,253,254,255,26,256,257,258,259,265,266,267,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,325,328,330,331,332,334,335,336,337,338,339,340,341,342,343,366,367,380,381,382,383,384,385,386,28,29,387,388,30,31,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,32,33,415,416,425,426,427,428,429,430,431,432,433,434,435,20,440,441,442,443,444,445,446,447,448,449,464,470,477,478,479,2,480,481,35,482,483,36,484,485,486,487,488,489,490,491,492,498,499,500,501,502,503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[44,44,45,45,92,93,97,4,98,99,103,41,105,107,108,7,113,42,131,254,259,265,342,343,366,380,381,384,445,446,447,448,449,450,454,455,462,467,482,498,499,500,501,502],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[258,370,383,463,470],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[146,254,26,256,386,413,32,33,2,482,36,484,532,3,533,534],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[94,95,4,99,100,5,6,7,120,122,130],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[529,530,531],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[104],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[44,45,46,12,47,48,49,50,51,52,53,54,55,56,57,58,59,13,8,9,10,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,14,91,15,92,93,94,95,96,97,4,98,99,100,40,5,101,102,103,104,41,105,106,107,108,6,109,110,111,112,7,113,42,16,114,17,18,115,19,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,37,140,38,141,142,143,144,145,146,23,147,148,149,150,151,24,25,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,26,256,257,258,259,260,261,262,263,264,265,266,267,0,268,269,270,1,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,22,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,28,29,387,388,30,31,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,32,33,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,20,440,441,442,443,444,34,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,39,460,461,21,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,2,480,481,35,482,483,36,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:747","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[376,461,464],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[44,45,46,12,47,48,49,50,51,52,53,54,55,56,57,58,59,13,8,9,10,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,14,91,15,92,93,94,95,96,97,4,98,99,100,40,5,101,102,103,104,41,105,106,107,108,6,109,110,111,112,7,113,42,16,114,17,18,115,19,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,37,140,38,141,142,143,144,145,146,23,147,148,149,150,151,24,25,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,26,256,257,258,259,260,261,262,263,264,265,266,267,0,268,269,270,1,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,22,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,28,29,387,388,30,31,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,32,33,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,20,440,441,442,443,444,34,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,39,460,461,21,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,2,480,481,35,482,483,36,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[44,44,45,45,46,12,47,48,49,50,52,53,54,55,56,57,58,59,13,8,9,10,69,72,82,88,14,15,92,93,94,95,97,4,98,99,100,40,5,101,102,103,104,41,105,106,107,108,6,109,110,111,112,7,113,42,16,114,17,18,115,19,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,37,140,38,141,142,143,144,145,146,23,147,148,149,150,151,24,25,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,175,178,180,181,185,187,188,189,190,191,192,195,199,200,201,204,205,206,207,209,210,211,215,216,222,230,231,232,233,234,241,248,249,250,251,252,253,254,255,26,256,257,258,259,265,266,275,276,278,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,311,312,313,314,324,325,22,328,330,331,332,334,335,336,337,338,339,340,341,342,343,366,367,380,381,382,383,384,385,386,29,387,388,30,31,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,32,33,414,415,416,425,426,427,428,429,430,431,432,433,434,435,438,20,440,441,442,443,444,445,446,447,448,449,464,470,477,478,479,2,480,481,35,482,483,36,484,485,486,487,488,489,490,491,492,494,495,498,499,500,501,502,503,505,506,507,508,510,511],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:183","failures":[46,47,48,49,50,52,53,54,55,56,58,59,10,111,121,122,125,126,127,128,133,148,157,163,164,165,166,178,253,255,26,256,257,258,325,330,331,332,334,335,337,338,339,340,341,367,382,429,2,481,483,36,484,485,505,506,507,508,510,511],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[529],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[535],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[201],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[44,45,53,54,57,8,10,60,63,66,67,69,71,72,73,74,75,77,78,79,80,82,83,84,85,86,87,88,174,514,175,176,515,177,178,179,180,516,181,183,184,185,518,186,187,188,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,210,211,234,235,536,248,249,250,267,0,268,269,270,1,271,272,273,274,275,276,278,281,315,316,317,318,319,320,321,322,323,324,325,22,326,367,417,422,436,437,438,439],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[8,9,10,11],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[38],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[106,146,23,24,25,537,538,539,540,541,542,543,544,545,546,547,254,26,256,548,549,550,551,552,553,27,302,303,386,28,29,30,31,413,32,33,440,443,444,34,2,35,482,36,484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":95,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":385,"org.easymock.tests2.UsageTest.argumentsOrdered":25,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":39,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":148,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":56,"org.easymock.tests2.DelegateToTest.testReturnException":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":488,"org.easymock.tests.MockingTest.testPartialClassMocking":275,"org.easymock.tests.MockClassControlTest.testToString":317,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":229,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":390,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":72,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":532,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":216,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":365,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":40,"org.easymock.tests2.UsageTest.wrongArguments":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":380,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":228,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":262,"org.easymock.samples.ExampleTest.answerVsDelegate":12,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":422,"org.easymock.tests2.UsageConstraintsTest.testNull":4,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":280,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":190,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":163,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":322,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":523,"org.easymock.tests2.CaptureTest.testPrimitive":123,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":384,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":409,"org.easymock.tests.UsageTest.moreThanOneArgument":386,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":500,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":493,"org.easymock.tests.UsageTest.argumentsOrdered":31,"org.easymock.tests.UsageVarargTest.varargIntAccepted":332,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":546,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":463,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":445,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":174,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":246,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":449,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":349,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":541,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":222,"org.easymock.tests.ReplayStateInvalidUsageTest.times":376,"org.easymock.tests2.DependencyTest.testClassMocking":213,"org.easymock.tests2.AnswerTest.answer":16,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":465,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":119,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":419,"org.easymock.tests2.CaptureTest.testAnd":120,"org.easymock.tests2.UsageTest.strictResetToDefault":145,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":515,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":499,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":158,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":313,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":497,"org.easymock.tests2.DelegateToTest.testDelegate":143,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":405,"org.easymock.tests.LimitationsTest.mockFinalMethod":439,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":491,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":476,"org.easymock.tests2.DependencyTest.testClassMockingSupport":214,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":302,"org.easymock.tests2.CaptureTest.testCapture1_2446744":124,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":194,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":403,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":117,"org.easymock.tests.UsageThrowableTest.throwError":428,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":370,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":421,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":502,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":512,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":90,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":352,"org.easymock.samples.PartialClassMockTest.testGetArea":57,"org.easymock.tests.MockingTest.testInterfaceMocking":277,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":446,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":415,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":391,"org.easymock.tests2.UsageTest.niceToStrict":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":77,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":310,"org.easymock.tests2.ThreadingTest.testChangeDefault":135,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":529,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":178,"org.easymock.tests2.MockBuilderTest.testCreateMock":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":85,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":225,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":538,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":399,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":159,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":418,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":479,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":503,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":260,"org.easymock.tests.UsageOverloadedMethodTest.overloading":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":87,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":442,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":41,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":410,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":293,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":104,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":129,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":333,"org.easymock.tests2.EasyMockSupportClassTest.testAll":69,"org.easymock.tests.MockClassControlTest.testEquals":321,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":325,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":543,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":407,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":524,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":474,"org.easymock.tests2.CaptureTest.testCaptureAll":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":118,"org.easymock.tests.MockNameTest.defaultName":264,"org.easymock.tests2.UsageConstraintsTest.testMatches":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":501,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":368,"org.easymock.samples.ExampleTest.voteForRemovals":50,"org.easymock.tests.UsageVarargTest.allKinds":341,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":413,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":475,"org.easymock.samples.BasicClassMockTest.testPrintContent":54,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":434,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":492,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":243,"org.easymock.tests2.UsageConstraintsTest.greaterThan":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":70,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":312,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":201,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":353,"org.easymock.samples.ExampleTest.voteForRemoval":47,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":271,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":136,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":202,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":521,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":423,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":193,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":345,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":144,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":367,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":156,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":487,"org.easymock.tests2.CaptureTest.testCaptureFirst":133,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":157,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":153,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":34,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":289,"org.easymock.tests2.UsageTest.moreThanOneArgument":146,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":138,"org.easymock.tests2.CaptureTest.testCapture2_2446744":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":466,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":185,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":340,"org.easymock.tests.GenericTest.testBridgedEquals":326,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":510,"org.easymock.tests.UsageExpectAndReturnTest.longType":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":472,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":154,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":522,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":408,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":111,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":366,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":406,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":498,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":426,"org.easymock.tests.UsageCallCountTest.tooManyCalls":511,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":549,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":86,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":227,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":395,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":433,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":205,"org.easymock.tests.MockingTest.testNiceClassMocking":281,"org.easymock.tests.MockingTest.testClassMocking":273,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":520,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":504,"org.easymock.tests2.UsageConstraintsTest.testContains":103,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":250,"org.easymock.tests2.UsageConstraintsTest.testFind":97,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":412,"org.easymock.tests.MockTypeTest.fromEasyMockClass":420,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":480,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":15,"org.easymock.tests.UsageExpectAndReturnTest.object":292,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":195,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":162,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":335,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":308,"org.easymock.tests.UsageTest.exactCallCountByLastCall":389,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":494,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":327,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":553,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":235,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":298,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":330,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":441,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":237,"org.easymock.tests.MockClassControlTest.testHashCode":320,"org.easymock.tests2.EasyMockSupportTest.testVerify":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":79,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":540,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":495,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":478,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":20,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":116,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":167,"org.easymock.tests.UsageVarargTest.varargCharAccepted":334,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":471,"org.easymock.tests2.UsageTest.openCallCountByLastCall":149,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":530,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":165,"org.easymock.tests.DefaultClassInstantiatorTest.object":267,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":477,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":306,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":27,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":80,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":528,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":431,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":220,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":236,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":199,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":319,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":351,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":396,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":299,"org.easymock.tests.ReplayStateInvalidCallsTest.times":357,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":425,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":358,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":542,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":88,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":318,"org.easymock.tests2.UsageTest.resumeIfFailure":152,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":417,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":61,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":490,"org.easymock.tests2.StubTest.stubWithReturnValue":259,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":516,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":112,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":291,"org.easymock.tests2.SerializationTest.testAllMockedMethod":10,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":464,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":545,"org.easymock.samples.SupportTest.voteForRemovals":59,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":323,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":239,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":402,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":11,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":470,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":114,"org.easymock.tests.UsageExpectAndThrowTest.object":400,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":329,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":109,"org.easymock.tests2.DelegateToTest.testWrongClass":141,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":342,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":355,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":343,"org.easymock.samples.ConstructorCalledMockTest.testTax":44,"org.easymock.tests.UsageStrictMockTest.range":36,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":64,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":161,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":204,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":401,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":180,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":66,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":378,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":261,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":548,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":347,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":416,"org.easymock.tests2.CaptureTest.testCaptureNone":128,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":169,"org.easymock.tests.UsageUnorderedTest.message":2,"org.easymock.tests.UsageVerifyTest.twoReturns":33,"org.easymock.tests.UsageVarargTest.varargByteAccepted":339,"org.easymock.tests2.ThreadingTest.testThreadSafe":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":83,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":508,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":53,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":309,"org.easymock.tests2.CaptureTest.testCapture_2617107":122,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":547,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":383,"org.easymock.tests2.UsageConstraintsTest.any":101,"org.easymock.tests2.StubTest.stub":258,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":375,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndThrowTest.longType":393,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":270,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":374,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":255,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":241,"org.easymock.tests.LimitationsTest.mockNativeMethod":438,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":22,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":301,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":527,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":219,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":363,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":257,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":170,"org.easymock.tests2.NameTest.nameForMocksControl":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":221,"org.easymock.tests2.MockedExceptionTest.testMockedException":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":71,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":388,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":394,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":91,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":278,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":187,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":181,"org.easymock.tests.MockingTest.testNicePartialClassMocking":276,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":192,"org.easymock.tests2.CaptureTest.testCaptureLast":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":217,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":303,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":100,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":211,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":362,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":110,"org.easymock.tests.MockingTest.testTwoMocks":274,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":359,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":212,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":282,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":398,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":113,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":173,"org.easymock.samples.ExampleTest.removeNonExistingDocument":51,"org.easymock.tests.UsageStrictMockTest.differentMethods":484,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":224,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":238,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":172,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":268,"org.easymock.tests2.ConstraintsToStringTest.andToString":544,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":137,"org.easymock.tests2.MockBuilderTest.testCreateMockString":186,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":315,"org.easymock.tests.UsageExpectAndThrowTest.floatType":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":73,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":68,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":18,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":536,"org.easymock.tests.UsageVerifyTest.twoThrows":32,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":82,"org.easymock.samples.ExampleTest.voteAgainstRemoval":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":460,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":414,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":200,"org.easymock.tests.LimitationsTest.privateConstructor":437,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":513,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":435,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":248,"org.easymock.tests2.UsageTest.defaultResetToNice":151,"org.easymock.samples.ExampleTest.voteAgainstRemovals":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":297,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":218,"org.easymock.tests.UsageVarargTest.differentLength":336,"org.easymock.tests2.CallbackTest.callback":13,"org.easymock.tests2.UsageConstraintsTest.equals":96,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":551,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":196,"org.easymock.tests.UsageTest.openCallCountByLastCall":387,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":382,"org.easymock.tests.UsageCallCountTest.tooFewCalls":506,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":207,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":263,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":171,"org.easymock.tests.UsageThrowableTest.throwCheckedException":432,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":550,"org.easymock.tests.MockingTest.testStrictClassMocking":272,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":210,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":266,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":206,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":223,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":377,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":209,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":19,"org.easymock.tests2.CompareToTest.testGreateOrEqual":43,"org.easymock.tests.ObjectMethodsTest.testHashCode":307,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":139,"org.easymock.tests2.NameTest.nameForNiceMock":232,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":361,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":356,"org.easymock.tests2.DependencyTest.testInterfaceMocking":215,"org.easymock.samples.ExampleTest.addDocument":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":84,"org.easymock.tests2.DelegateToTest.testStubDelegate":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":89,"org.easymock.tests2.AnswerTest.stubAnswer":115,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":482,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":182,"org.easymock.tests.UsageVarargTest.varargLongAccepted":338,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndReturnTest.floatType":284,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":300,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":234,"org.easymock.tests2.ConstraintsToStringTest.orToString":537,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":45,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":443,"org.easymock.tests.UsageThrowableTest.noUpperLimit":429,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":245,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":93,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":60,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":125,"org.easymock.tests2.SerializationTest.test":9,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":535,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests2.UsageConstraintsTest.testSame":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":283,"org.easymock.samples.SupportTest.addDocument":58,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":208,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":346,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":74,"org.easymock.tests.GenericTest.testPackageScope":324,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":244,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":279,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":344,"org.easymock.tests2.NameTest.nameForMock":230,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":294,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":518,"org.easymock.tests2.UsageStrictMockTest.differentMethods":256,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":286,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":404,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":305,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":314,"org.easymock.tests2.MockedExceptionTest.testRealException":251,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":65,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":552,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":21,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":254,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":379,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":381,"org.easymock.tests2.NameTest.nameForStrictMock":231,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":177,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":531,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":14,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":191,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":63,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":3,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":269,"org.easymock.tests.ErrorMessageTest.testGetters":533,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":175,"org.easymock.tests2.UsageStrictMockTest.range":26,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":350,"org.easymock.tests2.UsageConstraintsTest.lessThan":42,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":525,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":240,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":519,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":155,"org.easymock.tests2.CaptureTest.testCaptureRightOne":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":78,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":168,"org.easymock.tests2.UsageConstraintsTest.testOr":99,"org.easymock.tests.UsageRangeTest.combination":311,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":188,"org.easymock.tests.UsageTest.wrongArguments":29,"org.easymock.tests2.MockBuilderTest.testWithConstructor":514,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":75,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":316,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":295,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageVarargTest.varargShortAccepted":337,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":509,"org.easymock.tests2.UsageConstraintsTest.cmpTo":102,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":364,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":17,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":453,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":150,"org.easymock.tests2.CaptureTest.testCaptureFromStub":131,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":369,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":176,"org.easymock.tests.UsageTest.unexpectedCallWithArray":28,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":360,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":35,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":507,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":517,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":296,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":483,"org.easymock.tests2.UsageConstraintsTest.constraints":94,"org.easymock.samples.ExampleTest.addAndChangeDocument":52,"org.easymock.tests2.ConstraintsToStringTest.notToString":539,"org.easymock.tests.UsageStrictMockTest.testVerify":486,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":55,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":481,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":473,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":126,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":526,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":447,"org.easymock.tests.LimitationsTest.abstractClass":436,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":448,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":444,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":534,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":160,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":331}}]
