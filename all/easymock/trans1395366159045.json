[{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,0,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[175,176],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:94","failures":[50,51,52,53,54,55,56,57,177,58,67,68,71,72,84,85,178,86,91,179],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[180,181,182],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[82,183,184,185],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"failures":[2,5,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,27,29,30,31,32,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,79,80,81,0,83,84,85,86,87,88,89,90,91,179,92,93,94,102,103,110,187,188,111,115,118,119,120,121,122,123,124,128,129,130,136,137,138,141,142,143,144,145,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,169,170,171,172,189],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[36,38,190,41,111,191,128,130,192,155,171,193,172],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[153],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[194],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[195,196,197],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[198,199,200],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[201],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.internal.RecordState:108","failures":[39,44,103,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,118,119,120,121,122,123,124,154,157,223,224,170,193],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[225],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[36,37,38,41,226,227,228,229,230,231,232,111,233,128,129,130,155,234,235,236,237,171,193,172],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[238,239,102,240,103,241,242,243,244,245,246,247,248,224,249,199,200],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[58,110,241,164,165,224],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"failures":[250],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:338","sourceCode":"if (java.lang.reflect.Type != null) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","resolvedType":"actualTypeArgument","variable":"variable"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[2,251,252,253,3,254,255,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,256,257,35,258,259,260,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,177,58,59,60,61,62,63,64,65,66,67,68,69,261,70,71,72,73,262,263,74,75,76,77,78,79,80,81,0,82,83,84,85,178,86,87,264,265,88,89,90,91,179,92,93,94,95,96,97,98,99,100,101,238,239,102,240,266,103,267,267,268,268,104,105,106,269,107,108,109,270,271,110,241,272,273,187,274,188,275,276,202,111,112,113,114,115,116,277,117,278,279,181,280,281,282,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,118,283,119,120,121,122,123,124,125,126,127,284,233,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,237,159,160,161,162,163,164,244,223,165,166,186,285,286,287,288,245,246,247,248,224,249,198,199,200,167,168,169,170,171,193,172,173,174,189,289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[2,253,3,254,255,290,5,291,8,292,21,22,293,23,24,25,26,27,28,29,294,31,33,257,35,258,260,295,296,36,297,37,38,190,39,40,41,226,42,298,43,44,45,227,228,46,47,299,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,262,263,78,80,81,0,82,83,84,85,178,86,87,264,265,88,89,90,91,179,92,93,300,301,302,303,96,97,100,101,238,239,102,240,266,103,229,230,231,232,106,269,107,108,304,109,270,305,306,271,307,308,309,110,241,272,273,187,274,188,310,111,112,113,114,115,116,277,117,311,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,118,283,119,120,121,122,123,124,125,126,127,312,284,313,314,233,128,315,129,130,192,316,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,154,155,317,234,156,157,235,236,158,237,159,160,161,162,163,164,244,223,165,166,245,246,247,248,224,249,318,319,320,321,322,323,324,325,326,169,170,171,193,172,173,174,327,328,329,330,331,332,333,334,335,289],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[51,55],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[37,38,43,44,49,50,52,54,55,60,63,66,72,271,336,283,129,130,156,157,159,170,171],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.AT_LEAST_ONCE"}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"expected","myArgument":"expected"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":51,"org.easymock.tests2.UsageTest.argumentsOrdered":228,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":154,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":248,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":298,"org.easymock.tests2.StubTest.stubWithReturnValue":103,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":70,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":140,"org.easymock.tests2.SerializationTest.testAllMockedMethod":293,"org.easymock.tests2.DelegateToTest.testReturnException":257,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":246,"org.easymock.tests.MockingTest.testPartialClassMocking":125,"org.easymock.samples.SupportTest.voteForRemovals":105,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":201,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":167,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":215,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":203,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":75,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":181,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":251,"org.easymock.tests.UsageExpectAndThrowTest.object":213,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":185,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":79,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":68,"org.easymock.tests2.DelegateToTest.testWrongClass":258,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":173,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":174,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":57,"org.easymock.tests2.UsageTest.wrongArguments":226,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":163,"org.easymock.samples.ConstructorCalledMockTest.testTax":267,"org.easymock.tests.UsageStrictMockTest.range":129,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":320,"org.easymock.samples.ExampleTest.answerVsDelegate":269,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":16,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":95,"org.easymock.tests2.UsageConstraintsTest.testNull":53,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":214,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":26,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":6,"org.easymock.tests2.CaptureTest.testPrimitive":86,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":165,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":243,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":235,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":222,"org.easymock.tests.UsageTest.moreThanOneArgument":155,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":319,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":187,"org.easymock.tests2.CaptureTest.testCaptureNone":89,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":153,"org.easymock.tests.UsageUnorderedTest.message":237,"org.easymock.tests.UsageVerifyTest.twoReturns":172,"org.easymock.tests.UsageVarargTest.varargByteAccepted":334,"org.easymock.tests2.ThreadingTest.testThreadSafe":80,"org.easymock.tests.UsageTest.argumentsOrdered":236,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":186,"org.easymock.tests.UsageVarargTest.varargIntAccepted":329,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":180,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":112,"org.easymock.tests2.CaptureTest.testCapture_2617107":178,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":290,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":191,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":223,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":291,"org.easymock.tests2.UsageConstraintsTest.any":58,"org.easymock.tests2.StubTest.stub":266,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":200,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":247,"org.easymock.tests.UsageExpectAndThrowTest.longType":206,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":175,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":297,"org.easymock.tests2.SerializationTest.testClass":21,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":34,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":94,"org.easymock.tests.LimitationsTest.mockNativeMethod":166,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":278,"org.easymock.tests2.AnswerTest.answer":2,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":150,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":177,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":303,"org.easymock.tests2.CaptureTest.testAnd":84,"org.easymock.tests2.UsageTest.strictResetToDefault":40,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":294,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":194,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":190,"org.easymock.tests2.NameTest.nameForMocksControl":232,"org.easymock.tests2.MockedExceptionTest.testMockedException":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":13,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":161,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":157,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":288,"org.easymock.tests2.DelegateToTest.testDelegate":260,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":207,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":127,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":23,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":7,"org.easymock.tests.MockingTest.testNicePartialClassMocking":126,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":218,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":28,"org.easymock.tests2.CaptureTest.testCaptureLast":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":224,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":284,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":56,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":326,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":69,"org.easymock.tests2.CaptureTest.testCapture1_2446744":87,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":216,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":211,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":227,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":72,"org.easymock.tests.UsageThrowableTest.throwError":118,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":182,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":312,"org.easymock.tests.UsageStrictMockTest.differentMethods":130,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":0,"org.easymock.tests2.MockBuilderTest.testCreateMockString":292,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":195,"org.easymock.tests.UsageExpectAndThrowTest.floatType":205,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":188,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":64,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":253,"org.easymock.tests.UsageVerifyTest.twoThrows":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":76,"org.easymock.samples.PartialClassMockTest.testGetArea":104,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":113,"org.easymock.samples.ExampleTest.voteAgainstRemoval":108,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":151,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":152,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":204,"org.easymock.tests2.UsageTest.niceToStrict":42,"org.easymock.tests2.UsageConstraintsTest.testNotNull":71,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":238,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":124,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":5,"org.easymock.tests2.UsageTest.defaultResetToNice":45,"org.easymock.samples.ExampleTest.voteAgainstRemovals":106,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":146,"org.easymock.tests2.CallbackTest.callback":255,"org.easymock.tests.UsageTest.openCallCountByLastCall":156,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":212,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":14,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":48,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":282,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":305,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":318,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":244,"org.easymock.tests.UsageCallCountTest.tooFewCalls":307,"org.easymock.tests.UsageOverloadedMethodTest.overloading":169,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":202,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":62,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":142,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":168,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":61,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":90,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":321,"org.easymock.tests.UsageThrowableTest.throwCheckedException":121,"org.easymock.tests2.EasyMockSupportClassTest.testAll":74,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":311,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":324,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":302,"org.easymock.tests2.CaptureTest.testCaptureAll":85,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":241,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":100,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":97,"org.easymock.tests2.UsageConstraintsTest.testMatches":63,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":1,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":99,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":274,"org.easymock.tests.ObjectMethodsTest.testHashCode":197,"org.easymock.samples.ExampleTest.voteForRemovals":109,"org.easymock.tests2.NameTest.nameForNiceMock":231,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":83,"org.easymock.tests.UsageVarargTest.allKinds":289,"org.easymock.tests2.DependencyTest.testInterfaceMocking":78,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":325,"org.easymock.samples.ExampleTest.addDocument":304,"org.easymock.tests2.DelegateToTest.testStubDelegate":35,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":123,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":295,"org.easymock.tests2.AnswerTest.stubAnswer":3,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":249,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":128,"org.easymock.tests2.UsageConstraintsTest.greaterThan":65,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":160,"org.easymock.tests.UsageVarargTest.varargLongAccepted":333,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":32,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":192,"org.easymock.samples.ExampleTest.voteForRemoval":107,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":81,"org.easymock.tests.UsageExpectAndReturnTest.floatType":133,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":149,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":33,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":268,"org.easymock.tests.UsageThrowableTest.noUpperLimit":283,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":66,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":277,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":49,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":39,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":264,"org.easymock.tests2.SerializationTest.test":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":242,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":176,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":11,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":119,"org.easymock.tests2.UsageConstraintsTest.testSame":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":245,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":256,"org.easymock.tests2.CaptureTest.testCaptureFirst":93,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":12,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":47,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":183,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":138,"org.easymock.tests.GenericTest.testPackageScope":117,"org.easymock.tests2.CaptureTest.testCapture2_2446744":92,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":82,"org.easymock.tests2.UsageTest.moreThanOneArgument":41,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":287,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":8,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":335,"org.easymock.tests2.NameTest.nameForMock":229,"org.easymock.tests.UsageExpectAndReturnTest.longType":134,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":322,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":9,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":221,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":143,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":261,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":189,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":219,"org.easymock.tests2.UsageStrictMockTest.differentMethods":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":272,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":199,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":135,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":217,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":162,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":271,"org.easymock.tests2.MockedExceptionTest.testRealException":240,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":139,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":208,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":36,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":122,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":164,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":96,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":306,"org.easymock.tests2.NameTest.nameForStrictMock":230,"org.easymock.tests2.UsageConstraintsTest.testContains":60,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":102,"org.easymock.tests2.UsageConstraintsTest.testFind":52,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":170,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":27,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":313,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":263,"org.easymock.tests.UsageExpectAndReturnTest.object":141,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":67,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":29,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":4,"org.easymock.tests2.UsageStrictMockTest.range":37,"org.easymock.tests2.UsageConstraintsTest.lessThan":73,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":17,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":331,"org.easymock.tests.UsageTest.exactCallCountByLastCall":158,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":110,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":10,"org.easymock.tests2.CaptureTest.testCaptureRightOne":91,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":285,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":184,"org.easymock.tests2.UsageConstraintsTest.testOr":55,"org.easymock.tests.UsageRangeTest.combination":159,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":327,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":147,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":276,"org.easymock.tests.UsageTest.wrongArguments":234,"org.easymock.tests.MockClassControlTest.testHashCode":196,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":336,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":144,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":286,"org.easymock.tests.UsageVarargTest.varargShortAccepted":332,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":281,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":275,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":300,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":250,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":299,"org.easymock.tests2.UsageConstraintsTest.cmpTo":59,"org.easymock.tests.UsageVarargTest.varargCharAccepted":330,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":252,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":296,"org.easymock.tests2.UsageTest.openCallCountByLastCall":43,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":44,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":20,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":280,"org.easymock.tests2.CaptureTest.testCaptureFromStub":179,"org.easymock.tests.UsageTest.unexpectedCallWithArray":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":210,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":233,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":120,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":145,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":315,"org.easymock.tests2.UsageConstraintsTest.constraints":50,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":30,"org.easymock.samples.ExampleTest.addAndChangeDocument":270,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":209,"org.easymock.tests.CapturesMatcherTest.test":225,"org.easymock.tests.UsageStrictMockTest.testVerify":316,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":148,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":198,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":77,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":323,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":265,"org.easymock.tests2.UsageTest.resumeIfFailure":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":114,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":137,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":111,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":115,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":15}}]
