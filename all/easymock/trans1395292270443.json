[{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[0],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[1],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,2,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[95,16,96,97],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[98,22,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,74,134,76,135,136,137,138,139,140,141,142],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[143,144,145,146],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[147],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[148,149,150,151,152,153],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[154,155,156,157,158,159,160,161,162,163],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[164,165,166,31,167,168,169,170,171,172,173],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[164,165,166,31,167,169,170,171,172],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[174,175,176,177],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[178,179,18,19,180,20,21,181,182,183,36,184,185,186,187,188,189,37,190,191,38,192,39,100,101,102,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,54,55,56,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[236,237,238,239,240],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[172],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[241,242,58,243,244,78],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[241,242,58,243,244,78],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"this.org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[245,246,247],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[248,249,250,251],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[252,253,254,255,256],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"position":"org.easymock.ConstructorArgs:54","failures":[154,155,161,257,258,19,21,259,260,261,162,163,262,263,193,264,265,194,266,195,0,196,197,267,268,198,269,270,199,271,272,200,201,273,274,202,275,276,277,205,206],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[278],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[170],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[38],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[236,279],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":167,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":76,"org.easymock.tests2.UsageTest.argumentsOrdered":28,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":140,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":26,"org.easymock.tests2.StubTest.stubWithReturnValue":98,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":162,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":150,"org.easymock.tests2.SerializationTest.testAllMockedMethod":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":138,"org.easymock.tests.MockingTest.testPartialClassMocking":231,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":242,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":215,"org.easymock.tests.MockClassControlTest.testToString":54,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":39,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":268,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":0,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":106,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":245,"org.easymock.tests.UsageExpectAndThrowTest.object":116,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":156,"org.easymock.tests2.UsageTest.wrongArguments":24,"org.easymock.samples.ConstructorCalledMockTest.testTax":205,"org.easymock.tests.UsageStrictMockTest.range":61,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":88,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":179,"org.easymock.tests2.UsageConstraintsTest.testNull":168,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":117,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":184,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":223,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":16,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":193,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":80,"org.easymock.tests.UsageTest.moreThanOneArgument":77,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":125,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":243,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":175,"org.easymock.tests.UsageUnorderedTest.message":53,"org.easymock.tests.UsageVerifyTest.twoReturns":75,"org.easymock.tests.UsageTest.argumentsOrdered":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":200,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":203,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":51,"org.easymock.tests2.CaptureTest.testCapture_2617107":165,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":105,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":153,"org.easymock.tests.UsageExpectAndThrowTest.longType":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":139,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":212,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":5,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":48,"org.easymock.tests2.SerializationTest.testClass":161,"org.easymock.tests.LimitationsTest.mockNativeMethod":226,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":9,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":255,"org.easymock.tests2.CaptureTest.testAnd":164,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":261,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":8,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":37,"org.easymock.tests2.NameTest.nameForMocksControl":35,"org.easymock.tests2.MockedExceptionTest.testMockedException":101,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":195,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":135,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":233,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":110,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":183,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":44,"org.easymock.tests.MockingTest.testNicePartialClassMocking":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":121,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":186,"org.easymock.tests.LimitationsTest.mockFinalMethod":227,"org.easymock.tests2.CompareToTest.testCompareEqual":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":141,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":84,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":21,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":170,"org.easymock.tests.MockingTest.testTwoMocks":230,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":83,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":259,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":114,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":177,"org.easymock.tests.UsageThrowableTest.throwError":126,"org.easymock.tests.UsageStrictMockTest.differentMethods":62,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":87,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":210,"org.easymock.tests2.MockBuilderTest.testCreateMockString":47,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":196,"org.easymock.tests.UsageExpectAndThrowTest.floatType":108,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":265,"org.easymock.tests.UsageVerifyTest.twoThrows":74,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":91,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":272,"org.easymock.samples.PartialClassMockTest.testGetArea":207,"org.easymock.tests2.CompareToTest.testLessOrEqual":240,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":198,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":52,"org.easymock.tests2.UsageTest.niceToStrict":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":107,"org.easymock.tests.LimitationsTest.privateConstructor":225,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":258,"org.easymock.tests2.UsageConstraintsTest.testNotNull":173,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":100,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":132,"org.easymock.tests2.MockBuilderTest.testCreateMock":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":273,"org.easymock.tests.UsageVarargTest.differentLength":71,"org.easymock.tests2.CallbackTest.callback":17,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":241,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":115,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":13,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":250,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":104,"org.easymock.tests.UsageCallCountTest.tooFewCalls":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":202,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":136,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":180,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":176,"org.easymock.tests.UsageThrowableTest.throwCheckedException":129,"org.easymock.tests.MockClassControlTest.testEquals":222,"org.easymock.tests2.EasyMockSupportClassTest.testAll":194,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":217,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":244,"org.easymock.tests.MockingTest.testStrictClassMocking":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":123,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":20,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":133,"org.easymock.tests.MockNameTest.defaultName":70,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":10,"org.easymock.tests2.CompareToTest.testGreateOrEqual":239,"org.easymock.tests2.NameTest.nameForNiceMock":34,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":73,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":158,"org.easymock.samples.BasicClassMockTest.testPrintContent":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":276,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":131,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":3,"org.easymock.tests2.AnswerTest.stubAnswer":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":142,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":59,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":266,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":38,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":63,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":214,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":192,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":278,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":89,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":154,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":187,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":206,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":92,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":235,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":22,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":181,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":163,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":95,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":127,"org.easymock.tests2.UsageConstraintsTest.testSame":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":247,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":12,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":30,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":94,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":197,"org.easymock.tests.GenericTest.testPackageScope":216,"org.easymock.tests2.UsageTest.moreThanOneArgument":23,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":256,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":46,"org.easymock.tests.GenericTest.testBridgedEquals":218,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":68,"org.easymock.tests2.NameTest.nameForMock":32,"org.easymock.tests.UsageExpectAndReturnTest.longType":149,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":263,"org.easymock.tests2.UsageStrictMockTest.differentMethods":7,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":122,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":189,"org.easymock.tests.UsageCallCountTest.tooManyCalls":69,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":120,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":96,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":274,"org.easymock.tests2.MockedExceptionTest.testRealException":103,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":90,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":4,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":130,"org.easymock.tests.MockingTest.testNiceClassMocking":234,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":18,"org.easymock.tests.MockingTest.testClassMocking":229,"org.easymock.tests2.NameTest.nameForStrictMock":33,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":102,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":134,"org.easymock.tests.MockTypeTest.fromEasyMockClass":86,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":185,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":57,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":182,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":211,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":188,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":41,"org.easymock.tests2.UsageStrictMockTest.range":6,"org.easymock.tests2.UsageConstraintsTest.lessThan":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":15,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":157,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":97,"org.easymock.tests.UsageTest.exactCallCountByLastCall":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":253,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":11,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":269,"org.easymock.tests2.CaptureTest.testCaptureRightOne":166,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":145,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":174,"org.easymock.tests2.UsageConstraintsTest.testOr":169,"org.easymock.tests.UsageRangeTest.combination":72,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":36,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":151,"org.easymock.tests.UsageTest.wrongArguments":79,"org.easymock.tests2.MockBuilderTest.testWithConstructor":260,"org.easymock.tests.MockClassControlTest.testHashCode":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":267,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":270,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":249,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":213,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":67,"org.easymock.tests2.CompareToTest.testLessThan":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":251,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":99,"org.easymock.tests.DefaultClassInstantiatorTest.object":208,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":248,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":42,"org.easymock.tests.UsageTest.unexpectedCallWithArray":78,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":199,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":113,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":128,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":262,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":60,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":56,"org.easymock.tests2.UsageConstraintsTest.constraints":31,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":190,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":112,"org.easymock.tests2.ConstraintsToStringTest.notToString":147,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":275,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":55,"org.easymock.tests2.CompareToTest.testGreateThan":237,"org.easymock.tests2.UsageTest.resumeIfFailure":29,"org.easymock.tests.LimitationsTest.abstractClass":224,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":85,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":14}}]
