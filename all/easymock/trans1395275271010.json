[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"returnedType","type":"returnedType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[3,4,5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[57,58,59,60,61,62,9,63,64,65,66,67,68,69,70,71,17,72,18,73,74,21,22,24,25,75,76,77,78,79,31,32,33,39,80,41,81,82,42,43,44,45,83,84,85,86,87,88,89,47,48,53,90,54,55,56],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[91,92,92,93,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,57,58,59,60,109,110,111,112,8,113,114,61,115,116,117,118,119,62,120,121,2,122,123,9,124,125,126,127,128,129,130,63,131,132,133,134,135,136,137,10,138,139,140,141,11,12,13,142,64,65,143,66,67,68,69,70,144,145,146,147,71,148,14,149,150,151,152,153,154,155,15,156,16,157,158,159,160,161,162,163,164,165,166,17,167,72,18,19,20,73,74,168,21,22,23,24,169,170,25,171,172,173,174,75,175,176,177,178,76,179,180,181,182,183,184,185,186,26,187,188,189,27,28,190,191,29,192,193,194,195,196,197,198,77,199,200,201,78,202,30,203,79,31,32,33,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,38,282,283,284,39,80,40,41,81,82,42,43,44,285,286,287,288,289,290,291,292,293,294,295,296,45,297,298,299,300,301,302,303,83,304,305,306,307,308,4,5,6,309,310,84,311,312,313,314,315,316,317,46,318,319,320,321,85,322,323,324,325,326,327,328,329,330,331,86,332,333,87,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,88,351,89,47,48,352,353,354,355,356,357,49,50,51,358,359,52,360,53,90,54,55,56,361,362,363,364,365],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[9,151,20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"m"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[18,21,22,32,278,37,40,41,42,43,45,47,48,53,55],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:45","sourceCode":"final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:218","failures":[91,92,93,108,367,138,368,369,11,13,370,156,371,196,197,205,3,6],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[205,206,207,372],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[91,92,92,93,93,103,104,108,137,10,373,138,139,140,141,11,12,13,148,14,150,151,152,153,154,155,15,156,16,371,164,179,180,181,182,184,185,195,196,197,198,205,207,251,252,253,254,374,375,285,4,5,6,7,322,323,324,325,326,327,328,329,330,376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[113,114],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[91,92,92,93,93,103,104,108,137,377,10,373,138,139,140,141,11,12,378,13,148,14,150,151,152,153,154,155,15,156,16,164,179,180,181,182,184,185,379,195,196,197,198,205,207,251,252,253,254,374,375,285,4,5,6,323,330],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:50","failures":[92,93,108,367,380,381,382,383,384,385,369,386,387,181,185,388,389,390,391,195,392,393,196,394,395,396,397,398,399,400,401,402,197,403,404,405,406,407,198,408,409,205],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[91,92,92,93,93,103,104,108,137,10,373,138,139,140,141,11,12,13,148,14,150,151,152,153,154,155,15,156,16,371,164,179,180,181,182,184,185,195,196,197,198,205,207,251,252,253,254,374,375,285,4,5,6,322,323,324,325,326,327,330,376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[113],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[410],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[178,333],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1263","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[61,119,126,63],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[8,113,116,117,119,126,142,65,145],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[102,105,411,412,413,414,415,166,416,417,418,419,420,421,422,423,424,425,426,172,427,428,429,430,431,432],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"qualifier":"qualifier","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[32,33,212,216,217,219,222,235,239,240,242,245,286,289,290,433,55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.LastControl:92","failures":[119],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[205,206,207,372],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[367,385,434,435,436,437,438],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"argType":"parameterType","paramType":"parameterType"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":113,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":39,"org.easymock.tests2.UsageTest.argumentsOrdered":22,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":416,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":20,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":102,"org.easymock.tests2.DelegateToTest.testReturnException":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":348,"org.easymock.tests.MockingTest.testPartialClassMocking":252,"org.easymock.tests.MockClassControlTest.testToString":324,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":343,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":208,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":434,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":118,"org.easymock.tests2.UsageTest.wrongArguments":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":331,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":432,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":336,"org.easymock.samples.ExampleTest.answerVsDelegate":95,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":375,"org.easymock.tests2.UsageConstraintsTest.testNull":61,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":150,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":29,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":329,"org.easymock.tests2.CaptureTest.testPrimitive":143,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":87,"org.easymock.tests.UsageTest.moreThanOneArgument":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":227,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":269,"org.easymock.tests.UsageTest.argumentsOrdered":43,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":286,"org.easymock.tests.UsageVarargTest.varargIntAccepted":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":338,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":438,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":420,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":139,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":342,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":172,"org.easymock.tests.ReplayStateInvalidUsageTest.times":263,"org.easymock.tests2.AnswerTest.answer":77,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":119,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":136,"org.easymock.tests2.CaptureTest.testAnd":142,"org.easymock.tests2.UsageTest.strictResetToDefault":167,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":189,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":283,"org.easymock.tests2.DelegateToTest.testDelegate":177,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":290,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":295,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":279,"org.easymock.tests2.CaptureTest.testCapture1_2446744":66,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":134,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":257,"org.easymock.tests.UsageThrowableTest.throwError":302,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":421,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":271,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":410,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":409,"org.easymock.samples.PartialClassMockTest.testGetArea":91,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":258,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":339,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":398,"org.easymock.tests2.UsageTest.niceToStrict":19,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":209,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":376,"org.easymock.tests2.ThreadingTest.testChangeDefault":1,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":138,"org.easymock.tests2.MockBuilderTest.testCreateMock":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":405,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":429,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":217,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":27,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":334,"org.easymock.tests.UsageOverloadedMethodTest.overloading":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":122,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":242,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":309,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":2,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":144,"org.easymock.tests2.EasyMockSupportClassTest.testAll":195,"org.easymock.tests.MockClassControlTest.testEquals":328,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":5,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":225,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":135,"org.easymock.tests2.CaptureTest.testCaptureAll":64,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":293,"org.easymock.tests2.UsageConstraintsTest.testMatches":123,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":255,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":270,"org.easymock.samples.ExampleTest.voteForRemovals":99,"org.easymock.tests.UsageVarargTest.allKinds":85,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":89,"org.easymock.samples.BasicClassMockTest.testPrintContent":104,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":294,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":307,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":417,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":176,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":351,"org.easymock.tests2.UsageConstraintsTest.greaterThan":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":392,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":282,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":16,"org.easymock.samples.ExampleTest.voteForRemoval":96,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":153,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":17,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":285,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":187,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":347,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":173,"org.easymock.tests2.CaptureTest.testCaptureFirst":71,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":188,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":24,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":238,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":160,"org.easymock.tests2.CaptureTest.testCapture2_2446744":147,"org.easymock.tests2.UsageTest.moreThanOneArgument":72,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":12,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":321,"org.easymock.tests.GenericTest.testBridgedEquals":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":50,"org.easymock.tests.UsageExpectAndReturnTest.longType":234,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":291,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":226,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":378,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":129,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":281,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":224,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":267,"org.easymock.tests.UsageCallCountTest.tooManyCalls":51,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":406,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":431,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":213,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":306,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":180,"org.easymock.tests2.UsageConstraintsTest.testContains":121,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":353,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":377,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":164,"org.easymock.tests2.UsageConstraintsTest.testFind":114,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":84,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":110,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":52,"org.easymock.tests.UsageExpectAndReturnTest.object":241,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":430,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":191,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":435,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":317,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":346,"org.easymock.tests.UsageTest.exactCallCountByLastCall":44,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":382,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":300,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":367,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":247,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":313,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":274,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":412,"org.easymock.tests.MockClassControlTest.testHashCode":327,"org.easymock.tests2.EasyMockSupportTest.testVerify":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":400,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":288,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":272,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":133,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":36,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":171,"org.easymock.tests.UsageVarargTest.varargCharAccepted":316,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":203,"org.easymock.tests2.UsageTest.openCallCountByLastCall":73,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":193,"org.easymock.tests.DefaultClassInstantiatorTest.object":296,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":297,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":344,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":401,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":215,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":304,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":425,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":411,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":15,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":326,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":214,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":248,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":198,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":325,"org.easymock.tests2.UsageTest.resumeIfFailure":23,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":374,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":350,"org.easymock.tests2.StubTest.stubWithReturnValue":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":385,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":130,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":240,"org.easymock.tests2.SerializationTest.testAllMockedMethod":207,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":311,"org.easymock.samples.SupportTest.voteForRemovals":107,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":3,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":414,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":220,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":372,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":312,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":199,"org.easymock.tests.UsageExpectAndThrowTest.object":218,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":127,"org.easymock.tests2.DelegateToTest.testWrongClass":175,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":358,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":359,"org.easymock.tests.UsageStrictMockTest.range":55,"org.easymock.samples.ConstructorCalledMockTest.testTax":92,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":190,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":179,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":219,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":389,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":265,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":335,"org.easymock.tests2.CaptureTest.testCaptureNone":70,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":365,"org.easymock.tests.UsageUnorderedTest.message":45,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":34,"org.easymock.tests.UsageVerifyTest.twoReturns":48,"org.easymock.tests.UsageVarargTest.varargByteAccepted":320,"org.easymock.tests2.ThreadingTest.testThreadSafe":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":403,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":357,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":103,"org.easymock.tests2.CaptureTest.testCapture_2617107":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":333,"org.easymock.tests2.UsageConstraintsTest.any":62,"org.easymock.tests2.StubTest.stub":178,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":230,"org.easymock.tests.UsageExpectAndThrowTest.longType":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":349,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":261,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":31,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":166,"org.easymock.tests2.SerializationTest.testClass":205,"org.easymock.tests.LimitationsTest.mockNativeMethod":330,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":6,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":250,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":424,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":204,"org.easymock.tests2.NameTest.nameForMocksControl":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":426,"org.easymock.tests2.MockedExceptionTest.testMockedException":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":393,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":82,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":212,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":254,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":148,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":141,"org.easymock.tests.MockingTest.testNicePartialClassMocking":253,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":152,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":422,"org.easymock.tests2.CaptureTest.testCaptureLast":69,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":280,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":185,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":117,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":128,"org.easymock.tests.MockingTest.testTwoMocks":251,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":231,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":216,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":21,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":131,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":0,"org.easymock.samples.ExampleTest.removeNonExistingDocument":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":428,"org.easymock.tests.UsageStrictMockTest.differentMethods":56,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":259,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":413,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":159,"org.easymock.tests2.MockBuilderTest.testCreateMockString":13,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":394,"org.easymock.tests.UsageExpectAndThrowTest.floatType":210,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":201,"org.easymock.tests.UsageVerifyTest.twoThrows":47,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":197,"org.easymock.samples.ExampleTest.voteAgainstRemoval":97,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":363,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":156,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":381,"org.easymock.tests2.UsageConstraintsTest.testNotNull":63,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":162,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":308,"org.easymock.tests2.UsageTest.defaultResetToNice":168,"org.easymock.samples.ExampleTest.voteAgainstRemovals":94,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":246,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":423,"org.easymock.tests.UsageVarargTest.differentLength":46,"org.easymock.tests2.CallbackTest.callback":25,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":370,"org.easymock.tests.UsageTest.openCallCountByLastCall":81,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":332,"org.easymock.tests.UsageCallCountTest.tooFewCalls":355,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":182,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":337,"org.easymock.tests.UsageThrowableTest.throwCheckedException":305,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":184,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":427,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":181,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":183,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":202,"org.easymock.tests.ObjectMethodsTest.testHashCode":345,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":437,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":161,"org.easymock.tests2.NameTest.nameForNiceMock":59,"org.easymock.tests2.DependencyTest.testInterfaceMocking":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":436,"org.easymock.samples.ExampleTest.addDocument":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":408,"org.easymock.tests2.DelegateToTest.testStubDelegate":75,"org.easymock.tests2.AnswerTest.stubAnswer":78,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":90,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":368,"org.easymock.tests.UsageVarargTest.varargLongAccepted":319,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":361,"org.easymock.tests.UsageExpectAndReturnTest.floatType":233,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":249,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":108,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":419,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":125,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests.UsageThrowableTest.noUpperLimit":303,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":112,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":67,"org.easymock.tests2.SerializationTest.test":206,"org.easymock.tests2.UsageConstraintsTest.testSame":115,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":232,"org.easymock.samples.SupportTest.addDocument":106,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":395,"org.easymock.tests.GenericTest.testPackageScope":4,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":289,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":418,"org.easymock.tests2.NameTest.nameForMock":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":243,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":387,"org.easymock.tests2.UsageStrictMockTest.differentMethods":33,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":235,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":222,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":284,"org.easymock.tests2.MockedExceptionTest.testRealException":165,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":79,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":86,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":266,"org.easymock.tests2.NameTest.nameForStrictMock":58,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":109,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":151,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":126,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":10,"org.easymock.tests2.UsageStrictMockTest.range":32,"org.easymock.tests2.UsageConstraintsTest.lessThan":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":415,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":433,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":399,"org.easymock.tests2.CaptureTest.testCaptureRightOne":145,"org.easymock.tests2.UsageConstraintsTest.testOr":116,"org.easymock.tests.UsageRangeTest.combination":38,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":14,"org.easymock.tests.UsageTest.wrongArguments":41,"org.easymock.tests2.MockBuilderTest.testWithConstructor":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":396,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":323,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":236,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":244,"org.easymock.tests.UsageVarargTest.varargShortAccepted":318,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":49,"org.easymock.tests2.UsageConstraintsTest.cmpTo":120,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":200,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":74,"org.easymock.tests2.CaptureTest.testCaptureFromStub":146,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":256,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":373,"org.easymock.tests.UsageTest.unexpectedCallWithArray":40,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":356,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":386,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":245,"org.easymock.tests2.UsageConstraintsTest.constraints":8,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":54,"org.easymock.samples.ExampleTest.addAndChangeDocument":101,"org.easymock.tests.UsageStrictMockTest.testVerify":362,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":105,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":360,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":292,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":340,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":379,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":237,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":28,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":314}}]
