[{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,173,174,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,1,210,211,212,213,214,215,216,217,218,219,220,2,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,3,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.MocksBehavior:200","failures":[188],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[188],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[319,320,321],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[7,10,322,48,173,174,175,176,323,177,178,324,325,179,180,181,326,182,327,328,183,184,329,185,196,197,198,222,330,225,226,228,275,331,332,284,290],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[36,218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[60,61,62,63,64,65,66,92,93,333,334,110,335,336,242],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[337,305,307,308,309,310,311,312,314,338,315,316,318],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[339],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[251],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[7,10,17,340,341,35,36,37,38,342,39,47,343,48,344,153,345,154,155,156,157,346,347,173,173,174,174,175,348,349,176,177,178,325,179,180,181,182,183,184,185,195,196,197,198,217,218,220,2,221,222,223,350,224,225,226,227,351,228,229,352,275,284,285,286,290,353,292,293,294,295,297,298],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[19,22,26,27,31,40,41,42,43,44,45,58,63,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,150,151,165,202,205,211,284,285,286,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[10,103,354,154,155,156,181,355,294,297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[357,358,218,228],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[359],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[49,360],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[34,49,60,61,64,65,92,95,361,145,146,208,213,214,245],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[110],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockHandler:80","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[363,364,365,366,367,368,339,369,370,371,372,373,374,375,376,377,4,378,379,380,381,382,5,383,384,385,6,386,387,388,389,390,391,7,392,393,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,340,341,35,36,37,394,38,395,396,342,397,398,39,399,40,41,42,43,44,45,400,401,402,403,404,405,406,407,408,409,410,46,322,47,343,48,411,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,412,90,413,344,414,415,416,319,417,418,91,419,92,93,94,95,96,97,420,98,99,421,100,101,422,102,103,104,105,423,106,107,108,109,424,425,426,427,428,429,0,430,431,432,433,434,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,345,154,155,156,157,346,347,158,159,160,161,162,163,164,165,166,167,168,169,435,170,436,171,437,438,172,173,174,439,175,348,349,176,177,178,325,179,180,181,182,327,328,183,184,185,186,187,188,189,190,191,192,193,194,440,441,442,195,443,444,196,445,446,447,448,449,450,451,452,453,197,454,455,456,457,458,198,459,460,199,461,200,201,202,357,358,462,463,464,465,466,203,204,205,206,207,208,209,1,210,211,212,213,214,215,216,217,218,219,220,2,221,222,467,223,330,350,224,225,226,227,351,228,229,230,231,232,233,234,235,236,237,238,239,240,241,468,242,469,243,244,245,246,247,355,352,470,471,472,248,249,250,251,473,252,253,254,255,256,257,258,259,260,261,262,263,264,3,265,266,267,268,269,270,271,272,273,274,275,331,474,475,476,477,478,276,277,479,480,481,482,483,278,279,280,281,282,283,284,285,286,287,484,485,486,487,488,288,289,489,490,491,492,493,290,291,353,292,293,294,295,494,296,297,298,495,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[251],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[18,259],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[250,251,252,253,254,255,256,257,258,259,267,268,272,273,305,306,307,308,315,316],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[4,5,384,6,386,387,388,390,391,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,400,401,402,404,405,406,407,408,409,410,46,47,343,48,49,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,419,92,93,94,95,96,97,420,98,99,104,105,106,107,108,111,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,158,159,160,161,162,163,164,165,166,167,168,169,435,170,171,437,438,172,173,173,174,174,439,175,348,349,177,179,181,182,184,186,187,188,189,190,195,196,197,198,199,200,201,202,358,462,463,464,203,204,205,206,207,208,209,1,210,211,212,213,214,215,216,217,218,219,220,2,221,223,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,468,242,469,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,3,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,290,291,353,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[267],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[326,496,497,498,499,500,501,502,503,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:99","sourceCode":"return ((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","type":"CtReturnImpl"},"failures":[49,64,93,504,111,112,144,145,146,213,243],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":251,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":58,"org.easymock.tests2.UsageTest.argumentsOrdered":214,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":240,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":372,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":1,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":439,"org.easymock.tests2.DelegateToTest.testReturnException":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":41,"org.easymock.tests.MockingTest.testPartialClassMocking":36,"org.easymock.tests.MockClassControlTest.testToString":154,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":357,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":90,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":448,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":70,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":196,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":204,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":497,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":257,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":148,"org.easymock.tests2.UsageTest.wrongArguments":208,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":483,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":15,"org.easymock.samples.ExampleTest.answerVsDelegate":167,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":10,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":396,"org.easymock.tests2.UsageConstraintsTest.testNull":253,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":220,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":239,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":347,"org.easymock.tests2.CaptureTest.testPrimitive":308,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":152,"org.easymock.tests.UsageTest.moreThanOneArgument":59,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":89,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":160,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":110,"org.easymock.tests.UsageTest.argumentsOrdered":65,"org.easymock.tests.UsageVarargTest.varargIntAccepted":402,"org.easymock.tests.InvocationTest.testEquals":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":502,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":492,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":143,"org.easymock.tests.ReplayStateInvalidUsageTest.times":431,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":276,"org.easymock.tests2.DependencyTest.testClassMocking":465,"org.easymock.tests2.AnswerTest.answer":278,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":378,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":194,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":393,"org.easymock.tests2.CaptureTest.testAnd":305,"org.easymock.tests2.UsageTest.strictResetToDefault":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":224,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":159,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":234,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":114,"org.easymock.tests2.DelegateToTest.testDelegate":304,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":85,"org.easymock.tests.LimitationsTest.mockFinalMethod":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":54,"org.easymock.tests2.DependencyTest.testClassMockingSupport":466,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":104,"org.easymock.tests2.CaptureTest.testCapture1_2446744":309,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":467,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":83,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":192,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":426,"org.easymock.tests.UsageThrowableTest.throwError":20,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":9,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":493,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":354,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":460,"org.easymock.samples.PartialClassMockTest.testGetArea":175,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":427,"org.easymock.tests.MockingTest.testInterfaceMocking":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":140,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":449,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":71,"org.easymock.tests2.UsageTest.niceToStrict":209,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":363,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":179,"org.easymock.tests2.MockBuilderTest.testCreateMock":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":456,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":480,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":79,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":335,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":235,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":392,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":69,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":384,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":13,"org.easymock.tests.UsageOverloadedMethodTest.overloading":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":453,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":31,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":263,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":163,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":126,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":262,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":320,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":314,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":403,"org.easymock.tests2.EasyMockSupportClassTest.testAll":195,"org.easymock.tests.MockClassControlTest.testEquals":346,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":343,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":52,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":193,"org.easymock.tests2.CaptureTest.testCaptureAll":306,"org.easymock.tests.MockNameTest.defaultName":109,"org.easymock.tests2.UsageConstraintsTest.testMatches":264,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":424,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":161,"org.easymock.samples.ExampleTest.voteForRemovals":170,"org.easymock.tests.UsageVarargTest.allKinds":46,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":144,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":53,"org.easymock.samples.BasicClassMockTest.testPrintContent":349,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":26,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":242,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":45,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":303,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":503,"org.easymock.tests2.UsageConstraintsTest.greaterThan":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":443,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":136,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":227,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":418,"org.easymock.samples.ExampleTest.voteForRemoval":168,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":187,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":351,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":11,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":222,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":17,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":205,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":232,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":40,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":299,"org.easymock.tests2.CaptureTest.testCaptureFirst":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":339,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":233,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":216,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":34,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":122,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":189,"org.easymock.tests2.UsageTest.moreThanOneArgument":207,"org.easymock.tests2.CaptureTest.testCapture2_2446744":317,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":379,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":410,"org.easymock.tests.GenericTest.testBridgedEquals":411,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":390,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":356,"org.easymock.tests.UsageExpectAndReturnTest.longType":118,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":50,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":230,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":88,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":147,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":270,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":158,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":107,"org.easymock.tests.UsageCallCountTest.tooManyCalls":391,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":457,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":482,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":25,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":293,"org.easymock.tests.MockingTest.testNiceClassMocking":342,"org.easymock.tests.MockingTest.testClassMocking":341,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":385,"org.easymock.tests2.UsageConstraintsTest.testContains":261,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":286,"org.easymock.tests2.UsageConstraintsTest.testFind":252,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":165,"org.easymock.tests.MockTypeTest.fromEasyMockClass":8,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":91,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":200,"org.easymock.tests.UsageExpectAndReturnTest.object":125,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":223,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":481,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":238,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":498,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":405,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":422,"org.easymock.tests.UsageTest.exactCallCountByLastCall":66,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":368,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":412,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":111,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":331,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":400,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":131,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":30,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":485,"org.easymock.tests.MockClassControlTest.testHashCode":157,"org.easymock.tests2.EasyMockSupportTest.testVerify":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":451,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":112,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":28,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":68,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":191,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":472,"org.easymock.tests.UsageVarargTest.varargCharAccepted":404,"org.easymock.tests2.CaptureTest.testCaptureMultiple":337,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":383,"org.easymock.tests2.UsageTest.openCallCountByLastCall":210,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":241,"org.easymock.tests.DefaultClassInstantiatorTest.object":344,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":67,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":100,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":452,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":77,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":23,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":477,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":484,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":156,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":76,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":132,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":106,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":198,"org.easymock.tests2.UsageTest.resumeIfFailure":215,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":43,"org.easymock.tests2.StubTest.stubWithReturnValue":202,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":326,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":124,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":271,"org.easymock.tests2.SerializationTest.testAllMockedMethod":353,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":4,"org.easymock.samples.SupportTest.voteForRemovals":172,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":336,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":322,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":487,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":82,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":5,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":279,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":413,"org.easymock.tests.UsageExpectAndThrowTest.object":80,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":268,"org.easymock.tests2.DelegateToTest.testWrongClass":302,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":98,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":99,"org.easymock.samples.ConstructorCalledMockTest.testTax":173,"org.easymock.tests.UsageStrictMockTest.range":95,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":470,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":237,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":292,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":81,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":440,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":433,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":64,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":14,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":333,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":57,"org.easymock.tests2.CaptureTest.testCaptureNone":313,"org.easymock.tests.UsageUnorderedTest.message":49,"org.easymock.tests.UsageVerifyTest.twoReturns":146,"org.easymock.tests.UsageVarargTest.varargByteAccepted":409,"org.easymock.tests2.ThreadingTest.testThreadSafe":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":454,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":388,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":102,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":348,"org.easymock.tests2.CaptureTest.testCapture_2617107":307,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":423,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":381,"org.easymock.tests2.UsageConstraintsTest.any":259,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":430,"org.easymock.tests2.StubTest.stub":201,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":42,"org.easymock.tests.UsageExpectAndThrowTest.longType":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":382,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":319,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":0,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":244,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":288,"org.easymock.tests2.SerializationTest.testClass":290,"org.easymock.tests.LimitationsTest.mockNativeMethod":39,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":134,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":48,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":476,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":247,"org.easymock.tests2.NameTest.nameForMocksControl":464,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":478,"org.easymock.tests2.MockedExceptionTest.testMockedException":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":444,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":63,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":461,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":38,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":74,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":217,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":182,"org.easymock.tests.MockingTest.testNicePartialClassMocking":37,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":221,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":474,"org.easymock.tests2.CaptureTest.testCaptureLast":312,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":105,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":256,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":298,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":269,"org.easymock.tests.MockingTest.testTwoMocks":35,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":495,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":115,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":78,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":213,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":273,"org.easymock.samples.ExampleTest.removeNonExistingDocument":436,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":479,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":428,"org.easymock.tests.UsageStrictMockTest.differentMethods":96,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":486,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":415,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":188,"org.easymock.tests2.MockBuilderTest.testCreateMockString":185,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":445,"org.easymock.tests.UsageExpectAndThrowTest.floatType":72,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":442,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":281,"org.easymock.tests.UsageVerifyTest.twoThrows":145,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":332,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":197,"org.easymock.samples.ExampleTest.voteAgainstRemoval":169,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":373,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":226,"org.easymock.tests.LimitationsTest.privateConstructor":398,"org.easymock.tests2.UsageConstraintsTest.testNotNull":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":27,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":284,"org.easymock.tests2.UsageTest.defaultResetToNice":212,"org.easymock.samples.ExampleTest.voteAgainstRemovals":166,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":374,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":475,"org.easymock.tests.UsageVarargTest.differentLength":406,"org.easymock.tests2.CallbackTest.callback":229,"org.easymock.tests2.UsageConstraintsTest.equals":473,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":330,"org.easymock.tests.UsageTest.openCallCountByLastCall":62,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":248,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":150,"org.easymock.tests.UsageCallCountTest.tooFewCalls":386,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":295,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":16,"org.easymock.tests.UsageThrowableTest.throwCheckedException":24,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":334,"org.easymock.tests.MockingTest.testStrictClassMocking":340,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":19,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":297,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":277,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":294,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":432,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":296,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":283,"org.easymock.tests.ObjectMethodsTest.testHashCode":101,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":501,"org.easymock.tests2.NameTest.nameForNiceMock":463,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":190,"org.easymock.tests2.DependencyTest.testInterfaceMocking":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":499,"org.easymock.samples.ExampleTest.addDocument":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":459,"org.easymock.tests2.DelegateToTest.testStubDelegate":301,"org.easymock.tests2.AnswerTest.stubAnswer":282,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":93,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":327,"org.easymock.tests.UsageVarargTest.varargLongAccepted":408,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":371,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":133,"org.easymock.tests.UsageExpectAndReturnTest.floatType":117,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":275,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":174,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":491,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":32,"org.easymock.tests.UsageThrowableTest.noUpperLimit":21,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":266,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":249,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":355,"org.easymock.tests2.SerializationTest.test":291,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":310,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":321,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":414,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":116,"org.easymock.tests2.UsageConstraintsTest.testSame":254,"org.easymock.samples.SupportTest.addDocument":438,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":494,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":446,"org.easymock.tests.GenericTest.testPackageScope":47,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":367,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":490,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":395,"org.easymock.tests2.NameTest.nameForMock":358,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":127,"org.easymock.tests2.UsageStrictMockTest.differentMethods":246,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":329,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":350,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":119,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":84,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":421,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":138,"org.easymock.tests2.MockedExceptionTest.testRealException":287,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":12,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":376,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":496,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":375,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":434,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":149,"org.easymock.tests2.NameTest.nameForStrictMock":462,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":325,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":199,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":2,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":352,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":416,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":267,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":360,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":177,"org.easymock.tests2.UsageStrictMockTest.range":245,"org.easymock.tests2.UsageConstraintsTest.lessThan":274,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":488,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":500,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":450,"org.easymock.tests2.CaptureTest.testCaptureRightOne":315,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":362,"org.easymock.tests2.UsageConstraintsTest.testOr":255,"org.easymock.tests.UsageRangeTest.combination":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":218,"org.easymock.tests.UsageTest.wrongArguments":61,"org.easymock.tests2.MockBuilderTest.testWithConstructor":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":447,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":345,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":364,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":417,"org.easymock.tests.UsageVarargTest.varargShortAccepted":407,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":389,"org.easymock.tests2.UsageConstraintsTest.cmpTo":260,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":366,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":211,"org.easymock.tests2.CaptureTest.testCaptureFromStub":316,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":425,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":178,"org.easymock.tests.UsageTest.unexpectedCallWithArray":60,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":92,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":387,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":129,"org.easymock.tests2.CaptureTest.testCapture":338,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":94,"org.easymock.tests2.UsageConstraintsTest.constraints":250,"org.easymock.samples.ExampleTest.addAndChangeDocument":171,"org.easymock.tests.UsageStrictMockTest.testVerify":420,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":437,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":419,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":51,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":141,"org.easymock.tests.LimitationsTest.abstractClass":397,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":121,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":142,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":33,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":236}}]
