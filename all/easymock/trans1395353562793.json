[{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[5,5,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[54,55,56,57],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[58,13,59,60],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[61,62,63,64],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[65],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[67,68],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[69,70,71,72,73],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[61,62,38,74,75,76,63,77,78,79,80,81,82,83,84,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[69,70,87,88,89,71,90,91,72,92,93,66,94,95,73,16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[96],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[98,99,100],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[101,102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[104],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"expected":"o","actual":"o"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[105,106,107,108,109,110,111,112,113,114],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"parameterType"}},{"position":"org.easymock.internal.RecordState:305","failures":[115,116,117,118,119,7,120,121,122,123,124,125,126,69,127,70,128,129,130,131,132,133,87,134,88,135,65,89,136,58,71,137,138,90,91,56,72,57,139,92,140,141,142,143,144,98,145,99,146,147,148,149,150,151,10,11,152,12,13,14,16,18,19,20,21,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,23,24,26,27,29,170,171,172,173,174,175,176,177,178,31,179,32,33,34,35,180,36,37,38,181,40,41,42,43,182,183,184,185,186,187,44,75,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,48,49,50,223,224,225,51,226,227,80,81,84,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1673","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":128,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":226,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":168,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":102,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":59,"org.easymock.tests2.StubTest.stubWithReturnValue":187,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":199,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":72,"org.easymock.tests2.SerializationTest.testAllMockedMethod":39,"org.easymock.tests2.DelegateToTest.testReturnException":182,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":222,"org.easymock.tests.MockingTest.testPartialClassMocking":48,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":62,"org.easymock.samples.SupportTest.voteForRemovals":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":251,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":239,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":41,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":67,"org.easymock.tests.UsageExpectAndThrowTest.object":249,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":90,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":108,"org.easymock.tests2.DelegateToTest.testWrongClass":184,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":237,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":87,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":233,"org.easymock.samples.ConstructorCalledMockTest.testTax":5,"org.easymock.tests.UsageStrictMockTest.range":188,"org.easymock.samples.ExampleTest.answerVsDelegate":116,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":165,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":32,"org.easymock.tests2.UsageConstraintsTest.testNull":130,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":250,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":12,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":26,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":167,"org.easymock.tests2.CaptureTest.testPrimitive":143,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":235,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":258,"org.easymock.tests.UsageTest.moreThanOneArgument":227,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":82,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":152,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":76,"org.easymock.tests2.CaptureTest.testCaptureNone":145,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":2,"org.easymock.tests.UsageVerifyTest.twoReturns":217,"org.easymock.tests2.ThreadingTest.testThreadSafe":153,"org.easymock.tests.UsageTest.argumentsOrdered":83,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":228,"org.easymock.tests2.CaptureTest.testCapture_2617107":142,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":22,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":113,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":25,"org.easymock.tests2.UsageConstraintsTest.any":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":232,"org.easymock.tests.UsageExpectAndThrowTest.longType":242,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":60,"org.easymock.tests2.SerializationTest.testClass":38,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":179,"org.easymock.tests.LimitationsTest.mockNativeMethod":51,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":126,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":209,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":46,"org.easymock.tests2.AnswerTest.answer":149,"org.easymock.tests2.CaptureTest.testAnd":140,"org.easymock.tests2.UsageTest.strictResetToDefault":171,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":17,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":213,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":162,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":81,"org.easymock.tests2.DelegateToTest.testDelegate":185,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":243,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":50,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":10,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":27,"org.easymock.tests.MockingTest.testNicePartialClassMocking":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":254,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":14,"org.easymock.tests2.CompareToTest.testCompareEqual":94,"org.easymock.tests2.CaptureTest.testCaptureLast":98,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":221,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":37,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":133,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":91,"org.easymock.tests.MockingTest.testTwoMocks":47,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":220,"org.easymock.tests2.CaptureTest.testCapture1_2446744":144,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":190,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":247,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":139,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":4,"org.easymock.tests.UsageThrowableTest.throwError":259,"org.easymock.tests.UsageStrictMockTest.differentMethods":189,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":103,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":3,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":155,"org.easymock.tests2.MockBuilderTest.testCreateMockString":30,"org.easymock.tests.UsageExpectAndThrowTest.floatType":241,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":58,"org.easymock.tests.UsageVerifyTest.twoThrows":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":42,"org.easymock.samples.PartialClassMockTest.testGetArea":7,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":86,"org.easymock.tests2.CompareToTest.testLessOrEqual":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":229,"org.easymock.samples.ExampleTest.voteAgainstRemoval":118,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":19,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":240,"org.easymock.tests2.UsageTest.niceToStrict":173,"org.easymock.tests2.ThreadingTest.testChangeDefault":1,"org.easymock.tests2.UsageConstraintsTest.testNotNull":57,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":265,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":24,"org.easymock.tests2.MockBuilderTest.testCreateMock":28,"org.easymock.tests2.UsageTest.defaultResetToNice":176,"org.easymock.samples.ExampleTest.voteAgainstRemovals":115,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":205,"org.easymock.tests2.CallbackTest.callback":186,"org.easymock.tests2.UsageConstraintsTest.equals":104,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":64,"org.easymock.tests.UsageTest.openCallCountByLastCall":80,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":248,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":61,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":163,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":69,"org.easymock.tests.UsageOverloadedMethodTest.overloading":224,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":268,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":89,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":201,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":35,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":65,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":96,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":99,"org.easymock.tests.UsageThrowableTest.throwCheckedException":262,"org.easymock.tests2.EasyMockSupportClassTest.testAll":40,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":45,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":256,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":63,"org.easymock.tests2.CaptureTest.testCaptureAll":141,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":219,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":36,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":101,"org.easymock.tests2.UsageConstraintsTest.testMatches":136,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":180,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":151,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":77,"org.easymock.tests2.CompareToTest.testGreateOrEqual":95,"org.easymock.samples.ExampleTest.voteForRemovals":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":112,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":157,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":215,"org.easymock.tests2.DependencyTest.testInterfaceMocking":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":110,"org.easymock.samples.BasicClassMockTest.testPrintContent":9,"org.easymock.tests2.DelegateToTest.testStubDelegate":183,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":264,"org.easymock.tests2.AnswerTest.stubAnswer":150,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":97,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":75,"org.easymock.tests2.UsageConstraintsTest.greaterThan":71,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":114,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":212,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":20,"org.easymock.samples.ExampleTest.voteForRemoval":117,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":208,"org.easymock.tests.UsageExpectAndReturnTest.floatType":192,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":21,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":15,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":6,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":137,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":53,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":127,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":170,"org.easymock.tests2.SerializationTest.test":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":160,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":260,"org.easymock.tests2.UsageConstraintsTest.testSame":131,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":191,"org.easymock.tests2.CaptureTest.testCaptureFirst":148,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":161,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":178,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":197,"org.easymock.tests.GenericTest.testPackageScope":44,"org.easymock.tests2.CaptureTest.testCapture2_2446744":147,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":156,"org.easymock.tests2.UsageTest.moreThanOneArgument":172,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":29,"org.easymock.tests.UsageExpectAndReturnTest.longType":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":238,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":158,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":202,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":56,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":255,"org.easymock.tests2.UsageStrictMockTest.differentMethods":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":194,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":253,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":214,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":198,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":107,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":244,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":263,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":234,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.testContains":135,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":31,"org.easymock.tests2.UsageConstraintsTest.testFind":129,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":225,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":54,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":13,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":55,"org.easymock.tests.UsageExpectAndReturnTest.object":200,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":138,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":16,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":23,"org.easymock.tests2.UsageStrictMockTest.range":124,"org.easymock.tests2.UsageConstraintsTest.lessThan":92,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":109,"org.easymock.tests.UsageTest.exactCallCountByLastCall":84,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":218,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":111,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":159,"org.easymock.tests2.CaptureTest.testCaptureRightOne":146,"org.easymock.tests2.UsageConstraintsTest.testOr":132,"org.easymock.tests.UsageRangeTest.combination":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":105,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":206,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":11,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":267,"org.easymock.tests.UsageTest.wrongArguments":79,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":52,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":195,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":203,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":266,"org.easymock.tests2.UsageConstraintsTest.cmpTo":88,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":68,"org.easymock.tests2.CompareToTest.testLessThan":93,"org.easymock.tests2.UsageTest.openCallCountByLastCall":174,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":175,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":169,"org.easymock.tests.UsageTest.unexpectedCallWithArray":78,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":246,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":261,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":74,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":204,"org.easymock.tests2.CaptureTest.testCapture":100,"org.easymock.tests2.UsageConstraintsTest.constraints":70,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":18,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":245,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":43,"org.easymock.tests2.CompareToTest.testGreateThan":66,"org.easymock.tests2.UsageTest.resumeIfFailure":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":230,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":196,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":269,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":164}}]
