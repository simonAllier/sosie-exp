[{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[1,2],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[3,9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[10],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[11,12,13,14,15,16],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[17,18,19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[20,21,22,23],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[24,11,11,12,12,3,25,13,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,9,43,44,45,46,47,48],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[3,30,31,49,9,50,51,52,53,54,55,56,57,58],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:117","sourceCode":"return org.easymock.internal.Invocation.getMethod()","type":"CtReturnImpl"},"failures":[59,60,61,62,63,24,64,65,66,67,68,69,70,11,11,12,12,3,4,5,71,72,73,74,20,75,76,26,27,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,30,95,96,97,98,99,100,21,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,22,2,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,32,33,34,162,36,39,40,41,43,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,17,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,46,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,18,19,284,285,286,287,288,289,290],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[291,292],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[126],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[293,294,295],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[61,24,64,296,65,66,68,69,72,20,26,27,77,80,89,297,96,97,100,21,101,102,104,105,107,111,112,113,114,116,117,119,120,122,123,22,2,125,126,127,128,129,130,131,134,135,136,137,139,140,143,144,145,147,148,149,150,151,152,153,36,39,43,164,165,166,167,168,169,170,171,172,173,175,176,298,182,189,190,191,192,193,195,196,197,198,199,200,17,201,222,223,229,230,234,237,240,241,242,243,244,248,250,252,254,255,258,259,260,261,262,263,264,265,266,280,281,282,283,18,19,284,285,290,299],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[72,74,75,300,77,149,151,152,301,260,261,263,264,266],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[24,11,12,3,13,27,28,30,31,32,33,39,42,9,302,44,45,46],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.internal.MockBuilder:71","failures":[24,36,39,40,41,43,44],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[122,199,260],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[61,64,65,66,68,179,303],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[29,304,82,305,89,306,307,308,309,310,311,230,312,276,277,313,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[89,96,102,310,17,314,231,237,241,255,280,282,283,18,19,284,285,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[20,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[31,49,53,54,55,56,57],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:87","sourceCode":"return new java.lang.IllegalArgumentException(((java.lang.Object + \" isn\\'t of type \") + java.lang.Class<?>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[59,60,61,62,63,24,64,296,65,66,67,68,335,69,70,11,12,3,4,5,336,337,338,339,71,72,73,74,20,75,25,340,76,13,341,300,26,27,77,342,28,343,344,78,79,345,346,347,80,348,349,350,81,351,29,304,82,305,83,84,85,86,87,88,89,352,353,354,355,356,357,358,359,360,361,362,363,364,90,365,366,367,368,369,370,371,91,92,93,94,30,31,372,373,374,95,375,376,297,96,97,98,99,100,21,101,102,103,104,105,106,107,108,109,110,111,377,112,113,114,115,116,117,118,119,120,121,122,123,124,22,2,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,378,158,159,160,379,380,381,382,161,383,384,32,385,386,387,388,389,390,391,392,393,33,394,395,396,397,398,34,399,400,401,402,403,404,405,162,406,407,408,409,410,411,35,14,36,37,412,38,39,413,40,49,41,42,9,302,43,16,44,163,164,165,166,167,168,169,170,171,172,173,174,175,176,298,177,178,179,180,181,182,183,184,185,306,307,308,309,310,311,414,415,416,186,187,417,188,418,419,420,421,422,423,424,189,190,191,425,192,193,194,195,196,197,198,199,200,17,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,426,427,222,223,428,429,430,224,431,314,225,226,432,227,228,229,230,231,232,233,234,235,236,237,238,301,239,240,241,242,243,244,433,434,245,435,246,436,247,248,249,250,437,251,252,253,254,255,303,438,439,440,441,45,256,257,46,442,443,444,291,445,446,447,292,448,449,258,259,260,261,262,263,264,265,266,267,268,269,270,271,450,272,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,23,466,467,468,469,470,273,274,275,312,276,277,471,278,279,280,281,282,283,18,19,284,285,472,473,474,475,476,477,478,479,313,480,481,482,483,484,485,486,487,286,488,489,490,491,492,287,493,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,47,494,495,496,497,48,498,499,500,501,502,503,504,505,288,289,506,290,299],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[507,508,509,510,301,260],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[47],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[20,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[26,27,511],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[86,450,451,465],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[118],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[97],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[224,225,288,289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[72,26,77,96,99,100,21,104,105,106,107,110,22,135,139,140,143,147,150,151,152,36,302,43,44,298,182,194,17,201,234,512,513,237,301,239,242,243,244,437,251,252,258,260,262,263,264,514,472],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[80,96,101,102,107,149,200,201,237,240,241,244,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"leafClass"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:70","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[3,4,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[515,123,128,133],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":111,"org.easymock.tests2.UsageTest.argumentsOrdered":105,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":237,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":144,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":482,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":21,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":59,"org.easymock.tests2.DelegateToTest.testReturnException":374,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":307,"org.easymock.tests.MockingTest.testPartialClassMocking":186,"org.easymock.tests.MockClassControlTest.testToString":454,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":371,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":388,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":32,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":315,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":79,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":53,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":117,"org.easymock.tests2.UsageTest.wrongArguments":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":228,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":411,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":423,"org.easymock.samples.ExampleTest.answerVsDelegate":296,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":48,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":419,"org.easymock.tests2.UsageConstraintsTest.testNull":113,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":74,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":459,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":143,"org.easymock.tests2.CaptureTest.testPrimitive":166,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":232,"org.easymock.tests.UsageTest.moreThanOneArgument":238,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":334,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":73,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":269,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":427,"org.easymock.tests.UsageTest.argumentsOrdered":243,"org.easymock.tests.UsageVarargTest.varargIntAccepted":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":487,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":177,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":57,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":355,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":369,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":475,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":181,"org.easymock.tests.ReplayStateInvalidUsageTest.times":467,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":162,"org.easymock.tests2.DependencyTest.testClassMocking":343,"org.easymock.tests2.AnswerTest.answer":80,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":488,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":339,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":495,"org.easymock.tests2.CaptureTest.testAnd":163,"org.easymock.tests2.UsageTest.strictResetToDefault":97,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":412,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":268,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":138,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":429,"org.easymock.tests2.DelegateToTest.testDelegate":297,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":330,"org.easymock.tests.LimitationsTest.mockFinalMethod":435,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":310,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":441,"org.easymock.tests2.DependencyTest.testClassMockingSupport":344,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":288,"org.easymock.tests2.CaptureTest.testCapture1_2446744":167,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":340,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":328,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":337,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":462,"org.easymock.tests.UsageThrowableTest.throwError":280,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":497,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":472,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":400,"org.easymock.samples.PartialClassMockTest.testGetArea":24,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":463,"org.easymock.tests.MockingTest.testInterfaceMocking":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":274,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":389,"org.easymock.tests2.UsageTest.niceToStrict":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":293,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":39,"org.easymock.tests2.MockBuilderTest.testCreateMock":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":396,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":408,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":507,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":324,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":139,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":494,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":279,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":246,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":421,"org.easymock.tests.UsageOverloadedMethodTest.overloading":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":393,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":123,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":314,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":213,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":253,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":122,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":172,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":425,"org.easymock.tests.MockClassControlTest.testEquals":458,"org.easymock.tests2.EasyMockSupportClassTest.testAll":161,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":257,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":332,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":439,"org.easymock.tests2.CaptureTest.testCaptureAll":164,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":338,"org.easymock.tests.MockNameTest.defaultName":426,"org.easymock.tests2.UsageConstraintsTest.testMatches":124,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":460,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":270,"org.easymock.samples.ExampleTest.voteForRemovals":68,"org.easymock.tests.UsageVarargTest.allKinds":199,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":440,"org.easymock.samples.BasicClassMockTest.testPrintContent":63,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":284,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":311,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":366,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":376,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":448,"org.easymock.tests2.UsageConstraintsTest.greaterThan":2,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":383,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":183,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":77,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":449,"org.easymock.samples.ExampleTest.voteForRemoval":65,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":84,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":342,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":0,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":498,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":356,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":25,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":227,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":136,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":306,"org.easymock.tests2.CaptureTest.testCaptureFirst":176,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":479,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":137,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":107,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":432,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":209,"org.easymock.tests2.CaptureTest.testCapture2_2446744":175,"org.easymock.tests2.UsageTest.moreThanOneArgument":98,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":489,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":43,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":198,"org.easymock.tests.GenericTest.testBridgedEquals":442,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":251,"org.easymock.tests.UsageExpectAndReturnTest.longType":205,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":134,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":303,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":333,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":129,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":233,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":267,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":276,"org.easymock.tests.UsageCallCountTest.tooManyCalls":252,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":397,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":210,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":410,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":320,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":19,"org.easymock.tests.MockingTest.testNiceClassMocking":420,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":155,"org.easymock.tests.MockingTest.testClassMocking":415,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":511,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":436,"org.easymock.tests2.UsageConstraintsTest.testContains":121,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":82,"org.easymock.tests2.UsageConstraintsTest.testFind":112,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":255,"org.easymock.tests.MockTypeTest.fromEasyMockClass":496,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":258,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":347,"org.easymock.tests.UsageExpectAndReturnTest.object":212,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":54,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":193,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":503,"org.easymock.tests.UsageTest.exactCallCountByLastCall":244,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":450,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":222,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":31,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":189,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":218,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":431,"org.easymock.tests.MockClassControlTest.testHashCode":457,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":361,"org.easymock.tests2.EasyMockSupportTest.testVerify":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":391,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":223,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":430,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":278,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":512,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":336,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":352,"org.easymock.tests.UsageVarargTest.varargCharAccepted":192,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":443,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":493,"org.easymock.tests2.UsageTest.openCallCountByLastCall":101,"org.easymock.tests.DefaultClassInstantiatorTest.object":444,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":145,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":294,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":471,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":501,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":392,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":322,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":283,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":404,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":360,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":456,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":26,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":321,"org.easymock.tests.CapturesMatcherTest.test":8,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":312,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":34,"org.easymock.tests2.UsageTest.resumeIfFailure":106,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":47,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":309,"org.easymock.tests2.StubTest.stubWithReturnValue":89,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":49,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":130,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":211,"org.easymock.tests2.SerializationTest.testAllMockedMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":286,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":51,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":508,"org.easymock.samples.SupportTest.voteForRemovals":61,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":363,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":327,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":287,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":348,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":451,"org.easymock.tests.UsageExpectAndThrowTest.object":325,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":127,"org.easymock.tests2.DelegateToTest.testWrongClass":375,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":235,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":236,"org.easymock.samples.ConstructorCalledMockTest.testTax":11,"org.easymock.tests.UsageStrictMockTest.range":263,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":358,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":141,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":326,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":40,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":469,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":422,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":509,"org.easymock.tests2.CaptureTest.testCaptureNone":171,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":275,"org.easymock.tests.UsageUnorderedTest.message":234,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":514,"org.easymock.tests.UsageVerifyTest.twoReturns":201,"org.easymock.tests.UsageVarargTest.varargByteAccepted":197,"org.easymock.tests2.ThreadingTest.testThreadSafe":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":394,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":250,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":504,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":62,"org.easymock.tests2.CaptureTest.testCapture_2617107":165,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":491,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":231,"org.easymock.tests2.UsageConstraintsTest.any":119,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":466,"org.easymock.tests2.StubTest.stub":88,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":492,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":308,"org.easymock.tests.UsageExpectAndThrowTest.longType":318,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":447,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":23,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":150,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":90,"org.easymock.tests.LimitationsTest.mockNativeMethod":245,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":46,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":221,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":403,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":153,"org.easymock.tests2.NameTest.nameForMocksControl":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":405,"org.easymock.tests2.MockedExceptionTest.testMockedException":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":384,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":241,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":188,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":319,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":346,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":71,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":41,"org.easymock.tests.MockingTest.testNicePartialClassMocking":187,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":75,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":401,"org.easymock.tests2.CaptureTest.testCaptureLast":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":52,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":289,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":160,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":116,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":128,"org.easymock.tests.MockingTest.testTwoMocks":416,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":379,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":202,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":323,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":104,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":132,"org.easymock.samples.ExampleTest.removeNonExistingDocument":335,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":464,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":407,"org.easymock.tests.UsageStrictMockTest.differentMethods":264,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":362,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":445,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":85,"org.easymock.tests2.MockBuilderTest.testCreateMockString":44,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":385,"org.easymock.tests.UsageExpectAndThrowTest.floatType":317,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":382,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":350,"org.easymock.tests.UsageVerifyTest.twoThrows":17,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":372,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":33,"org.easymock.samples.ExampleTest.voteAgainstRemoval":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":483,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":273,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":27,"org.easymock.tests.LimitationsTest.privateConstructor":434,"org.easymock.tests2.UsageConstraintsTest.testNotNull":131,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":29,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":285,"org.easymock.tests2.UsageTest.defaultResetToNice":103,"org.easymock.samples.ExampleTest.voteAgainstRemovals":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":484,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":402,"org.easymock.tests.UsageVarargTest.differentLength":194,"org.easymock.tests2.CallbackTest.callback":298,"org.easymock.tests2.UsageConstraintsTest.equals":377,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":13,"org.easymock.tests.UsageTest.openCallCountByLastCall":240,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":108,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":230,"org.easymock.tests.UsageCallCountTest.tooFewCalls":248,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":157,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":424,"org.easymock.tests.UsageThrowableTest.throwCheckedException":18,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":510,"org.easymock.tests.MockingTest.testStrictClassMocking":414,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":159,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":406,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":156,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":468,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":158,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":351,"org.easymock.tests.ObjectMethodsTest.testHashCode":502,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":56,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":87,"org.easymock.tests2.NameTest.nameForNiceMock":93,"org.easymock.tests2.DependencyTest.testInterfaceMocking":78,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":55,"org.easymock.samples.ExampleTest.addDocument":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":399,"org.easymock.tests2.DelegateToTest.testStubDelegate":95,"org.easymock.tests2.AnswerTest.stubAnswer":81,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":261,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":42,"org.easymock.tests.UsageVarargTest.varargLongAccepted":196,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":481,"org.easymock.tests.UsageExpectAndReturnTest.floatType":204,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":220,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":30,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":12,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":125,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":225,"org.easymock.tests.UsageThrowableTest.noUpperLimit":281,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":368,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":109,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":353,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":168,"org.easymock.tests2.SerializationTest.test":4,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":291,"org.easymock.tests2.UsageConstraintsTest.testSame":114,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":203,"org.easymock.samples.SupportTest.addDocument":60,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":378,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":386,"org.easymock.tests.GenericTest.testPackageScope":256,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":367,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":418,"org.easymock.tests2.NameTest.nameForMock":91,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":214,"org.easymock.tests2.UsageStrictMockTest.differentMethods":152,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":16,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":341,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":206,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":329,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":500,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":185,"org.easymock.tests2.MockedExceptionTest.testRealException":305,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":486,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":359,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":485,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":149,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":470,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":229,"org.easymock.tests2.NameTest.nameForStrictMock":92,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":38,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":295,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":345,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":20,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":357,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":446,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":126,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":36,"org.easymock.tests2.UsageStrictMockTest.range":151,"org.easymock.tests2.UsageConstraintsTest.lessThan":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":480,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":390,"org.easymock.tests2.CaptureTest.testCaptureRightOne":173,"org.easymock.tests2.UsageConstraintsTest.testOr":115,"org.easymock.tests.UsageRangeTest.combination":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":72,"org.easymock.tests.UsageTest.wrongArguments":239,"org.easymock.tests2.MockBuilderTest.testWithConstructor":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":387,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":453,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":474,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":215,"org.easymock.tests.UsageVarargTest.varargShortAccepted":195,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":292,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":437,"org.easymock.tests2.UsageConstraintsTest.cmpTo":120,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":349,"org.easymock.tests2.CompareToTest.testLessThan":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":476,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":102,"org.easymock.tests2.CaptureTest.testCaptureFromStub":174,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":461,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":37,"org.easymock.tests.UsageTest.unexpectedCallWithArray":301,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":260,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":249,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":15,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":216,"org.easymock.tests2.CaptureTest.testCapture":7,"org.easymock.tests2.UsageConstraintsTest.constraints":110,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":262,"org.easymock.samples.ExampleTest.addAndChangeDocument":69,"org.easymock.tests2.ConstraintsToStringTest.containsToString":10,"org.easymock.tests.UsageStrictMockTest.testVerify":266,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":70,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":438,"org.easymock.tests2.CompareToTest.testGreateThan":1,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":169,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":179,"org.easymock.tests.LimitationsTest.abstractClass":433,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":208,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":180,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":226,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":190,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":140}}]
