[{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[4,5,6,7,8,0,1,9,10,11,12,13,14,15,16,17,18,2,3,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[42,20,43,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"substring"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[44,17,45,46,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[49,50,51,52,53],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[54,4,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,5,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,6,115,116,117,118,119,120,121,122,123,124,125,126,127,7,128,129,130,131,132,133,134,135,8,136,137,138,139,0,1,140,141,142,143,144,145,146,147,148,149,150,151,152,9,10,153,11,12,13,14,15,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,16,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,44,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,17,299,300,301,302,303,304,305,306,307,308,309,310,18,311,312,313,2,3,314,315,316,317,318,319,42,19,320,321,322,323,324,20,21,325,22,326,43,23,327,328,329,330,331,24,25,26,332,27,333,334,335,336,28,337,338,30,339,32,33,34,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,36,37,368,369,370,371,38,372,373,45,374,46,375,376,47,377,378,379,380,381,382,383,384,385,386,387,39,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,40,415,416,417,418,419,420,421,422,423,424,41,425,426,427,428,429,430,431,432,433,434,435,436,437,438,438,439,439,440,441,48,442,443,444,445,446,447,448],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[449,315,316,317],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[449,315,316,317],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[450,451,452,453,454,455,456,298,315,457],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[4,111,128,9,153,11,12,13,14,15,156,157,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,191,233,234,235,236,237,238,255,356,357,358,359,364,369,392],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[458,459,460],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[381],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[255,359],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"t"}},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[103,104,105,106,108,109],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[56,57,58,59,60,62,65,103,104,105,106,107,108,109,135,152,203,204,205,206,207,461,209,229,230,231,232,242,243,244,245,246,247,248,249,462,297,298,315,317,463,464,341,342,344,465,466,467,349,468,350,351,352,353,469,354,355,35,470,471,356,357,358,398,472,473,399,474,400,401,475,402,403,476,477,404,405,406,407,408,478,409,479,480,410,411,412,413,414,40,416,417,418,419,420,421,422,423,424,41,425,426,481,429,430,435,436,438,438,439,439,440],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[482,483,484,485,486,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[449,315,316,317],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:138","sourceCode":"java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[54,4,55,137,138,0,1,187,189,192,16,488,312,2,3,366,367,371,38,489,490,491,492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[329],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"argument"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[56,57,58,59,60,62,65,103,104,105,106,107,108,109,152,203,204,205,206,207,461,209,229,230,231,232,242,243,244,245,246,247,248,249,297,298,315,317,463,464,341,342,344,465,466,349,468,350,351,352,353,469,354,355,35,471,356,357,358,398,472,473,399,474,400,401,475,402,403,476,477,404,405,406,407,408,478,409,479,480,410,411,412,413,414,40,416,417,418,419,420,421,422,423,424,41,425,426,481,429,430,435,436,438,438,439,439,440],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[42,19,322,324,20,325,24,333,378,380,39],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[104,108],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[42,19,322,324,20,325,24,333,378,380,39],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[157,391],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:223","failures":[401],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[79,83,84,93,98,138,142,143,144,145,146,147,148,149,150,151,154,155,158,227,228,312,318,327,330,331,335,392],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[449,315,316,317],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[54,4,55,59,60,62,5,71,72,73,110,111,127,7,128,138,0,1,142,143,144,145,146,9,153,11,12,13,14,15,154,155,158,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,191,193,204,227,228,231,237,44,254,255,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,284,292,293,294,296,297,17,304,312,2,3,315,316,318,319,42,19,321,322,323,324,20,21,22,326,43,23,327,328,329,330,331,24,25,26,332,27,333,334,335,336,28,337,29,338,30,31,339,493,32,33,34,463,464,341,342,343,344,465,349,351,353,469,35,358,364,365,366,36,368,369,370,372,373,45,376,47,378,379,380,381,382,385,386,387,39,389,390,392,393,394,395,396,397,399,401,408,411,414,40,415,416,417,418,420,424,41,425,427,428,434,440,441,48,442,443,445],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[59,60,62,143,231,293,297,463,464,341,342,343,344,465,349,351,353,469,35,396,399,401,408,411,414,415,416,418,440],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":19,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":186,"org.easymock.tests2.UsageTest.argumentsOrdered":38,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":89,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":37,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":437,"org.easymock.tests2.DelegateToTest.testReturnException":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":234,"org.easymock.tests.MockingTest.testPartialClassMocking":59,"org.easymock.tests.MockClassControlTest.testToString":244,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":377,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":251,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":476,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":401,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":166,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":488,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":428,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":451,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":154,"org.easymock.tests2.UsageTest.wrongArguments":367,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":213,"org.easymock.samples.ExampleTest.answerVsDelegate":48,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":209,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":64,"org.easymock.tests2.UsageConstraintsTest.testNull":322,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":416,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":32,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":249,"org.easymock.tests2.CaptureTest.testPrimitive":381,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":158,"org.easymock.tests.UsageTest.moreThanOneArgument":187,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":185,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":415,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":149,"org.easymock.tests.UsageTest.argumentsOrdered":16,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":66,"org.easymock.tests.UsageVarargTest.varargIntAccepted":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":94,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":142,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":466,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":455,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":289,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":146,"org.easymock.tests.ReplayStateInvalidUsageTest.times":223,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":304,"org.easymock.tests2.AnswerTest.answer":45,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":348,"org.easymock.tests2.CaptureTest.testAnd":378,"org.easymock.tests2.UsageTest.strictResetToDefault":365,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":423,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":148,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":72,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":338,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":70,"org.easymock.tests2.DelegateToTest.testDelegate":296,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":181,"org.easymock.tests.LimitationsTest.mockFinalMethod":232,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":78,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":163,"org.easymock.tests2.CaptureTest.testCapture1_2446744":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":179,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":346,"org.easymock.tests.UsageThrowableTest.throwError":9,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":217,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":413,"org.easymock.samples.PartialClassMockTest.testGetArea":440,"org.easymock.tests.MockingTest.testInterfaceMocking":61,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":218,"org.easymock.tests2.CompareToTest.testLessOrEqual":53,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":143,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":477,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":167,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":135,"org.easymock.tests2.UsageTest.niceToStrict":36,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":79,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":351,"org.easymock.tests2.MockBuilderTest.testCreateMock":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":479,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":307,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":175,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":30,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":241,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":194,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":211,"org.easymock.tests.UsageOverloadedMethodTest.overloading":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":407,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":255,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":327,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":270,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":23,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":387,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":118,"org.easymock.tests2.EasyMockSupportClassTest.testAll":399,"org.easymock.tests.MockClassControlTest.testEquals":248,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":205,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":183,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":76,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":347,"org.easymock.tests2.CaptureTest.testCaptureAll":379,"org.easymock.tests.MockNameTest.defaultName":159,"org.easymock.tests2.UsageConstraintsTest.testMatches":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":150,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":215,"org.easymock.samples.ExampleTest.voteForRemovals":445,"org.easymock.tests.UsageVarargTest.allKinds":126,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":54,"org.easymock.samples.BasicClassMockTest.testPrintContent":436,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":77,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":14,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":286,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":456,"org.easymock.tests2.UsageConstraintsTest.greaterThan":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":474,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":71,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":425,"org.easymock.samples.ExampleTest.voteForRemoval":442,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":109,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":426,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":419,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":152,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":364,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":86,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":337,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":233,"org.easymock.tests2.CaptureTest.testCaptureFirst":390,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":85,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":29,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":373,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":258,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":266,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":396,"org.easymock.tests2.CaptureTest.testCapture2_2446744":389,"org.easymock.tests2.UsageTest.moreThanOneArgument":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":97,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":35,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":125,"org.easymock.tests.GenericTest.testBridgedEquals":207,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":201,"org.easymock.tests.UsageExpectAndReturnTest.longType":262,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":74,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":336,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":470,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":184,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":129,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":332,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":182,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":161,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":147,"org.easymock.tests.UsageCallCountTest.tooManyCalls":202,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":480,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":13,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":464,"org.easymock.tests.MockingTest.testNiceClassMocking":65,"org.easymock.tests.MockingTest.testClassMocking":57,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":467,"org.easymock.tests2.UsageConstraintsTest.testContains":43,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":195,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":358,"org.easymock.tests2.UsageConstraintsTest.testFind":321,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":128,"org.easymock.tests.MockTypeTest.fromEasyMockClass":208,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":8,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":363,"org.easymock.tests.UsageExpectAndReturnTest.object":269,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":420,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":493,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":452,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":120,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":133,"org.easymock.tests.UsageTest.exactCallCountByLastCall":193,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":84,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":67,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":250,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":298,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":115,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":275,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":254,"org.easymock.tests.MockClassControlTest.testHashCode":247,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":280,"org.easymock.tests2.EasyMockSupportTest.testVerify":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":405,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":68,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":44,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":240,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":345,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":360,"org.easymock.tests.UsageVarargTest.varargCharAccepted":119,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":102,"org.easymock.tests2.UsageTest.openCallCountByLastCall":368,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":458,"org.easymock.tests.DefaultClassInstantiatorTest.object":103,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":34,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":239,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":406,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":173,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":11,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":302,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":279,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":424,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":246,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":172,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":276,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":411,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":245,"org.easymock.tests2.UsageTest.resumeIfFailure":372,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":236,"org.easymock.tests2.StubTest.stubWithReturnValue":392,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":457,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":27,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":268,"org.easymock.tests2.SerializationTest.testAllMockedMethod":317,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":95,"org.easymock.samples.SupportTest.voteForRemovals":434,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":203,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":282,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":178,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":449,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":101,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":374,"org.easymock.tests.UsageExpectAndThrowTest.object":176,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":252,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":25,"org.easymock.tests2.DelegateToTest.testWrongClass":294,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":227,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":228,"org.easymock.samples.ConstructorCalledMockTest.testTax":438,"org.easymock.tests.UsageStrictMockTest.range":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":431,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":339,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":177,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":398,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":192,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":212,"org.easymock.tests2.CaptureTest.testCaptureNone":386,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":114,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":483,"org.easymock.tests.UsageUnorderedTest.message":6,"org.easymock.tests.UsageVerifyTest.twoReturns":55,"org.easymock.tests.UsageVarargTest.varargByteAccepted":124,"org.easymock.tests2.ThreadingTest.testThreadSafe":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":478,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":199,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":435,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":134,"org.easymock.tests2.CaptureTest.testCapture_2617107":380,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":165,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":99,"org.easymock.tests2.UsageConstraintsTest.any":22,"org.easymock.tests2.StubTest.stub":391,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":222,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":162,"org.easymock.tests.UsageExpectAndThrowTest.longType":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":100,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":235,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":107,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":221,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":313,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":284,"org.easymock.tests2.SerializationTest.testClass":315,"org.easymock.tests.LimitationsTest.mockNativeMethod":231,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":206,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":278,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":301,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":314,"org.easymock.tests2.NameTest.nameForMocksControl":492,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":484,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":303,"org.easymock.tests2.MockedExceptionTest.testMockedException":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":400,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":191,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":170,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":62,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":362,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":414,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":469,"org.easymock.tests.MockingTest.testNicePartialClassMocking":60,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":418,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":450,"org.easymock.tests2.CaptureTest.testCaptureLast":385,"org.easymock.tests2.CompareToTest.testCompareEqual":51,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":299,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":164,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":465,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":20,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":26,"org.easymock.tests.MockingTest.testTwoMocks":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":259,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":174,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":371,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":334,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":487,"org.easymock.samples.ExampleTest.removeNonExistingDocument":446,"org.easymock.tests.UsageStrictMockTest.differentMethods":1,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":306,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":281,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":486,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":105,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":395,"org.easymock.tests2.MockBuilderTest.testCreateMockString":471,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":475,"org.easymock.tests.UsageExpectAndThrowTest.floatType":168,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":473,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":375,"org.easymock.tests.UsageVerifyTest.twoThrows":4,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":408,"org.easymock.samples.ExampleTest.voteAgainstRemoval":443,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":90,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":41,"org.easymock.tests.LimitationsTest.privateConstructor":230,"org.easymock.tests2.UsageConstraintsTest.testNotNull":333,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":15,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":356,"org.easymock.tests2.UsageTest.defaultResetToNice":370,"org.easymock.samples.ExampleTest.voteAgainstRemovals":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":91,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":274,"org.easymock.tests.UsageVarargTest.differentLength":121,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":300,"org.easymock.tests2.CallbackTest.callback":17,"org.easymock.tests2.UsageConstraintsTest.equals":320,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":421,"org.easymock.tests.UsageTest.openCallCountByLastCall":190,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":318,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":156,"org.easymock.tests.UsageCallCountTest.tooFewCalls":197,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":214,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":485,"org.easymock.tests.UsageThrowableTest.throwCheckedException":12,"org.easymock.tests.MockingTest.testStrictClassMocking":56,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":111,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":344,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":305,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":341,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":224,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":343,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":47,"org.easymock.tests.ObjectMethodsTest.testHashCode":132,"org.easymock.tests2.CompareToTest.testGreateOrEqual":52,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":454,"org.easymock.tests2.NameTest.nameForNiceMock":491,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":397,"org.easymock.tests2.DependencyTest.testInterfaceMocking":427,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":453,"org.easymock.samples.ExampleTest.addDocument":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":412,"org.easymock.tests2.DelegateToTest.testStubDelegate":293,"org.easymock.tests2.AnswerTest.stubAnswer":376,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":138,"org.easymock.tests.UsageVarargTest.varargLongAccepted":123,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":88,"org.easymock.tests.UsageExpectAndReturnTest.floatType":261,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":277,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":297,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":439,"org.easymock.tests.UsageThrowableTest.noUpperLimit":10,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":256,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":288,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":331,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":319,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":429,"org.easymock.tests2.SerializationTest.test":316,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":383,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":104,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":260,"org.easymock.tests2.UsageConstraintsTest.testSame":323,"org.easymock.samples.SupportTest.addDocument":433,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":402,"org.easymock.tests.GenericTest.testPackageScope":204,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":83,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":287,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":63,"org.easymock.tests2.NameTest.nameForMock":489,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":271,"org.easymock.tests2.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":422,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":263,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":180,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":130,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":73,"org.easymock.tests2.MockedExceptionTest.testRealException":359,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":210,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":92,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":155,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":226,"org.easymock.tests2.NameTest.nameForStrictMock":490,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":350,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":459,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":361,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":417,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":430,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":106,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":24,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":349,"org.easymock.tests2.UsageStrictMockTest.range":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":335,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":283,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":404,"org.easymock.tests2.CaptureTest.testCaptureRightOne":39,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":482,"org.easymock.tests2.UsageConstraintsTest.testOr":324,"org.easymock.tests.UsageRangeTest.combination":5,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":40,"org.easymock.tests.UsageTest.wrongArguments":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":403,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":272,"org.easymock.tests.UsageVarargTest.varargShortAccepted":122,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":108,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":200,"org.easymock.tests2.UsageConstraintsTest.cmpTo":326,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":46,"org.easymock.tests2.CompareToTest.testLessThan":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":82,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":369,"org.easymock.tests2.CaptureTest.testCaptureFromStub":388,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":216,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":468,"org.easymock.tests.UsageTest.unexpectedCallWithArray":188,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":137,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":198,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":273,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":139,"org.easymock.tests2.UsageConstraintsTest.constraints":42,"org.easymock.samples.ExampleTest.addAndChangeDocument":447,"org.easymock.tests.UsageStrictMockTest.testVerify":141,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":448,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":136,"org.easymock.tests2.CompareToTest.testGreateThan":50,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":75,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":384,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":462,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":144,"org.easymock.tests.LimitationsTest.abstractClass":229,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":265,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":145,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":116,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":31}}]
