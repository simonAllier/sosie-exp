[{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[35,36],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[62,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[64,65,66,67,68,69,70],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[71,72,73,74,75,25,76,77,32,78,79,80,70],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[81,60,82],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[83,38,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,47,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,75,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,78,151,79,152,153,154,155,156,157,158,159,160,161,59,162,163,164,165,166,167,168,169],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[170,171,172,173,174,175,176,177,178,179,180,181,181,182,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,72,38,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,84,232,233,234,39,40,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,41,42,43,44,45,88,89,90,97,98,99,100,254,255,101,102,103,256,257,258,259,46,260,261,104,262,62,105,106,108,263,109,47,110,111,112,113,264,265,266,267,268,269,270,114,115,116,271,272,118,119,273,274,275,276,277,278,279,280,48,49,50,51,52,281,282,283,284,285,286,287,288,123,289,290,291,292,293,53,54,294,124,125,295,126,296,297,298,299,300,301,127,302,74,128,303,55,304,305,306,307,308,56,57,309,310,311,312,58,313,314,315,316,317,3,6,16,22,129,318,319,320,63,321,322,323,324,325,326,25,327,328,329,130,330,131,331,132,133,332,134,135,333,334,335,136,336,138,139,337,338,140,141,142,143,144,145,339,340,341,342,343,344,146,147,76,149,150,151,152,345,153,154,155,156,346,347,348,157,158,159,160,161,349,59,162,163,164,165,350,351,352,353,166,354,355,168,81,356,357,358,60,359,360,82,61,361,362,37,363,364,169,365,366,367,368,369,370,371,372,373,374,375,376,80],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[377,378,99,109,379,380],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[170,171,172,173,174,175,176,381,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,382,209,383,71,210,211,72,384,83,38,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,84,232,233,234,39,40,235,236,237,238,239,240,241,385,242,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,243,244,245,403,404,85,86,87,405,406,407,246,247,248,249,250,251,252,253,41,42,43,44,45,88,89,90,91,408,409,92,93,94,95,96,97,98,99,100,254,255,101,102,103,256,257,258,259,46,260,261,104,262,62,105,106,107,108,263,109,47,110,111,112,113,264,410,411,265,266,267,412,268,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,269,432,433,434,435,436,270,437,114,438,115,116,271,272,117,118,119,273,274,275,276,277,278,279,280,439,120,440,441,121,122,442,443,444,445,446,447,448,449,450,451,452,453,48,49,50,51,52,281,282,283,284,285,286,454,287,288,123,289,290,291,292,293,53,54,455,456,294,457,124,125,458,295,126,296,297,298,299,300,459,301,73,460,127,302,74,128,461,75,303,55,304,305,306,307,308,56,57,309,310,311,312,58,313,314,315,316,317,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,129,318,319,320,63,321,322,323,324,325,326,25,327,328,329,130,330,131,331,132,133,332,134,135,333,334,335,462,463,464,465,466,136,137,467,468,469,470,471,336,138,139,337,472,338,140,141,473,474,142,143,144,145,339,340,341,342,343,344,146,475,147,148,476,477,76,478,149,69,150,77,32,78,151,479,79,480,481,482,483,484,485,486,152,345,153,154,155,156,346,347,348,157,158,159,160,161,349,59,162,163,164,165,487,488,489,490,491,492,350,351,352,353,493,494,495,496,497,166,167,498,499,500,501,502,354,355,168,81,503,356,357,358,60,359,360,82,61,361,362,37,363,364,169,365,366,367,368,369,370,371,372,373,374,504,375,505,376,80,70,506],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:34","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>.getName(), java.lang.Byte.java.lang.Class<java.lang.Byte>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[170,171,172,173,174,175,176,381,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,382,209,383,71,210,211,72,384,83,38,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,84,232,233,234,39,40,235,236,237,238,239,240,241,385,242,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,243,244,245,403,404,85,86,87,405,406,407,246,247,248,249,250,251,252,253,41,42,43,44,45,88,89,90,91,408,409,92,93,94,95,96,97,98,99,100,254,255,101,102,103,256,257,258,259,46,260,261,104,262,62,105,106,107,108,263,109,47,110,111,112,113,264,410,411,265,266,267,412,268,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,269,432,433,434,435,436,270,437,114,438,115,116,271,272,117,118,119,273,274,275,276,277,278,279,280,439,120,440,441,121,122,442,443,444,445,446,447,448,449,450,451,452,453,48,49,50,51,52,281,282,283,284,285,286,454,287,288,123,289,290,291,292,293,53,54,455,456,294,457,124,125,458,295,126,296,297,298,299,300,459,301,73,460,127,302,74,128,461,75,303,55,304,305,306,307,308,56,57,309,310,311,312,58,313,314,315,316,317,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,129,318,319,320,63,321,322,323,324,325,326,25,327,328,329,130,330,131,331,132,133,332,134,135,333,334,335,462,463,464,465,466,136,137,467,468,469,470,471,336,138,139,337,472,338,140,141,473,474,142,143,144,145,339,340,341,342,343,344,146,475,147,148,476,477,76,478,149,69,150,77,32,78,151,479,79,480,481,482,483,484,485,486,152,345,153,154,155,156,346,347,348,157,158,159,160,161,349,59,162,163,164,165,487,488,489,490,491,492,350,351,352,353,493,494,495,496,497,166,167,498,499,500,501,502,354,355,168,81,503,356,357,358,60,359,360,82,61,361,362,37,363,364,169,365,366,367,368,369,370,371,372,373,374,504,375,505,376,80,70,506],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[170,171,172,173,174,175,176,177,178,179,180,183,184,185,188,189,191,196,201,210,211,38,214,215,217,222,227,84,241,246,247,248,249,250,251,252,253,41,42,43,44,89,90,100,101,102,103,261,262,62,106,263,109,47,110,111,112,113,266,267,268,116,271,272,118,119,273,274,284,285,286,287,288,289,290,291,292,293,294,295,126,296,297,298,299,301,74,303,55,304,305,307,308,56,57,309,310,58,316,317,3,6,16,22,129,320,321,324,25,327,328,329,130,330,131,331,132,133,134,135,333,334,335,136,336,138,139,337,338,140,141,340,342,344,76,149,150,152,345,154,155,156,157,158,160,349,59,162,163,164,165,350,351,166,81,357,359,360,61,361,37,169,367,368,369,370,371,372,80],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[76,507],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[508,64,65,66,67,68,509,80],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[508,64,65,66,67,68,509,80],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[170,171,172,173,174,176,179,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,210,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,84,232,233,234,39,40,246,248,249,250,251,252,253,41,42,45,88,89,90,97,98,254,255,103,46,261,262,62,106,47,111,112,266,267,268,273,274,275,48,49,50,51,52,53,54,294,295,126,296,297,298,299,301,302,74,128,303,55,304,305,306,56,57,309,310,312,58,313,314,315,316,317,3,6,16,22,129,320,321,325,326,25,327,329,130,330,131,331,132,133,332,134,135,333,334,136,336,138,139,337,338,140,141,340,341,342,344,147,76,149,150,151,152,345,153,155,346,347,348,159,160,59,163,164,350,351,353,166,354,355,168,81,356,357,358,60,359,360,61,361,362,37,363,364,169,365,366,367,368,369,370,371,372,373,374,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[170,171,172,173,174,175,176,381,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,382,209,383,71,210,211,72,384,83,38,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,84,232,233,234,39,40,235,236,237,238,239,240,241,242,386,387,388,389,390,392,394,395,396,397,398,399,400,401,402,243,244,245,403,404,85,86,87,405,406,407,246,247,248,249,250,251,252,253,41,42,43,44,45,88,89,90,91,408,409,92,93,94,95,96,97,98,99,100,254,255,101,102,103,256,257,258,259,46,260,261,104,262,62,105,106,107,108,263,109,47,110,111,112,113,264,410,411,265,266,267,412,268,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,269,432,433,434,435,436,270,437,114,438,115,116,271,272,117,118,119,273,274,275,276,277,278,279,280,439,120,440,441,121,122,442,443,444,445,446,447,448,449,450,451,452,453,48,49,50,51,52,281,282,283,284,285,286,454,287,288,123,289,290,291,292,293,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,53,54,455,456,294,457,124,125,458,532,533,534,535,536,537,295,126,296,297,298,299,300,459,301,73,460,127,302,74,128,461,75,303,55,304,305,306,307,308,56,57,309,310,311,312,58,313,538,314,315,316,317,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,129,318,319,320,63,321,322,323,324,325,326,25,327,328,329,130,330,131,331,132,133,332,134,135,333,334,335,462,463,464,465,466,136,137,467,468,469,470,471,336,138,139,337,472,338,140,141,473,474,142,143,144,145,339,340,341,342,343,344,146,147,148,477,76,478,149,150,77,32,78,151,79,480,481,482,484,485,486,152,345,153,154,155,156,346,347,348,157,158,159,160,161,349,59,162,163,164,165,487,488,489,490,491,492,350,351,352,353,493,494,495,496,497,166,167,498,499,500,501,502,354,355,168,81,503,356,357,358,60,359,360,82,61,361,362,37,363,364,169,365,366,367,368,369,370,371,372,373,374,504,375,505,376,80,70],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[43,423],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[206,207,208,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:85","sourceCode":"return java.util.List<T>.get(0)","type":"CtReturnImpl"},"failures":[303,304,305,306,307,308,56,309,539,310,311,58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[170,171,173,174,176,179,181,181,182,182,214,215,216,221,228,229,230,231,266,267,268,276,277,48,49,50,52,53,294,295,296,297,299,316,3,6,16,22,325,336,138,139,337,338,140,141,341,147,76,149,150,151,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[377,378,99,109,379,380],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[126],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[357,82,367,372],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[171,172,173,174,175,176,177,178,179,180,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,210,211,384,38,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,84,233,234,39,40,237,238,241,406,407,246,247,248,249,250,251,252,253,41,42,43,44,45,88,89,90,97,98,100,254,255,101,102,103,256,257,258,259,46,260,261,262,62,108,263,109,47,110,111,112,113,264,115,116,271,272,118,119,273,274,275,276],"status":-3,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:233","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()))","type":"CtThrowImpl"},"failures":[137,167],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,246,249,250,251,252,253,44,89,46,62,419,281,282,283,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[38,39,40,41,42,43,44,45,46,109,47,48,49,50,51,52,293,53,54,301,303,55,304,305,306,307,308,56,57,309,310,311,312,58,316,59,354,355,168,81,356,357,358,60,359,360,82,61,361,362,37,363,364,169,365,366,367,368,369,370,371,372,373,374,375,376],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[363,369,374,504],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[38,540,89,90,99,100,101,102,109,111,154,157,158,163],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[541,25,327,328],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":81,"org.easymock.tests2.UsageTest.argumentsOrdered":158,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":333,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":426,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":156,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":185,"org.easymock.tests2.DelegateToTest.testReturnException":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":257,"org.easymock.tests.MockingTest.testPartialClassMocking":266,"org.easymock.tests.MockClassControlTest.testToString":85,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":474,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":10,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":186,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":6,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":351,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":531,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":64,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":360,"org.easymock.tests2.UsageTest.wrongArguments":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":41,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":471,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":396,"org.easymock.samples.ExampleTest.answerVsDelegate":172,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":94,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":414,"org.easymock.tests2.UsageConstraintsTest.testNull":357,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":297,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":407,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":135,"org.easymock.tests2.CaptureTest.testPrimitive":305,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":45,"org.easymock.tests.UsageTest.moreThanOneArgument":98,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":205,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":278,"org.easymock.tests.UsageTest.argumentsOrdered":102,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":236,"org.easymock.tests.UsageVarargTest.varargIntAccepted":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":431,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":48,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":501,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":482,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":52,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":515,"org.easymock.tests.ReplayStateInvalidUsageTest.times":450,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":136,"org.easymock.tests2.DependencyTest.testClassMocking":491,"org.easymock.tests2.AnswerTest.answer":321,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":432,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":490,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":409,"org.easymock.tests2.CaptureTest.testAnd":303,"org.easymock.tests2.UsageTest.strictResetToDefault":345,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":476,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":277,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":233,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":331,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":240,"org.easymock.tests2.DelegateToTest.testDelegate":344,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":514,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":201,"org.easymock.tests.LimitationsTest.mockFinalMethod":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":46,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":402,"org.easymock.tests2.DependencyTest.testClassMockingSupport":492,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":124,"org.easymock.tests2.CaptureTest.testCapture1_2446744":306,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":459,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":199,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":488,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":444,"org.easymock.tests.UsageThrowableTest.throwError":246,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":93,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":502,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":24,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":518,"org.easymock.samples.PartialClassMockTest.testGetArea":170,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":445,"org.easymock.tests.MockingTest.testInterfaceMocking":412,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":49,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":187,"org.easymock.tests2.UsageTest.niceToStrict":155,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":11,"org.easymock.tests2.ThreadingTest.testChangeDefault":538,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":31,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":76,"org.easymock.tests2.MockBuilderTest.testCreateMock":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":19,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":468,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":195,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":379,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":132,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":408,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":283,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":394,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":28,"org.easymock.tests.UsageOverloadedMethodTest.overloading":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":21,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":62,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":363,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":223,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":273,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":37,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":35,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":309,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":454,"org.easymock.tests.MockClassControlTest.testEquals":406,"org.easymock.tests2.EasyMockSupportClassTest.testAll":3,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":211,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":203,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":489,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":400,"org.easymock.tests2.CaptureTest.testCaptureAll":55,"org.easymock.tests.MockNameTest.defaultName":83,"org.easymock.tests2.UsageConstraintsTest.testMatches":364,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":442,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":279,"org.easymock.samples.ExampleTest.voteForRemovals":176,"org.easymock.tests.UsageVarargTest.allKinds":293,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":401,"org.easymock.samples.BasicClassMockTest.testPrintContent":184,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":252,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":498,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":260,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":343,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":509,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":391,"org.easymock.tests2.UsageConstraintsTest.greaterThan":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":4,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":232,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":128,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":519,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":392,"org.easymock.samples.ExampleTest.voteForRemoval":173,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":461,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":314,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":95,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":300,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":511,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":152,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":241,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":330,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":256,"org.easymock.tests2.CaptureTest.testCaptureFirst":58,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":131,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":160,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":107,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":219,"org.easymock.tests2.UsageTest.moreThanOneArgument":153,"org.easymock.tests2.CaptureTest.testCapture2_2446744":312,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":433,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":151,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":292,"org.easymock.tests.GenericTest.testBridgedEquals":384,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":29,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":118,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":26,"org.easymock.tests.UsageExpectAndReturnTest.longType":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":398,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":329,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":507,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":204,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":235,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":370,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":202,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":244,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":276,"org.easymock.tests.UsageCallCountTest.tooManyCalls":119,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":20,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":470,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":191,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":251,"org.easymock.tests.MockingTest.testNiceClassMocking":415,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":138,"org.easymock.tests.MockingTest.testClassMocking":411,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":438,"org.easymock.tests2.UsageConstraintsTest.testContains":362,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":320,"org.easymock.tests2.UsageConstraintsTest.testFind":356,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":275,"org.easymock.tests.MockTypeTest.fromEasyMockClass":92,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":108,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":376,"org.easymock.tests.UsageExpectAndReturnTest.object":222,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":469,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":134,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":65,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":288,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":441,"org.easymock.tests.UsageTest.exactCallCountByLastCall":103,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":30,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":237,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":382,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":70,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":228,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":284,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":262,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":494,"org.easymock.tests.MockClassControlTest.testHashCode":405,"org.easymock.tests2.EasyMockSupportTest.testVerify":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":13,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":238,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":261,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":282,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":487,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":504,"org.easymock.tests.UsageVarargTest.varargCharAccepted":287,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":385,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":437,"org.easymock.tests2.UsageTest.openCallCountByLastCall":346,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":33,"org.easymock.tests.DefaultClassInstantiatorTest.object":242,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":334,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":281,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":120,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":540,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":14,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":193,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":249,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":465,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":493,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":517,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":87,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":302,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":192,"org.easymock.tests.ReplayStateInvalidCallsTest.times":523,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":229,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":243,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":524,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":22,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":86,"org.easymock.tests2.UsageTest.resumeIfFailure":159,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":91,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":259,"org.easymock.tests2.StubTest.stubWithReturnValue":353,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":69,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":221,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":371,"org.easymock.tests2.SerializationTest.testAllMockedMethod":328,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":269,"org.easymock.samples.SupportTest.voteForRemovals":179,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":380,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":496,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":198,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":541,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":270,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":322,"org.easymock.tests.UsageExpectAndThrowTest.object":196,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":383,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":368,"org.easymock.tests2.DelegateToTest.testWrongClass":342,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":521,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":53,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":54,"org.easymock.samples.ConstructorCalledMockTest.testTax":181,"org.easymock.tests.UsageStrictMockTest.range":111,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":485,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":332,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":336,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":27,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":197,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":149,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":452,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":0,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":395,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":377,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":513,"org.easymock.tests2.CaptureTest.testCaptureNone":57,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":208,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":533,"org.easymock.tests.UsageUnorderedTest.message":38,"org.easymock.tests.UsageVerifyTest.twoReturns":90,"org.easymock.tests.UsageVarargTest.varargByteAccepted":291,"org.easymock.tests2.ThreadingTest.testThreadSafe":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":17,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":272,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":183,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":121,"org.easymock.tests2.CaptureTest.testCapture_2617107":304,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":435,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":44,"org.easymock.tests2.UsageConstraintsTest.any":61,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":449,"org.easymock.tests2.StubTest.stub":352,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndThrowTest.longType":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":258,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":389,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":448,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":162,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":166,"org.easymock.tests2.SerializationTest.testClass":25,"org.easymock.tests.LimitationsTest.mockNativeMethod":294,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":72,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":231,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":464,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":529,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":165,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":534,"org.easymock.tests2.NameTest.nameForMocksControl":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":466,"org.easymock.tests2.MockedExceptionTest.testMockedException":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":5,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":255,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":505,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":190,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":268,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":295,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":150,"org.easymock.tests.MockingTest.testNicePartialClassMocking":267,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":299,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":508,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":462,"org.easymock.tests2.CaptureTest.testCaptureLast":56,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":125,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":528,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":141,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":359,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":369,"org.easymock.tests.MockingTest.testTwoMocks":265,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":525,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":212,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":194,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":157,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":373,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":537,"org.easymock.samples.ExampleTest.removeNonExistingDocument":381,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":467,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":446,"org.easymock.tests.UsageStrictMockTest.differentMethods":112,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":495,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":536,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":387,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":315,"org.easymock.tests2.MockBuilderTest.testCreateMockString":79,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":403,"org.easymock.tests.UsageExpectAndThrowTest.floatType":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":7,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":2,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":324,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":506,"org.easymock.tests.UsageVerifyTest.twoThrows":89,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":16,"org.easymock.samples.ExampleTest.voteAgainstRemoval":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":206,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":74,"org.easymock.tests.LimitationsTest.privateConstructor":456,"org.easymock.tests2.UsageConstraintsTest.testNotNull":372,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":253,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":318,"org.easymock.tests2.UsageTest.defaultResetToNice":348,"org.easymock.samples.ExampleTest.voteAgainstRemovals":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":227,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":463,"org.easymock.tests.UsageVarargTest.differentLength":123,"org.easymock.tests2.CallbackTest.callback":129,"org.easymock.tests2.UsageConstraintsTest.equals":503,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":73,"org.easymock.tests.UsageTest.openCallCountByLastCall":254,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":354,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":43,"org.easymock.tests.UsageCallCountTest.tooFewCalls":116,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":397,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":535,"org.easymock.tests.UsageThrowableTest.throwCheckedException":250,"org.easymock.tests.MockingTest.testStrictClassMocking":410,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":378,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":140,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":40,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":137,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":338,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":326,"org.easymock.tests.ObjectMethodsTest.testHashCode":440,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":67,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":527,"org.easymock.tests2.NameTest.nameForNiceMock":144,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":317,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":522,"org.easymock.tests2.DependencyTest.testInterfaceMocking":350,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":66,"org.easymock.samples.ExampleTest.addDocument":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":23,"org.easymock.tests2.DelegateToTest.testStubDelegate":341,"org.easymock.tests2.AnswerTest.stubAnswer":325,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":47,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":77,"org.easymock.tests.UsageVarargTest.varargLongAccepted":290,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.floatType":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":230,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":80,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":182,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":500,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":105,"org.easymock.tests.UsageThrowableTest.noUpperLimit":247,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":366,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":355,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":480,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":307,"org.easymock.tests2.SerializationTest.test":327,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":36,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":386,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":213,"org.easymock.tests2.UsageConstraintsTest.testSame":358,"org.easymock.samples.SupportTest.addDocument":178,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":472,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":512,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":8,"org.easymock.tests.GenericTest.testPackageScope":210,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":499,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":413,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":510,"org.easymock.tests2.NameTest.nameForMock":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":224,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":479,"org.easymock.tests2.UsageStrictMockTest.differentMethods":164,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":460,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":216,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":200,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":439,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":234,"org.easymock.tests2.MockedExceptionTest.testRealException":63,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":96,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":429,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":59,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":42,"org.easymock.tests2.NameTest.nameForStrictMock":143,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":477,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":34,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":375,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":484,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":388,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":367,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":147,"org.easymock.tests2.UsageStrictMockTest.range":163,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":516,"org.easymock.tests2.UsageConstraintsTest.lessThan":374,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":12,"org.easymock.tests2.CaptureTest.testCaptureRightOne":310,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":532,"org.easymock.tests2.UsageConstraintsTest.testOr":60,"org.easymock.tests.UsageRangeTest.combination":84,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":126,"org.easymock.tests.UsageTest.wrongArguments":100,"org.easymock.tests2.MockBuilderTest.testWithConstructor":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":9,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":404,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":225,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":390,"org.easymock.tests.UsageVarargTest.varargShortAccepted":289,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":117,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":530,"org.easymock.tests2.UsageConstraintsTest.cmpTo":361,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":323,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":520,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":419,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":347,"org.easymock.tests2.CaptureTest.testCaptureFromStub":311,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":443,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":148,"org.easymock.tests.UsageTest.unexpectedCallWithArray":99,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":526,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":271,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":226,"org.easymock.tests2.CaptureTest.testCapture":539,"org.easymock.tests2.UsageConstraintsTest.constraints":168,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":110,"org.easymock.samples.ExampleTest.addAndChangeDocument":177,"org.easymock.tests.UsageStrictMockTest.testVerify":264,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":180,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":399,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":50,"org.easymock.tests.LimitationsTest.abstractClass":455,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":218,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":133,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":285}}]
