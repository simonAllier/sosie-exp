[{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[18,19,20],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[23],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[24,25,26,27,28,29,30],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[31],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,32,33,34,35,36,6,37,38,39,40,41,42,43,44],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[60,46,47,48,49,50,51,52,53,61,54,55,56,57,58,62,63,64,65,66,67,68,69,70,71,59],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[72,73,74,75],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[76,77,78,79,80,81,82,60,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,18,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,0,1,116,117,118,119,120,121,46,47,48,49,50,51,52,53,61,54,55,56,57,58,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,32,141,142,2,3,143,33,34,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,22,163,164,165,166,24,167,31,168,169,170,171,172,173,30,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,62,191,192,63,64,193,194,72,73,74,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,65,66,67,236,68,237,238,239,240,241,242,243,244,245,246,247,248,249,4,250,251,252,253,254,255,45,256,257,258,259,5,260,261,262,263,264,265,266,267,268,269,270,271,69,272,70,273,274,71,275,276,277,35,278,279,280,281,282,283,284,285,286,287,288,289,36,290,291,6,7,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,21,310,311,312,313,8,314,315,316,317,318,319,320,9,10,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,37,38,11,12,39,40,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,13,375,376,377,378,14,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,15,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,42,16,43,44,435,17,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,23,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[498,499,500,501,502,242,244,256,259,267],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[411,415],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[504],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[72,73,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[24,505,25,26,27,506,28,29,507,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[46,48,55,244,245,248,4,250,252,260,265],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[60,62,192,63,193,232,69,70,273,390],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[24,168,25,26,27,28,29,30,72],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[72,73,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:139","sourceCode":"return java.lang.Class<?>[][int].isPrimitive()","type":"CtReturnImpl"},"failures":[48,49,50,51,52,55,57,248,249,253,254,258,259,263,265,266,430],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[138,3,351,12,43,436],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[76,77,160,22,24,168,508,171,173,30,177,182,183,509,510,72,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":245,"org.easymock.tests2.UsageTest.argumentsOrdered":34,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":351,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":387,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":142,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":79,"org.easymock.tests2.DelegateToTest.testReturnException":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":461,"org.easymock.tests.MockingTest.testPartialClassMocking":281,"org.easymock.tests.MockClassControlTest.testToString":369,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":117,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":217,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":213,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":331,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":271,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":25,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":251,"org.easymock.tests2.UsageTest.wrongArguments":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":294,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":133,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":365,"org.easymock.samples.ExampleTest.answerVsDelegate":60,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":359,"org.easymock.tests2.UsageConstraintsTest.testNull":248,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":286,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":95,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":155,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":374,"org.easymock.tests2.CaptureTest.testPrimitive":49,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":298,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":350,"org.easymock.tests.UsageTest.moreThanOneArgument":352,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":444,"org.easymock.tests.UsageTest.argumentsOrdered":40,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":320,"org.easymock.tests.UsageVarargTest.varargIntAccepted":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":392,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":447,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":29,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":186,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":205,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":451,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":127,"org.easymock.tests.ReplayStateInvalidUsageTest.times":309,"org.easymock.tests2.DependencyTest.testClassMocking":268,"org.easymock.tests2.AnswerTest.answer":62,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":394,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":137,"org.easymock.tests2.CaptureTest.testAnd":46,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":356,"org.easymock.tests2.UsageTest.strictResetToDefault":139,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":102,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":443,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":150,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":376,"org.easymock.tests2.DelegateToTest.testDelegate":68,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":322,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":346,"org.easymock.tests.LimitationsTest.mockFinalMethod":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":464,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":330,"org.easymock.tests2.DependencyTest.testClassMockingSupport":269,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":323,"org.easymock.tests2.CaptureTest.testCapture1_2446744":50,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":18,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":344,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":135,"org.easymock.tests.UsageThrowableTest.throwError":435,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":303,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":358,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":434,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":446,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":231,"org.easymock.samples.PartialClassMockTest.testGetArea":78,"org.easymock.tests.MockingTest.testInterfaceMocking":283,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":304,"org.easymock.tests2.CompareToTest.testLessOrEqual":502,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":448,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":471,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":408,"org.easymock.tests2.UsageTest.niceToStrict":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":218,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":332,"org.easymock.tests2.ThreadingTest.testChangeDefault":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":164,"org.easymock.tests2.MockBuilderTest.testCreateMock":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":226,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":130,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":340,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":151,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":355,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":433,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":312,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":363,"org.easymock.tests.UsageOverloadedMethodTest.overloading":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":228,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":256,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":489,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":401,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":45,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":54,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":422,"org.easymock.tests2.EasyMockSupportClassTest.testAll":210,"org.easymock.tests.MockClassControlTest.testEquals":373,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":454,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":136,"org.easymock.tests2.CaptureTest.testCaptureAll":47,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":328,"org.easymock.tests.MockNameTest.defaultName":418,"org.easymock.tests2.UsageConstraintsTest.testMatches":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":445,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":301,"org.easymock.samples.ExampleTest.voteForRemovals":86,"org.easymock.tests.UsageVarargTest.allKinds":430,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":16,"org.easymock.samples.BasicClassMockTest.testPrintContent":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":329,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":440,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":465,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":202,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":507,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":416,"org.easymock.tests2.UsageConstraintsTest.greaterThan":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":375,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":105,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":417,"org.easymock.samples.ExampleTest.voteForRemoval":83,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":106,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":238,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":360,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":187,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":98,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":452,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":138,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":148,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":460,"org.easymock.tests2.CaptureTest.testCaptureFirst":58,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":383,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":149,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":145,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":35,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":485,"org.easymock.tests2.UsageTest.moreThanOneArgument":140,"org.easymock.tests2.CaptureTest.testCapture2_2446744":57,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":395,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":170,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":429,"org.easymock.tests.GenericTest.testBridgedEquals":456,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":318,"org.easymock.tests.UsageExpectAndReturnTest.longType":481,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":326,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":349,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":263,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":362,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":347,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":474,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":442,"org.easymock.tests.UsageCallCountTest.tooManyCalls":319,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":227,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":486,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":132,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":336,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":439,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":176,"org.easymock.tests.MockingTest.testNiceClassMocking":287,"org.easymock.tests.MockingTest.testClassMocking":279,"org.easymock.tests2.UsageConstraintsTest.testContains":255,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":313,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":110,"org.easymock.tests2.UsageConstraintsTest.testFind":247,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":15,"org.easymock.tests.MockTypeTest.fromEasyMockClass":357,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":70,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":288,"org.easymock.tests.UsageExpectAndReturnTest.object":488,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":131,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":154,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":424,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":26,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":406,"org.easymock.tests.UsageTest.exactCallCountByLastCall":353,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":9,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":30,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":494,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":419,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":71,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":196,"org.easymock.tests.MockClassControlTest.testHashCode":372,"org.easymock.tests2.EasyMockSupportTest.testVerify":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":220,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":10,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":432,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":134,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":194,"org.easymock.tests.UsageVarargTest.varargCharAccepted":423,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":409,"org.easymock.tests2.CaptureTest.testCaptureMultiple":504,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":400,"org.easymock.tests2.UsageTest.openCallCountByLastCall":2,"org.easymock.tests.DefaultClassInstantiatorTest.object":410,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":157,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":431,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":404,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":338,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":437,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":125,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":195,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":103,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":371,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":337,"org.easymock.tests.CapturesMatcherTest.test":59,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":495,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":229,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":370,"org.easymock.tests2.UsageTest.resumeIfFailure":144,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":354,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":463,"org.easymock.tests2.StubTest.stubWithReturnValue":234,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":487,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":264,"org.easymock.tests2.SerializationTest.testAllMockedMethod":74,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":393,"org.easymock.samples.SupportTest.voteForRemovals":90,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":23,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":343,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":75,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":399,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":191,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":459,"org.easymock.tests.UsageExpectAndThrowTest.object":341,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":261,"org.easymock.tests2.DelegateToTest.testWrongClass":67,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":299,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":300,"org.easymock.tests.UsageStrictMockTest.range":6,"org.easymock.samples.ConstructorCalledMockTest.testTax":76,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":189,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":153,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":175,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":342,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":166,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":207,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":364,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":472,"org.easymock.tests2.CaptureTest.testCaptureNone":61,"org.easymock.tests.UsageUnorderedTest.message":42,"org.easymock.tests.UsageVerifyTest.twoReturns":44,"org.easymock.tests.UsageVarargTest.varargByteAccepted":428,"org.easymock.tests2.ThreadingTest.testThreadSafe":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":224,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":316,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":407,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":80,"org.easymock.tests2.CaptureTest.testCapture_2617107":48,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":397,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":297,"org.easymock.tests2.UsageConstraintsTest.any":253,"org.easymock.tests2.StubTest.stub":233,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":398,"org.easymock.tests.UsageExpectAndThrowTest.longType":334,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":414,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":307,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":115,"org.easymock.tests2.SerializationTest.testClass":72,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":200,"org.easymock.tests.LimitationsTest.mockNativeMethod":468,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":497,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":455,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":124,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":116,"org.easymock.tests2.NameTest.nameForMocksControl":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":126,"org.easymock.tests2.MockedExceptionTest.testMockedException":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":212,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":12,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":272,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":284,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":335,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":92,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":167,"org.easymock.tests.MockingTest.testNicePartialClassMocking":282,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":97,"org.easymock.tests2.CompareToTest.testCompareEqual":500,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":122,"org.easymock.tests2.CaptureTest.testCaptureLast":53,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":324,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":182,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":250,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":262,"org.easymock.tests.MockingTest.testTwoMocks":280,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":478,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":339,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":266,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":19,"org.easymock.samples.ExampleTest.removeNonExistingDocument":87,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":129,"org.easymock.tests.UsageStrictMockTest.differentMethods":7,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":305,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":197,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":412,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":239,"org.easymock.tests2.MockBuilderTest.testCreateMockString":172,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":214,"org.easymock.tests.UsageExpectAndThrowTest.floatType":333,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":209,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":63,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":174,"org.easymock.tests.UsageVerifyTest.twoThrows":43,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":223,"org.easymock.samples.ExampleTest.voteAgainstRemoval":84,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":388,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":104,"org.easymock.tests.LimitationsTest.privateConstructor":467,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":510,"org.easymock.tests2.UsageConstraintsTest.testNotNull":265,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":441,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":108,"org.easymock.tests2.UsageTest.defaultResetToNice":143,"org.easymock.samples.ExampleTest.voteAgainstRemovals":82,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":389,"org.easymock.tests.UsageVarargTest.differentLength":425,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":123,"org.easymock.tests2.CallbackTest.callback":232,"org.easymock.tests2.UsageConstraintsTest.equals":246,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":100,"org.easymock.tests.UsageTest.openCallCountByLastCall":11,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":242,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":296,"org.easymock.tests.UsageCallCountTest.tooFewCalls":314,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":178,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":366,"org.easymock.tests.UsageThrowableTest.throwCheckedException":438,"org.easymock.tests.MockingTest.testStrictClassMocking":278,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":477,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":181,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":177,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":128,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":21,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":180,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":193,"org.easymock.tests2.CompareToTest.testGreateOrEqual":501,"org.easymock.tests.ObjectMethodsTest.testHashCode":405,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":28,"org.easymock.tests2.NameTest.nameForNiceMock":120,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":241,"org.easymock.tests2.DependencyTest.testInterfaceMocking":270,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":27,"org.easymock.samples.ExampleTest.addDocument":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":225,"org.easymock.tests2.DelegateToTest.testStubDelegate":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":230,"org.easymock.tests2.AnswerTest.stubAnswer":64,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":290,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":31,"org.easymock.tests.UsageVarargTest.varargLongAccepted":427,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":386,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":496,"org.easymock.tests.UsageExpectAndReturnTest.floatType":480,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":173,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":77,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":5,"org.easymock.tests.UsageThrowableTest.noUpperLimit":17,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":204,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":243,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":184,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":51,"org.easymock.tests2.SerializationTest.test":73,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":479,"org.easymock.tests2.UsageConstraintsTest.testSame":249,"org.easymock.samples.SupportTest.addDocument":89,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":179,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":215,"org.easymock.tests.GenericTest.testPackageScope":453,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":203,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":285,"org.easymock.tests2.NameTest.nameForMock":118,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":490,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":171,"org.easymock.tests2.UsageStrictMockTest.differentMethods":1,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":101,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":482,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":345,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":403,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":377,"org.easymock.tests2.MockedExceptionTest.testRealException":111,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":190,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":390,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":295,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":311,"org.easymock.tests2.NameTest.nameForStrictMock":119,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":163,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":69,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":96,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":188,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":413,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":260,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":161,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":267,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":199,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":147,"org.easymock.tests2.CaptureTest.testCaptureRightOne":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":219,"org.easymock.tests2.UsageConstraintsTest.testOr":4,"org.easymock.tests.UsageRangeTest.combination":13,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":93,"org.easymock.tests.UsageTest.wrongArguments":38,"org.easymock.tests2.MockBuilderTest.testWithConstructor":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":216,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":368,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":483,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":14,"org.easymock.tests.UsageVarargTest.varargShortAccepted":426,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":415,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":317,"org.easymock.tests2.UsageConstraintsTest.cmpTo":254,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":192,"org.easymock.tests2.CompareToTest.testLessThan":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":380,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":3,"org.easymock.tests2.CaptureTest.testCaptureFromStub":56,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":302,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":162,"org.easymock.tests.UsageTest.unexpectedCallWithArray":37,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":36,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":315,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":508,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":492,"org.easymock.tests2.CaptureTest.testCapture":503,"org.easymock.tests2.UsageConstraintsTest.constraints":244,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":291,"org.easymock.samples.ExampleTest.addAndChangeDocument":88,"org.easymock.tests.UsageStrictMockTest.testVerify":293,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":91,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":289,"org.easymock.tests2.CompareToTest.testGreateThan":499,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":327,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":52,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":449,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":484,"org.easymock.tests.LimitationsTest.abstractClass":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":450,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":152}}]
