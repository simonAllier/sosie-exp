[{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"prefix"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[15,16,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[19],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[20,20,21,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,17,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.LastControl:95","failures":[121,122,123,124,125,126,127,128,129,130,131],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[20,21,55,132],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[133,134,3,7,135,136],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:733","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[137],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[138,139],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[140],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[141,142,143,144,145,146,147,148,149,150,151,152,153,154,10,155,156,157,158,159,160,161,162,163,164,165,166,138,167,168,169,170],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[171,22,25,172,173,26,174,175,176,177,178,179,180,8,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,159,206,207,14,208,209,210,211,212,213,214,215,216,217,65,75,81,84,86,87,89,90,91,94,95,96,97,99,218,103,106,110,113,115,219,220,221,222],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[223,224],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[171,22,225,226,227,228,28,29,30,143,229,230,231,232,233,234,235,236,145,237,238,146,239,147,240,241,8,181,242,243,244,245,246,247,38,248,249,250,251,252,253,193,254,255,256,257,205,258,14,208,55,62,65,75,81,85,88,90,91,94,96,97,98,99,218,100,101,259,102,103,260,104,17,105,107,111,112,113,140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[143,229,234,238,249,253],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[261],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[262,57,263,58],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[264],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[265,266,267,268,269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(this.java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[270,271,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","key":"value"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[273,274,275],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[276,277,278,279,280],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[162,281],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"symbol","methodName":"symbol"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":122,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":203,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":220,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":235,"org.easymock.tests2.SerializationTest.testAllMockedMethod":58,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":156,"org.easymock.tests.MockingTest.testPartialClassMocking":28,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":136,"org.easymock.samples.SupportTest.voteForRemovals":171,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":32,"org.easymock.tests.MockClassControlTest.testToString":42,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":209,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":275,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":115,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":69,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":262,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":268,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":65,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":150,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":205,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":248,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":249,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":137,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":242,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.samples.ConstructorCalledMockTest.testTax":20,"org.easymock.tests.UsageStrictMockTest.range":8,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":186,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":26,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":96,"org.easymock.tests2.UsageConstraintsTest.testNull":123,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":178,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":104,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":202,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":90,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":45,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":59,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":5,"org.easymock.tests.UsageTest.moreThanOneArgument":142,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":260,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":252,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":133,"org.easymock.tests2.CaptureTest.testCaptureNone":168,"org.easymock.tests.UsageUnorderedTest.message":10,"org.easymock.tests.UsageVerifyTest.twoReturns":2,"org.easymock.tests2.ThreadingTest.testThreadSafe":161,"org.easymock.tests.UsageTest.argumentsOrdered":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":76,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":267,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":243,"org.easymock.tests2.CaptureTest.testCapture_2617107":130,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":265,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":89,"org.easymock.tests2.StubTest.stub":269,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":247,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":51,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":219,"org.easymock.tests2.SerializationTest.testClass":57,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":221,"org.easymock.tests.LimitationsTest.mockNativeMethod":38,"org.easymock.tests.ReplayStateInvalidUsageTest.times":148,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":240,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":35,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":126,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":217,"org.easymock.tests2.CaptureTest.testAnd":129,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":110,"org.easymock.tests2.NameTest.nameForMocksControl":213,"org.easymock.tests2.MockedExceptionTest.testMockedException":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":251,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":255,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":64,"org.easymock.tests2.DelegateToTest.testDelegate":170,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":30,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":102,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":91,"org.easymock.tests.MockingTest.testNicePartialClassMocking":29,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":105,"org.easymock.tests.LimitationsTest.mockFinalMethod":39,"org.easymock.tests2.CaptureTest.testCaptureLast":167,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":101,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":192,"org.easymock.tests.MockingTest.testTwoMocks":27,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":271,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":143,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":215,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":272,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":266,"org.easymock.tests.UsageStrictMockTest.differentMethods":181,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":173,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":49,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":281,"org.easymock.tests2.MockBuilderTest.testCreateMockString":95,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":66,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":61,"org.easymock.tests.UsageVerifyTest.twoThrows":1,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":75,"org.easymock.samples.PartialClassMockTest.testGetArea":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":244,"org.easymock.samples.ExampleTest.voteAgainstRemoval":227,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":274,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":112,"org.easymock.tests2.UsageTest.niceToStrict":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":70,"org.easymock.tests2.ThreadingTest.testChangeDefault":270,"org.easymock.tests2.UsageConstraintsTest.testNotNull":128,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":118,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":88,"org.easymock.tests2.MockBuilderTest.testCreateMock":93,"org.easymock.samples.ExampleTest.voteAgainstRemovals":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":78,"org.easymock.tests2.CallbackTest.callback":159,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":108,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":135,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":199,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":163,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":74,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":164,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":236,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":99,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":187,"org.easymock.tests2.EasyMockSupportClassTest.testAll":62,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":34,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":134,"org.easymock.tests.MockingTest.testStrictClassMocking":176,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":216,"org.easymock.tests2.CaptureTest.testCaptureAll":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":190,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":222,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":98,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":253,"org.easymock.samples.ExampleTest.voteForRemovals":228,"org.easymock.tests2.NameTest.nameForNiceMock":212,"org.easymock.tests2.DependencyTest.testInterfaceMocking":257,"org.easymock.samples.BasicClassMockTest.testPrintContent":24,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":82,"org.easymock.tests2.DelegateToTest.testStubDelegate":140,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":207,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":241,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":53,"org.easymock.tests2.UsageConstraintsTest.greaterThan":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":63,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":254,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":113,"org.easymock.samples.ExampleTest.voteForRemoval":226,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":54,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":114,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":162,"org.easymock.tests.UsageExpectAndReturnTest.floatType":230,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":147,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":174,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":55,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":106,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":21,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":31,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":116,"org.easymock.tests2.SerializationTest.test":263,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":196,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":48,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":60,"org.easymock.tests2.CaptureTest.testCaptureFirst":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":197,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":67,"org.easymock.tests.GenericTest.testPackageScope":33,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":259,"org.easymock.tests2.CaptureTest.testCapture2_2446744":139,"org.easymock.tests2.UsageTest.moreThanOneArgument":160,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":94,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":177,"org.easymock.tests.GenericTest.testBridgedEquals":36,"org.easymock.tests2.NameTest.nameForMock":210,"org.easymock.tests.UsageExpectAndReturnTest.longType":231,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":145,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":154,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":273,"org.easymock.tests2.UsageStrictMockTest.differentMethods":208,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":153,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":250,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":79,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":234,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":175,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":258,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":183,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests.MockingTest.testNiceClassMocking":179,"org.easymock.tests2.NameTest.nameForStrictMock":211,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":120,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":149,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":87,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":157,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":17,"org.easymock.tests.MockTypeTest.fromEasyMockClass":172,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":158,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":180,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":117,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":50,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":127,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":85,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":261,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":71,"org.easymock.tests2.CaptureTest.testCaptureRightOne":131,"org.easymock.tests2.UsageConstraintsTest.testOr":124,"org.easymock.tests.UsageRangeTest.combination":193,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":56,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":103,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":146,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":224,"org.easymock.tests.UsageTest.wrongArguments":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":68,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":41,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":72,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":223,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":52,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":214,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":19,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":46,"org.easymock.tests2.CaptureTest.testCaptureMultiple":264,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":204,"org.easymock.tests.DefaultClassInstantiatorTest.object":47,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":182,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":86,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":73,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":44,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":111,"org.easymock.tests2.UsageConstraintsTest.constraints":121,"org.easymock.samples.ExampleTest.addAndChangeDocument":141,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":151,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":239,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":81,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":245,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":25,"org.easymock.tests.LimitationsTest.abstractClass":37,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":246,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":200}}]
