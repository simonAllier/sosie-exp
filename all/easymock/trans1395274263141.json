[{"position":"org.easymock.internal.RecordState:233","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,175,176,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[0,1,2,3,4,5,323,6,7,8,9,324,10,11,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,12,13,14,348,15,16,17,18,19,20,349,350,351,352,353,354,355,356,357,358,359,360,361,362,21,363,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,364,365,366,367,59,368,60,61,369,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,370,371,372,373,374,101,375,102,103,376,104,377,105,106,107,378,108,109,110,111,112,113,114,115,116,117,118,379,380,381,382,383,384,119,385,386,387,120,121,388,122,389,390,391,123,124,125,126,127,128,392,129,130,393,394,395,396,397,398,399,400,401,402,131,132,403,404,405,406,407,408,409,410,411,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,412,413,414,415,416,417,418,419,420,421,422,163,164,165,166,167,168,169,170,171,172,173,423,174,175,176,177,178,179,180,181,182,183,424,425,426,427,428,184,429,430,431,432,433,434,435,436,185,186,187,188,189,190,191,192,193,194,195,437,438,439,440,441,442,196,197,198,199,443,200,201,202,444,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,445,221,222,223,224,225,446,447,226,227,228,229,448,230,449,450,231,451,232,233,452,453,454,234,455,456,457,458,235,459,460,236,461,462,463,464,465,466,467,468,469,237,470,471,472,473,474,238,475,476,239,240,241,242,243,244,477,478,245,479,480,481,246,247,248,482,483,249,250,251,252,253,254,255,484,256,485,486,487,488,489,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,490,491,492,493,494,495,290,496,497,498,499,500,501,502,503,504,505,291,292,293,294,506,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[364,365,84],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[12,13,14,348,361,362,21,363,95,385,386,387,120,121,122,391,395,400,404,405,406,407,408,409,410,411,416,417,418,419,420,421,422,175,175,176,176,177,180,181,437,438,439,440,196,197,198,199,201,202,216,217,218,225,446,448,230,449,450,231,451,232,233,453,454,234,455,456,457,458,235,459,460,236,461,462,463,464,465,466,467,468,469,237,470,471,472,473,474,238,475,476,239,240,242,243,244,477,245,479,480,481,246,247,248,482,483,319,321],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[175,175,176,176,225,446,453,479,319],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[359],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[96,264,266,268,270,272,274,276],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:102","sourceCode":"return new org.easymock.internal.Result(org.easymock.IAnswer<?> , false)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[0,1,2,3,4,5,323,6,7,8,9,324,10,11,347,12,13,14,348,507,15,16,17,18,19,20,349,350,351,352,353,354,355,356,357,358,359,360,361,362,21,363,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,364,365,366,367,59,368,60,61,369,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,370,371,372,373,374,101,375,102,103,376,104,377,105,106,107,378,108,109,110,111,112,113,114,115,116,117,118,379,380,381,382,383,384,119,385,386,387,120,121,388,122,389,390,391,123,124,125,126,127,128,392,129,130,393,394,395,396,397,398,399,400,401,402,131,132,403,404,405,406,407,408,409,410,411,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,412,413,414,415,508,416,417,418,419,420,421,509,422,163,164,165,166,167,168,169,170,171,172,173,423,174,175,176,177,178,179,180,181,182,183,424,425,426,427,428,184,429,430,431,432,433,434,435,436,185,186,187,188,189,190,191,192,193,194,195,437,438,439,510,440,441,442,196,197,198,199,443,200,201,202,444,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,446,511,447,226,227,228,229,448,512,230,449,513,450,231,451,232,514,233,452,453,454,234,515,455,456,457,458,235,459,460,236,461,462,463,464,465,466,467,468,469,237,470,471,472,473,474,238,475,476,239,240,241,242,243,244,477,478,245,479,480,481,246,247,248,482,483,249,250,251,252,253,254,255,484,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,490,491,492,493,494,495,290,496,497,498,499,500,501,502,503,504,505,291,292,293,294,506,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[20,25,27,28,61,516,517,518,519,160,161,162,189,191,192,205],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[20,24,27,520,369,62,65,66,377,161,162,191,206,212,213],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[359,75,92,93,94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:58","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[15,25,27,28,44,50,51,52,156,157,158,159,165,185,186,189,191,192,231,240,243,245,246,247,248],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Same:37","failures":[297],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[453,319],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[521,319,320,321],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[348],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[27,28,160,191,192],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + java.lang.String) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.EasyMock.DISABLE_CLASS_MOCKING":"failMessage"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[522,523,524,525,526,446,514],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[74,250],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[521,319,320,321],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[527,528,529,530,531,532,533,534],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:121","sourceCode":"break","type":"CtBreakImpl"},"failures":[263,265,266,267,268,269,270,272,535,273],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[347,348],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[33,60,64,161,203,210],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[536,309],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":294,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":60,"org.easymock.tests2.UsageTest.argumentsOrdered":213,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":287,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":78,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":208,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":178,"org.easymock.tests2.DelegateToTest.testReturnException":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":124,"org.easymock.tests.MockingTest.testPartialClassMocking":120,"org.easymock.tests.MockClassControlTest.testToString":406,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":447,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":59,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":464,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":136,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":236,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":516,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":186,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":346,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":522,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":15,"org.easymock.tests2.UsageTest.wrongArguments":206,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":501,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":414,"org.easymock.samples.ExampleTest.answerVsDelegate":169,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":400,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":390,"org.easymock.tests2.UsageConstraintsTest.testNull":296,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":242,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":411,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":286,"org.easymock.tests2.CaptureTest.testPrimitive":266,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":19,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":155,"org.easymock.tests.UsageTest.moreThanOneArgument":61,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":165,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":392,"org.easymock.tests.UsageTest.argumentsOrdered":66,"org.easymock.tests.UsageVarargTest.varargIntAccepted":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":83,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":96,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":526,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":448,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":439,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":433,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":70,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":100,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":330,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":290,"org.easymock.tests.ReplayStateInvalidUsageTest.times":357,"org.easymock.tests2.DependencyTest.testClassMocking":435,"org.easymock.tests2.AnswerTest.answer":249,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":85,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":505,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":397,"org.easymock.tests2.CaptureTest.testAnd":263,"org.easymock.tests2.UsageTest.strictResetToDefault":204,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":513,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":481,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":164,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":158,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":281,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":394,"org.easymock.tests2.DelegateToTest.testDelegate":262,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":329,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":151,"org.easymock.tests.LimitationsTest.mockFinalMethod":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":127,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":374,"org.easymock.tests2.DependencyTest.testClassMockingSupport":436,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":364,"org.easymock.tests2.CaptureTest.testCapture1_2446744":267,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":478,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":149,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":503,"org.easymock.tests.UsageThrowableTest.throwError":31,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":351,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":399,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":507,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":434,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":476,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":333,"org.easymock.samples.PartialClassMockTest.testGetArea":177,"org.easymock.tests.MockingTest.testInterfaceMocking":388,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":97,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":465,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":384,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":137,"org.easymock.tests2.UsageTest.niceToStrict":207,"org.easymock.tests2.ThreadingTest.testChangeDefault":445,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":534,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":68,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":231,"org.easymock.tests2.MockBuilderTest.testCreateMock":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":472,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":498,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":145,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":282,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":396,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":5,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":412,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":531,"org.easymock.tests.UsageOverloadedMethodTest.overloading":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":103,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":306,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":50,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":305,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":272,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":378,"org.easymock.tests.MockClassControlTest.testEquals":410,"org.easymock.tests2.EasyMockSupportClassTest.testAll":235,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":13,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":153,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":504,"org.easymock.tests2.CaptureTest.testCaptureAll":264,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":372,"org.easymock.tests.MockNameTest.defaultName":403,"org.easymock.tests2.UsageConstraintsTest.testMatches":307,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":166,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":349,"org.easymock.samples.ExampleTest.voteForRemovals":173,"org.easymock.tests.UsageVarargTest.allKinds":115,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":160,"org.easymock.samples.BasicClassMockTest.testPrintContent":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":373,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":37,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":187,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":128,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":261,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":509,"org.easymock.tests2.UsageConstraintsTest.greaterThan":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":157,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":248,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":334,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":422,"org.easymock.samples.ExampleTest.voteForRemoval":170,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":482,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":221,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":401,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":510,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":477,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":326,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":95,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":203,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":75,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":279,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":123,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":257,"org.easymock.tests2.CaptureTest.testCaptureFirst":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":280,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":215,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":377,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":46,"org.easymock.tests2.UsageTest.moreThanOneArgument":205,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":223,"org.easymock.tests2.CaptureTest.testCapture2_2446744":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":86,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":234,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":114,"org.easymock.tests.GenericTest.testBridgedEquals":348,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":532,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":529,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":10,"org.easymock.tests.UsageExpectAndReturnTest.longType":42,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":277,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":370,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":154,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":119,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":314,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":93,"org.easymock.tests.UsageCallCountTest.tooManyCalls":11,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":500,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":141,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":36,"org.easymock.tests.MockingTest.testNiceClassMocking":391,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":197,"org.easymock.tests.MockingTest.testClassMocking":386,"org.easymock.tests2.UsageConstraintsTest.testContains":304,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":323,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":218,"org.easymock.tests2.UsageConstraintsTest.testFind":295,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":135,"org.easymock.tests.MockTypeTest.fromEasyMockClass":398,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":22,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":256,"org.easymock.tests.UsageExpectAndReturnTest.object":49,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":245,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":499,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":523,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":109,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":382,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":533,"org.easymock.tests.UsageTest.exactCallCountByLastCall":67,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":73,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":129,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":446,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":105,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":55,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":102,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":425,"org.easymock.tests.MockClassControlTest.testHashCode":409,"org.easymock.tests2.EasyMockSupportTest.testVerify":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":467,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":130,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":101,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":3,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":502,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":490,"org.easymock.tests.UsageVarargTest.varargCharAccepted":108,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":508,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":91,"org.easymock.tests2.UsageTest.openCallCountByLastCall":209,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":527,"org.easymock.tests.DefaultClassInstantiatorTest.object":416,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":288,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":2,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":380,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":520,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":468,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":143,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":494,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":424,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":408,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":246,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":332,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":142,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":56,"org.easymock.tests.ReplayStateInvalidCallsTest.times":338,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":92,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":339,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":238,"org.easymock.tests2.UsageTest.resumeIfFailure":214,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":438,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":126,"org.easymock.tests2.StubTest.stubWithReturnValue":195,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":514,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":48,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":315,"org.easymock.tests2.SerializationTest.testAllMockedMethod":321,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":84,"org.easymock.samples.SupportTest.voteForRemovals":183,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":347,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":427,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":148,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":521,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":90,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":250,"org.easymock.tests.UsageExpectAndThrowTest.object":146,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":368,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":312,"org.easymock.tests2.DelegateToTest.testWrongClass":260,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":131,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":336,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":132,"org.easymock.samples.ConstructorCalledMockTest.testTax":175,"org.easymock.tests.UsageStrictMockTest.range":27,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":441,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":284,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":196,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":530,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":147,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":456,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":65,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":359,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":413,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":328,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":118,"org.easymock.tests2.CaptureTest.testCaptureNone":271,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":486,"org.easymock.tests.UsageUnorderedTest.message":20,"org.easymock.tests.UsageVerifyTest.twoReturns":162,"org.easymock.tests.UsageVarargTest.varargByteAccepted":113,"org.easymock.tests2.ThreadingTest.testThreadSafe":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":470,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":9,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":180,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":383,"org.easymock.tests2.CaptureTest.testCapture_2617107":265,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":366,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":88,"org.easymock.tests2.UsageConstraintsTest.any":302,"org.easymock.tests2.StubTest.stub":194,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":356,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":94,"org.easymock.tests.UsageExpectAndThrowTest.longType":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":89,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":420,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":355,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":190,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":184,"org.easymock.tests2.SerializationTest.testClass":319,"org.easymock.tests.LimitationsTest.mockNativeMethod":21,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":14,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":58,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":493,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":344,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":193,"org.easymock.tests2.NameTest.nameForMocksControl":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":495,"org.easymock.tests2.MockedExceptionTest.testMockedException":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":460,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":64,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":484,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":140,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":122,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":239,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":233,"org.easymock.tests.MockingTest.testNicePartialClassMocking":121,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":244,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":491,"org.easymock.tests2.CaptureTest.testCaptureLast":270,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":365,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":202,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":299,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":343,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":313,"org.easymock.tests.MockingTest.testTwoMocks":387,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":340,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":39,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":144,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":212,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":317,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":489,"org.easymock.samples.ExampleTest.removeNonExistingDocument":423,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":497,"org.easymock.tests.UsageStrictMockTest.differentMethods":28,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":426,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":488,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":418,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":222,"org.easymock.tests2.MockBuilderTest.testCreateMockString":455,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":461,"org.easymock.tests.UsageExpectAndThrowTest.floatType":138,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":458,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":511,"org.easymock.tests.UsageVerifyTest.twoThrows":161,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":237,"org.easymock.samples.ExampleTest.voteAgainstRemoval":171,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":79,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":247,"org.easymock.tests.LimitationsTest.privateConstructor":362,"org.easymock.tests2.UsageConstraintsTest.testNotNull":316,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":38,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":216,"org.easymock.tests2.UsageTest.defaultResetToNice":211,"org.easymock.samples.ExampleTest.voteAgainstRemovals":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":80,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":492,"org.easymock.tests.UsageVarargTest.differentLength":110,"org.easymock.tests2.CallbackTest.callback":322,"org.easymock.tests2.UsageConstraintsTest.equals":506,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":479,"org.easymock.tests.UsageTest.openCallCountByLastCall":63,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":291,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":17,"org.easymock.tests.UsageCallCountTest.tooFewCalls":7,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":415,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":487,"org.easymock.tests.UsageThrowableTest.throwCheckedException":35,"org.easymock.tests.MockingTest.testStrictClassMocking":385,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":1,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":496,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":198,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":358,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":200,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":254,"org.easymock.tests.ObjectMethodsTest.testHashCode":381,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":525,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":224,"org.easymock.tests2.NameTest.nameForNiceMock":228,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":342,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":337,"org.easymock.tests2.DependencyTest.testInterfaceMocking":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":524,"org.easymock.samples.ExampleTest.addDocument":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":475,"org.easymock.tests2.DelegateToTest.testStubDelegate":259,"org.easymock.tests2.AnswerTest.stubAnswer":253,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":25,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":452,"org.easymock.tests.UsageVarargTest.varargLongAccepted":112,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":77,"org.easymock.tests.UsageExpectAndReturnTest.floatType":41,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":57,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":225,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":432,"org.easymock.tests.UsageThrowableTest.noUpperLimit":32,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":310,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":292,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":437,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":268,"org.easymock.tests2.SerializationTest.test":320,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":417,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":40,"org.easymock.tests2.UsageConstraintsTest.testSame":297,"org.easymock.samples.SupportTest.addDocument":182,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":443,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":327,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":462,"org.easymock.tests.GenericTest.testPackageScope":12,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":72,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":431,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":389,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":325,"org.easymock.tests2.NameTest.nameForMock":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":51,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":515,"org.easymock.tests2.UsageStrictMockTest.differentMethods":192,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":480,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":43,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":150,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":379,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":159,"org.easymock.tests2.MockedExceptionTest.testRealException":219,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":402,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":82,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":16,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":360,"org.easymock.tests2.NameTest.nameForStrictMock":227,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":450,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":528,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":243,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":440,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":517,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":419,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":311,"org.easymock.tests.ErrorMessageTest.testGetters":518,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":230,"org.easymock.tests2.UsageStrictMockTest.range":191,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":331,"org.easymock.tests2.UsageConstraintsTest.lessThan":318,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":76,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":466,"org.easymock.tests2.CaptureTest.testCaptureRightOne":273,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":485,"org.easymock.tests2.UsageConstraintsTest.testOr":298,"org.easymock.tests.UsageRangeTest.combination":156,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":240,"org.easymock.tests.UsageTest.wrongArguments":62,"org.easymock.tests2.MockBuilderTest.testWithConstructor":512,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":463,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":405,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":44,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":69,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":421,"org.easymock.tests.UsageVarargTest.varargShortAccepted":111,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":324,"org.easymock.tests2.UsageConstraintsTest.cmpTo":303,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":345,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":251,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":71,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":210,"org.easymock.tests2.CaptureTest.testCaptureFromStub":274,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":350,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":449,"org.easymock.tests.UsageTest.unexpectedCallWithArray":369,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":341,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":8,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":53,"org.easymock.tests2.CaptureTest.testCapture":535,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":26,"org.easymock.tests2.UsageConstraintsTest.constraints":293,"org.easymock.samples.ExampleTest.addAndChangeDocument":174,"org.easymock.tests.UsageStrictMockTest.testVerify":30,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":179,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":23,"org.easymock.tests2.CompareToTest.testGreateThan":536,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":371,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":269,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":98,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":45,"org.easymock.tests.LimitationsTest.abstractClass":361,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":104,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":99,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":519,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":283}}]
