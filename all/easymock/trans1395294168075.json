[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[44,45,46],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"result"}},{"position":"org.easymock.internal.LastControl:124","failures":[48],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1764","sourceCode":"return null","type":"CtReturnImpl"},"failures":[49,50],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[51,52],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[53,54,55,56,57],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[58,59,60],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:800","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[61,61,62,62,63,64,65,66,67,68,69,70,71,72,73,74,49,50,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:129","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"failures":[58,95],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[96],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[58,59,60,97],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[61,62,58,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,95,133,134],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[135,136,137,138,139,140,141,142,143,144,145,63,146,147,64,65,148,149,66,67,68,69,150,151,152,153,154,70,155,71,72,53,73,74,156,157,158,159,160,49,50,75,161,162,76,48,163,164,165,14,82,83,84,85,86,87,18,166,88,89,90,21,22,91,92,93],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[167,168,169,61,61,62,62,58,60,98,99,170,171,172,173,174,175,100,176,177,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,178,179,180,181,182,183,162,184,185,186,187,188,189,190,191,192,193,3,4,5,194,195,196,197,51,198,199,200,95,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,96,230,231,232,233,234,235,236],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[235],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[153,87],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[135,137,138,139,140,141,142,144,237,145,63,147],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[238,239,240,241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:40","failures":[242,243,54,244,245,246,55,247,76,248,249,164,250,56,251,252,253,254,166,88,255,256,257,258,259,260,261],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[262],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[155],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"expected"}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[263,264,265,248,164,266,252,254,267,268,269,166,255,258,259,270],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[248,249,255,256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"maximum"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[271,272,273,274],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"position":"org.easymock.internal.EasyMockProperties:67","failures":[275],"status":-1,"binaryOperator":"(\"Failed to read \" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,276,7,277,278,279,8,9,10,11,12,13,14,15,16,17,18,19,258,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[179,191,281,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[150],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[248,249,255,256],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":149,"org.easymock.tests2.UsageTest.argumentsOrdered":265,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":13,"org.easymock.tests2.StubTest.stubWithReturnValue":0,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":132,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":160,"org.easymock.tests2.SerializationTest.testAllMockedMethod":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":11,"org.easymock.tests.MockingTest.testPartialClassMocking":228,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":55,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":231,"org.easymock.tests.MockClassControlTest.testToString":219,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":35,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":113,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":97,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":23,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":46,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":109,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":273,"org.easymock.tests.UsageExpectAndThrowTest.object":33,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":157,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":92,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":93,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":151,"org.easymock.tests2.UsageTest.wrongArguments":263,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":89,"org.easymock.tests.UsageStrictMockTest.range":255,"org.easymock.samples.ConstructorCalledMockTest.testTax":61,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":205,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":174,"org.easymock.tests2.UsageConstraintsTest.testNull":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":34,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":180,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":224,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":199,"org.easymock.tests2.CaptureTest.testPrimitive":138,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":91,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":268,"org.easymock.tests.UsageTest.moreThanOneArgument":253,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":103,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":79,"org.easymock.tests2.CaptureTest.testCaptureNone":143,"org.easymock.tests.UsageUnorderedTest.message":164,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":262,"org.easymock.tests.UsageVerifyTest.twoReturns":259,"org.easymock.tests.UsageTest.argumentsOrdered":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":120,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":168,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":45,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":82,"org.easymock.tests2.CaptureTest.testCapture_2617107":137,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":194,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":22,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":172,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":198,"org.easymock.tests2.UsageConstraintsTest.any":153,"org.easymock.tests2.StubTest.stub":44,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":12,"org.easymock.tests.UsageExpectAndThrowTest.longType":26,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":210,"org.easymock.tests2.SerializationTest.testClass":58,"org.easymock.tests.LimitationsTest.mockNativeMethod":215,"org.easymock.tests2.DependencyTest.testClassMocking":192,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":234,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":152,"org.easymock.tests2.CaptureTest.testAnd":135,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":131,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":186,"org.easymock.tests2.MockedExceptionTest.testMockedException":4,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":108,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":17,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":27,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":47,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":96,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":178,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":200,"org.easymock.tests.MockingTest.testNicePartialClassMocking":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":38,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":182,"org.easymock.tests.LimitationsTest.mockFinalMethod":216,"org.easymock.tests2.CaptureTest.testCaptureLast":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":14,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":261,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":101,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":150,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":158,"org.easymock.tests.MockingTest.testTwoMocks":227,"org.easymock.tests2.DependencyTest.testClassMockingSupport":193,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":260,"org.easymock.tests2.CaptureTest.testCapture1_2446744":139,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":102,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":36,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":31,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":264,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":50,"org.easymock.tests.UsageThrowableTest.throwError":276,"org.easymock.tests.UsageStrictMockTest.differentMethods":256,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":208,"org.easymock.tests2.ConstraintsToStringTest.andToString":246,"org.easymock.tests2.MockBuilderTest.testCreateMockString":203,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":81,"org.easymock.tests.UsageExpectAndThrowTest.floatType":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":110,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":105,"org.easymock.tests.UsageVerifyTest.twoThrows":258,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":119,"org.easymock.samples.PartialClassMockTest.testGetArea":167,"org.easymock.tests2.CompareToTest.testLessOrEqual":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":83,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":188,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":114,"org.easymock.tests.LimitationsTest.privateConstructor":214,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":129,"org.easymock.tests2.UsageConstraintsTest.testNotNull":49,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":3,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":9,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":51,"org.easymock.tests2.MockBuilderTest.testCreateMock":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":122,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":57,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":184,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":32,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":64,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":241,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":124,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":71,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":20,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":176,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":155,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":144,"org.easymock.tests.UsageThrowableTest.throwCheckedException":278,"org.easymock.tests.MockClassControlTest.testEquals":223,"org.easymock.tests2.EasyMockSupportClassTest.testAll":106,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":233,"org.easymock.tests.MockingTest.testStrictClassMocking":225,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":56,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":40,"org.easymock.tests2.CaptureTest.testCaptureAll":136,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":18,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":177,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":100,"org.easymock.tests2.UsageConstraintsTest.testMatches":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":80,"org.easymock.tests.UsageVarargTest.allKinds":165,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":257,"org.easymock.samples.BasicClassMockTest.testPrintContent":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":126,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":8,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":15,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":88,"org.easymock.tests2.UsageConstraintsTest.greaterThan":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":107,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":189,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":212,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":190,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":183,"org.easymock.tests2.ConstraintsToStringTest.orToString":243,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":62,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":74,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":236,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":65,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":170,"org.easymock.tests2.SerializationTest.test":59,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":140,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":95,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":207,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":7,"org.easymock.tests2.UsageConstraintsTest.testSame":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":10,"org.easymock.tests2.CaptureTest.testCaptureFirst":147,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":274,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":111,"org.easymock.tests.GenericTest.testPackageScope":232,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":271,"org.easymock.tests2.UsageTest.moreThanOneArgument":242,"org.easymock.tests2.CaptureTest.testCapture2_2446744":146,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":202,"org.easymock.tests.GenericTest.testBridgedEquals":235,"org.easymock.tests2.NameTest.nameForMock":282,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":41,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":94,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":159,"org.easymock.tests2.UsageStrictMockTest.differentMethods":249,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":39,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":134,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":77,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":185,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":37,"org.easymock.tests2.MockedExceptionTest.testRealException":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":123,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":251,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":28,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":279,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":90,"org.easymock.tests.MockingTest.testNiceClassMocking":230,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":175,"org.easymock.tests.MockingTest.testClassMocking":226,"org.easymock.tests2.UsageConstraintsTest.testContains":70,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":5,"org.easymock.tests2.UsageConstraintsTest.testFind":66,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":19,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":197,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":48,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":181,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":163,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":173,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":209,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":156,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":162,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":195,"org.easymock.tests2.UsageStrictMockTest.range":248,"org.easymock.tests2.UsageConstraintsTest.lessThan":75,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":115,"org.easymock.tests2.CaptureTest.testCaptureRightOne":145,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":275,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":272,"org.easymock.tests2.UsageConstraintsTest.testOr":69,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":99,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":179,"org.easymock.tests.UsageTest.wrongArguments":267,"org.easymock.tests2.MockBuilderTest.testWithConstructor":130,"org.easymock.tests.MockClassControlTest.testHashCode":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":112,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":116,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":240,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":211,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":266,"org.easymock.tests2.UsageConstraintsTest.cmpTo":154,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":161,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":2,"org.easymock.tests.DefaultClassInstantiatorTest.object":206,"org.easymock.tests2.CaptureTest.testCaptureFromStub":63,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":196,"org.easymock.tests.UsageTest.unexpectedCallWithArray":254,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":252,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":117,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":277,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":166,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":133,"org.easymock.tests2.CaptureTest.testCapture":237,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":221,"org.easymock.tests2.UsageConstraintsTest.constraints":148,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":187,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":29,"org.easymock.tests2.ConstraintsToStringTest.notToString":244,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":245,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":125,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":141,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":84,"org.easymock.tests.LimitationsTest.abstractClass":213,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":85,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":171}}]
