[{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[3,4,5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[8,9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[90,80],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[91,92,93,94,95,96],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[97,98],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[91,92,93,94,95,96],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[100,101,102,103,24,104,31,32,33,105,106,107,107,108,108,50,109,56,57,59,60,61,110,62,111,63,64,65,67,68,69,70,72,73,112,113,114,78,115,79,116,80,81,117,82,118,83,84,85,86,89,119],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[120,121],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[122],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,123,16,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,100,140,141,142,17,19,143,144,20,21,22,23,101,102,145,146,147,24,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,25,26,178,27,28,29,30,179,180,181,182,183,184,185,186,31,32,33,34,35,36,37,38,39,187,188,40,41,189,42,43,44,190,45,46,47,48,49,191,192,193,194,195,196,105,106,107,108,50,197,51,198,52,53,199,54,200,201,55,3,202,4,203,204,205,120,206,121,5,207,208,209,109,210,211,212,56,58,59,60,61,62,111,64,213,214,215,216,217,218,219,67,68,69,70,71,72,73,220,221,222,223,224,74,76,225,112,226,113,227,228,229,230,231,232,233,234,235,236,237,238,239,240,77,241,242,243,6,8,244,245,246,9,7,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,114,79,116,80,81,265,83,84,85,86,87,88,266,267,268,269,270,271,272,273,274,89,275,276,277,278],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1582","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[279,280,281,282,283,284,285,286,287,288,1,289,290,291,11,12,13,14,15,292,293,123,16,124,294,295,125,126,127,128,129,130,131,296,297,298,90,299,300,301,2,302,303,304,305,306,307,308,309,122,310,311,312,313,314,315,316,317,318,319,320,321,322,132,133,134,135,136,137,138,139,100,323,140,141,324,142,91,17,325,18,19,143,144,20,21,22,23,326,101,102,103,327,328,145,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,146,147,348,349,350,351,352,98,353,354,355,24,356,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,357,171,172,358,173,174,175,176,177,25,26,359,360,361,178,362,27,28,29,30,179,180,181,182,183,184,185,363,364,365,366,367,368,369,370,186,371,372,373,104,374,375,376,377,99,378,379,380,381,382,383,384,385,386,387,388,34,35,36,37,38,39,187,188,40,41,189,42,43,44,190,45,46,47,48,49,389,191,94,390,391,392,393,394,395,192,193,194,195,396,397,398,399,196,105,106,50,197,51,198,52,53,199,54,400,200,201,55,3,202,4,203,401,204,205,120,206,121,5,402,403,207,208,209,109,210,211,212,56,57,58,59,60,61,110,404,62,405,111,63,64,65,406,407,408,213,214,215,216,409,410,411,412,217,218,413,66,219,67,68,70,71,414,220,221,222,223,415,224,74,416,75,76,225,226,113,227,228,229,230,231,232,233,234,235,236,237,238,239,417,240,77,418,419,241,242,243,6,8,420,244,245,246,9,7,247,10,248,249,250,251,252,253,254,255,256,257,258,259,421,260,261,262,263,422,423,424,425,426,264,427,428,429,430,431,432,114,78,115,433,79,116,80,81,117,82,118,434,435,436,437,438,265,439,440,441,442,443,444,445,446,83,447,84,448,449,450,451,85,452,453,454,455,456,86,457,458,87,88,459,266,460,267,268,461,269,270,462,463,271,464,465,272,466,273,467,274,275,468,469,276,277,278],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[296,90,100,101,102,103,145,24,104,31,32,33,105,106,107,107,108,108,50,109,56,57,59,60,61,110,62,111,63,64,65,67,68,69,70,72,73,112,113,114,470,78,115,79,116,80,81,117,82,471,118,83,84,85,86,89,119,472],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[97,98],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:159","sourceCode":"final java.lang.ClassCastException java.lang.ClassCastException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[473,474,3,202,4,203,401,204,205,120,121,475,5,402,403,207],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[294,295,126,127,128,129,130,131,138,141,347,147,348,349,350,351,352,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,362,369,389,392,208,209,109,210,212,460,463],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[138,139,91,18,98,371,476,477,94,390,393,394,75,461,464,465],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[89,478],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[138,139,91,18,19,20,98,363,364,365,371,479,477,480,481,94,390,393,394,75,76,236,78,117,82,118,461,464,465,272],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[277,278],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[284,296,90,100,326,101,102,103,327,328,145,329,330,331,332,333,334,354,355,24,356,372,373,104,31,32,33,377,381,382,383,384,385,386,388,105,106,107,107,108,108,50,208,209,109,56,57,59,60,61,110,62,482,405,111,63,64,65,406,407,409,410,67,68,69,70,72,73,112,113,483,114,470,78,115,433,79,116,80,81,484,117,82,485,471,118,445,446,486,83,487,447,84,448,449,488,489,450,490,491,451,492,85,452,453,454,455,456,86,493,494,89,478,495,119,496,472,497,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[254],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[499],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[107,108,500,501,69,73,414,112,502,503,504,484,505,506,445,446,486,83,487,447,84,448,449,488,489,450,490,491,451,492,85,452,453,454,455,456,86,493,494,89,478],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[100,326,101,102,327,328,145,329,330,331,332,333,334,354,355,24,356,372,373,104,31,32,33,377,381,382,383,384,385,386,388,105,106,107,108,50,208,209,109,56,57,59,60,61,110,62,405,111,63,64,65,406,407,409,410,67,68,69,70,72,73,113,445,83,447,448,449,450,451,452,453,456],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":8,"org.easymock.tests2.UsageTest.argumentsOrdered":465,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":389,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":237,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":122,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":270,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":197,"org.easymock.tests2.DelegateToTest.testReturnException":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":127,"org.easymock.tests.MockingTest.testPartialClassMocking":31,"org.easymock.tests.MockClassControlTest.testToString":329,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":408,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":286,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":489,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":148,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":84,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":88,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":247,"org.easymock.tests2.UsageTest.wrongArguments":461,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":16,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":444,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":194,"org.easymock.samples.ExampleTest.answerVsDelegate":198,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":90,"org.easymock.tests2.UsageConstraintsTest.testNull":245,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":376,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":59,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":236,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":334,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":495,"org.easymock.tests2.CaptureTest.testPrimitive":203,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":125,"org.easymock.tests.UsageTest.moreThanOneArgument":191,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":167,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":58,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":29,"org.easymock.tests.UsageTest.argumentsOrdered":394,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":288,"org.easymock.tests.UsageVarargTest.varargIntAccepted":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":11,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":114,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":431,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":15,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":265,"org.easymock.tests.ReplayStateInvalidUsageTest.times":343,"org.easymock.tests2.DependencyTest.testClassMocking":457,"org.easymock.tests2.AnswerTest.answer":275,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":316,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":223,"org.easymock.tests2.CaptureTest.testAnd":3,"org.easymock.tests2.UsageTest.strictResetToDefault":267,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":503,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":28,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":231,"org.easymock.tests2.DelegateToTest.testDelegate":241,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":163,"org.easymock.tests.LimitationsTest.mockFinalMethod":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":130,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":136,"org.easymock.tests2.DependencyTest.testClassMockingSupport":458,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":292,"org.easymock.tests2.CaptureTest.testCapture1_2446744":401,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":404,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":161,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":221,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":337,"org.easymock.tests.UsageThrowableTest.throwError":347,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":298,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":481,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":432,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":179,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":494,"org.easymock.samples.PartialClassMockTest.testGetArea":50,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":338,"org.easymock.tests.MockingTest.testInterfaceMocking":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":12,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":450,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":149,"org.easymock.tests2.UsageTest.niceToStrict":269,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":301,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":79,"org.easymock.tests2.MockBuilderTest.testCreateMock":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":454,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":441,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":157,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":95,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":232,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":398,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":180,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":192,"org.easymock.tests.UsageOverloadedMethodTest.overloading":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":456,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":252,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":369,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":42,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":323,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":251,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":121,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":357,"org.easymock.tests2.EasyMockSupportClassTest.testAll":83,"org.easymock.tests.MockClassControlTest.testEquals":333,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":102,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":165,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":134,"org.easymock.tests2.CaptureTest.testCaptureAll":202,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":222,"org.easymock.tests.MockNameTest.defaultName":353,"org.easymock.tests2.UsageConstraintsTest.testMatches":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":30,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":335,"org.easymock.samples.ExampleTest.voteForRemovals":54,"org.easymock.tests.UsageVarargTest.allKinds":177,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":135,"org.easymock.samples.BasicClassMockTest.testPrintContent":106,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":351,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":415,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":428,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":131,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":387,"org.easymock.tests2.UsageConstraintsTest.greaterThan":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":487,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":21,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":65,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":388,"org.easymock.samples.ExampleTest.voteForRemoval":52,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":406,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":218,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":485,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":299,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":110,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":460,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":100,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":307,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":229,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":126,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":417,"org.easymock.tests2.CaptureTest.testCaptureFirst":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":230,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":466,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":371,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":188,"org.easymock.tests2.CaptureTest.testCapture2_2446744":403,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":66,"org.easymock.tests2.UsageTest.moreThanOneArgument":268,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":317,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":176,"org.easymock.tests.GenericTest.testBridgedEquals":327,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":364,"org.easymock.tests.UsageExpectAndReturnTest.longType":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":132,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":227,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":471,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":166,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":421,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":399,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":27,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":360,"org.easymock.tests.UsageCallCountTest.tooManyCalls":365,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":455,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":40,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":443,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":153,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":350,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":68,"org.easymock.tests.MockingTest.testNiceClassMocking":377,"org.easymock.tests.MockingTest.testClassMocking":373,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":470,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":181,"org.easymock.tests2.UsageConstraintsTest.testContains":250,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":109,"org.easymock.tests2.UsageConstraintsTest.testFind":244,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":141,"org.easymock.tests.MockTypeTest.fromEasyMockClass":297,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":274,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":324,"org.easymock.tests.UsageExpectAndReturnTest.object":189,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":235,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":172,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":282,"org.easymock.tests.UsageTest.exactCallCountByLastCall":395,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":0,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":305,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":1,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":285,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":478,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":168,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":46,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":423,"org.easymock.tests.MockClassControlTest.testHashCode":332,"org.easymock.tests2.EasyMockSupportTest.testVerify":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":491,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":289,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":397,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":366,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":479,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":220,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":459,"org.easymock.tests.UsageVarargTest.varargCharAccepted":171,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":380,"org.easymock.tests2.CaptureTest.testCaptureMultiple":474,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":322,"org.easymock.tests2.UsageTest.openCallCountByLastCall":462,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":238,"org.easymock.tests.DefaultClassInstantiatorTest.object":381,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":396,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":280,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":451,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":155,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":498,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":348,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":437,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":422,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":63,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":331,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":154,"org.easymock.tests.CapturesMatcherTest.test":473,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":47,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":86,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":330,"org.easymock.tests2.UsageTest.resumeIfFailure":272,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":129,"org.easymock.tests2.StubTest.stubWithReturnValue":212,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":504,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":41,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":260,"org.easymock.tests2.SerializationTest.testAllMockedMethod":113,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":315,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":96,"org.easymock.samples.SupportTest.voteForRemovals":55,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":326,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":425,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":160,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":321,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":468,"org.easymock.tests.UsageExpectAndThrowTest.object":158,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":287,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":258,"org.easymock.tests2.DelegateToTest.testWrongClass":418,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":25,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":26,"org.easymock.samples.ConstructorCalledMockTest.testTax":107,"org.easymock.tests.UsageStrictMockTest.range":18,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":411,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":234,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":159,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":445,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":393,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":345,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":193,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":92,"org.easymock.tests2.CaptureTest.testCaptureNone":206,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":379,"org.easymock.tests.UsageUnorderedTest.message":98,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":480,"org.easymock.tests.UsageVerifyTest.twoReturns":139,"org.easymock.tests.UsageVarargTest.varargByteAccepted":175,"org.easymock.tests2.ThreadingTest.testThreadSafe":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":452,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":185,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":105,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":283,"org.easymock.tests2.CaptureTest.testCapture_2617107":4,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":319,"org.easymock.tests2.UsageConstraintsTest.any":248,"org.easymock.tests2.StubTest.stub":211,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":342,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":361,"org.easymock.tests.UsageExpectAndThrowTest.longType":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":320,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":385,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":341,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":416,"org.easymock.tests2.SerializationTest.testClass":112,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":264,"org.easymock.tests.LimitationsTest.mockNativeMethod":24,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":103,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":49,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":497,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":436,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":225,"org.easymock.tests2.NameTest.nameForMocksControl":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":438,"org.easymock.tests2.MockedExceptionTest.testMockedException":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":447,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":392,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":467,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":152,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":33,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":56,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":81,"org.easymock.tests.MockingTest.testNicePartialClassMocking":32,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":61,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":434,"org.easymock.tests2.CaptureTest.testCaptureLast":120,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":293,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":73,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":259,"org.easymock.tests.MockingTest.testTwoMocks":104,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":414,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":156,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":464,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":262,"org.easymock.samples.ExampleTest.removeNonExistingDocument":400,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":440,"org.easymock.tests.UsageStrictMockTest.differentMethods":19,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":339,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":424,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":383,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":413,"org.easymock.tests2.MockBuilderTest.testCreateMockString":118,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":448,"org.easymock.tests.UsageExpectAndThrowTest.floatType":150,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":486,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":276,"org.easymock.tests.UsageVerifyTest.twoThrows":138,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":85,"org.easymock.samples.ExampleTest.voteAgainstRemoval":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":310,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":64,"org.easymock.tests.LimitationsTest.privateConstructor":355,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":501,"org.easymock.tests2.UsageConstraintsTest.testNotNull":261,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":208,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":352,"org.easymock.tests2.UsageTest.defaultResetToNice":271,"org.easymock.samples.ExampleTest.voteAgainstRemovals":51,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":311,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":435,"org.easymock.tests.UsageVarargTest.differentLength":358,"org.easymock.tests2.CallbackTest.callback":266,"org.easymock.tests2.UsageConstraintsTest.equals":420,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":482,"org.easymock.tests.UsageTest.openCallCountByLastCall":391,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":242,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":294,"org.easymock.tests.UsageCallCountTest.tooFewCalls":183,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":195,"org.easymock.tests.UsageThrowableTest.throwCheckedException":349,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":93,"org.easymock.tests.MockingTest.testStrictClassMocking":372,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":72,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":362,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":439,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":69,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":344,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":71,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":278,"org.easymock.tests.ObjectMethodsTest.testHashCode":281,"org.easymock.tests2.NameTest.nameForNiceMock":215,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":219,"org.easymock.tests2.DependencyTest.testInterfaceMocking":87,"org.easymock.samples.ExampleTest.addDocument":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.DelegateToTest.testStubDelegate":77,"org.easymock.tests2.AnswerTest.stubAnswer":277,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":17,"org.easymock.tests.UsageVarargTest.varargLongAccepted":174,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":309,"org.easymock.tests.UsageExpectAndReturnTest.floatType":36,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":48,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":89,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":430,"org.easymock.tests.UsageThrowableTest.noUpperLimit":146,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":256,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":370,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":243,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":409,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":204,"org.easymock.tests2.SerializationTest.test":226,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":382,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":35,"org.easymock.tests2.UsageConstraintsTest.testSame":246,"org.easymock.samples.SupportTest.addDocument":201,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":449,"org.easymock.tests.GenericTest.testPackageScope":101,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":304,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":429,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":375,"org.easymock.tests2.NameTest.nameForMock":213,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":43,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":506,"org.easymock.tests2.UsageStrictMockTest.differentMethods":76,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":405,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":38,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":162,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":279,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":23,"org.easymock.tests2.MockedExceptionTest.testRealException":210,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":300,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":476,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":499,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":124,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":346,"org.easymock.tests2.NameTest.nameForStrictMock":214,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":433,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":273,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":60,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":410,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":384,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":97,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":257,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":78,"org.easymock.tests2.UsageStrictMockTest.range":75,"org.easymock.tests2.UsageConstraintsTest.lessThan":263,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":426,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":483,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":490,"org.easymock.tests2.CaptureTest.testCaptureRightOne":5,"org.easymock.tests2.UsageConstraintsTest.testOr":9,"org.easymock.tests.UsageRangeTest.combination":20,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":57,"org.easymock.tests.UsageTest.wrongArguments":390,"org.easymock.tests2.MockBuilderTest.testWithConstructor":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":488,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":145,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":39,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":2,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":386,"org.easymock.tests.UsageVarargTest.varargShortAccepted":173,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":363,"org.easymock.tests2.UsageConstraintsTest.cmpTo":249,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":303,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":463,"org.easymock.tests2.CaptureTest.testCaptureFromStub":402,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":336,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":115,"org.easymock.tests.UsageTest.unexpectedCallWithArray":94,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":91,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":184,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":505,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":190,"org.easymock.tests2.CaptureTest.testCapture":475,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":325,"org.easymock.samples.ExampleTest.addAndChangeDocument":200,"org.easymock.tests.UsageStrictMockTest.testVerify":144,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":196,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":133,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":205,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":472,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":13,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":187,"org.easymock.tests.LimitationsTest.abstractClass":354,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":14,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":233}}]
