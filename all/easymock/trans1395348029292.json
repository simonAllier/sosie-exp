[{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"failures":[35,36,16,17,37,38,39,40,18,41,42,43,44,45,46,47,48,49,50,51,52,53,54,20,55,56,57,58,21,59,60,61,22,62,63,64,65,66,67,68,69,70,71,72,73,74,75,23,24,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,25,109,26,27,110,28,111,29,30,112,113,114,115,31,116,117,32,118,119,33,120,121,122,123,124,34,125,126,127,15,128,129,130,131,132,133,134,135,136,137,138,139],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[140,141,142,88,143,144,145,146,147,148],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[149,150,151,152,2,3,153,154,13,14,155,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[156,157],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:109","sourceCode":"final java.util.Stack<org.easymock.IArgumentMatcher> java.util.Stack<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.get()","type":"CtLocalVariableImpl"},"failures":[110,30,158],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[159,160,161],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:520","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[162,163,86,87],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:153","failures":[164,165,166,167,168,169,170,171,172,173,93,174],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[175,176,177],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[35,36,178,16,17,179,180,37,181,182,183,184,185,186,187,188,189,190,156,38,39,164,159,40,18,42,43,165,166,167,168,169,170,191,192,140,193,194,195,196,197,198,199,200,201,46,47,48,202,203,49,50,51,52,53,204,205,206,207,208,209,210,211,212,213,214,215,20,216,55,217,218,219,220,221,56,222,57,223,58,21,59,171,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,60,249,61,22,250,251,62,252,63,64,65,66,67,68,253,254,255,69,256,257,258,259,260,261,262,263,142,264,265,266,267,268,269,270,162,163,72,73,74,271,75,272,23,24,273,274,77,78,275,276,277,278,80,279,280,81,281,82,85,86,282,87,88,144,283,145,89,90,91,284,92,172,173,93,174,94,95,96,97,98,99,100,102,103,104,105,285,146,286,287,288,289,161,106,290,291,107,292,108,25,293,109,26,27,110,28,111,29,30,112,113,114,115,31,116,117,32,118,119,33,120,121,122,294,123,124,34,125,126,127,128,295,129,130,296,131,132,297,298,133,134,135,136,137,138,139,147,148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[299],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[300],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:52","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double.valueOf(0))","type":"CtInvocationImpl"},"failures":[170,197,198,202,204,219,222,301,226,227,234,241,302],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[36,178,179,180,20,216,55,217,248,60,61,22,74,271,273,274,303,304,305,306,107,108,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[294,124,147,148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[27,110,30,112,158,120,129,296,136],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[120],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[307],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[308],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[36,178,179,180,20,216,55,217,248,60,61,22,309,310,311,74,271,273,274,303,304,305,306,107,108,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[90,91],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":110,"org.easymock.tests2.UsageTest.argumentsOrdered":274,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":168,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":272,"org.easymock.tests2.StubTest.stubWithReturnValue":106,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":2,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":203,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":123,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":163,"org.easymock.tests2.SerializationTest.testAllMockedMethod":295,"org.easymock.tests2.DelegateToTest.testReturnException":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":166,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":5,"org.easymock.samples.SupportTest.voteForRemovals":262,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":45,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":226,"org.easymock.tests.UsageExpectAndThrowTest.object":236,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":309,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":121,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":127,"org.easymock.tests2.DelegateToTest.testWrongClass":288,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":7,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":218,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":219,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":113,"org.easymock.tests2.UsageTest.wrongArguments":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":38,"org.easymock.tests.UsageStrictMockTest.range":61,"org.easymock.samples.ConstructorCalledMockTest.testTax":149,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":301,"org.easymock.samples.ExampleTest.answerVsDelegate":142,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":101,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":275,"org.easymock.tests2.UsageConstraintsTest.testNull":111,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":280,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":237,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":192,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":103,"org.easymock.tests2.CaptureTest.testPrimitive":131,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":40,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":245,"org.easymock.tests.UsageTest.moreThanOneArgument":36,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":179,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":279,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":56,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":71,"org.easymock.tests2.CaptureTest.testCaptureNone":134,"org.easymock.tests.UsageUnorderedTest.message":217,"org.easymock.tests.UsageVerifyTest.twoReturns":55,"org.easymock.tests.UsageVarargTest.varargByteAccepted":189,"org.easymock.tests2.ThreadingTest.testThreadSafe":89,"org.easymock.tests.UsageTest.argumentsOrdered":180,"org.easymock.tests.UsageVarargTest.varargIntAccepted":183,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":212,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":160,"org.easymock.tests2.CaptureTest.testCapture_2617107":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":253,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":159,"org.easymock.tests2.UsageConstraintsTest.any":114,"org.easymock.tests2.StubTest.stub":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":256,"org.easymock.tests.UsageExpectAndThrowTest.longType":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":167,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":175,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":292,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":87,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests.LimitationsTest.mockNativeMethod":215,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":86,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":208,"org.easymock.tests2.AnswerTest.answer":88,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":158,"org.easymock.tests2.CaptureTest.testAnd":129,"org.easymock.tests2.UsageTest.strictResetToDefault":73,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":293,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":152,"org.easymock.tests2.NameTest.nameForMocksControl":306,"org.easymock.tests2.MockedExceptionTest.testMockedException":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":221,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":98,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":17,"org.easymock.tests2.DelegateToTest.testDelegate":289,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":230,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":278,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":241,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":6,"org.easymock.tests2.CaptureTest.testCaptureLast":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":169,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":112,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":122,"org.easymock.tests2.CaptureTest.testCapture1_2446744":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":197,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":234,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":273,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":34,"org.easymock.tests.UsageThrowableTest.throwError":62,"org.easymock.tests.UsageStrictMockTest.differentMethods":22,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":91,"org.easymock.tests.UsageExpectAndThrowTest.floatType":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":57,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":118,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":144,"org.easymock.tests.UsageVerifyTest.twoThrows":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":155,"org.easymock.tests2.CompareToTest.testLessOrEqual":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":254,"org.easymock.samples.ExampleTest.voteAgainstRemoval":265,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":70,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":227,"org.easymock.tests2.UsageTest.niceToStrict":75,"org.easymock.tests2.UsageConstraintsTest.testNotNull":124,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":68,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":172,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":79,"org.easymock.tests2.UsageTest.defaultResetToNice":76,"org.easymock.samples.ExampleTest.voteAgainstRemovals":263,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":204,"org.easymock.tests.UsageVarargTest.differentLength":186,"org.easymock.tests2.CallbackTest.callback":146,"org.easymock.tests2.UsageConstraintsTest.equals":157,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":154,"org.easymock.tests.UsageTest.openCallCountByLastCall":16,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":235,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":99,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":164,"org.easymock.tests.UsageCallCountTest.tooFewCalls":210,"org.easymock.tests.UsageOverloadedMethodTest.overloading":58,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":194,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":117,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":276,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":50,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":116,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":176,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":135,"org.easymock.tests.UsageThrowableTest.throwCheckedException":65,"org.easymock.tests2.EasyMockSupportClassTest.testAll":282,"org.easymock.tests.MockClassControlTest.testEquals":191,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":258,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":243,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":302,"org.easymock.tests2.CaptureTest.testCaptureAll":130,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":171,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":308,"org.easymock.tests2.UsageConstraintsTest.testMatches":32,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":277,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":222,"org.easymock.samples.ExampleTest.voteForRemovals":267,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":10,"org.easymock.tests2.NameTest.nameForNiceMock":305,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":92,"org.easymock.tests.UsageVarargTest.allKinds":156,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":20,"org.easymock.tests2.DependencyTest.testInterfaceMocking":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":9,"org.easymock.samples.BasicClassMockTest.testPrintContent":270,"org.easymock.samples.ExampleTest.addDocument":266,"org.easymock.tests2.DelegateToTest.testStubDelegate":287,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":67,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":290,"org.easymock.tests2.AnswerTest.stubAnswer":283,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":170,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":60,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":12,"org.easymock.tests2.UsageConstraintsTest.greaterThan":119,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":41,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":85,"org.easymock.tests.UsageVarargTest.varargLongAccepted":188,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":250,"org.easymock.samples.ExampleTest.voteForRemoval":264,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":90,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":207,"org.easymock.tests.UsageExpectAndReturnTest.floatType":199,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":13,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":150,"org.easymock.tests.UsageThrowableTest.noUpperLimit":252,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":33,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":260,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":72,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":26,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":297,"org.easymock.tests2.SerializationTest.test":128,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":3,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":96,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":63,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":198,"org.easymock.tests2.UsageConstraintsTest.testSame":29,"org.easymock.samples.SupportTest.addDocument":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":165,"org.easymock.tests2.CaptureTest.testCaptureFirst":139,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":97,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":78,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":48,"org.easymock.tests.GenericTest.testPackageScope":257,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":284,"org.easymock.tests2.UsageTest.moreThanOneArgument":74,"org.easymock.tests2.CaptureTest.testCapture2_2446744":138,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":190,"org.easymock.tests.GenericTest.testBridgedEquals":259,"org.easymock.tests2.NameTest.nameForMock":303,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":213,"org.easymock.tests.UsageExpectAndReturnTest.longType":200,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":94,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":51,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":294,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":242,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":220,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":201,"org.easymock.tests.UsageCallCountTest.tooManyCalls":214,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":240,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":195,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":43,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":209,"org.easymock.tests2.MockedExceptionTest.testRealException":174,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":202,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":4,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":231,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":141,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":66,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":39,"org.easymock.tests2.NameTest.nameForStrictMock":304,"org.easymock.tests2.UsageConstraintsTest.testContains":31,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":93,"org.easymock.tests2.UsageConstraintsTest.testFind":28,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":21,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":147,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":81,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":246,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":148,"org.easymock.tests.UsageExpectAndReturnTest.object":49,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":310,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":120,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":82,"org.easymock.tests2.UsageStrictMockTest.range":108,"org.easymock.tests2.UsageConstraintsTest.lessThan":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":8,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":185,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":196,"org.easymock.tests.UsageTest.exactCallCountByLastCall":37,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":59,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":95,"org.easymock.tests2.CaptureTest.testCaptureRightOne":136,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":224,"org.easymock.tests2.UsageConstraintsTest.testOr":30,"org.easymock.tests.UsageRangeTest.combination":18,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":14,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":205,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":80,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":181,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":193,"org.easymock.tests.UsageTest.wrongArguments":178,"org.easymock.tests2.MockBuilderTest.testWithConstructor":151,"org.easymock.tests2.EasyMockSupportTest.testVerify":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":46,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":19,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":225,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":140,"org.easymock.tests.UsageVarargTest.varargShortAccepted":187,"org.easymock.tests2.UsageConstraintsTest.cmpTo":115,"org.easymock.tests.UsageVarargTest.varargCharAccepted":184,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":143,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":291,"org.easymock.tests2.UsageTest.openCallCountByLastCall":23,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":24,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":105,"org.easymock.tests2.CaptureTest.testCaptureFromStub":137,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":0,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":233,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":248,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":64,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":211,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":53,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":249,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":83,"org.easymock.tests2.UsageConstraintsTest.constraints":27,"org.easymock.samples.ExampleTest.addAndChangeDocument":268,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":232,"org.easymock.tests.CapturesMatcherTest.test":300,"org.easymock.tests.UsageStrictMockTest.testVerify":251,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":206,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":162,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":247,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":298,"org.easymock.tests2.UsageTest.resumeIfFailure":77,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":255,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":47,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":69,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":44,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":100,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":182}}]
