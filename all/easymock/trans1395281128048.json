[{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[18,19,20,21,22,23,24,25,26,27],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[19,20,21,22,23,28,29,26,27],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[30,31,32,33,34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[36,37,38,39,40],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[18,19,20,21,22,23,24,25,26,27],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Find:41","failures":[41],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[42],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[36,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[43,44,42],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"matched","value":"matched"}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[45,46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[47,48,49],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1877","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.CompareEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[36,40],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[65,66,67,68,69,70,30,5,18,71,72,73,74,75,76,77,78,79,80,81,82,50,83,45,84,85,86,87,88,89,90,91,92,7,93,33,34,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,17,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,20,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,35,170,171,172,173,174,175,176,177,37,178,179,54,180,55,56,181,58,182,183,184,185,186,187,188,12,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,15,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[155,156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:224","sourceCode":"return (java.lang.reflect.Field == null) || (((java.lang.reflect.Field.getModifiers()) & ((java.lang.reflect.Modifier.int) + (java.lang.reflect.Modifier.int))) != 0)","type":"CtReturnImpl"},"failures":[252,253,254,255,256,257,258,259,260,261],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[20,153,262,263],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[98,264,265,266],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:269","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[50,83,88,89,107,117,173,174,180,267,58,182,185,186,268,269,270,271],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[272,273,30,31,31,32,32,5,18,74,75,76,77,79,80,93,33,34,94,20,262,274,275,276,157,277,158,278,159,160,279,161,280,281,162,163,165,166,167,282,168,283,169,35,170,37,38,39,284,285,188,286,287,249,250,251,288],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[7,55,12,191,289,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[110,221],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","toMock":"toMock"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[290,291,50,83,45,84,51,87,292,52,53,91,92,102,115,142,146,147,150,157,279,161,281,163,169,170,174,54,55,56,293,57,294,58,182,183,59,60,61,62,187,295,63,296,297,298,299,300,301],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":103,"org.easymock.tests2.UsageTest.argumentsOrdered":53,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":183,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":11,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":292,"org.easymock.tests2.StubTest.stubWithReturnValue":7,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":26,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":210,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":122,"org.easymock.tests2.SerializationTest.testAllMockedMethod":262,"org.easymock.tests2.DelegateToTest.testReturnException":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":9,"org.easymock.tests.MockingTest.testPartialClassMocking":249,"org.easymock.samples.SupportTest.voteForRemovals":70,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":36,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":241,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":229,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":33,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":266,"org.easymock.tests.UsageExpectAndThrowTest.object":239,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":73,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":21,"org.easymock.tests2.DelegateToTest.testWrongClass":128,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":178,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":179,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":193,"org.easymock.tests2.UsageTest.wrongArguments":51,"org.easymock.tests.UsageStrictMockTest.range":58,"org.easymock.samples.ConstructorCalledMockTest.testTax":31,"org.easymock.samples.ExampleTest.answerVsDelegate":66,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":74,"org.easymock.tests2.UsageConstraintsTest.testNull":105,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":240,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":165,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":150,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":159,"org.easymock.tests2.CaptureTest.testPrimitive":133,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":195,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":248,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":61,"org.easymock.tests.UsageTest.moreThanOneArgument":184,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":164,"org.easymock.tests2.CaptureTest.testCaptureNone":136,"org.easymock.tests.UsageUnorderedTest.message":54,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":300,"org.easymock.tests.UsageVerifyTest.twoReturns":56,"org.easymock.tests2.ThreadingTest.testThreadSafe":95,"org.easymock.tests.UsageTest.argumentsOrdered":62,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":196,"org.easymock.tests2.CaptureTest.testCapture_2617107":132,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":275,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":289,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":261,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":278,"org.easymock.tests2.UsageConstraintsTest.any":110,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":200,"org.easymock.tests.UsageExpectAndThrowTest.longType":232,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":10,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":291,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":81,"org.easymock.tests2.SerializationTest.testClass":20,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":71,"org.easymock.tests.LimitationsTest.mockNativeMethod":188,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":220,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":39,"org.easymock.tests2.AnswerTest.answer":154,"org.easymock.tests2.CaptureTest.testAnd":130,"org.easymock.tests2.UsageTest.strictResetToDefault":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":283,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":253,"org.easymock.tests2.MockedExceptionTest.testMockedException":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":145,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":176,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":186,"org.easymock.tests2.DelegateToTest.testDelegate":129,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":251,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":233,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":160,"org.easymock.tests.MockingTest.testNicePartialClassMocking":250,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":244,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":167,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":252,"org.easymock.tests2.CaptureTest.testCaptureLast":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":12,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":80,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":108,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":120,"org.easymock.tests.MockingTest.testTwoMocks":287,"org.easymock.tests2.CaptureTest.testCapture1_2446744":134,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":237,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":52,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":124,"org.easymock.tests.UsageThrowableTest.throwError":222,"org.easymock.tests.UsageStrictMockTest.differentMethods":182,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":97,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":301,"org.easymock.tests2.MockBuilderTest.testCreateMockString":281,"org.easymock.tests.UsageExpectAndThrowTest.floatType":231,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":115,"org.easymock.tests.UsageVerifyTest.twoThrows":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":34,"org.easymock.samples.PartialClassMockTest.testGetArea":30,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":197,"org.easymock.samples.ExampleTest.voteAgainstRemoval":68,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":230,"org.easymock.tests2.UsageTest.niceToStrict":87,"org.easymock.tests2.UsageConstraintsTest.testNotNull":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":228,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":3,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":42,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":158,"org.easymock.tests2.MockBuilderTest.testCreateMock":279,"org.easymock.tests2.UsageTest.defaultResetToNice":90,"org.easymock.samples.ExampleTest.voteAgainstRemovals":65,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":216,"org.easymock.tests.UsageVarargTest.differentLength":296,"org.easymock.tests2.CallbackTest.callback":45,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":254,"org.easymock.tests.UsageTest.openCallCountByLastCall":185,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":238,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":146,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":14,"org.easymock.tests.UsageOverloadedMethodTest.overloading":172,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":113,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":212,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":77,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":171,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":17,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":137,"org.easymock.tests.UsageThrowableTest.throwCheckedException":225,"org.easymock.tests2.EasyMockSupportClassTest.testAll":93,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":38,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":246,"org.easymock.tests2.CaptureTest.testCaptureAll":131,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":79,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":15,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":76,"org.easymock.tests2.UsageConstraintsTest.testMatches":114,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":78,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":156,"org.easymock.samples.ExampleTest.voteForRemovals":69,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":28,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":99,"org.easymock.tests2.DependencyTest.testInterfaceMocking":72,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":180,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":23,"org.easymock.samples.BasicClassMockTest.testPrintContent":273,"org.easymock.tests2.DelegateToTest.testStubDelegate":127,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":227,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":290,"org.easymock.tests2.AnswerTest.stubAnswer":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":13,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":25,"org.easymock.tests2.UsageConstraintsTest.greaterThan":116,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":175,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":170,"org.easymock.samples.ExampleTest.voteForRemoval":67,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":96,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":219,"org.easymock.tests.UsageExpectAndReturnTest.floatType":203,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":282,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":18,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":32,"org.easymock.tests.UsageThrowableTest.noUpperLimit":270,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":260,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":117,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":286,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":84,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":101,"org.easymock.tests2.SerializationTest.test":153,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":27,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":143,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":223,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":202,"org.easymock.tests2.UsageConstraintsTest.testSame":106,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":8,"org.easymock.tests2.CaptureTest.testCaptureFirst":140,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":144,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":92,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":264,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":64,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":208,"org.easymock.tests.GenericTest.testPackageScope":37,"org.easymock.tests2.UsageTest.moreThanOneArgument":86,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":98,"org.easymock.tests2.CaptureTest.testCapture2_2446744":139,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":161,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":259,"org.easymock.tests.GenericTest.testBridgedEquals":40,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":298,"org.easymock.tests.UsageExpectAndReturnTest.longType":204,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":141,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":280,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":247,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":213,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":121,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":245,"org.easymock.tests2.UsageStrictMockTest.differentMethods":83,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":205,"org.easymock.tests.UsageCallCountTest.tooManyCalls":299,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":243,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":177,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":271,"org.easymock.tests2.MockedExceptionTest.testRealException":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":209,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":256,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":234,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":46,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":226,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":194,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":75,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":276,"org.easymock.tests2.UsageConstraintsTest.testContains":112,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":5,"org.easymock.tests2.UsageConstraintsTest.testFind":104,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":173,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":44,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":166,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":293,"org.easymock.tests.UsageExpectAndReturnTest.object":211,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":118,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":168,"org.easymock.tests.ErrorMessageTest.testGetters":16,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":255,"org.easymock.tests2.UsageStrictMockTest.range":50,"org.easymock.tests2.UsageConstraintsTest.lessThan":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":22,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":258,"org.easymock.tests.UsageTest.exactCallCountByLastCall":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":221,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":24,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":142,"org.easymock.tests2.CaptureTest.testCaptureRightOne":138,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":268,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":265,"org.easymock.tests2.ConstraintsToStringTest.findToString":41,"org.easymock.tests2.UsageConstraintsTest.testOr":107,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":19,"org.easymock.tests.UsageRangeTest.combination":174,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":217,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":163,"org.easymock.tests.UsageTest.wrongArguments":60,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":190,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":288,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":214,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":269,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":49,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":189,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":297,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":295,"org.easymock.tests2.UsageConstraintsTest.cmpTo":111,"org.easymock.tests2.UsageTest.openCallCountByLastCall":88,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":89,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":43,"org.easymock.tests.DefaultClassInstantiatorTest.object":47,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":152,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":277,"org.easymock.tests.UsageTest.unexpectedCallWithArray":59,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":63,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":224,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":57,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":257,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":215,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":294,"org.easymock.tests2.UsageConstraintsTest.constraints":102,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":169,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":235,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":94,"org.easymock.tests2.UsageTest.resumeIfFailure":91,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":274,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":198,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":284,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":199,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":192,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":147}}]
