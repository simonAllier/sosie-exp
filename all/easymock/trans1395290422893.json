[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[0,1,2,3,3,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[5,55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[56,57,58,59],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[60,61,62,63,64,65,66,67,68,1,2,69,70,71,72,73,74,75,76,6,77,78,79,80,81,82,83,84,85,86,87,88,89,35,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,52,54,107,108,109,110,111,112,113],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[5,7,114,115,116,117,118,119,120,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"ret","clazz":"clazz"}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[0,60,61,121,62,63,64,65,122,66,67,68,1,2,69,3,4,123,70,71,124,125,72,73,74,75,126,127,128,129,76,5,130,6,131,132,133,134,135,136,77,137,7,114,138,139,140,141,142,143,144,145,146,147,56,148,149,150,151,152,57,153,154,155,156,157,158,159,78,160,161,162,58,163,164,165,166,167,168,8,9,10,11,169,170,12,13,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,14,199,200,15,201,202,203,204,205,206,207,208,209,16,210,211,212,213,214,17,215,216,217,218,219,220,221,79,222,223,224,225,226,227,228,229,18,19,230,20,21,22,23,231,24,232,233,25,26,27,28,234,235,236,237,238,239,240,241,242,80,243,81,82,83,84,244,245,246,247,248,249,250,85,251,252,253,254,255,86,87,88,89,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,30,280,31,33,34,281,35,36,37,38,282,55,39,40,42,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,90,307,308,309,310,311,312,91,43,313,314,315,316,44,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,45,350,92,93,94,351,95,96,352,97,98,99,100,101,353,354,355,356,357,358,359,46,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,47,48,49,411,50,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,102,437,438,103,104,105,106,439,440,51,52,53,441,54,442,443,444,445,446,447,448,449,450,451,107,108,109,110,452,111,112,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,113,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[138,155,160,518],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[140,154,217,220,221,79,225,226,227,228,19,26,28,242,81,82,83,249,252,253,86,261,33,39,40,42,91,519,520,352,395,397,398,401,402,403,415,521,522,436,437,103,104,105,452,111,112,454,455],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[150,523,24],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[125,129,287,293,299,303,305,91,389,395,447,489,495,501,505,507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MockBuilder:223","failures":[15,23,235,278,31,36],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[440],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[60,61,121,62,63,64,65,66,67,68,1,2,69,123,70,74,75,127,76,5,130,132,133,134,136,77,137,141,144,146,147,161,172,175,176,183,217,218,219,221,79,222,223,227,228,19,21,27,236,238,239,241,80,243,81,82,83,84,246,247,248,249,250,85,251,252,253,255,86,87,88,261,271,35,37,38,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,90,307,308,309,310,311,312,91,92,93,94,95,96,97,98,99,100,101,353,354,355,356,357,358,366,367,368,369,370,395,396,399,400,403,423,424,425,426,427,434,102,438,103,104,105,106,52,442,443,444,453,454,455,456,458,459,484,485,113,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[0,61,62,63,65,68,123,70,124,125,74,75,126,127,129,76,5,130,133,137,7,138,139,140,141,143,144,145,146,147,56,149,150,151,152,57,153,154,155,156,157,158,159,160,161,162,58,8,9,10,11,170,12,13,176,183,14,15,16,17,217,218,219,221,222,223,224,227,228,18,19,230,20,21,22,24,26,27,28,236,238,239,240,241,243,82,83,246,247,248,249,250,85,251,252,253,254,255,86,87,88,271,30,33,35,37,38,40,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,45,395,396,399,400,403,48,49,50,415,416,417,418,423,424,425,426,427,432,434,438,104,105,51,53,442,443,444,453,455,461,464,465,484,485,487,508,509],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[0,60,61,121,62,63,64,65,122,66,67,68,1,2,69,3,3,4,4,123,70,71,124,125,72,73,74,75,126,127,128,129,76,5,130,6,131,132,133,134,135,136,77,137,7,138,139,140,141,143,144,145,146,147,56,149,150,151,152,57,153,154,155,156,157,158,159,78,160,161,162,58,8,9,10,11,170,12,13,172,173,174,175,176,177,183,14,15,16,17,217,218,219,220,221,79,222,223,224,225,226,227,228,18,19,230,20,21,22,23,24,25,26,27,28,236,238,239,240,241,242,80,243,81,82,83,84,246,247,248,249,250,85,251,252,253,254,255,86,87,88,89,257,258,259,260,261,262,263,264,265,271,278,279,30,280,31,33,35,36,37,38,39,40,42,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,90,307,308,309,310,311,312,91,319,45,92,93,94,95,96,352,97,98,99,100,101,353,354,355,356,357,358,359,46,360,361,362,363,364,365,366,367,368,369,370,387,393,395,396,397,398,399,400,401,402,403,404,405,406,407,408,47,48,49,50,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,102,437,438,103,104,105,106,439,51,52,53,54,442,443,444,445,446,447,448,449,450,451,107,108,109,110,452,111,112,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,472,473,474,475,476,477,478,479,480,481,482,483,484,485,113,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,512,513,514],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[114,115,116,117,524,525,120],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[61,121,62,63,64,65,122,66,123,70,71,124,125,72,73,74,75,126,127,128,129,76,5,130,6,132,133,134,136,77,137,7,138,139,140,141,143,144,145,146,147,56,149,150,151,152,57,153,154,155,156,157,158,159,78,160,161,162,58,9,10,12,13,172,175,176,177,217,218,219,220,221,79,222,223,224,225,226,227,228,18,19,230,20,21,22,23,24,25,26,27,28,236,238,239,240,241,242,80,243,81,82,83,84,246,257,258,259,260,261,262,263,264,265,278,279,30,280,31,33,35,36,39,40,42,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,90,307,308,309,310,311,312,91,319,45,92,93,94,95,96,352,97,98,99,100,101,353,354,355,356,357,358,359,46,360,361,362,363,364,365,366,367,368,369,370,395,396,397,398,399,400,401,402,403,404,405,406,407,408,48,49,50,415,416,417,418,419,420,421,422,423,424,425,426,427,434,435,436,102,437,438,103,104,105,106,439,51,52,54,442,443,444,450,451,107,108,109,110,452,111,112,453,454,455,456,458,459,461,462,472,473,474,475,476,477,478,479,480,481,482,483,484,485,113,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,512,513,514],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:509","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[0,61,121,62,63,65,68,3,4,123,70,124,125,74,75,126,127,128,129,76,5,130,132,133,134,136,137,7,138,139,140,141,143,144,145,146,147,56,149,150,151,152,57,153,154,155,156,157,158,159,160,161,162,58,8,9,10,11,170,12,13,172,176,177,183,14,15,16,17,217,218,219,220,221,79,222,223,224,225,226,227,228,18,19,230,20,21,22,23,24,25,26,27,28],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[5,130,6,526],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[527,528,529,530,397,437],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[224],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[429,430,467,468],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[319,320,321,322,324,325],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"clazz","throwableClass":"clazz"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[114,115,116,117,524,525,120],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[0,60,61,121,62,63,64,65,66,67,68,1,2,69,123,70,71,124,72,73,74,75,126,127,76,5,130,6,132,133,134,136,77,137,7,138,139,140,141,143,144,145,146,147,56,149,150,151,152,57,153,154,155,156,157,158,159,78,160,161,162,58,8,9,10,11,170,12,13,172,175,176,177,183,15,16,17,217,218,219,221,79,222,223,228,18,230,20,22,236,239,240,241,80,243,81,82,83,84,246,247,248,250,85,251,252,255,86,87,88,89,261,271,30,35,37,38,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,90,307,308,309,310,311,312,91,45,92,93,94,95,96,97,98,99,100,101,395,396,399,400,403,48,49,50,415,417,418,423,424,425,426,427,434,102,438,103,104,105,106,52,54,443,444,107,108,109,110,111,112,453,454,455,484,485,113,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[278,279,30,280,353,354,355,356,357,358,378,428,429,430,435,113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[0,61,121,62,63,65,66,68,3,3,4,4,123,70,124,125,74,75,126,127,128,129,76,5,130,131,132,133,134,135,136,77,137,7,138,139,140,141,143,144,145,146,147,56,149,150,151,152,57,153,154,155,156,157,158,159,160,161,162,58,8,9,10,11,170,12,13,172,173,174,175,176,177,183,14,15,16,17,217,218,219,221,222,223,224,227,228,18,19,230,20,21,22,24,26,27,28,236,238,239,240,241,243,82,83,246,247,248,249,250,85,251,252,253,254,255,86,87,88,261,271,278,279,30,280,33,35,37,38,40,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,90,307,308,309,310,311,312,91,45,353,354,355,356,357,358,366,367,368,369,370,387,393,395,396,399,400,403,48,49,50,415,416,417,418,423,424,425,426,427,428,429,430,432,434,435,438,104,105,51,53,54,442,443,444,445,446,447,448,449,107,453,454,455,456,458,459,461,463,464,465,466,467,468,470,484,485,113,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[0,1,2,3,3,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,531,29,532,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[138,155,160,518],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[0,60,61,121,62,63,64,65,122,66,67,68,1,2,69,3,4,123,70,71,124,125,72,73,74,75,126,127,128,129,76,5,130,6,131,132,133,134,135,136,77,137,7,114,533,138,139,140,141,142,143,144,145,146,147,56,148,149,150,151,152,57,153,154,155,156,157,158,159,78,160,161,162,58,163,164,165,534,166,167,168,8,9,10,11,169,170,12,13,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,196,197,198,14,199,200,15,201,202,203,204,205,206,207,208,209,16,210,211,212,213,214,17,215,216,217,218,219,220,221,79,222,223,224,225,226,227,228,229,18,19,230,20,21,22,23,231,24,232,233,25,26,27,28,234,235,236,238,239,240,241,242,80,243,81,82,83,84,244,245,246,247,248,249,250,85,251,252,253,254,255,86,87,88,89,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,30,280,31,535,33,34,536,281,35,36,37,120,38,282,55,39,40,537,42,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,90,307,308,309,310,311,312,91,43,313,314,315,316,44,317,318,538,319,320,321,322,323,324,539,325,348,349,45,350,92,93,94,351,95,96,352,97,98,99,100,101,353,354,355,356,357,358,359,46,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,47,48,49,411,50,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,522,431,432,433,434,435,436,102,437,438,103,104,105,106,439,440,51,52,53,441,54,442,443,444,445,446,447,448,449,450,451,107,108,109,110,452,111,112,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,113,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[540],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:327","failures":[429,430,467,468],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":141,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":395,"org.easymock.tests2.UsageTest.argumentsOrdered":226,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":87,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":381,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":79,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":60,"org.easymock.tests2.DelegateToTest.testReturnException":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":354,"org.easymock.tests.MockingTest.testPartialClassMocking":48,"org.easymock.tests.MockClassControlTest.testToString":360,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":256,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":390,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":488,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":15,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":247,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":347,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":115,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":56,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":484,"org.easymock.tests2.UsageTest.wrongArguments":220,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":189,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":421,"org.easymock.samples.ExampleTest.answerVsDelegate":121,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":44,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":413,"org.easymock.tests2.UsageConstraintsTest.testNull":144,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":20,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":86,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":365,"org.easymock.tests2.CaptureTest.testPrimitive":124,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":487,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":507,"org.easymock.tests.UsageTest.moreThanOneArgument":396,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":368,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":445,"org.easymock.tests.UsageTest.argumentsOrdered":402,"org.easymock.tests.UsageVarargTest.varargIntAccepted":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":386,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":423,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":525,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":31,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":276,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":427,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":331,"org.easymock.tests.ReplayStateInvalidUsageTest.times":480,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":183,"org.easymock.tests2.DependencyTest.testClassMocking":244,"org.easymock.tests2.AnswerTest.answer":172,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":388,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":265,"org.easymock.tests2.CaptureTest.testAnd":123,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":314,"org.easymock.tests2.UsageTest.strictResetToDefault":218,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":536,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":367,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":251,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":449,"org.easymock.tests2.DelegateToTest.testDelegate":136,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":330,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":503,"org.easymock.tests.LimitationsTest.mockFinalMethod":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":357,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":408,"org.easymock.tests2.DependencyTest.testClassMockingSupport":245,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":469,"org.easymock.tests2.CaptureTest.testCapture1_2446744":125,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":231,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":501,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":263,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":474,"org.easymock.tests.UsageThrowableTest.throwError":306,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":316,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":522,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":277,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":216,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":334,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":475,"org.easymock.tests.MockingTest.testInterfaceMocking":411,"org.easymock.tests2.CompareToTest.testLessOrEqual":518,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":424,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":464,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":516,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":205,"org.easymock.tests2.UsageTest.niceToStrict":221,"org.easymock.tests2.ThreadingTest.testChangeDefault":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":35,"org.easymock.tests2.MockBuilderTest.testCreateMock":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":212,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":186,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":527,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":497,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":252,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":313,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":468,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":450,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":419,"org.easymock.tests.UsageOverloadedMethodTest.overloading":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":214,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":459,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":57,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":442,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":297,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":152,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":126,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":351,"org.easymock.tests2.EasyMockSupportClassTest.testAll":14,"org.easymock.tests.MockClassControlTest.testEquals":364,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":52,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":505,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":531,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":406,"org.easymock.tests2.CaptureTest.testCaptureAll":70,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":264,"org.easymock.tests.MockNameTest.defaultName":517,"org.easymock.tests2.UsageConstraintsTest.testMatches":153,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":472,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":369,"org.easymock.samples.ExampleTest.voteForRemovals":65,"org.easymock.tests.UsageVarargTest.allKinds":101,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":453,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":407,"org.easymock.samples.BasicClassMockTest.testPrintContent":2,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":311,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":242,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":135,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":358,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":539,"org.easymock.tests2.UsageConstraintsTest.greaterThan":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":199,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":416,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":28,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":335,"org.easymock.samples.ExampleTest.voteForRemoval":62,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":325,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":234,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":238,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":317,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":534,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":23,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":327,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":54,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":217,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":378,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":250,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":353,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":131,"org.easymock.tests2.CaptureTest.testCaptureFirst":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":85,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":228,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":462,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":293,"org.easymock.tests2.CaptureTest.testCapture2_2446744":129,"org.easymock.tests2.UsageTest.moreThanOneArgument":219,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":389,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":40,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":100,"org.easymock.tests.GenericTest.testBridgedEquals":441,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":111,"org.easymock.tests.UsageExpectAndReturnTest.longType":289,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":404,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":248,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":506,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":41,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":510,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":78,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":504,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":429,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":366,"org.easymock.tests.UsageCallCountTest.tooManyCalls":112,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":213,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":188,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":493,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":310,"org.easymock.tests.MockingTest.testNiceClassMocking":414,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":9,"org.easymock.tests.MockingTest.testClassMocking":410,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":451,"org.easymock.tests2.UsageConstraintsTest.testContains":151,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":32,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":30,"org.easymock.tests2.UsageConstraintsTest.testFind":143,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":444,"org.easymock.tests.MockTypeTest.fromEasyMockClass":315,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":436,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":285,"org.easymock.tests.UsageExpectAndReturnTest.object":296,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":255,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":116,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":96,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":514,"org.easymock.tests.UsageTest.exactCallCountByLastCall":403,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":376,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":446,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":431,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":114,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":92,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":302,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":267,"org.easymock.tests.MockClassControlTest.testHashCode":363,"org.easymock.tests2.EasyMockSupportTest.testVerify":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":207,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":447,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":467,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":456,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":519,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":262,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":229,"org.easymock.tests.UsageVarargTest.varargCharAccepted":95,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":538,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":394,"org.easymock.tests2.UsageTest.openCallCountByLastCall":222,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":88,"org.easymock.tests.DefaultClassInstantiatorTest.object":319,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":466,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":512,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":520,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":208,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":308,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":181,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":266,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":26,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":333,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":362,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":494,"org.easymock.tests.CapturesMatcherTest.test":540,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":303,"org.easymock.tests.ReplayStateInvalidCallsTest.times":339,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":428,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":17,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":361,"org.easymock.tests2.UsageTest.resumeIfFailure":227,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":43,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":356,"org.easymock.tests2.StubTest.stubWithReturnValue":137,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":120,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":160,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":295,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":387,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":528,"org.easymock.samples.SupportTest.voteForRemovals":68,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":440,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":269,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":500,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":526,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":393,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":173,"org.easymock.tests.UsageExpectAndThrowTest.object":498,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":433,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":158,"org.easymock.tests2.DelegateToTest.testWrongClass":134,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":508,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":337,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":509,"org.easymock.tests.UsageStrictMockTest.range":104,"org.easymock.samples.ConstructorCalledMockTest.testTax":3,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":167,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":254,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":8,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":499,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":37,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":482,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":196,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":420,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":529,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":329,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":465,"org.easymock.tests2.CaptureTest.testCaptureNone":75,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":191,"org.easymock.tests.UsageUnorderedTest.message":91,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":521,"org.easymock.tests.UsageVerifyTest.twoReturns":455,"org.easymock.tests.UsageVarargTest.varargByteAccepted":99,"org.easymock.tests2.ThreadingTest.testThreadSafe":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":210,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":110,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":515,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":1,"org.easymock.tests2.CaptureTest.testCapture_2617107":71,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":471,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":391,"org.easymock.tests2.UsageConstraintsTest.any":149,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":479,"org.easymock.tests2.StubTest.stub":77,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":430,"org.easymock.tests.UsageExpectAndThrowTest.longType":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":355,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":323,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":478,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":81,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":271,"org.easymock.tests.LimitationsTest.mockNativeMethod":45,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":53,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":305,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":532,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":180,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":345,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":84,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":192,"org.easymock.tests2.NameTest.nameForMocksControl":260,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":182,"org.easymock.tests2.MockedExceptionTest.testMockedException":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":200,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":400,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":492,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":50,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":284,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":38,"org.easymock.tests.MockingTest.testNicePartialClassMocking":49,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":22,"org.easymock.tests2.CompareToTest.testCompareEqual":523,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":178,"org.easymock.tests2.CaptureTest.testCaptureLast":74,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":470,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":147,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":13,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":344,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":159,"org.easymock.tests.MockingTest.testTwoMocks":47,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":341,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":171,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":286,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":496,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":225,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":162,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":195,"org.easymock.samples.ExampleTest.removeNonExistingDocument":122,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":476,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":185,"org.easymock.tests.UsageStrictMockTest.differentMethods":105,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":268,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":194,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":321,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":239,"org.easymock.tests2.MockBuilderTest.testCreateMockString":42,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":359,"org.easymock.tests.UsageExpectAndThrowTest.floatType":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":201,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":198,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":175,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":533,"org.easymock.tests.UsageVerifyTest.twoThrows":454,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":16,"org.easymock.samples.ExampleTest.voteAgainstRemoval":63,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":382,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":27,"org.easymock.tests.LimitationsTest.privateConstructor":349,"org.easymock.tests2.UsageConstraintsTest.testNotNull":161,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":278,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":312,"org.easymock.tests2.UsageTest.defaultResetToNice":224,"org.easymock.samples.ExampleTest.voteAgainstRemovals":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":383,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":179,"org.easymock.tests.UsageVarargTest.differentLength":352,"org.easymock.tests2.CallbackTest.callback":261,"org.easymock.tests2.UsageConstraintsTest.equals":142,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":232,"org.easymock.tests.UsageTest.openCallCountByLastCall":399,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":138,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":113,"org.easymock.tests.UsageCallCountTest.tooFewCalls":108,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":11,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":422,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":193,"org.easymock.tests.UsageThrowableTest.throwCheckedException":309,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":530,"org.easymock.tests.MockingTest.testStrictClassMocking":409,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":435,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":12,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":184,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":10,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":481,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":170,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":177,"org.easymock.tests.ObjectMethodsTest.testHashCode":513,"org.easymock.tests2.CompareToTest.testGreateOrEqual":59,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":524,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":241,"org.easymock.tests2.NameTest.nameForNiceMock":259,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":343,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":338,"org.easymock.tests2.DependencyTest.testInterfaceMocking":246,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":117,"org.easymock.samples.ExampleTest.addDocument":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":211,"org.easymock.tests2.DelegateToTest.testStubDelegate":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":215,"org.easymock.tests2.AnswerTest.stubAnswer":176,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":438,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":282,"org.easymock.tests.UsageVarargTest.varargLongAccepted":98,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":380,"org.easymock.tests.UsageExpectAndReturnTest.floatType":288,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":304,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":4,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":156,"org.easymock.tests.UsageThrowableTest.noUpperLimit":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":275,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":139,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":163,"org.easymock.tests2.SerializationTest.test":130,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":72,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":320,"org.easymock.tests2.UsageConstraintsTest.testSame":145,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":287,"org.easymock.samples.SupportTest.addDocument":67,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":169,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":328,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":202,"org.easymock.tests.GenericTest.testPackageScope":51,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":274,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":412,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":326,"org.easymock.tests2.NameTest.nameForMock":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":298,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":537,"org.easymock.tests2.UsageStrictMockTest.differentMethods":83,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":233,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":290,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":502,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":511,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":418,"org.easymock.tests2.MockedExceptionTest.testRealException":280,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":384,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":243,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":485,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":483,"org.easymock.tests2.NameTest.nameForStrictMock":258,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":281,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":283,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":21,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":166,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":157,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":322,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":33,"org.easymock.tests2.UsageStrictMockTest.range":82,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":332,"org.easymock.tests2.UsageConstraintsTest.lessThan":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":270,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":118,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":379,"org.easymock.tests2.CaptureTest.testCaptureRightOne":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":206,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":190,"org.easymock.tests2.UsageConstraintsTest.testOr":146,"org.easymock.tests.UsageRangeTest.combination":415,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":19,"org.easymock.tests.UsageTest.wrongArguments":398,"org.easymock.tests2.MockBuilderTest.testWithConstructor":535,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":203,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":46,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":291,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":372,"org.easymock.tests.UsageVarargTest.varargShortAccepted":97,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":324,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":452,"org.easymock.tests2.UsageConstraintsTest.cmpTo":150,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":346,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":174,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":374,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":223,"org.easymock.tests2.CaptureTest.testCaptureFromStub":128,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":473,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":34,"org.easymock.tests.UsageTest.unexpectedCallWithArray":397,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":342,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":437,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":109,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":300,"org.easymock.tests2.UsageConstraintsTest.constraints":140,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":103,"org.easymock.samples.ExampleTest.addAndChangeDocument":66,"org.easymock.tests.UsageStrictMockTest.testVerify":439,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":69,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":102,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":405,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":425,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":29,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":292,"org.easymock.tests.LimitationsTest.abstractClass":348,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":426,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":93,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":253}}]
