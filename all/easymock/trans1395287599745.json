[{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[4,19,20,7,21,22],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,4,82,83,5,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,2,137,138,139,3,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,7,8,183,184,9,10,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,11,12,262,263,264,265,266,267,13,14,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,15,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,0,1,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,16,459,460,461,462,463,17,18,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[55,61,68,69,105,117,123,130,131,136,173,263,275],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[394,395],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:190","failures":[50,57,58,59,62,63,64,65,66,82,5,84,109,110,113,135,136,140,141,142,143,159,160,161,163,164,165,166,167,168,169,171,181,182,183,184,185,261,264,266,267,14,274,297,298,300,301,304,305,306,307,308,309,310,312,315,319,323,324,325,329,337,15,339,353,385,386,387,388,390,391,392,393,0,1,395,396,397,398,399,400,401,402,403,404,405,406,408,409,410,411,420,421,422,424,425,427,433,440,441,442,443,444,445,446,447,448,449,450,451,453,454,456,457,458,459,461,462,463,464,465,494,505,507],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[25,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,80,81,4,82,83,5,84,85,86,88,89,92,94,95,96,97,99,100,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,137,138,140,141,142,143,158,159,160,161,162,163,164,165,166,167,168,169,170,176,181,182,8,183,184,9,10,185,189,190,192,207,208,209,211,212,213,214,215,216,217,218,235,256,258,259,261,12,267,13,14,268,269,270,271,272,273,274,275,279,280,281,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,319,323,324,325,328,329,331,332,333,334,335,336,337,338,15,339,340,341,353,363,366,376,382,385,386,387,388,390,391,392,393,0,1,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,417,420,421,422,424,425,426,427,433,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,16,459,460,461,462,463,17,18,464,465,466,468,481,482,483,484,486,487,488,491,494,496,497,501,505,507,510,511,512],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[2,137,138,139,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:59","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[25,137,138,3,150,155,156,157,268,280,281,311,312,314,315,316,319,325,363,455,467,481,484,505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"equalsMethod","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[23,24,25,26,72,77,2,137,138,139,3,149,150,151,152,153,154,155,156,157,186,187,188,189,190,192,195,200,201,202,203,204,205,206,268,279,280,281,282,282,283,283,311,312,314,315,316,317,319,320,321,322,323,324,325,326,327,341,342,513,514,515,516,517,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,453,455,469,472,481,482,483,484,487,488,490,518,491,492,493,494,495,496,497,499,500,501,519,502,503,504,505],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[411,520],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[204,521,522],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[201,205],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[341,342,523,524,525,526,527,453,528,499],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[218,398],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[297,299,307,387,388,391,392,393,394,404,409,410],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[341,342,523,524,525,526,527,453,528,499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[25,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,5,84,109,110,113,137,139,140,141,142,143,158,159,160,161,163,164,165,166,167,168,169,181,182,183,184,185,189,190,192,261,267,14,269,270,271,272,273,274,275,279,287,288,290,291,293,297,298,300,301,304,305,306,307,309,310,311,312,313,314,315,316,319,323,324,325,329,337,15,339,341,353,363,366,376,382,385,386,387,388,390,391,392,393,0,1,395,396,397,398,399,400,401,402,403,404,405,406,408,409,410,411,414,420,421,422,424,425,426,427,433,440,441,442,443,444,445,446,447,448,449,450,451,453,454,456,457,458,459,461,462,463,464,465,481,482,483,484,486,487,488,491,494,496,497,501,505,507,511],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"genericParameters"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[526],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":388,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":181,"org.easymock.tests2.UsageTest.argumentsOrdered":18,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":450,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":229,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":460,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":285,"org.easymock.tests2.DelegateToTest.testReturnException":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":173,"org.easymock.tests.MockingTest.testPartialClassMocking":189,"org.easymock.tests.MockClassControlTest.testToString":152,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":330,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":238,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":370,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":114,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":366,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":421,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":523,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":109,"org.easymock.tests2.UsageTest.wrongArguments":16,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":359,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":198,"org.easymock.samples.ExampleTest.answerVsDelegate":289,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":77,"org.easymock.tests2.UsageConstraintsTest.testNull":391,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":314,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":449,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":157,"org.easymock.tests2.CaptureTest.testPrimitive":300,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":113,"org.easymock.tests.UsageTest.moreThanOneArgument":182,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":133,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":264,"org.easymock.tests.UsageTest.argumentsOrdered":10,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":87,"org.easymock.tests.UsageVarargTest.varargIntAccepted":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":271,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":490,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":471,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":438,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":275,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":32,"org.easymock.tests.ReplayStateInvalidUsageTest.times":251,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":353,"org.easymock.tests2.DependencyTest.testClassMocking":418,"org.easymock.tests2.AnswerTest.answer":507,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":346,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":74,"org.easymock.tests2.CaptureTest.testAnd":297,"org.easymock.tests2.UsageTest.strictResetToDefault":457,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":322,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":444,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":142,"org.easymock.tests2.DelegateToTest.testDelegate":417,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":91,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":129,"org.easymock.tests.LimitationsTest.mockFinalMethod":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":176,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":105,"org.easymock.tests2.DependencyTest.testClassMockingSupport":419,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":106,"org.easymock.tests2.CaptureTest.testCapture1_2446744":301,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":127,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":344,"org.easymock.tests.UsageThrowableTest.throwError":161,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":245,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":76,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":439,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":384,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":35,"org.easymock.samples.PartialClassMockTest.testGetArea":279,"org.easymock.tests.MockingTest.testInterfaceMocking":191,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":272,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":135,"org.easymock.tests2.UsageTest.niceToStrict":459,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":149,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":371,"org.easymock.tests2.ThreadingTest.testChangeDefault":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":219,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":494,"org.easymock.tests2.MockBuilderTest.testCreateMock":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":356,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":123,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":21,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":445,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":73,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":180,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":196,"org.easymock.tests.UsageOverloadedMethodTest.overloading":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":381,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":399,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":259,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":63,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":521,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":398,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":306,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":210,"org.easymock.tests.MockClassControlTest.testEquals":156,"org.easymock.tests2.EasyMockSupportClassTest.testAll":363,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":138,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":131,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":513,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":103,"org.easymock.tests2.CaptureTest.testCaptureAll":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":345,"org.easymock.tests.MockNameTest.defaultName":255,"org.easymock.tests2.UsageConstraintsTest.testMatches":400,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":265,"org.easymock.samples.ExampleTest.voteForRemovals":293,"org.easymock.tests.UsageVarargTest.allKinds":218,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":104,"org.easymock.samples.BasicClassMockTest.testPrintContent":281,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":167,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":335,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":435,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":527,"org.easymock.tests2.UsageConstraintsTest.greaterThan":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":364,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":141,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":325,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":36,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":206,"org.easymock.samples.ExampleTest.voteForRemoval":290,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":424,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":326,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":78,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":317,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":28,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":456,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":268,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":442,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":361,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":172,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":412,"org.easymock.tests2.CaptureTest.testCaptureFirst":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":443,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":465,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":11,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":59,"org.easymock.tests2.UsageTest.moreThanOneArgument":458,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":426,"org.easymock.tests2.CaptureTest.testCapture2_2446744":309,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":237,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":217,"org.easymock.tests.GenericTest.testBridgedEquals":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":99,"org.easymock.tests.UsageExpectAndReturnTest.longType":55,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":440,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":101,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":519,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":132,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":407,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":171,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":130,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":277,"org.easymock.tests.UsageCallCountTest.tooManyCalls":100,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":380,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":358,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":119,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":166,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":482,"org.easymock.tests.MockingTest.testNiceClassMocking":195,"org.easymock.tests.MockingTest.testClassMocking":187,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":518,"org.easymock.tests2.UsageConstraintsTest.testContains":397,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":93,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":505,"org.easymock.tests2.UsageConstraintsTest.testFind":390,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":160,"org.easymock.tests.MockTypeTest.fromEasyMockClass":75,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":468,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":80,"org.easymock.tests.UsageExpectAndReturnTest.object":62,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":448,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":524,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":212,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":147,"org.easymock.tests.UsageTest.exactCallCountByLastCall":185,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":224,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":49,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":342,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":68,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":207,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":258,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":429,"org.easymock.tests.MockClassControlTest.testHashCode":155,"org.easymock.tests2.EasyMockSupportTest.testVerify":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":373,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":89,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":179,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":256,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":343,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":347,"org.easymock.tests.UsageVarargTest.varargCharAccepted":211,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":242,"org.easymock.tests2.UsageTest.openCallCountByLastCall":461,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":451,"org.easymock.tests.DefaultClassInstantiatorTest.object":200,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":178,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":145,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":6,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":374,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":517,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":428,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":154,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":34,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":323,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":120,"org.easymock.tests.ReplayStateInvalidCallsTest.times":40,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":69,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":276,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":41,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":382,"org.easymock.tests2.UsageTest.resumeIfFailure":464,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":72,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":175,"org.easymock.tests2.StubTest.stubWithReturnValue":329,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":528,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":408,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":61,"org.easymock.tests2.SerializationTest.testAllMockedMethod":455,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":235,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":22,"org.easymock.samples.SupportTest.voteForRemovals":287,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":431,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":126,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":241,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":508,"org.easymock.tests.UsageExpectAndThrowTest.object":124,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":51,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":405,"org.easymock.tests2.DelegateToTest.testWrongClass":415,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":38,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":269,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":270,"org.easymock.tests.UsageStrictMockTest.range":5,"org.easymock.samples.ConstructorCalledMockTest.testTax":282,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":473,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":447,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":481,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":125,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":496,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":9,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":197,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":19,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":30,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":136,"org.easymock.tests2.CaptureTest.testCaptureNone":305,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":476,"org.easymock.tests.UsageUnorderedTest.message":12,"org.easymock.tests.UsageVerifyTest.twoReturns":14,"org.easymock.tests.UsageVarargTest.varargByteAccepted":216,"org.easymock.tests2.ThreadingTest.testThreadSafe":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":377,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":97,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":148,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":280,"org.easymock.tests2.CaptureTest.testCapture_2617107":299,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":108,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":239,"org.easymock.tests2.UsageConstraintsTest.any":395,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":250,"org.easymock.tests2.StubTest.stub":328,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":174,"org.easymock.tests.UsageExpectAndThrowTest.longType":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":240,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":204,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":249,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":338,"org.easymock.tests2.SerializationTest.testClass":453,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":433,"org.easymock.tests.LimitationsTest.mockNativeMethod":25,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":139,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":71,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":516,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":350,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":46,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":340,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":477,"org.easymock.tests2.NameTest.nameForMocksControl":334,"org.easymock.tests2.MockedExceptionTest.testMockedException":504,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":365,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":184,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":467,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":118,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":192,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":311,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":497,"org.easymock.tests.MockingTest.testNicePartialClassMocking":190,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":316,"org.easymock.tests2.CaptureTest.testCaptureLast":304,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":348,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":107,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":488,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":45,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":406,"org.easymock.tests.MockingTest.testTwoMocks":188,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":42,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":489,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":122,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":410,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":480,"org.easymock.samples.ExampleTest.removeNonExistingDocument":294,"org.easymock.tests.UsageStrictMockTest.differentMethods":84,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":430,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":479,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":202,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":425,"org.easymock.tests2.MockBuilderTest.testCreateMockString":502,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":150,"org.easymock.tests.UsageExpectAndThrowTest.floatType":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":367,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":362,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":510,"org.easymock.tests.UsageVerifyTest.twoThrows":13,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":376,"org.easymock.samples.ExampleTest.voteAgainstRemoval":291,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":230,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":324,"org.easymock.tests.LimitationsTest.privateConstructor":24,"org.easymock.tests2.UsageConstraintsTest.testNotNull":409,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":503,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":168,"org.easymock.tests2.UsageTest.defaultResetToNice":463,"org.easymock.samples.ExampleTest.voteAgainstRemovals":288,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":231,"org.easymock.tests.UsageVarargTest.differentLength":213,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":349,"org.easymock.tests2.CallbackTest.callback":296,"org.easymock.tests2.UsageConstraintsTest.equals":389,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":320,"org.easymock.tests.UsageTest.openCallCountByLastCall":183,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":385,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":111,"org.easymock.tests.UsageCallCountTest.tooFewCalls":95,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":484,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":199,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":478,"org.easymock.tests.UsageThrowableTest.throwCheckedException":165,"org.easymock.tests.MockingTest.testStrictClassMocking":186,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":20,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":487,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":170,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":483,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":354,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":252,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":486,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":512,"org.easymock.tests.ObjectMethodsTest.testHashCode":146,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":427,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":44,"org.easymock.tests2.NameTest.nameForNiceMock":333,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":39,"org.easymock.tests2.DependencyTest.testInterfaceMocking":420,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":525,"org.easymock.samples.ExampleTest.addDocument":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":378,"org.easymock.tests2.DelegateToTest.testStubDelegate":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.AnswerTest.stubAnswer":511,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":82,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":498,"org.easymock.tests.UsageVarargTest.varargLongAccepted":215,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":228,"org.easymock.tests.UsageExpectAndReturnTest.floatType":54,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":70,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":341,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":283,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":437,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":403,"org.easymock.tests.UsageThrowableTest.noUpperLimit":162,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":260,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":386,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":469,"org.easymock.tests2.SerializationTest.test":454,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":302,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":522,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":201,"org.easymock.tests2.UsageConstraintsTest.testSame":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":53,"org.easymock.samples.SupportTest.addDocument":286,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":485,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":29,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":368,"org.easymock.tests.GenericTest.testPackageScope":137,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":223,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":436,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":193,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":27,"org.easymock.tests2.NameTest.nameForMock":331,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":64,"org.easymock.tests2.UsageStrictMockTest.differentMethods":339,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":321,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":128,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":144,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":143,"org.easymock.tests2.MockedExceptionTest.testRealException":506,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":79,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":232,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":337,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":110,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":254,"org.easymock.tests2.NameTest.nameForStrictMock":332,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":493,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":466,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":315,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":472,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":404,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":203,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":491,"org.easymock.tests2.UsageStrictMockTest.range":15,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":33,"org.easymock.tests2.UsageConstraintsTest.lessThan":411,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":514,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":432,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":526,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":227,"org.easymock.tests2.CaptureTest.testCaptureRightOne":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":372,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":475,"org.easymock.tests2.UsageConstraintsTest.testOr":393,"org.easymock.tests.UsageRangeTest.combination":140,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":312,"org.easymock.tests.UsageTest.wrongArguments":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":369,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":151,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":220,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":205,"org.easymock.tests.UsageVarargTest.varargShortAccepted":214,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":98,"org.easymock.tests2.UsageConstraintsTest.cmpTo":396,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":47,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":509,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":37,"org.easymock.tests2.CompareToTest.testLessThan":520,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":222,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":462,"org.easymock.tests2.CaptureTest.testCaptureFromStub":308,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":244,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":492,"org.easymock.tests.UsageTest.unexpectedCallWithArray":7,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":43,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":96,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":66,"org.easymock.tests2.UsageConstraintsTest.constraints":387,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":83,"org.easymock.samples.ExampleTest.addAndChangeDocument":295,"org.easymock.tests.UsageStrictMockTest.testVerify":86,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":284,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":102,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":303,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":515,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":273,"org.easymock.tests.LimitationsTest.abstractClass":23,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":58,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":261,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":446,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":208}}]
