[{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[30,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:245","sourceCode":"net.sf.cglib.proxy.Factory.getCallback(0)","type":"CtInvocationImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[96,97,98,99,100,32,33,36,37,38,39,40,41,42,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,43,44,45,116,46,47,48,49,50,52,53,54,55,58,117,118,119,120,121,122,123,0,124,1,2,125,126,127,3,4,128,129,130,131,132,5,6,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,60,61,62,63,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,64,65,191,66,192,67,193,68,69,70,194,195,196,197,198,199,71,200,201,202,203,204,205,206,207,208,209,72,73,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,82,83,84,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,30,253,254,31,255,256,257,258,89,90,91,259,260,261,19,262,20,21,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,22,285,23,286,287,24,25,288,26,289,290,291,292,293,294,295,296,93,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,27,28,29,315,316,317,318,319,320,321,322,323,324,325,326,327],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:280","sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n            org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        } \n    } else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:321","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == null) {\n            java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n        } \n        if (java.lang.reflect.Type != null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } \n    } \n}","type":"CtForImpl"},"failures":[328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterfaces":"actualTypeArguments","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[0,2,125,3,16,237,241,242,244,247,329,19,21,263,22,27,28,29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.internal.RecordState:183","failures":[96,97,98,99,100,36,38,39,101,103,104,105,106,109,110,111,112,113,114,115,43,44,116,46,48,58,117,118,119,120,121,123,0,124,1,2,125,126,127,3,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,61,62,63,165,166,167,169,170,171,172,173,174,175,177,178,179,180,181,182,185,190,64,65,191,66,192,67,193,70,195,196,199,71,200,201,202,203,204,205,206,207,208,209,72,73,210,211,212,213,215,216,217,228,229,230,231,232,82,84,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,30,253,254,31,255,256,257,258,89,90,91,260,19,262,20,21,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,22,286,287,288,26,289,290,291,292,293,294,295,296,93,313,314,27,28,29,315,316,317,318,319,320,321,323,324,325,326,327],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:159","sourceCode":"final java.lang.ClassCastException java.lang.ClassCastException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[330,161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"result","java.lang.Integer.MAX_VALUE":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[68,69,70,194,196,218,331,297,298,299,300,301,302,332,333,334],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[137,138,143,144],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[335,32,336,33,34,36,37,38,39,40,41,337,42,114,43,44,45,46,47,48,49,50,52,53,54,55,58,60,61,62,63,64,65,191,66,67,193,70,197,197,198,198,71,72,73,75,82,83,84,85,88,89,90,91,93,94,95],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[137,138,140,142,143,338,154,159,172,174,182],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[196,331,297,298,299,300,301,302],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[340,341,342],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[1,4,5,6,227,261,20,285,23,24,25,26,343,28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[219,266,268,282,283,315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[329],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[169],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:170","sourceCode":"org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[344,345,346,347,348,349,350,351,352,353,354,355],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[0,1,2,261,19,20,21,356],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[118,120,357,121,204,225,358],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[137,138,140,142,143,338,154,159,172,174,182],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[344,345,346,347,348,359,360,349,350,351,352,353,354,361,362,355],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[3,4,5,6,363,364,11,13,261,22,285,23,24,25,365,366,367],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[96,368,369,97,98,99,100,32,33,34,35,36,37,38,39,370,371,40,41,42,101,102,103,104,105,106,107,108,109,110,111,112,113,372,373,374,375,376,377,114,115,43,44,45,116,46,47,48,49,378,50,379,51,52,53,54,55,56,57,58,380,381,344,345,382,346,117,383,347,348,359,360,349,384,118,119,120,357,121,122,123,0,124,1,2,125,385,386,387,59,388,389,126,127,3,4,128,129,130,131,132,5,6,133,134,390,135,136,137,138,391,139,140,141,142,143,144,338,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,392,393,394,60,395,396,61,397,398,399,400,401,402,403,404,405,62,406,407,408,409,410,63,411,412,413,414,165,166,167,415,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,416,350,351,417,352,190,418,353,354,361,362,355,64,65,191,66,419,192,67,193,420,68,69,70,194,195,196,421,422,423,424,425,197,198,199,71,200,201,202,203,204,205,206,207,208,426,209,72,73,427,428,210,211,212,213,214,215,216,217,218,219,220,221,222,223,74,75,76,77,78,79,80,81,224,14,225,226,15,16,227,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,228,229,230,231,232,82,328,83,84,85,451,452,453,358,454,455,456,457,331,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,30,253,254,31,255,256,257,258,86,87,88,89,90,477,91,478,479,92,480,481,482,483,484,485,486,487,488,489,490,491,17,18,329,259,260,261,19,262,20,21,263,356,492,493,494,495,340,496,497,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,498,499,500,501,284,22,285,23,286,287,24,25,288,26,289,502,290,291,292,293,294,295,296,503,504,93,505,506,507,508,509,510,297,298,299,300,301,302,332,333,334,511,512,513,514,515,516,517,518,519,303,304,305,306,307,308,309,310,311,312,313,314,27,28,29,315,316,520,317,318,319,521,320,321,322,323,324,325,326,327,94,522,523,524,525,95,526,527],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":138,"org.easymock.tests2.UsageTest.argumentsOrdered":6,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":284,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":111,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":460,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":129,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":199,"org.easymock.tests2.DelegateToTest.testReturnException":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":298,"org.easymock.tests.MockingTest.testPartialClassMocking":89,"org.easymock.tests.MockClassControlTest.testToString":76,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":421,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":400,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":61,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":233,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":166,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":450,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":144,"org.easymock.tests2.UsageTest.wrongArguments":4,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":292,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":355,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":305,"org.easymock.samples.ExampleTest.answerVsDelegate":204,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":95,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":479,"org.easymock.tests2.UsageConstraintsTest.testNull":140,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":46,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":110,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":81,"org.easymock.tests2.CaptureTest.testPrimitive":175,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":296,"org.easymock.tests.UsageTest.moreThanOneArgument":22,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":252,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":116,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":221,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":506,"org.easymock.tests.UsageTest.argumentsOrdered":25,"org.easymock.tests.UsageVarargTest.varargIntAccepted":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":465,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":228,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":32,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":360,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":232,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":434,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":9,"org.easymock.tests.ReplayStateInvalidUsageTest.times":488,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":190,"org.easymock.tests2.DependencyTest.testClassMocking":413,"org.easymock.tests2.AnswerTest.answer":96,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":189,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":523,"org.easymock.tests2.CaptureTest.testAnd":172,"org.easymock.tests2.UsageTest.strictResetToDefault":127,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":105,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":290,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":510,"org.easymock.tests2.DelegateToTest.testDelegate":121,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":433,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":248,"org.easymock.tests.LimitationsTest.mockFinalMethod":505,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":301,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":311,"org.easymock.tests2.DependencyTest.testClassMockingSupport":414,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":17,"org.easymock.tests2.CaptureTest.testCapture1_2446744":176,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":378,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":187,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":482,"org.easymock.tests.UsageThrowableTest.throwError":30,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":525,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":349,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":412,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":437,"org.easymock.samples.PartialClassMockTest.testGetArea":71,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":483,"org.easymock.tests.MockingTest.testInterfaceMocking":477,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":229,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":500,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":401,"org.easymock.tests2.UsageTest.niceToStrict":128,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":234,"org.easymock.tests2.ThreadingTest.testChangeDefault":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":36,"org.easymock.tests2.MockBuilderTest.testCreateMock":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":408,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":242,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":363,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":106,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":522,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":476,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":427,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":303,"org.easymock.tests.UsageOverloadedMethodTest.overloading":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":405,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":149,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":275,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":312,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":148,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":341,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":181,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":521,"org.easymock.tests2.EasyMockSupportClassTest.testAll":60,"org.easymock.tests.MockClassControlTest.testEquals":80,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":84,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":250,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":364,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":188,"org.easymock.tests2.CaptureTest.testCaptureAll":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":309,"org.easymock.tests.MockNameTest.defaultName":498,"org.easymock.tests2.UsageConstraintsTest.testMatches":150,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":480,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":222,"org.easymock.samples.ExampleTest.voteForRemovals":208,"org.easymock.tests.UsageVarargTest.allKinds":327,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":27,"org.easymock.samples.BasicClassMockTest.testPrintContent":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":310,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":257,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":302,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":347,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":357,"org.easymock.tests2.UsageConstraintsTest.greaterThan":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":395,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":502,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":55,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":438,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":497,"org.easymock.samples.ExampleTest.voteForRemoval":205,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":168,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":56,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":526,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":49,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":430,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":126,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":82,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":103,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":297,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":384,"org.easymock.tests2.CaptureTest.testCaptureFirst":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":104,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":134,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":227,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":271,"org.easymock.tests2.CaptureTest.testCapture2_2446744":184,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":170,"org.easymock.tests2.UsageTest.moreThanOneArgument":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":468,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":41,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":326,"org.easymock.tests.GenericTest.testBridgedEquals":451,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":215,"org.easymock.tests.UsageExpectAndReturnTest.longType":267,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":307,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":251,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":337,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":520,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":157,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":333,"org.easymock.tests.UsageCallCountTest.tooManyCalls":216,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":409,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":238,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":256,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":65,"org.easymock.tests.MockingTest.testNiceClassMocking":92,"org.easymock.tests.MockingTest.testClassMocking":87,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":428,"org.easymock.tests2.UsageConstraintsTest.testContains":147,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":336,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":70,"org.easymock.tests2.UsageConstraintsTest.testFind":139,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":314,"org.easymock.tests.MockTypeTest.fromEasyMockClass":524,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":164,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":259,"org.easymock.tests.UsageExpectAndReturnTest.object":274,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":50,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":109,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":321,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":514,"org.easymock.tests.UsageTest.exactCallCountByLastCall":288,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":517,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":507,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":380,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":280,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":317,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":225,"org.easymock.tests.MockClassControlTest.testHashCode":79,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":344,"org.easymock.tests2.EasyMockSupportTest.testVerify":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":403,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":508,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":475,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":186,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":390,"org.easymock.tests.UsageVarargTest.varargCharAccepted":320,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":473,"org.easymock.tests2.UsageTest.openCallCountByLastCall":130,"org.easymock.tests.DefaultClassInstantiatorTest.object":492,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":112,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":474,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":512,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":404,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":240,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":417,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":381,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":436,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":53,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":78,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":239,"org.easymock.tests.ReplayStateInvalidCallsTest.times":442,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":281,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":332,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":63,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":77,"org.easymock.tests2.UsageTest.resumeIfFailure":133,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":94,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":300,"org.easymock.tests2.StubTest.stubWithReturnValue":196,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":273,"org.easymock.tests2.SerializationTest.testAllMockedMethod":43,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":466,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":339,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":11,"org.easymock.samples.SupportTest.voteForRemovals":202,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":328,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":245,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":472,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":368,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":519,"org.easymock.tests.UsageExpectAndThrowTest.object":243,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":155,"org.easymock.tests2.DelegateToTest.testWrongClass":120,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":440,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":315,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":316,"org.easymock.tests.UsageStrictMockTest.range":20,"org.easymock.samples.ConstructorCalledMockTest.testTax":197,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":388,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":108,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":244,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":38,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":392,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":304,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":365,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":432,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":501,"org.easymock.tests2.CaptureTest.testCaptureNone":180,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":373,"org.easymock.tests.UsageUnorderedTest.message":26,"org.easymock.tests.UsageVerifyTest.twoReturns":29,"org.easymock.tests.UsageVarargTest.varargByteAccepted":325,"org.easymock.tests2.ThreadingTest.testThreadSafe":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":406,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":213,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":515,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":72,"org.easymock.tests2.CaptureTest.testCapture_2617107":174,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":13,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":295,"org.easymock.tests2.UsageConstraintsTest.any":145,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":487,"org.easymock.tests2.StubTest.stub":195,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndThrowTest.longType":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":299,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":340,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":486,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":124,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":117,"org.easymock.tests2.SerializationTest.testClass":114,"org.easymock.tests.LimitationsTest.mockNativeMethod":93,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":85,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":283,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":351,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":448,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":125,"org.easymock.tests2.NameTest.nameForMocksControl":425,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":374,"org.easymock.tests2.MockedExceptionTest.testMockedException":69,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":396,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":287,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":163,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":91,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":237,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":44,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":39,"org.easymock.tests.MockingTest.testNicePartialClassMocking":90,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":48,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":416,"org.easymock.tests2.CaptureTest.testCaptureLast":179,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":18,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":447,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":143,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":193,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":156,"org.easymock.tests.MockingTest.testTwoMocks":88,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":444,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":420,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":241,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":5,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":160,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":377,"org.easymock.samples.ExampleTest.removeNonExistingDocument":426,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":484,"org.easymock.tests.UsageStrictMockTest.differentMethods":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":345,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":494,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":376,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":169,"org.easymock.tests2.ConstraintsToStringTest.andToString":10,"org.easymock.tests2.MockBuilderTest.testCreateMockString":42,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":397,"org.easymock.tests.UsageExpectAndThrowTest.floatType":235,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":394,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":97,"org.easymock.tests.UsageVerifyTest.twoThrows":28,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":62,"org.easymock.samples.ExampleTest.voteAgainstRemoval":206,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":461,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":54,"org.easymock.tests.LimitationsTest.privateConstructor":504,"org.easymock.tests2.UsageConstraintsTest.testNotNull":159,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":68,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":258,"org.easymock.tests2.UsageTest.defaultResetToNice":132,"org.easymock.samples.ExampleTest.voteAgainstRemovals":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":279,"org.easymock.tests.UsageVarargTest.differentLength":322,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":350,"org.easymock.tests2.CallbackTest.callback":100,"org.easymock.tests2.UsageConstraintsTest.equals":391,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":379,"org.easymock.tests.UsageTest.openCallCountByLastCall":286,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":294,"org.easymock.tests.UsageCallCountTest.tooFewCalls":211,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":306,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":375,"org.easymock.tests.UsageThrowableTest.throwCheckedException":255,"org.easymock.tests.MockingTest.testStrictClassMocking":86,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":366,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":67,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":418,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":191,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":489,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":192,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":99,"org.easymock.tests.ObjectMethodsTest.testHashCode":513,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":446,"org.easymock.tests2.NameTest.nameForNiceMock":424,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":171,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":441,"org.easymock.tests2.DependencyTest.testInterfaceMocking":165,"org.easymock.samples.ExampleTest.addDocument":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":411,"org.easymock.tests2.DelegateToTest.testStubDelegate":119,"org.easymock.tests2.AnswerTest.stubAnswer":98,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":19,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":370,"org.easymock.tests.UsageVarargTest.varargLongAccepted":324,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndReturnTest.floatType":266,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":282,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":58,"org.easymock.tests2.ConstraintsToStringTest.orToString":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":198,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":153,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":15,"org.easymock.tests.UsageThrowableTest.noUpperLimit":253,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":359,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":136,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":385,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":177,"org.easymock.tests2.SerializationTest.test":115,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":342,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":493,"org.easymock.tests2.UsageConstraintsTest.testSame":141,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":265,"org.easymock.samples.SupportTest.addDocument":201,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":419,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":431,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":398,"org.easymock.tests.GenericTest.testPackageScope":83,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":348,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":478,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":429,"org.easymock.tests2.NameTest.nameForMock":422,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":276,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":268,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":247,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":511,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":291,"org.easymock.tests2.MockedExceptionTest.testRealException":194,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":527,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":463,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":491,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":293,"org.easymock.tests2.NameTest.nameForStrictMock":423,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":35,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":47,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":59,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":495,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":154,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":33,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":435,"org.easymock.tests2.UsageConstraintsTest.lessThan":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":402,"org.easymock.tests2.CaptureTest.testCaptureRightOne":182,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":372,"org.easymock.tests2.UsageConstraintsTest.testOr":142,"org.easymock.tests.UsageRangeTest.combination":289,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":45,"org.easymock.tests.UsageTest.wrongArguments":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":399,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":277,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":496,"org.easymock.tests.UsageVarargTest.varargShortAccepted":323,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":214,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":449,"org.easymock.tests2.UsageConstraintsTest.cmpTo":146,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":369,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":439,"org.easymock.tests2.CompareToTest.testLessThan":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":454,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":131,"org.easymock.tests2.CaptureTest.testCaptureFromStub":183,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":481,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":34,"org.easymock.tests.UsageTest.unexpectedCallWithArray":285,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":445,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":261,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":212,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":278,"org.easymock.tests2.UsageConstraintsTest.constraints":137,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":262,"org.easymock.samples.ExampleTest.addAndChangeDocument":209,"org.easymock.tests2.ConstraintsToStringTest.notToString":8,"org.easymock.tests.UsageStrictMockTest.testVerify":356,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":200,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":260,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":308,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":178,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":230,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":335,"org.easymock.tests.LimitationsTest.abstractClass":503,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":270,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":107,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":318}}]
