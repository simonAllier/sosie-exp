[{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[49],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[51,52,53,54,55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:113","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[56],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[57,58,59,60,61,62,63,64,65,66,2,67,68,69,4,70,71,72,73,74,75,76,77,78,21,22,79,23,80,81,82,83,84,24,85,25,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,39,120,121,122,123,43,44,124,125],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[126],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[21,22,43,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[129,130,131,132,133,11,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,29,169,170,171,172,45,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[21,174,43,45,46],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[57,175,58,59,176,60,177,178,179,180,181,182,61,183,62,184,185,186,187,188,63,189,190,191,192,193,129,130,131,132,194,195,196,197,0,198,199,200,201,202,203,204,205,206,207,208,209,210,1,211,212,49,213,214,215,216,126,217,218,64,65,66,219,220,221,222,223,224,225,226,227,2,67,228,68,69,3,4,5,229,70,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,56,245,246,247,248,133,249,6,250,251,252,7,8,253,254,9,255,256,257,10,258,11,259,260,12,13,14,261,134,262,15,16,17,18,71,72,73,74,75,76,77,19,263,78,20,21,22,264,79,23,80,81,82,83,265,84,266,24,85,25,267,86,87,88,89,135,136,137,138,139,140,268,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,90,91,92,269,270,93,94,95,96,97,98,99,100,101,102,103,104,271,272,105,106,273,107,108,109,274,110,111,112,113,114,115,116,117,118,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,26,293,294,295,296,297,162,298,163,164,165,166,167,168,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,29,316,30,31,317,169,32,33,34,318,319,320,321,322,323,324,325,326,327,328,35,36,37,119,329,170,171,330,38,39,120,121,122,331,332,172,333,334,40,335,41,123,42,43,44,336,337,338,45,46,124,125,339,340,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[341],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:327","failures":[342,343,344,345],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[184,185,346,128,347,348,349],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[350,351],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[352,353,354,67,24,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[97,102,106,111,112,116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[355,269,270,356,357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"bridgeMethod","bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.internal.RecordState:126","failures":[175,229,230,231,332],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[175,194,195,223,224,226,10,331],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[351],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:44","failures":[57,175,58,59,176,60,177,178,179,180,181,182,61,183,62,184,185,186,187,188,63,189,358,190,191,192,193,129,130,131,132,194,359,195,196,197,0,198,360,199,200,201,202,203,204,361,205,206,207,208,209,210,1,211,212,49,213,214,215,216,126,217,218,362,363,64,65,66,364,365,366,219,220,221,222,223,367,368,224,225,226,227,346,2,369,370,371,67,228,68,372,69,373,374,3,4,348,5,375,229,70,230,127,231,232,233,234,235,236,237,238,239,240,241,242,243,244,56,245,246,247,248,133,249,6,250,251,252,7,8,253,254,9,255,256,257,10,376,377,378,379,380,258,381,382,383,384,385,386,11,259,260,12,13,14,261,134,262,15,16,17,18,71,72,73,74,387,75,76,77,388,19,263,78,20,21,22,264,79,23,80,81,82,83,265,389,84,349,390,266,24,85,25,391,392,393,394,395,396,397,267,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,86,414,415,87,416,417,418,419,420,421,422,423,424,88,425,426,427,428,429,89,430,431,135,136,137,138,139,140,268,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,432,433,434,90,91,435,92,436,437,438,355,269,270,356,357,93,94,95,96,97,439,440,98,441,99,100,101,102,103,104,271,272,105,106,273,107,108,109,274,110,111,112,113,114,115,116,117,118,275,442,443,444,341,445,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,446,291,292,26,293,294,295,296,297,162,298,163,164,165,166,167,168,299,300,301,302,303,304,305,306,50,447,448,307,308,309,310,311,449,450,342,343,451,452,453,454,455,456,457,458,312,313,314,315,29,316,30,31,317,169,32,33,34,459,318,319,320,460,461,462,321,463,464,465,466,467,468,469,322,323,324,325,326,327,328,35,36,37,119,329,170,171,330,470,471,472,38,473,344,345,474,475,476,39,120,121,122,331,477,332,172,478,333,334,479,40,335,41,123,42,43,44,336,337,338,45,46,124,125,339,340,173,48,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[262],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[57,175,58,59,176,60,178,179,180,181,182,183,62,186,187,188,63,189,190,129,130,131,132,194,195,196,197,0,198,199,200,201,202,203,204,205,206,207,208,209,210,1,211,212,49,213,214,215,216,126,217,218,64,65,223,224,225,226,229,70,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,56,246,247,248,133,249,6,250,251,252,7,8,254,9,255,256,257,10,258,11,259,260,12,13,14,261,134,15,16,17,18,71,74,75,19,263,78,20,21,22,264,79,23,80,81,82,83,84,25,267,86,135,136,137,138,139,140,268,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,269,270,357,93,94,95,96,97,98,99,100,101,102,103,104,271,272,105,106,273,107,108,109,274,110,111,112,113,114,115,116,117,118,275,443,444,288,289,290,291,292,26,293,294,295,296,297,162,298,163,164,165,166,167,168,305,306,29,316,31,317,169,32,33,34,459,320,322,325,326,327,328,36,37,119,329,170,171,330,38,39,121,122,331,332,172,40,335,41,123,42,43,44,336,337,338,45,46,124,125,339,340,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[245,246,247,504],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[0,198,202,203,361,49,232,234,242],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:509","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:519","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[61,62,184,185,65,251,255,256,87,88,89],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[364,505,506,507,508,509,372],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[186,187,188,196,209,211,218,231,233,239,240,56,10,260,142,148,154,158,160,99,271,108,111,113,316,38,173,492],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[129,130,131,132,133,135,136,137,138,139,140,141,170],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[269,356,357],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[57,175,58,59,176,60,178,179,180,181,182,61,183,62,186,187,188,63,189,190,191,192,193,131,194,195,196,197,0,198,199,200,201,202,203,204,361,205,206,207,208,209,210,1,211,212,49,213,214,215,216,126,217,218,64,65,66,223,224,225,226,2,67,68,69,4,229,70,230,231,232,233,234,235,236,237,238,239,240,241,242,244,56,245,246,247,248,133,249,6,250,251,252,7,8,253,254,9,255,256,257,10,258,11,259,260,12,13,14,261,134,262,15,16,17,18,71,72,73,74,75,76,77,19,263,78,20,21,22,264,79,23,80,81,82,83,84,24,85,25,267,86,87,88,89,139,268,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,90,91,92,269,270,93,94,95,96,97,98,99,100,101,102,103,104,271,272,105,106,273,107,108,109,274,110,111,112,113,114,443,444,288,289,290,291,292,26,293,294,295,296,297,162,298,163,164,165,166,167,168,29,316,31,317,169,32,33,34,322,323,325,326,327,328,36,37,119,329,170,171,330,470,38,39,120,121,122,331,332,172,333,40,335,41,123,42,43,44,336,337,338,45,46,124,125,339,340,173,481,488,492,496,497,498],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":198,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":29,"org.easymock.tests2.UsageTest.argumentsOrdered":16,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":255,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":490,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":14,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":179,"org.easymock.tests2.DelegateToTest.testReturnException":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":136,"org.easymock.tests.MockingTest.testPartialClassMocking":90,"org.easymock.tests.MockClassControlTest.testToString":301,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":358,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":499,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":419,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":142,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":87,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":65,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":505,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":119,"org.easymock.tests2.UsageTest.wrongArguments":12,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":403,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":314,"org.easymock.samples.ExampleTest.answerVsDelegate":175,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":456,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":437,"org.easymock.tests2.UsageConstraintsTest.testNull":200,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":81,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":9,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":306,"org.easymock.tests2.CaptureTest.testPrimitive":235,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":330,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":161,"org.easymock.tests.UsageTest.moreThanOneArgument":316,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":117,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":442,"org.easymock.tests.UsageTest.argumentsOrdered":33,"org.easymock.tests.UsageVarargTest.varargIntAccepted":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":93,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":509,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":227,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":406,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":385,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":482,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":97,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":267,"org.easymock.tests.ReplayStateInvalidUsageTest.times":284,"org.easymock.tests2.DependencyTest.testClassMocking":362,"org.easymock.tests2.AnswerTest.answer":223,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":497,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":222,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":453,"org.easymock.tests2.CaptureTest.testAnd":232,"org.easymock.tests2.UsageTest.strictResetToDefault":259,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":266,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":116,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":121,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":252,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":445,"org.easymock.tests2.DelegateToTest.testDelegate":231,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":157,"org.easymock.tests.LimitationsTest.mockFinalMethod":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":311,"org.easymock.tests2.DependencyTest.testClassMockingSupport":363,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":470,"org.easymock.tests2.CaptureTest.testCapture1_2446744":236,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":389,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":155,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":220,"org.easymock.tests.UsageThrowableTest.throwError":162,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":278,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":455,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":386,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":48,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":431,"org.easymock.samples.PartialClassMockTest.testGetArea":61,"org.easymock.tests.MockingTest.testInterfaceMocking":435,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":279,"org.easymock.tests2.CompareToTest.testLessOrEqual":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":94,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":447,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":420,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":143,"org.easymock.tests2.UsageTest.niceToStrict":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":480,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":67,"org.easymock.tests2.MockBuilderTest.testCreateMock":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":427,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":400,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":151,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":7,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":452,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":312,"org.easymock.tests.UsageOverloadedMethodTest.overloading":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":424,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":172,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":209,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":107,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":339,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":208,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":241,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":446,"org.easymock.tests2.EasyMockSupportClassTest.testAll":86,"org.easymock.tests.MockClassControlTest.testEquals":305,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":270,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":159,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":221,"org.easymock.tests2.CaptureTest.testCaptureAll":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":309,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":347,"org.easymock.tests.MockNameTest.defaultName":449,"org.easymock.tests2.UsageConstraintsTest.testMatches":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":118,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":276,"org.easymock.samples.ExampleTest.voteForRemovals":60,"org.easymock.tests.UsageVarargTest.allKinds":297,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":338,"org.easymock.samples.BasicClassMockTest.testPrintContent":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":310,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":167,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":140,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":127,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":382,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":468,"org.easymock.tests2.UsageConstraintsTest.greaterThan":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":414,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":120,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":469,"org.easymock.samples.ExampleTest.voteForRemoval":58,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":391,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":187,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":457,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":265,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":11,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":322,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":487,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":250,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":135,"org.easymock.tests2.CaptureTest.testCaptureFirst":56,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":486,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":251,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":18,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":272,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":63,"org.easymock.tests2.CaptureTest.testCapture2_2446744":244,"org.easymock.tests2.UsageTest.moreThanOneArgument":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":498,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":4,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":296,"org.easymock.tests.GenericTest.testBridgedEquals":357,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":36,"org.easymock.tests.UsageExpectAndReturnTest.longType":102,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":249,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":307,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":160,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":479,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":215,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":115,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":342,"org.easymock.tests.UsageCallCountTest.tooManyCalls":37,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":428,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":105,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":402,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":147,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":166,"org.easymock.tests.MockingTest.testNiceClassMocking":438,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":72,"org.easymock.tests.MockingTest.testClassMocking":433,"org.easymock.tests2.UsageConstraintsTest.testContains":207,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":324,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":131,"org.easymock.tests2.UsageConstraintsTest.testFind":199,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":173,"org.easymock.tests.MockTypeTest.fromEasyMockClass":454,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":40,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":195,"org.easymock.tests.UsageExpectAndReturnTest.object":273,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":84,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":506,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":292,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":320,"org.easymock.tests.UsageTest.exactCallCountByLastCall":34,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":485,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":474,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":443,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":364,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":111,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":288,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":332,"org.easymock.tests.MockClassControlTest.testHashCode":304,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":377,"org.easymock.tests2.EasyMockSupportTest.testVerify":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":422,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":444,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":331,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":344,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":27,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":219,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":366,"org.easymock.tests.UsageVarargTest.varargCharAccepted":291,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":462,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":503,"org.easymock.tests2.UsageTest.openCallCountByLastCall":261,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":256,"org.easymock.tests.DefaultClassInstantiatorTest.object":321,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":473,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":318,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":423,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":149,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":164,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":354,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":396,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":376,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":24,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":303,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":148,"org.easymock.tests.CapturesMatcherTest.test":351,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":112,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":89,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":302,"org.easymock.tests2.UsageTest.resumeIfFailure":17,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":451,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":138,"org.easymock.tests2.StubTest.stubWithReturnValue":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":372,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":106,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":216,"org.easymock.tests2.SerializationTest.testAllMockedMethod":247,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":496,"org.easymock.samples.SupportTest.voteForRemovals":62,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":355,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":379,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":154,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":504,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":502,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":367,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":476,"org.easymock.tests.UsageExpectAndThrowTest.object":152,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":213,"org.easymock.tests2.DelegateToTest.testWrongClass":230,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":124,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":125,"org.easymock.samples.ConstructorCalledMockTest.testTax":184,"org.easymock.tests.UsageStrictMockTest.range":43,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":409,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":71,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":153,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":411,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":286,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":313,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":448,"org.easymock.tests2.CaptureTest.testCaptureNone":240,"org.easymock.tests.UsageUnorderedTest.message":38,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":47,"org.easymock.tests.UsageVerifyTest.twoReturns":46,"org.easymock.tests.UsageVarargTest.varargByteAccepted":295,"org.easymock.tests2.ThreadingTest.testThreadSafe":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":425,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":328,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":460,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":181,"org.easymock.tests2.CaptureTest.testCapture_2617107":234,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":500,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":171,"org.easymock.tests2.UsageConstraintsTest.any":205,"org.easymock.tests2.StubTest.stub":248,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":501,"org.easymock.tests.UsageExpectAndThrowTest.longType":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":137,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":466,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":282,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":20,"org.easymock.tests2.SerializationTest.testClass":245,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":258,"org.easymock.tests.LimitationsTest.mockNativeMethod":98,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":114,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":356,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":395,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":353,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":264,"org.easymock.tests2.NameTest.nameForMocksControl":193,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":397,"org.easymock.tests2.MockedExceptionTest.testMockedException":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":415,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":169,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":146,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":92,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":359,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":79,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":69,"org.easymock.tests.MockingTest.testNicePartialClassMocking":91,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":83,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":393,"org.easymock.tests2.CompareToTest.testCompareEqual":53,"org.easymock.tests2.CaptureTest.testCaptureLast":239,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":471,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":77,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":203,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":214,"org.easymock.tests.MockingTest.testTwoMocks":434,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":99,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":150,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":217,"org.easymock.samples.ExampleTest.removeNonExistingDocument":177,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":399,"org.easymock.tests.UsageStrictMockTest.differentMethods":44,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":280,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":378,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":464,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":188,"org.easymock.tests2.MockBuilderTest.testCreateMockString":5,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":416,"org.easymock.tests.UsageExpectAndThrowTest.floatType":144,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":413,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":224,"org.easymock.tests.UsageVerifyTest.twoThrows":45,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":365,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":88,"org.easymock.samples.ExampleTest.voteAgainstRemoval":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":491,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":50,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":85,"org.easymock.tests.LimitationsTest.privateConstructor":440,"org.easymock.tests2.UsageConstraintsTest.testNotNull":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":168,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":129,"org.easymock.tests2.UsageTest.defaultResetToNice":262,"org.easymock.samples.ExampleTest.voteAgainstRemovals":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":492,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":110,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":394,"org.easymock.tests.UsageVarargTest.differentLength":26,"org.easymock.tests2.CallbackTest.callback":10,"org.easymock.tests2.UsageConstraintsTest.equals":360,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":349,"org.easymock.tests.UsageTest.openCallCountByLastCall":317,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":196,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":170,"org.easymock.tests.UsageCallCountTest.tooFewCalls":326,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":74,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":315,"org.easymock.tests.UsageThrowableTest.throwCheckedException":165,"org.easymock.tests.MockingTest.testStrictClassMocking":432,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":141,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":398,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":73,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":75,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":226,"org.easymock.tests2.CompareToTest.testGreateOrEqual":54,"org.easymock.tests.ObjectMethodsTest.testHashCode":319,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":508,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":189,"org.easymock.tests2.NameTest.nameForNiceMock":192,"org.easymock.tests2.DependencyTest.testInterfaceMocking":64,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":507,"org.easymock.samples.ExampleTest.addDocument":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":430,"org.easymock.tests2.DelegateToTest.testStubDelegate":70,"org.easymock.tests2.AnswerTest.stubAnswer":225,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":123,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":373,"org.easymock.tests.UsageVarargTest.varargLongAccepted":294,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":489,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":113,"org.easymock.tests.UsageExpectAndReturnTest.floatType":101,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":66,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":185,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":478,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":384,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":212,"org.easymock.tests.UsageThrowableTest.noUpperLimit":298,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":197,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":404,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":237,"org.easymock.tests2.SerializationTest.test":246,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":463,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":100,"org.easymock.tests2.UsageConstraintsTest.testSame":201,"org.easymock.samples.SupportTest.addDocument":183,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":387,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":417,"org.easymock.tests.GenericTest.testPackageScope":269,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":484,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":383,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":436,"org.easymock.tests2.NameTest.nameForMock":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":108,"org.easymock.tests2.UsageStrictMockTest.differentMethods":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":348,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":390,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":103,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":156,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":122,"org.easymock.tests2.MockedExceptionTest.testRealException":132,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":494,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":493,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":78,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":287,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":329,"org.easymock.tests2.NameTest.nameForStrictMock":191,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":371,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":194,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":82,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":408,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":465,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":49,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":2,"org.easymock.tests2.UsageStrictMockTest.range":21,"org.easymock.tests2.UsageConstraintsTest.lessThan":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":488,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":421,"org.easymock.tests2.CaptureTest.testCaptureRightOne":242,"org.easymock.tests2.UsageConstraintsTest.testOr":202,"org.easymock.tests.UsageRangeTest.combination":39,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":23,"org.easymock.tests.UsageTest.wrongArguments":31,"org.easymock.tests2.MockBuilderTest.testWithConstructor":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":418,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":300,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":481,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":109,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":467,"org.easymock.tests.UsageVarargTest.varargShortAccepted":293,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":35,"org.easymock.tests2.UsageConstraintsTest.cmpTo":206,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":368,"org.easymock.tests2.CompareToTest.testLessThan":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":483,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":134,"org.easymock.tests2.CaptureTest.testCaptureFromStub":243,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":277,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":369,"org.easymock.tests.UsageTest.unexpectedCallWithArray":30,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":41,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":327,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":128,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":274,"org.easymock.tests2.CaptureTest.testCapture":350,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":42,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.samples.ExampleTest.addAndChangeDocument":178,"org.easymock.tests.UsageStrictMockTest.testVerify":337,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":180,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":335,"org.easymock.tests2.CompareToTest.testGreateThan":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":308,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":95,"org.easymock.tests.LimitationsTest.abstractClass":439,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":96,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":333,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":8,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":289}}]
