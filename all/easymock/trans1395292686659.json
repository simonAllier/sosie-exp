[{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,255,256,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[480,476,477,478],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[295,299,481,323,331,334,339,482,344,483,484],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,8,16,18,20,21,22,23,24,25,26,40,42,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,85,86,87,88,89,90,91,92,93,110,116,118,119,120,122,123,124,125,126,127,128,129,130,131,132,134,135,137,150,151,152,153,160,164,165,167,171,172,173,174,175,176,178,179,188,189,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,243,244,245,246,247,248,249,250,252,254,255,255,256,256,257,263,269,278,279,280,282,283,284,285,286,287,288,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,326,332,336,338,340,343,345,349,352,362,368,371,372,373,374,375,376,379,382,383,384,385,388,389,390,391,392,393,394,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,436,443,444,445,447,448,449,450,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[15],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type","org.easymock.MockType.STRICT":"type"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[235,239],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[2,22,23,51,53,54,55,56,57,58,85,90,171,172,173,174,175,176,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,227,288,300,307,313,314,315,316],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:191","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>;\n    try {\n        java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n    }\n    T T;\n    try {\n        java.lang.reflect.Constructor<?>.setAccessible(true);\n        T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n    } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n    } catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n    }\n    return T;\n} else {\n    net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory;\n    try {\n        net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n    } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n    }\n    net.sf.cglib.proxy.Factory.getCallback(0);\n    return ((T)(net.sf.cglib.proxy.Factory));\n}","type":"CtIfImpl"},"failures":[15,16,17,18,19,38,39,40,41,121,161,162,163,164,165,167,170,182,185,191,192,193,194,195,196,197,198,233,234,235,236,237,238,239,240,241,255,255,256,256,257,260,261,289,290,293,294,295,296,298,299,313,314,315,322,323,324,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,379,380,381,382,383,384,385,386,387,476,478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[456],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:269","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[235,239],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[234,235,239],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[403,405,407,408,409,412,413,414,415],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[44,485,486,487,488],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[25,44,47,489,87,88,91,92,138,227,228,284,303,309,310],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,13,14,16,17,18,20,21,22,23,24,25,26,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,85,86,88,89,90,91,92,93,110,116,118,119,120,121,122,123,124,125,126,132,133,134,135,136,137,139,140,141,143,144,145,146,147,148,149,150,151,152,153,155,160,163,164,165,167,171,172,173,174,175,176,177,178,179,180,181,188,189,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,242,243,244,245,246,247,248,249,250,251,252,254,255,255,256,256,257,258,259,260,261,262,263,269,278,279,280,281,282,283,284,285,286,287,288,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,326,327,328,329,330,332,336,338,340,343,349,352,362,368,371,372,373,374,375,376,379,382,383,384,385,388,389,390,391,392,393,394,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,436,447,448,449,450,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[15,16,17,18,19,38,39,40,41,121,161,162,163,164,165,167,170,182,185,191,192,193,194,195,196,197,198,234,235,236,237,238,239,241,255,255,256,256,257,260,261,276,277,289,490,491,290,293,294,295,296,298,299,313,314,315,322,323,330,332,333,335,336,337,338,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,379,380,381,382,383,384,385,386,387,476,478],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[258,259,264,265,266,267,268,269,270,271,272,273,274,275,431,432,433,434,435,436,437,438,439,440,441,442],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[492,493,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[16,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[495,496,403,404,405,406,407,408,409,410,412,497,413,414,415,416],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[480,476,477,478],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[44,485,486,87,487,488],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[100,389,392,393],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[448],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[498,447,449,466,472],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[44,485,486,87,487,488],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[15,19],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[235,239],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:480","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:497","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T> , this)","type":"CtReturnImpl"},"failures":[255,256,257,338,340,352,362],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[499,500,501,502,503,323,339,341,476],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[397,401],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[1,20,21,24,45,47,48,51,54,55,56,57,58,59,60,63,65,66,67,68,70,71,72,73,75,76,77,78,85,86,89,90,122,123,124,125,126,175,188,189,200,201,202,203,206,208,209,210,211,213,214,215,216,218,219,220,221,222,223,224,225,226,227,248,257,282,284,285,288,301,302,304,306,307,311,317,318,336,375,384,392,393,394,396,399,402,404,406,407,410,411,412,413,416,417,418,419,422,423,426,428,447,448,449,450,452,453,454,455,456,457,459,461,462,463,464,465,466,467,468,469,470,472,473,474,475,479],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[21,150,391,450,456],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":450,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":85,"org.easymock.tests2.UsageTest.argumentsOrdered":310,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":427,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":104,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":305,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":258,"org.easymock.tests2.DelegateToTest.testReturnException":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":172,"org.easymock.tests.MockingTest.testPartialClassMocking":164,"org.easymock.tests.MockClassControlTest.testToString":193,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":325,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":83,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":202,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":352,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":499,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":457,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":20,"org.easymock.tests2.UsageTest.wrongArguments":303,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":442,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":231,"org.easymock.samples.ExampleTest.answerVsDelegate":248,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":185,"org.easymock.tests2.UsageConstraintsTest.testNull":453,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":169,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":374,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":426,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":198,"org.easymock.tests2.CaptureTest.testPrimitive":406,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":24,"org.easymock.tests.UsageTest.moreThanOneArgument":86,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":221,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":373,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":244,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":177,"org.easymock.tests.UsageTest.argumentsOrdered":92,"org.easymock.tests.UsageVarargTest.varargIntAccepted":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":109,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":503,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":330,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":491,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":274,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":96,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":126,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":436,"org.easymock.tests.ReplayStateInvalidUsageTest.times":34,"org.easymock.tests2.DependencyTest.testClassMocking":276,"org.easymock.tests2.AnswerTest.answer":388,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":111,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":446,"org.easymock.tests2.CaptureTest.testAnd":403,"org.easymock.tests2.UsageTest.strictResetToDefault":301,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":334,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":382,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":421,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":224,"org.easymock.tests2.DelegateToTest.testDelegate":402,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":217,"org.easymock.tests.LimitationsTest.mockFinalMethod":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":131,"org.easymock.tests2.DependencyTest.testClassMockingSupport":277,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":79,"org.easymock.tests2.CaptureTest.testCapture1_2446744":407,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":378,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":215,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":444,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":28,"org.easymock.tests.UsageThrowableTest.throwError":51,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":184,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":246,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":370,"org.easymock.samples.PartialClassMockTest.testGetArea":257,"org.easymock.tests.MockingTest.testInterfaceMocking":166,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":29,"org.easymock.tests2.CompareToTest.testLessOrEqual":498,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":123,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":152,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":203,"org.easymock.tests2.UsageTest.niceToStrict":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":357,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":94,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":336,"org.easymock.tests2.MockBuilderTest.testCreateMock":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":365,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":439,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":487,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":211,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":422,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":6,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":229,"org.easymock.tests.UsageOverloadedMethodTest.overloading":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":367,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":463,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":135,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":70,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":199,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":462,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":412,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":142,"org.easymock.tests.MockClassControlTest.testEquals":197,"org.easymock.tests2.EasyMockSupportClassTest.testAll":349,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":17,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":219,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":445,"org.easymock.tests2.CaptureTest.testCaptureAll":404,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":129,"org.easymock.tests.MockNameTest.defaultName":190,"org.easymock.tests2.UsageConstraintsTest.testMatches":464,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":245,"org.easymock.samples.ExampleTest.voteForRemovals":252,"org.easymock.tests.UsageVarargTest.allKinds":150,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":130,"org.easymock.samples.BasicClassMockTest.testPrintContent":261,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":57,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":271,"org.easymock.tests2.UsageConstraintsTest.greaterThan":466,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":223,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":385,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":241,"org.easymock.samples.ExampleTest.voteForRemoval":249,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":386,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":318,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":186,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":377,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":121,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":300,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":101,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":419,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":347,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":171,"org.easymock.tests2.CaptureTest.testCaptureFirst":416,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":420,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":312,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":138,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":66,"org.easymock.tests2.CaptureTest.testCapture2_2446744":415,"org.easymock.tests2.UsageTest.moreThanOneArgument":302,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":112,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":343,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":149,"org.easymock.tests.GenericTest.testBridgedEquals":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":13,"org.easymock.tests.UsageExpectAndReturnTest.longType":62,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":417,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":127,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":220,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":471,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":160,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":218,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":242,"org.easymock.tests.UsageCallCountTest.tooManyCalls":14,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":366,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":441,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":207,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":56,"org.easymock.tests.MockingTest.testNiceClassMocking":170,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":294,"org.easymock.tests.MockingTest.testClassMocking":162,"org.easymock.tests2.UsageConstraintsTest.testContains":461,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":7,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":315,"org.easymock.tests2.UsageConstraintsTest.testFind":452,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":201,"org.easymock.tests.MockTypeTest.fromEasyMockClass":183,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":396,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":42,"org.easymock.tests.UsageExpectAndReturnTest.object":69,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":379,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":425,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":500,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":144,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":157,"org.easymock.tests.UsageTest.exactCallCountByLastCall":93,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":99,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":178,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":323,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":139,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":75,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":134,"org.easymock.tests.MockClassControlTest.testHashCode":196,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":265,"org.easymock.tests2.EasyMockSupportTest.testVerify":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":359,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":179,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":132,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":4,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":443,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":430,"org.easymock.tests.UsageVarargTest.varargCharAccepted":143,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":233,"org.easymock.tests2.CaptureTest.testCaptureMultiple":496,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":117,"org.easymock.tests2.UsageTest.openCallCountByLastCall":306,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":492,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":428,"org.easymock.tests.DefaultClassInstantiatorTest.object":234,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":3,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":155,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":489,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":360,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":434,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":264,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":195,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":383,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":208,"org.easymock.tests.CapturesMatcherTest.test":495,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":76,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":118,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":368,"org.easymock.tests2.UsageTest.resumeIfFailure":311,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":182,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":490,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":174,"org.easymock.tests2.StubTest.stubWithReturnValue":288,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":339,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":472,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":68,"org.easymock.tests2.SerializationTest.testAllMockedMethod":478,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":110,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":488,"org.easymock.samples.SupportTest.voteForRemovals":263,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":15,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":214,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":480,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":116,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":389,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":84,"org.easymock.tests.UsageExpectAndThrowTest.object":212,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":469,"org.easymock.tests2.DelegateToTest.testWrongClass":400,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":188,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":189,"org.easymock.tests.UsageStrictMockTest.range":47,"org.easymock.samples.ConstructorCalledMockTest.testTax":255,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":291,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":424,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":293,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":213,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":338,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":36,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":230,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":485,"org.easymock.tests2.CaptureTest.testCaptureNone":411,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":153,"org.easymock.tests.UsageUnorderedTest.message":25,"org.easymock.tests.UsageVerifyTest.twoReturns":228,"org.easymock.tests.UsageVarargTest.varargByteAccepted":148,"org.easymock.tests2.ThreadingTest.testThreadSafe":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":363,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":11,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":158,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":260,"org.easymock.tests2.CaptureTest.testCapture_2617107":405,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":23,"org.easymock.tests2.UsageConstraintsTest.any":459,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":33,"org.easymock.tests2.StubTest.stub":287,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":115,"org.easymock.tests.UsageExpectAndThrowTest.longType":205,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":238,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":32,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":283,"org.easymock.tests2.SerializationTest.testClass":476,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":269,"org.easymock.tests.LimitationsTest.mockNativeMethod":40,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":18,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":78,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":433,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":286,"org.easymock.tests2.NameTest.nameForMocksControl":329,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":435,"org.easymock.tests2.MockedExceptionTest.testMockedException":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":351,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":90,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":395,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":206,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":371,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":340,"org.easymock.tests.MockingTest.testNicePartialClassMocking":165,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":376,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":431,"org.easymock.tests2.CaptureTest.testCaptureLast":410,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":80,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":456,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":299,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":470,"org.easymock.tests.MockingTest.testTwoMocks":163,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":481,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":210,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":309,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":474,"org.easymock.samples.ExampleTest.removeNonExistingDocument":253,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":438,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":30,"org.easymock.tests.UsageStrictMockTest.differentMethods":48,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":266,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":236,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":319,"org.easymock.tests2.MockBuilderTest.testCreateMockString":345,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":191,"org.easymock.tests.UsageExpectAndThrowTest.floatType":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":353,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":348,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":391,"org.easymock.tests.UsageVerifyTest.twoThrows":227,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":324,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":362,"org.easymock.samples.ExampleTest.voteAgainstRemoval":250,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":105,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":384,"org.easymock.tests.LimitationsTest.privateConstructor":39,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":484,"org.easymock.tests2.UsageConstraintsTest.testNotNull":473,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":58,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":313,"org.easymock.tests2.UsageTest.defaultResetToNice":308,"org.easymock.samples.ExampleTest.voteAgainstRemovals":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":106,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":74,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":432,"org.easymock.tests.UsageVarargTest.differentLength":145,"org.easymock.tests2.CallbackTest.callback":479,"org.easymock.tests2.UsageConstraintsTest.equals":451,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":380,"org.easymock.tests.UsageTest.openCallCountByLastCall":89,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":447,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":22,"org.easymock.tests.UsageCallCountTest.tooFewCalls":9,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":296,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":232,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":0,"org.easymock.tests.UsageThrowableTest.throwCheckedException":55,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":486,"org.easymock.tests.MockingTest.testStrictClassMocking":161,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":2,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":437,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":295,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":35,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":297,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":393,"org.easymock.tests.ObjectMethodsTest.testHashCode":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":502,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":321,"org.easymock.tests2.NameTest.nameForNiceMock":328,"org.easymock.tests2.DependencyTest.testInterfaceMocking":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":501,"org.easymock.samples.ExampleTest.addDocument":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":364,"org.easymock.tests2.DelegateToTest.testStubDelegate":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":369,"org.easymock.tests2.AnswerTest.stubAnswer":392,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":45,"org.easymock.tests.UsageVarargTest.varargLongAccepted":147,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":103,"org.easymock.tests.UsageExpectAndReturnTest.floatType":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":77,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":322,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":256,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":467,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":136,"org.easymock.tests.UsageThrowableTest.noUpperLimit":52,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":273,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":448,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":289,"org.easymock.tests2.SerializationTest.test":477,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":408,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":235,"org.easymock.tests2.UsageConstraintsTest.testSame":454,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":60,"org.easymock.samples.SupportTest.addDocument":262,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":354,"org.easymock.tests.GenericTest.testPackageScope":16,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":98,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":272,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":168,"org.easymock.tests2.NameTest.nameForMock":326,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":71,"org.easymock.tests2.UsageStrictMockTest.differentMethods":285,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":344,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":381,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":63,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":216,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":154,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":225,"org.easymock.tests2.MockedExceptionTest.testRealException":316,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":108,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":107,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":282,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":21,"org.easymock.tests2.NameTest.nameForStrictMock":327,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":335,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":493,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":394,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":375,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":290,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":468,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":237,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":332,"org.easymock.tests2.UsageStrictMockTest.range":284,"org.easymock.tests2.UsageConstraintsTest.lessThan":475,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":268,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":102,"org.easymock.tests2.CaptureTest.testCaptureRightOne":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":358,"org.easymock.tests2.UsageConstraintsTest.testOr":455,"org.easymock.tests.UsageRangeTest.combination":222,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":372,"org.easymock.tests.UsageTest.wrongArguments":88,"org.easymock.tests2.MockBuilderTest.testWithConstructor":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":355,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":192,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":95,"org.easymock.tests.UsageVarargTest.varargShortAccepted":146,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":239,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":12,"org.easymock.tests2.UsageConstraintsTest.cmpTo":460,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":97,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":307,"org.easymock.tests2.CaptureTest.testCaptureFromStub":414,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":27,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":333,"org.easymock.tests.UsageTest.unexpectedCallWithArray":87,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":10,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":482,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":73,"org.easymock.tests2.CaptureTest.testCapture":497,"org.easymock.tests2.UsageConstraintsTest.constraints":449,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":46,"org.easymock.samples.ExampleTest.addAndChangeDocument":254,"org.easymock.tests.UsageStrictMockTest.testVerify":50,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":259,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":128,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":409,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":124,"org.easymock.tests.LimitationsTest.abstractClass":38,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":65,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":423,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":140}}]
