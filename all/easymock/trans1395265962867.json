[{"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this","key":"key"}},{"position":"org.easymock.internal.MocksControl:136","failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,91,92,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[128,26,30,129,130,131,132,133,56,57],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,91,91,92,92,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[176,177,178,39,91,92],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs","constructor":"constructor"}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[128,129,130,131,179,180,57],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[],"status":0,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:40","failures":[181,182,183,184,185,186,187,151,1,188,189,190,191,192,5,6,7,170,8,193,194,9,195,196,197,13,14],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[30,198,31,199],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[30,198,31,199],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[200],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksBehavior:200","failures":[201],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[202,200,203],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[204,205,206],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[118,207,208],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[19,22,24,25,28,32,33,209,34,35,36,38,42,43,44,210,200,211,212,56,151,1,188,61,64,74,80,83,84,85,86,213,87,88,93,214,215,216,217,218,152,153,154,155,156,219,220,221,222,159,162,163,111,170,8,193,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,171,172,173,174,124,125,126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[30,198,31,199],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[239,240],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[241,242,243,244,151,188,245,189,246,247,248,170,193,249,194,250,197,13,14],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[251,252,149,253,254],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[114,115,116,117,119,120],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:206","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[255,256],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[257,258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[128,26,30,129,130,131,132,133,56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[259,18,260,19,20,21,22,23,24,25,26,27,28,261,262,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,263,264,265,266,267,268,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,91,92,92,93,94,95,96,97,98,269,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[134,135,270,271,136,137,138,139,0,272,273,274,140,275,141,142,276,143,144,145,277,278,279,146,147,148,22,28,29,30,198,32,209,34,36,280,201,210,281,282,200,283,284,285,252,286,287,288,289,290,291,292,293,149,253,294,211,150,56,295,151,296,1,188,245,297,298,189,2,299,300,301,302,3,4,303,304,305,306,307,308,309,310,84,85,87,88,311,216,218,312,313,314,315,316,317,318,152,153,154,155,156,319,320,219,158,321,159,160,322,323,161,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,162,163,344,111,6,345,7,170,346,8,193,249,347,194,9,10,348,349,11,12,350,351,352,353,354,355,223,224,225,226,227,228,356,357,229,230,358,231,232,233,359,234,235,236,237,238,196,197,13,14,171,172,173,174,175,124,125,126,360],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[128,129,130,131,179,180,57],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[181,182,183,184,185,187,151,1,188,189,191,192,5,6,170,8,193,194,195,196,197,13,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[251,285,286,287,288,289,290,291,292,361,293,149,294],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":271,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":347,"org.easymock.tests2.UsageTest.argumentsOrdered":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":203,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":300,"org.easymock.tests2.StubTest.stubWithReturnValue":150,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":128,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":279,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":230,"org.easymock.tests2.SerializationTest.testAllMockedMethod":31,"org.easymock.tests2.DelegateToTest.testReturnException":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":352,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":258,"org.easymock.tests.MockingTest.testPartialClassMocking":124,"org.easymock.samples.SupportTest.voteForRemovals":214,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":186,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":94,"org.easymock.tests.MockClassControlTest.testToString":101,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":240,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":336,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":68,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":324,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":64,"org.easymock.tests.UsageExpectAndThrowTest.object":334,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":277,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":212,"org.easymock.tests2.DelegateToTest.testWrongClass":283,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":129,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":162,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":163,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":272,"org.easymock.tests2.UsageTest.wrongArguments":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":159,"org.easymock.samples.ConstructorCalledMockTest.testTax":91,"org.easymock.tests.UsageStrictMockTest.range":8,"org.easymock.samples.ExampleTest.answerVsDelegate":311,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":108,"org.easymock.tests2.UsageConstraintsTest.testNull":137,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":335,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":34,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":24,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":106,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":263,"org.easymock.tests2.CaptureTest.testPrimitive":287,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":161,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":343,"org.easymock.tests.UsageTest.moreThanOneArgument":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":58,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":11,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":173,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":190,"org.easymock.tests.UsageUnorderedTest.message":6,"org.easymock.tests.UsageVerifyTest.twoReturns":14,"org.easymock.tests2.ThreadingTest.testThreadSafe":280,"org.easymock.tests.UsageTest.argumentsOrdered":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":75,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":89,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":187,"org.easymock.tests2.CaptureTest.testCapture_2617107":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":152,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":18,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":180,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":250,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":323,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":49,"org.easymock.tests2.UsageConstraintsTest.any":273,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":23,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":353,"org.easymock.tests.UsageExpectAndThrowTest.longType":327,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":118,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.tests2.SerializationTest.testClass":30,"org.easymock.tests.LimitationsTest.mockNativeMethod":111,"org.easymock.tests2.DependencyTest.testClassMocking":51,"org.easymock.tests2.AnswerTest.answer":304,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":238,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":97,"org.easymock.tests2.CaptureTest.testAnd":285,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":267,"org.easymock.tests2.UsageTest.strictResetToDefault":298,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":41,"org.easymock.tests2.NameTest.nameForMocksControl":244,"org.easymock.tests2.MockedExceptionTest.testMockedException":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":172,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":63,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":349,"org.easymock.tests2.DelegateToTest.testDelegate":284,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":328,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":126,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":32,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":25,"org.easymock.tests.MockingTest.testNicePartialClassMocking":125,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":339,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":36,"org.easymock.tests.LimitationsTest.mockFinalMethod":112,"org.easymock.tests2.CaptureTest.testCaptureLast":291,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":196,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":88,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":278,"org.easymock.tests2.DependencyTest.testClassMockingSupport":52,"org.easymock.tests.MockingTest.testTwoMocks":123,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":195,"org.easymock.tests2.CaptureTest.testCapture1_2446744":288,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":337,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":332,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":3,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":147,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":16,"org.easymock.tests.UsageThrowableTest.throwError":312,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":344,"org.easymock.tests.UsageStrictMockTest.differentMethods":193,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":256,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":116,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":201,"org.easymock.tests2.ConstraintsToStringTest.andToString":185,"org.easymock.tests2.MockBuilderTest.testCreateMockString":29,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":99,"org.easymock.tests.UsageExpectAndThrowTest.floatType":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":175,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":60,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":305,"org.easymock.tests.UsageVerifyTest.twoThrows":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":74,"org.easymock.samples.PartialClassMockTest.testGetArea":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":153,"org.easymock.samples.ExampleTest.voteAgainstRemoval":217,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":325,"org.easymock.tests2.UsageTest.niceToStrict":299,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":69,"org.easymock.tests.LimitationsTest.privateConstructor":110,"org.easymock.tests2.ThreadingTest.testChangeDefault":17,"org.easymock.tests2.UsageConstraintsTest.testNotNull":146,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":318,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":53,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":165,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":22,"org.easymock.tests2.MockBuilderTest.testCreateMock":27,"org.easymock.samples.ExampleTest.voteAgainstRemovals":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":257,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":77,"org.easymock.tests2.CallbackTest.callback":310,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":39,"org.easymock.tests.UsageTest.openCallCountByLastCall":348,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":333,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":182,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":134,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":246,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":322,"org.easymock.tests.UsageCallCountTest.tooFewCalls":248,"org.easymock.tests.UsageOverloadedMethodTest.overloading":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":73,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":231,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":86,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":275,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":207,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":292,"org.easymock.tests.UsageThrowableTest.throwCheckedException":315,"org.easymock.tests2.EasyMockSupportClassTest.testAll":61,"org.easymock.tests.MockClassControlTest.testEquals":105,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":96,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":341,"org.easymock.tests.MockingTest.testStrictClassMocking":121,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":191,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":264,"org.easymock.tests2.CaptureTest.testCaptureAll":252,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":321,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":87,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":85,"org.easymock.tests2.UsageConstraintsTest.testMatches":142,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":213,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":307,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":174,"org.easymock.samples.ExampleTest.voteForRemovals":218,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":179,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":281,"org.easymock.tests2.NameTest.nameForNiceMock":243,"org.easymock.tests2.DependencyTest.testInterfaceMocking":211,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":131,"org.easymock.samples.BasicClassMockTest.testPrintContent":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":76,"org.easymock.tests2.DelegateToTest.testStubDelegate":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":81,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":317,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":295,"org.easymock.tests2.AnswerTest.stubAnswer":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":355,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":133,"org.easymock.tests2.UsageConstraintsTest.greaterThan":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":62,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":220,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":44,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":249,"org.easymock.samples.ExampleTest.voteForRemoval":216,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":120,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":45,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":237,"org.easymock.tests.UsageExpectAndReturnTest.floatType":225,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":56,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":37,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":92,"org.easymock.tests2.ConstraintsToStringTest.orToString":181,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":144,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":297,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":113,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":135,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":47,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":289,"org.easymock.tests2.SerializationTest.test":198,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":26,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":208,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":115,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":313,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":224,"org.easymock.tests2.UsageConstraintsTest.testSame":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":351,"org.easymock.tests2.CaptureTest.testCaptureFirst":294,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":202,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":303,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":15,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":66,"org.easymock.tests.GenericTest.testPackageScope":95,"org.easymock.tests2.CaptureTest.testCapture2_2446744":253,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":210,"org.easymock.tests2.UsageTest.moreThanOneArgument":189,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":166,"org.easymock.tests.GenericTest.testBridgedEquals":98,"org.easymock.tests2.NameTest.nameForMock":241,"org.easymock.tests.UsageExpectAndReturnTest.longType":226,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":342,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":232,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":157,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":340,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":178,"org.easymock.tests2.UsageStrictMockTest.differentMethods":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":171,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":40,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":227,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":338,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":222,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":168,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":192,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":329,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":151,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":316,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":160,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":84,"org.easymock.tests.MockingTest.testNiceClassMocking":127,"org.easymock.tests.MockingTest.testClassMocking":122,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":260,"org.easymock.tests2.NameTest.nameForStrictMock":242,"org.easymock.tests2.UsageConstraintsTest.testContains":140,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":55,"org.easymock.tests2.UsageConstraintsTest.testFind":136,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":320,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":21,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":308,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":206,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":35,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":345,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":309,"org.easymock.tests.UsageExpectAndReturnTest.object":358,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":50,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":117,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":145,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":38,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":19,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":148,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":265,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":130,"org.easymock.tests.UsageTest.exactCallCountByLastCall":350,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":259,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":132,"org.easymock.tests2.CaptureTest.testCaptureRightOne":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":70,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":255,"org.easymock.tests2.UsageConstraintsTest.testOr":139,"org.easymock.tests.UsageRangeTest.combination":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":57,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":235,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":33,"org.easymock.tests.UsageTest.wrongArguments":10,"org.easymock.tests2.MockBuilderTest.testWithConstructor":176,"org.easymock.tests.MockClassControlTest.testHashCode":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":67,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":228,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":71,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":119,"org.easymock.tests2.UsageConstraintsTest.cmpTo":274,"org.easymock.tests2.CaptureTest.testCaptureMultiple":251,"org.easymock.tests2.UsageTest.openCallCountByLastCall":301,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":302,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":205,"org.easymock.tests.DefaultClassInstantiatorTest.object":114,"org.easymock.tests2.CaptureTest.testCaptureFromStub":149,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":20,"org.easymock.tests.UsageTest.unexpectedCallWithArray":9,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":5,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":72,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":314,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":268,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":239,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":177,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":359,"org.easymock.tests2.CaptureTest.testCapture":361,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":346,"org.easymock.tests2.UsageConstraintsTest.constraints":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":42,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":103,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":330,"org.easymock.tests2.ConstraintsToStringTest.notToString":183,"org.easymock.tests.CapturesMatcherTest.test":254,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":80,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":102,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":184,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":290,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":266,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":154,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":356,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":107,"org.easymock.tests.LimitationsTest.abstractClass":109,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":155,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":48}}]
