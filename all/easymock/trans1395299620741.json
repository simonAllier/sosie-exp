[{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[7,8,9,10],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"equalsMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[47,48,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,24,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,8,95,96,97,98,99,9,100,101,102,103,104,105,106,107,108,109,110,10,111,112,11,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,25,152,153,26,154,155,156,157,158,159,160,27,28,29,161,30,31,32,162,163,33,164,165,166,167,168,34,169,170,171,172,173,174,175,176,177,178,35,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,5,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,12,225,226,13,14,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,15,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,36,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,37,16,17,18,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,47,394,395,396,397,398,399,400,401,402,403,404,405,406,407,19,408,409,410,411,412,413,20,414,415,21,22,416,417,418,419,420,421,422,423,424,425,38,39,426,40,427,41,428,429,430,431,42,43,44,432,433,434,435,436,437,438,439,440,441,442,443,444,23,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,45,46,477,478,479,480,481,482,483,484,485],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"control"}},{"position":"org.easymock.internal.MockBuilder:89","failures":[167,168,486,214],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:75","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:214","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[487,123,124,125,126,127,128,129,130,132,488,133,134,135,136,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","bridgeMethod":"bridgeMethod","candidateMethods":"candidateMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[51,53,376],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[217],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[113,119,120,226,281,282,285,286,17,18,413,415,490,427],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matching"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[425],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[9,106,10,243],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[85,86,87,88,90,91,92,93,94,8,95,96,97,98,99,9,100,101,102,103,104,105,106,107,108,109,110,10,123,124,125,126,127,128,129,130,131,132,133,134,135,136,140,147,149,33,12,243,252,253,262,263,264,265,266,297,298,340,365,413,20,427,466,467,468,469,470],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[491,492,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[59,11,113,119,120,185,12,226,13,232,245,248,251,15,281,282,285,286,16,17,18,406,407,413,20,415,21,427,435,439],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[209],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[139],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[494],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[87,88,90,91,92,93,94,8,95,96,104,105,109,110,123,124,125,126,133,134],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[47,48,49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[495],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"bridgeMethod","equalsMethod":"result"}},{"position":"org.easymock.ConstructorArgs:54","failures":[496,497,61,62,63,24,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,153,157,158,159,209,5,498,499,6,219,500,501,473,474],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[259,262],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[50,52,53,54,56,24,66,76,82,85,86,87,88,90,91,92,93,94,8,96,97,98,99,9,100,101,102,103,104,105,106,107,108,109,110,10,111,112,11,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,150,151,25,152,153,26,155,156,157,159,160,27,28,29,161,30,31,32,162,33,166,167,168,34,171,174,175,176,177,178,35,179,185,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,214,215,216,217,220,221,222,223,224,12,225,226,13,14,232,239,240,241,242,252,253,257,258,259,260,261,262,263,264,265,266,270,271,273,280,15,281,282,283,284,285,286,287,288,289,290,36,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,325,326,327,328,329,330,331,37,16,17,18,332,334,335,336,337,338,339,340,341,354,355,356,358,359,360,361,362,363,364,365,396,397,398,399,400,411,412,413,20,414,415,21,22,417,418,419,420,421,422,423,424,38,39,427,440,442,443,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,45,46,477,478,479,480,481,482,484,485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[95],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[150,344,381,388,469],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[87,88,91,93,94,95,104,109,123,125,133],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:813","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[66,76,82,159,162,164,167,168,170,177,209,5,210,211,212,213,214,216,217,218,219,221,222,425,426,432,437,473,473,474,474,485],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[159,0,1,2,502,209,5,6,219],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[496,497,153,157,158,5,498,499,6,500,501],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":88,"org.easymock.tests2.UsageTest.argumentsOrdered":120,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":280,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":202,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":376,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":115,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":471,"org.easymock.tests2.DelegateToTest.testReturnException":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":337,"org.easymock.tests.MockingTest.testPartialClassMocking":270,"org.easymock.tests.MockClassControlTest.testToString":429,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":142,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":70,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":303,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":208,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":0,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":8,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":466,"org.easymock.tests2.UsageTest.wrongArguments":113,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":301,"org.easymock.samples.ExampleTest.answerVsDelegate":478,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":437,"org.easymock.tests2.UsageConstraintsTest.testNull":91,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":275,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":30,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":44,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":201,"org.easymock.tests2.CaptureTest.testPrimitive":126,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":470,"org.easymock.tests.UsageTest.moreThanOneArgument":15,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":322,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":161,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":398,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":401,"org.easymock.tests.UsageTest.argumentsOrdered":286,"org.easymock.tests.UsageVarargTest.varargIntAccepted":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":262,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":4,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":210,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":237,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":266,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":185,"org.easymock.tests.ReplayStateInvalidUsageTest.times":350,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":494,"org.easymock.tests2.DependencyTest.testClassMocking":205,"org.easymock.tests2.AnswerTest.answer":171,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":383,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":242,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":434,"org.easymock.tests2.CaptureTest.testAnd":123,"org.easymock.tests2.UsageTest.strictResetToDefault":112,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":499,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":196,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":334,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":405,"org.easymock.tests2.DelegateToTest.testDelegate":56,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":318,"org.easymock.tests.LimitationsTest.mockFinalMethod":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":340,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":261,"org.easymock.tests2.DependencyTest.testClassMockingSupport":206,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":406,"org.easymock.tests2.CaptureTest.testCapture1_2446744":127,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":316,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":240,"org.easymock.tests.UsageThrowableTest.throwError":417,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":344,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":436,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":400,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":84,"org.easymock.samples.PartialClassMockTest.testGetArea":485,"org.easymock.tests.MockingTest.testInterfaceMocking":272,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":263,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":292,"org.easymock.tests2.UsageTest.niceToStrict":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":71,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":249,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":304,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":366,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":214,"org.easymock.tests2.MockBuilderTest.testCreateMock":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":79,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":188,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":312,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":197,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":433,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":410,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":299,"org.easymock.tests.UsageOverloadedMethodTest.overloading":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":81,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":443,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":9,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":457,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":288,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":99,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":48,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":132,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":357,"org.easymock.tests.MockClassControlTest.testEquals":43,"org.easymock.tests2.EasyMockSupportClassTest.testAll":24,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":39,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":320,"org.easymock.tests2.CaptureTest.testCaptureAll":124,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":241,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":259,"org.easymock.tests.MockNameTest.defaultName":251,"org.easymock.tests2.UsageConstraintsTest.testMatches":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":399,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":342,"org.easymock.samples.ExampleTest.voteForRemovals":482,"org.easymock.tests.UsageVarargTest.allKinds":365,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":16,"org.easymock.samples.BasicClassMockTest.testPrintContent":46,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":260,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":423,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":223,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":341,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":502,"org.easymock.tests2.UsageConstraintsTest.greaterThan":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":64,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":333,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":34,"org.easymock.samples.ExampleTest.voteForRemoval":479,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":395,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":169,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":138,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":438,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":162,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":111,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":37,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":194,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":336,"org.easymock.tests2.CaptureTest.testCaptureFirst":136,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":195,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":122,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":445,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":453,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":140,"org.easymock.tests2.CaptureTest.testCapture2_2446744":135,"org.easymock.tests2.UsageTest.moreThanOneArgument":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":384,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":221,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":364,"org.easymock.tests.GenericTest.testBridgedEquals":40,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":330,"org.easymock.tests.UsageExpectAndReturnTest.longType":449,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":257,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":321,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":107,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":250,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":319,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":396,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":278,"org.easymock.tests.UsageCallCountTest.tooManyCalls":331,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":80,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":454,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":190,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":308,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":422,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":152,"org.easymock.tests.MockingTest.testNiceClassMocking":276,"org.easymock.tests.MockingTest.testClassMocking":268,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":486,"org.easymock.tests2.UsageConstraintsTest.testContains":98,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":324,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":35,"org.easymock.tests2.UsageConstraintsTest.testFind":90,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":290,"org.easymock.tests.MockTypeTest.fromEasyMockClass":435,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":411,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":149,"org.easymock.tests.UsageExpectAndReturnTest.object":456,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":1,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":359,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":247,"org.easymock.tests.UsageTest.exactCallCountByLastCall":287,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":402,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":254,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":462,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":442,"org.easymock.tests.MockClassControlTest.testHashCode":42,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":228,"org.easymock.tests2.EasyMockSupportTest.testVerify":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":73,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":403,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":440,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":409,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":239,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":243,"org.easymock.tests.UsageVarargTest.varargCharAccepted":358,"org.easymock.tests2.CaptureTest.testCaptureMultiple":487,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":389,"org.easymock.tests2.UsageTest.openCallCountByLastCall":116,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":492,"org.easymock.tests.DefaultClassInstantiatorTest.object":390,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":203,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":408,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":245,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":74,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":310,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":420,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":183,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":227,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":431,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":167,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":309,"org.easymock.tests.CapturesMatcherTest.test":489,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":463,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":277,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":82,"org.easymock.tests2.UsageTest.resumeIfFailure":121,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":339,"org.easymock.tests2.StubTest.stubWithReturnValue":151,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":455,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":108,"org.easymock.tests2.SerializationTest.testAllMockedMethod":27,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":382,"org.easymock.samples.SupportTest.voteForRemovals":476,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":425,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":315,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":388,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":172,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":256,"org.easymock.tests.UsageExpectAndThrowTest.object":313,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":105,"org.easymock.tests2.DelegateToTest.testWrongClass":54,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":252,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":253,"org.easymock.samples.ConstructorCalledMockTest.testTax":473,"org.easymock.tests.UsageStrictMockTest.range":415,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":59,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":199,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":25,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":314,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":61,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":285,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":300,"org.easymock.tests2.CaptureTest.testCaptureNone":131,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":293,"org.easymock.tests.UsageUnorderedTest.message":427,"org.easymock.tests.UsageVerifyTest.twoReturns":18,"org.easymock.tests.UsageVarargTest.varargByteAccepted":363,"org.easymock.tests2.ThreadingTest.testThreadSafe":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":77,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":328,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":45,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":248,"org.easymock.tests2.CaptureTest.testCapture_2617107":125,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":386,"org.easymock.tests2.UsageConstraintsTest.any":96,"org.easymock.tests2.StubTest.stub":150,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":349,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":387,"org.easymock.tests.UsageExpectAndThrowTest.longType":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":338,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":47,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":348,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":225,"org.easymock.tests2.SerializationTest.testClass":159,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":232,"org.easymock.tests.LimitationsTest.mockNativeMethod":36,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":465,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":426,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":182,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":14,"org.easymock.tests2.NameTest.nameForMocksControl":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":184,"org.easymock.tests2.MockedExceptionTest.testMockedException":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":65,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":284,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":148,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":307,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":28,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":217,"org.easymock.tests.MockingTest.testNicePartialClassMocking":271,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":32,"org.easymock.tests2.CompareToTest.testCompareEqual":495,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":180,"org.easymock.tests2.CaptureTest.testCaptureLast":130,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":407,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":157,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":94,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":106,"org.easymock.tests.MockingTest.testTwoMocks":269,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":158,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":446,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":311,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":119,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":110,"org.easymock.samples.ExampleTest.removeNonExistingDocument":483,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":187,"org.easymock.tests.UsageStrictMockTest.differentMethods":21,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":346,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":229,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":392,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":139,"org.easymock.tests2.MockBuilderTest.testCreateMockString":222,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":67,"org.easymock.tests.UsageExpectAndThrowTest.floatType":305,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":63,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":174,"org.easymock.tests.UsageVerifyTest.twoThrows":17,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":76,"org.easymock.samples.ExampleTest.voteAgainstRemoval":480,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":377,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":168,"org.easymock.tests.LimitationsTest.privateConstructor":295,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":497,"org.easymock.tests2.UsageConstraintsTest.testNotNull":109,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":424,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":177,"org.easymock.tests2.UsageTest.defaultResetToNice":118,"org.easymock.samples.ExampleTest.voteAgainstRemovals":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":378,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":181,"org.easymock.tests.UsageVarargTest.differentLength":360,"org.easymock.tests2.CallbackTest.callback":50,"org.easymock.tests2.UsageConstraintsTest.equals":89,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":164,"org.easymock.tests.UsageTest.openCallCountByLastCall":283,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":468,"org.easymock.tests.UsageCallCountTest.tooFewCalls":326,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":26,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":302,"org.easymock.tests.UsageThrowableTest.throwCheckedException":421,"org.easymock.tests.MockingTest.testStrictClassMocking":267,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":156,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":186,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":153,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":351,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":155,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":176,"org.easymock.tests2.CompareToTest.testGreateOrEqual":7,"org.easymock.tests.ObjectMethodsTest.testHashCode":246,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":3,"org.easymock.tests2.NameTest.nameForNiceMock":145,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":141,"org.easymock.tests2.DependencyTest.testInterfaceMocking":207,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":2,"org.easymock.samples.ExampleTest.addDocument":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":78,"org.easymock.tests2.DelegateToTest.testStubDelegate":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":83,"org.easymock.tests2.AnswerTest.stubAnswer":175,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":20,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":218,"org.easymock.tests.UsageVarargTest.varargLongAccepted":362,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":375,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":464,"org.easymock.tests.UsageExpectAndReturnTest.floatType":448,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":209,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":474,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":444,"org.easymock.tests.UsageThrowableTest.noUpperLimit":418,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":236,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":86,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":57,"org.easymock.tests2.SerializationTest.test":160,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":128,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":49,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":391,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":447,"org.easymock.tests2.UsageConstraintsTest.testSame":92,"org.easymock.samples.SupportTest.addDocument":475,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":154,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":68,"org.easymock.tests.GenericTest.testPackageScope":38,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":235,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":274,"org.easymock.tests2.NameTest.nameForMock":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":458,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":501,"org.easymock.tests2.UsageStrictMockTest.differentMethods":13,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":165,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":450,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":317,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":244,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":335,"org.easymock.tests2.MockedExceptionTest.testRealException":179,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":439,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":379,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":467,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":353,"org.easymock.tests2.NameTest.nameForStrictMock":144,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":213,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":493,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":147,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":31,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":58,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":393,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":104,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":211,"org.easymock.tests2.UsageStrictMockTest.range":226,"org.easymock.tests2.UsageConstraintsTest.lessThan":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":231,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":374,"org.easymock.tests2.CaptureTest.testCaptureRightOne":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":72,"org.easymock.tests2.UsageConstraintsTest.testOr":93,"org.easymock.tests.UsageRangeTest.combination":332,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":29,"org.easymock.tests.UsageTest.wrongArguments":282,"org.easymock.tests2.MockBuilderTest.testWithConstructor":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":69,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":428,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":451,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":367,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":394,"org.easymock.tests.UsageVarargTest.varargShortAccepted":361,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":329,"org.easymock.tests2.UsageConstraintsTest.cmpTo":97,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":369,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":117,"org.easymock.tests2.CaptureTest.testCaptureFromStub":134,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":343,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":212,"org.easymock.tests.UsageTest.unexpectedCallWithArray":281,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":413,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":327,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":500,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":460,"org.easymock.tests2.CaptureTest.testCapture":488,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":414,"org.easymock.tests2.UsageConstraintsTest.constraints":87,"org.easymock.samples.ExampleTest.addAndChangeDocument":484,"org.easymock.tests.UsageStrictMockTest.testVerify":416,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":472,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":412,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":258,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":129,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":264,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":452,"org.easymock.tests.LimitationsTest.abstractClass":294,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":23,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":198,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":355}}]
