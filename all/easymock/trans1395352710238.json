[{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,4,53,54,55,56,57,58,59,60,61,62,63,64,13,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,21,114,115,116,26,117,118,27,119,28,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,29,151,152,153,154,155,156,157,158,159,30,160,161,162,163,164,31,165,166,32,167,168,169,170,170,171,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[317,318,319,320],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[68,72,75],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,4,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,343,96,97,344,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,21,114,115,116,26,117,118,27,119,28,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,345,137,138,139,140,141,142,143,144,145,146,147,148,149,150,29,151,152,153,154,155,156,157,158,159,30,160,161,162,163,346,164,31,165,166,32,167,168,169,170,170,171,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,347,319,205,206,207,208,209,210,211,212,213,214,215,216,217,348,218,219,349,220,350,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,351,296,297,352,353,298,299,300,301,302,303,304,305,306,307,308,309,310,311,354,312,313,314,315,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[39,42,43,44,355,46,49,50,51,52,356,53,54,57,62,63,64,13,14,15,16,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,343,100,101,102,103,105,106,107,108,109,110,113,124,125,126,127,129,130,133,134,135,136,345,138,139,141,142,145,148,150,151,152,155,156,157,158,159,160,161,162,163,164,31,166,167,173,174,175,176,357,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,358,197,200,201,359,202,203,204,347,319,206,207,208,209,216,220,225,226,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,360,361,362,363,364,365,366,367,368,369,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,370,300,301,303,304,310,312,313,314,315,371,316,372,373,374,375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:183","sourceCode":"net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:174","sourceCode":"try {\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n} catch (final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException) {\n    net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader());\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[39,42,43,44,45,355,46,47,48,49,50,51,52,356,4,53,54,55,56,57,58,59,60,61,62,63,64,13,14,15,16,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,343,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,21,114,115,116,26,117,118,27,119,28,120,121,122,123,124,125,126,127,129,130,131,133,134,135,136,345,137,138,139,140,141,142,143,144,145,146,147,148,149,150,29,151,152,153,154,155,156,157,158,159,30,160,161,162,163,164,31,166,167,168,169,34,170,170,171,171,376,172,35,173,174,175,176,357,177,178,377,378,179,180,181,182,183,184,185,186,187,188,189,191,192,195,358,196,197,198,199,200,201,359,202,203,204,347,319,206,207,208,209,36,379,380,381,382,383,216,220,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,360,361,362,363,364,365,366,367,368,369,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,371,316,372,373,374,375],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[51,356,53,58,59,60,61,62,93,94,95,343,96,97,344,98,99,124,125,126,134,150,29,151,152,153,155,156,159,30,161,162,163,346,164,31,166,169,170,170,171,171,377,378,319,384,385,216,217,222,243,360,244,361,246,354,312,313,314,315,386,375,387,388,389,390,391,392],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[85],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[370],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (this.org.easymock.Capture<T>.hasCaptured()) {\n    this.org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[100,101,102,103,104,105,106,107,109,110,111,112,113,393],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"capture"}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[39,40,41,42,43,44,45,355,46,47,48,49,50,51,52,356,0,1,2,394,3,4,5,6,7,395,396,8,53,397,54,55,56,57,398,399,400,58,401,402,59,9,403,404,405,10,406,407,408,409,60,11,410,411,412,413,61,414,415,62,416,63,64,12,13,14,15,16,65,66,67,68,417,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,418,419,95,343,96,97,420,421,344,98,99,422,100,101,102,103,104,105,106,107,108,109,110,111,112,113,17,18,19,423,20,21,22,23,24,424,425,25,114,115,116,26,117,118,27,119,28,120,121,122,123,426,427,428,429,430,124,125,126,127,128,129,130,131,132,133,431,432,433,434,435,436,134,135,136,345,137,138,139,140,141,142,143,144,145,146,147,148,149,150,437,29,151,152,153,438,154,155,156,439,157,158,159,30,160,161,162,163,346,440,164,441,442,31,165,166,32,443,33,444,445,167,168,169,34,170,171,376,172,35,173,174,175,176,357,177,446,178,377,378,179,180,181,182,183,184,185,186,187,188,189,190,191,192,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,193,337,338,339,340,341,194,342,195,358,196,197,198,199,200,201,359,202,203,204,347,447,319,205,206,207,208,209,210,211,212,384,448,449,450,451,452,453,385,36,454,379,380,455,381,456,457,382,458,383,213,214,215,459,320,216,460,217,348,218,219,349,220,350,461,221,462,463,464,465,466,37,467,38,468,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,469,243,360,244,470,361,362,363,471,364,365,472,366,367,368,369,245,473,474,475,476,477,478,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,287,288,289,290,291,292,293,294,295,351,296,297,352,353,298,299,370,300,301,302,303,304,305,306,307,308,309,310,311,501,502,354,312,313,503,314,504,505,506,315,371,316,372,373,374,507,508,509,386,375,387,388,389,390,391,392],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[510,393],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[0,1,2,3,5,6,7,8,17,18,19,20,22,23,24,25,34,35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[79],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[394,423],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:155","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[393],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[39,42,44,62,63,64,174,217],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[511],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":68,"org.easymock.tests2.UsageTest.argumentsOrdered":147,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":287,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":121,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":331,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":142,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":34,"org.easymock.tests2.DelegateToTest.testReturnException":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":185,"org.easymock.tests.MockingTest.testPartialClassMocking":312,"org.easymock.tests.MockClassControlTest.testToString":387,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":12,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":221,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":405,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":267,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":168,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":500,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":74,"org.easymock.tests2.UsageTest.wrongArguments":140,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":225,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":8,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":204,"org.easymock.samples.ExampleTest.answerVsDelegate":174,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":467,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":505,"org.easymock.tests2.UsageConstraintsTest.testNull":70,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":161,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":392,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":120,"org.easymock.tests2.CaptureTest.testPrimitive":103,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":286,"org.easymock.tests.UsageTest.moreThanOneArgument":288,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":235,"org.easymock.tests.UsageTest.argumentsOrdered":294,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":351,"org.easymock.tests.UsageVarargTest.varargIntAccepted":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":179,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":93,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":433,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":425,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":183,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":484,"org.easymock.tests.ReplayStateInvalidUsageTest.times":457,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":4,"org.easymock.tests2.DependencyTest.testClassMocking":444,"org.easymock.tests2.AnswerTest.answer":39,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":337,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":345,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":465,"org.easymock.tests2.CaptureTest.testAnd":100,"org.easymock.tests2.UsageTest.strictResetToDefault":138,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":117,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":208,"org.easymock.tests2.DelegateToTest.testDelegate":133,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":353,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":483,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":282,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":317,"org.easymock.tests.LimitationsTest.mockFinalMethod":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":242,"org.easymock.tests2.DependencyTest.testClassMockingSupport":445,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":298,"org.easymock.tests2.CaptureTest.testCapture1_2446744":104,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":440,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":280,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":135,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":454,"org.easymock.tests.UsageThrowableTest.throwError":302,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":37,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":415,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":487,"org.easymock.samples.PartialClassMockTest.testGetArea":169,"org.easymock.tests.MockingTest.testInterfaceMocking":503,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":180,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":223,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":478,"org.easymock.tests2.UsageTest.niceToStrict":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":10,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":268,"org.easymock.tests2.ThreadingTest.testChangeDefault":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":95,"org.easymock.tests2.MockBuilderTest.testCreateMock":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":411,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":7,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":276,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":118,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":464,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":212,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":315,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":202,"org.easymock.tests.UsageOverloadedMethodTest.overloading":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":409,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":80,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":219,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":257,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":79,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":109,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":471,"org.easymock.tests.MockClassControlTest.testEquals":391,"org.easymock.tests2.EasyMockSupportClassTest.testAll":58,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":360,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":136,"org.easymock.tests2.CaptureTest.testCaptureAll":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":240,"org.easymock.tests.MockNameTest.defaultName":447,"org.easymock.tests2.UsageConstraintsTest.testMatches":81,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":385,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":236,"org.easymock.samples.ExampleTest.voteForRemovals":177,"org.easymock.tests.UsageVarargTest.allKinds":245,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":241,"org.easymock.samples.BasicClassMockTest.testPrintContent":378,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":308,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":189,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":23,"org.easymock.tests2.UsageConstraintsTest.greaterThan":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":401,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":207,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":32,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":488,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":453,"org.easymock.samples.ExampleTest.voteForRemoval":175,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":443,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":54,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":38,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":346,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":480,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":137,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":319,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":116,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":184,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":128,"org.easymock.tests2.CaptureTest.testCaptureFirst":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":327,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":26,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":149,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":350,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":253,"org.easymock.tests2.UsageTest.moreThanOneArgument":139,"org.easymock.tests2.CaptureTest.testCapture2_2446744":112,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":56,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":338,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":369,"org.easymock.tests.GenericTest.testBridgedEquals":470,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":508,"org.easymock.tests.UsageExpectAndReturnTest.longType":249,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":238,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":285,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":88,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":205,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":233,"org.easymock.tests.UsageCallCountTest.tooManyCalls":509,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":412,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":254,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":396,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":307,"org.easymock.tests.MockingTest.testNiceClassMocking":506,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":151,"org.easymock.tests.MockingTest.testClassMocking":502,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Default":318,"org.easymock.tests2.UsageConstraintsTest.testContains":78,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":371,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":126,"org.easymock.tests2.UsageConstraintsTest.testFind":69,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":192,"org.easymock.tests.MockTypeTest.fromEasyMockClass":466,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":63,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":195,"org.easymock.tests.UsageExpectAndReturnTest.object":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":28,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":365,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":476,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":511,"org.easymock.tests.UsageTest.exactCallCountByLastCall":295,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":296,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":437,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":262,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":361,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":218,"org.easymock.tests.MockClassControlTest.testHashCode":390,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":18,"org.easymock.tests2.EasyMockSupportTest.testVerify":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":407,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":297,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":211,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":217,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":134,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":422,"org.easymock.tests.UsageVarargTest.varargCharAccepted":364,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":342,"org.easymock.tests2.UsageTest.openCallCountByLastCall":143,"org.easymock.tests.DefaultClassInstantiatorTest.object":384,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":122,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":210,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":408,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":305,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":394,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":17,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":486,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":389,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":165,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":273,"org.easymock.tests.CapturesMatcherTest.test":393,"org.easymock.tests.ReplayStateInvalidCallsTest.times":492,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":213,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":493,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":61,"org.easymock.tests2.UsageTest.resumeIfFailure":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":463,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":187,"org.easymock.tests2.StubTest.stubWithReturnValue":158,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":89,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":255,"org.easymock.tests2.SerializationTest.testAllMockedMethod":356,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":193,"org.easymock.samples.SupportTest.voteForRemovals":172,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":469,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":423,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":279,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":194,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":40,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":462,"org.easymock.tests.UsageExpectAndThrowTest.object":277,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":86,"org.easymock.tests2.DelegateToTest.testWrongClass":131,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":490,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":300,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":301,"org.easymock.samples.ConstructorCalledMockTest.testTax":170,"org.easymock.tests.UsageStrictMockTest.range":199,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":435,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":119,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":29,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":278,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":96,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":398,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":203,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":482,"org.easymock.tests2.CaptureTest.testCaptureNone":108,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":224,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":427,"org.easymock.tests.UsageUnorderedTest.message":266,"org.easymock.tests.UsageVerifyTest.twoReturns":232,"org.easymock.tests.UsageVarargTest.varargByteAccepted":368,"org.easymock.tests2.ThreadingTest.testThreadSafe":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":11,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":374,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":477,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":377,"org.easymock.tests2.CaptureTest.testCapture_2617107":102,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":370,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":340,"org.easymock.tests2.UsageConstraintsTest.any":76,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":456,"org.easymock.tests2.StubTest.stub":157,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":186,"org.easymock.tests.UsageExpectAndThrowTest.longType":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":341,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":451,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":381,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":47,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":21,"org.easymock.tests2.SerializationTest.testClass":51,"org.easymock.tests.LimitationsTest.mockNativeMethod":216,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":244,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":265,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":2,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":498,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":50,"org.easymock.tests2.NameTest.nameForMocksControl":16,"org.easymock.tests2.MockedExceptionTest.testMockedException":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":402,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":292,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":416,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":271,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":314,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":159,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":97,"org.easymock.tests.MockingTest.testNicePartialClassMocking":313,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":163,"org.easymock.tests2.CaptureTest.testCaptureLast":107,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":0,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":299,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":497,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":156,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":73,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":87,"org.easymock.tests.MockingTest.testTwoMocks":354,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":494,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":275,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":146,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":91,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":430,"org.easymock.samples.ExampleTest.removeNonExistingDocument":446,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":6,"org.easymock.tests.UsageStrictMockTest.differentMethods":200,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":19,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":449,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":429,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":55,"org.easymock.tests2.MockBuilderTest.testCreateMockString":99,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":9,"org.easymock.tests.UsageExpectAndThrowTest.floatType":269,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":400,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":42,"org.easymock.tests.UsageVerifyTest.twoThrows":231,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":60,"org.easymock.samples.ExampleTest.voteAgainstRemoval":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":332,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":166,"org.easymock.tests.LimitationsTest.privateConstructor":320,"org.easymock.tests2.UsageConstraintsTest.testNotNull":90,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":124,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":309,"org.easymock.tests2.UsageTest.defaultResetToNice":145,"org.easymock.samples.ExampleTest.voteAgainstRemovals":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":333,"org.easymock.tests.UsageVarargTest.differentLength":472,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":1,"org.easymock.tests2.CallbackTest.callback":64,"org.easymock.tests2.UsageConstraintsTest.equals":417,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":441,"org.easymock.tests.UsageTest.openCallCountByLastCall":291,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":227,"org.easymock.tests.UsageCallCountTest.tooFewCalls":372,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":153,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":347,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":428,"org.easymock.tests.UsageThrowableTest.throwCheckedException":306,"org.easymock.tests.MockingTest.testStrictClassMocking":501,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":155,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":311,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":5,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":382,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":154,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":44,"org.easymock.tests.ObjectMethodsTest.testHashCode":475,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":496,"org.easymock.tests2.NameTest.nameForNiceMock":15,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":57,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":491,"org.easymock.tests2.DependencyTest.testInterfaceMocking":167,"org.easymock.samples.ExampleTest.addDocument":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":414,"org.easymock.tests2.DelegateToTest.testStubDelegate":130,"org.easymock.tests2.AnswerTest.stubAnswer":43,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":197,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":420,"org.easymock.tests.UsageVarargTest.varargLongAccepted":367,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":330,"org.easymock.tests.UsageExpectAndReturnTest.floatType":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":150,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":171,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":424,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":84,"org.easymock.tests.UsageThrowableTest.noUpperLimit":303,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":66,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":431,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":105,"org.easymock.tests2.SerializationTest.test":52,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":448,"org.easymock.tests2.UsageConstraintsTest.testSame":71,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":247,"org.easymock.samples.SupportTest.addDocument":376,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":438,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":481,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":403,"org.easymock.tests.GenericTest.testPackageScope":243,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":24,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":504,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":479,"org.easymock.tests2.NameTest.nameForMock":13,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":258,"org.easymock.tests2.UsageStrictMockTest.differentMethods":49,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":442,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":250,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":281,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":473,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":209,"org.easymock.tests2.MockedExceptionTest.testRealException":127,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":335,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":334,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":226,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":383,"org.easymock.tests2.NameTest.nameForStrictMock":14,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":419,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":62,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":162,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":434,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":450,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":85,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":94,"org.easymock.tests2.UsageStrictMockTest.range":48,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":485,"org.easymock.tests2.UsageConstraintsTest.lessThan":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":20,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":406,"org.easymock.tests2.CaptureTest.testCaptureRightOne":110,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":426,"org.easymock.tests2.UsageConstraintsTest.testOr":72,"org.easymock.tests.UsageRangeTest.combination":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":30,"org.easymock.tests.UsageTest.wrongArguments":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":404,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":375,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":322,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":452,"org.easymock.tests.UsageVarargTest.varargShortAccepted":366,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":507,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":499,"org.easymock.tests2.UsageConstraintsTest.cmpTo":77,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":41,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":324,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":144,"org.easymock.tests2.CaptureTest.testCaptureFromStub":111,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":36,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":418,"org.easymock.tests.UsageTest.unexpectedCallWithArray":289,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":495,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":196,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":373,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":260,"org.easymock.tests2.CaptureTest.testCapture":510,"org.easymock.tests2.UsageConstraintsTest.constraints":67,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.samples.ExampleTest.addAndChangeDocument":178,"org.easymock.tests.UsageStrictMockTest.testVerify":359,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":35,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":358,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":239,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":181,"org.easymock.tests.LimitationsTest.abstractClass":459,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":182,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":27,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":362}}]
