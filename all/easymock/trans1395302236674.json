[{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[98,15,99,100,101,102,103,16,104,105,17,106,107,21,108,22,23,109,110,24,25,26,27,111,28,112,113,114,115,116,117,118,119,120,30,31,121,32,33,122,123,124,125,73,76,126,127,128,129,130,131,132,133,134,134,135,135,136,137,138],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[139],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:136","failures":[98,15,99,100,101,102,103,140,141,16,104,105,17,142,18,143,144,106,107,145,21,22,23,146,109,110,24,25,147,26,27,28,148,149,150,151,152,153,154,155,156,116,157,158,117,159,160,161,162,163,164,165,166,167,118,168,169,170,171,172,119,173,174,120,30,31,121,32,33,122,123,175,176,124,177,178,125,62,63,64,179,180,181,73,76,182,183,184,185,186,187,188,189,126,127,128,190,129,191,192,130,131,132,133,193,134,134,135,135,136,137,138],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[210],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[211,5,212,6,213,7,8,214,9,10,215,216,217,218,11,12,13,14,98,15,219,99,100,101,102,220,103,140,141,16,104,105,17,142,18,143,144,106,221,222,0,223,1,224,225,226,107,145,227,228,229,230,231,232,19,20,233,234,235,236,237,21,238,22,23,239,146,109,110,24,240,25,241,147,26,27,242,28,148,149,150,243,151,244,245,152,153,246,247,2,248,249,250,251,252,253,254,255,256,29,154,155,156,116,157,158,117,159,160,161,162,163,164,165,166,167,118,168,169,170,171,172,119,173,174,257,258,259,195,196,197,198,199,200,201,202,260,203,205,206,207,208,120,30,31,121,261,262,32,33,263,264,265,266,267,268,269,270,122,271,123,272,273,34,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,35,289,290,291,292,293,294,295,296,297,298,36,299,37,38,39,40,300,301,302,41,42,43,44,45,303,46,47,48,49,50,304,305,306,307,308,51,52,309,310,311,312,313,53,314,315,316,317,318,319,320,321,322,323,139,324,325,326,327,328,329,210,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,54,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,55,404,405,56,57,406,407,408,409,410,411,412,413,3,58,4,414,59,60,61,175,176,124,177,415,416,417,178,125,62,63,64,179,180,181,418,419,65,420,66,67,421,422,68,69,70,71,72,423,424,425,426,427,428,429,73,430,431,74,75,76,77,78,432,433,434,435,436,437,438,439,440,441,442,443,444,79,80,81,445,446,447,448,449,450,82,83,84,85,451,452,86,87,88,89,453,454,455,456,457,458,90,459,460,461,462,463,464,182,183,184,185,186,187,465,188,189,126,127,128,190,129,466,467,468,469,470,91,471,92,93,94,95,96,97,472,473,474,475,191,192,130,131,132,476,133,477,478,193,479,480,481,482,483,484,134,135,485,486,487,488,489,490,491,492,493,136,494,137,138,495,496],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[24,76],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[98,15,99,100,101,102,103,140,141,16,104,105,17,142,18,143,144,106,107,145,21,22,23,146,109,110,24,25,147,26,27,28,148,151,154,155,156,116,157,158,117,159,160,161,162,163,164,165,166,167,118,168,169,170,171,172,119,173,174,120,30,31,121,32,33,122,123,175,124,177,178,125,62,63,64,181,73,76,464,182,183,184,185,186,187,465,188,189,126,127,128,190,129,130,131,132,133,134,134,135,135,136,137,138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[225],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[182,183,184,185,187,188],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"clazz","throwableClass":"clazz"}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[211,5,212,6,213,7,8,214,9,10,215,216,98,15,219,99,100,101,103,104,105,17,106,223,107,19,22,109,24,25,27,246,247,2,251,116,117,118,119,195,196,197,198,199,202,260,203,205,207,208,120,30,31,121,262,32,33,264,265,266,267,268,270,122,271,272,273,34,274,276,277,278,279,280,281,283,284,285,286,287,288,35,289,290,291,292,293,294,295,296,297,298,36,299,37,39,300,301,302,43,44,46,48,49,51,323,324,332,333,335,336,337,340,341,373,374,375,54,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,406,407,408,409,410,411,412,60,124,418,419,437,439,440,441,442,443,444,79,81,82,83,451,452,88,126,93,95,96,474,131,132,133,482,483,484,485,487,488,490,136,496],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[224,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[280,281],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[122,271,123,497],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[211,5,212,6,213,7,8,9,10,215,216,98,15,219,99,100,101,103,105,223,107,19,109,24,25,246,247,2,251,116,117,118,119,195,196,198,199,202,260,203,205,207,208,120,30,31,121,262,32,33,264,265,266,267,268,270,122,271,272,273,34,274,276,277,278,279,280,281,283,284,285,286,287,288,35,289,290,291,292,293,295,296,297,298,36,299,37,39,300,301,43,44,46,48,49,51,323,324,332,333,335,336,337,340,373,374,375,54,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,406,407,408,409,410,411,412,124,418,437,439,440,441,442,443,444,79,81,82,83,451,452,88,126,128,93,95,96,474,131,132,133,482,483,484,485,487,488,490,136,496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[342,352],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[107,145,240,147,498,499,500,501,122],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[211,5,212,6,213,7,8,214,9,10,215,216,217,98,15,219,99,100,101,102,103,16,104,105,17,143,144,106,221,0,223,1,225,107,19,21,109,110,24,25,26,27,28,246,247,2,250,251,252,253,254,255,256,116,117,118,119,195,198,199,203,205,206,207,120,30,31,121,262,32,33,264,265,266,267,268,270,122,271,272,273,34,274,276,277,278,279,280,281,283,284,285,286,287,288,35,289,290,291,292,293,295,296,297,298,36,299,37,38,39,300,301,302,41,42,43,44,45,46,47,48,49,50,51,336,337,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,376,377,378,379,54,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,55,404,405,406,407,408,409,410,411,412,3,58,4,414,60,61,124,178,125,62,63,64,179,180,181,418,419,420,68,72,424,425,426,427,428,429,437,439,440,441,442,443,444,79,80,81,446,447,448,449,450,82,83,84,85,451,452,86,87,88,89,182,126,466,467,468,469,470,91,92,93,94,95,96,97,472,131,132,133,482,483,484,134,134,135,135,485,486,488,491,136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[103,16,226,257,259,195,196,197,198,199,200,201,202,260,203,205,206,207,208,267,269,272,273,34,274,276,277,278,279,280,281,282,283,284,285,286,287,288,35,289,290,291,292,293,294,295,296,297,298,36,46,47,336,337,338,339,340,406,407,408,409,410,411,412,413,418,419,428,429,89,453,463,182,92,93],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:99","failures":[211,5,212,6,213,7,8,214,9,10,215,216,98,15,219,99,100,101,103,104,105,17,106,223,107,19,22,109,24,25,27,246,247,2,251,116,117,118,119,195,196,198,199,202,260,203,205,207,208,120,30,31,121,262,32,33,264,265,266,267,268,270,122,271,272,273,34,274,276,277,278,279,280,281,283,284,285,286,287,288,35,289,290,291,292,293,295,296,297,298,36,299,37,39,300,301,302,43,44,46,48,49,51,336,337,340,54,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,406,407,408,409,410,411,412,60,124,418,437,439,440,441,442,443,444,79,81,82,83,451,452,88,126,128,93,95,96,131,132,133,482,483,484,485,487,488,490,136,496],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:252","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[165],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[286],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[280],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[211,5,212,6,213,7,8,9,10,215,216,15,100,105,0,223,1,225,19,109,24,25,246,247,2,250,251,29,195,196,202,260,205,208,264,265,266,268,269,270,122,271,274,277,279,280,296,36,299,37,39,40,300,301,43,44,303,46,47,48,49,50,51,336,337,338,339,340,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,406,407,408,409,410,411,412,3,4,414,418,424,425,426,427,428,429,437,438,439,440,441,442,443,444,79,80,81,82,83,451,452,88,89,453,454,455,457,458,459,460,461,462,463,127,466,467,468,469,470,471,93,94,95,96,97,482,483,484,485,486,487,488,489,490,492,493,494,137,138,495,496],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[186,502,503],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[504,281,287,298],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[38,41,42,48,61,80,81,505,84,85,86,87,89,92,95],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[48,49,322,357,361,362,364,367,387,391,392,394,397,432,435,436,95,96],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":274,"org.easymock.tests2.UsageTest.argumentsOrdered":42,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":82,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":215,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":139,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":40,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":494,"org.easymock.tests2.DelegateToTest.testReturnException":0,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":425,"org.easymock.tests.MockingTest.testPartialClassMocking":131,"org.easymock.tests.MockClassControlTest.testToString":62,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":218,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":474,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":162,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":117,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":353,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":247,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":498,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":281,"org.easymock.tests2.UsageTest.wrongArguments":38,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":336,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":237,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":378,"org.easymock.samples.ExampleTest.answerVsDelegate":486,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":76,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":478,"org.easymock.tests2.UsageConstraintsTest.testNull":277,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":99,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":181,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":10,"org.easymock.tests2.CaptureTest.testPrimitive":198,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":340,"org.easymock.tests.UsageTest.moreThanOneArgument":83,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":372,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":468,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":432,"org.easymock.tests.UsageTest.argumentsOrdered":87,"org.easymock.tests.UsageVarargTest.varargIntAccepted":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":406,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":21,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":312,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":410,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":19,"org.easymock.tests.ReplayStateInvalidUsageTest.times":349,"org.easymock.tests2.DependencyTest.testClassMocking":152,"org.easymock.tests2.AnswerTest.answer":2,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":210,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":256,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":431,"org.easymock.tests2.CaptureTest.testAnd":195,"org.easymock.tests2.UsageTest.strictResetToDefault":299,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":16,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":213,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":381,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":436,"org.easymock.tests2.DelegateToTest.testDelegate":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":368,"org.easymock.tests.LimitationsTest.mockFinalMethod":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":428,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":450,"org.easymock.tests2.DependencyTest.testClassMockingSupport":153,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":71,"org.easymock.tests2.CaptureTest.testCapture1_2446744":199,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":220,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":366,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":254,"org.easymock.tests.UsageThrowableTest.throwError":437,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":343,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":75,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":445,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":174,"org.easymock.samples.PartialClassMockTest.testGetArea":136,"org.easymock.tests.MockingTest.testInterfaceMocking":476,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":407,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":163,"org.easymock.tests2.UsageTest.niceToStrict":39,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":314,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":109,"org.easymock.tests2.MockBuilderTest.testCreateMock":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":170,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":234,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":362,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":7,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":430,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":481,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":65,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":376,"org.easymock.tests.UsageOverloadedMethodTest.overloading":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":167,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":414,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":287,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":482,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":394,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":502,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":286,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":203,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":456,"org.easymock.tests.MockClassControlTest.testEquals":180,"org.easymock.tests2.EasyMockSupportClassTest.testAll":116,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":127,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":370,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":448,"org.easymock.tests2.CaptureTest.testCaptureAll":196,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":255,"org.easymock.tests.MockNameTest.defaultName":53,"org.easymock.tests2.UsageConstraintsTest.testMatches":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":469,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":341,"org.easymock.samples.ExampleTest.voteForRemovals":490,"org.easymock.tests.UsageVarargTest.allKinds":463,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":449,"org.easymock.samples.BasicClassMockTest.testPrintContent":138,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":443,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":429,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":224,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":309,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":501,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":465,"org.easymock.tests2.UsageConstraintsTest.greaterThan":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":157,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":380,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":17,"org.easymock.samples.ExampleTest.voteForRemoval":487,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":188,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":142,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":265,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":77,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":243,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":102,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":129,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":36,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":212,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":424,"org.easymock.tests2.CaptureTest.testCaptureFirst":208,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":6,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":44,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":61,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":390,"org.easymock.tests2.UsageTest.moreThanOneArgument":37,"org.easymock.tests2.CaptureTest.testCapture2_2446744":207,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":267,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":330,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":462,"org.easymock.tests.GenericTest.testBridgedEquals":190,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":69,"org.easymock.tests.UsageExpectAndReturnTest.longType":386,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":446,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":211,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":111,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":371,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":413,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":294,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":369,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":466,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":416,"org.easymock.tests.UsageCallCountTest.tooManyCalls":70,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":171,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":391,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":236,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":358,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":442,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":30,"org.easymock.tests.MockingTest.testNiceClassMocking":193,"org.easymock.tests.MockingTest.testClassMocking":192,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":420,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":108,"org.easymock.tests2.UsageConstraintsTest.testContains":285,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":106,"org.easymock.tests2.UsageConstraintsTest.testFind":276,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":484,"org.easymock.tests.MockTypeTest.fromEasyMockClass":74,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":91,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":259,"org.easymock.tests.UsageExpectAndReturnTest.object":393,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":9,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":499,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":458,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":405,"org.easymock.tests.UsageTest.exactCallCountByLastCall":88,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":473,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":433,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":145,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":453,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":399,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":4,"org.easymock.tests.MockClassControlTest.testHashCode":179,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":305,"org.easymock.tests2.EasyMockSupportTest.testVerify":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":165,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":434,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":480,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":3,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":253,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":226,"org.easymock.tests.UsageVarargTest.varargCharAccepted":457,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":464,"org.easymock.tests2.CaptureTest.testCaptureMultiple":194,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":335,"org.easymock.tests2.UsageTest.openCallCountByLastCall":300,"org.easymock.tests.DefaultClassInstantiatorTest.object":182,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":216,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":479,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":55,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":166,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":360,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":440,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":231,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":304,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":104,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":64,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":359,"org.easymock.tests.CapturesMatcherTest.test":209,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":400,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":119,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":63,"org.easymock.tests2.UsageTest.resumeIfFailure":43,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":73,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":427,"org.easymock.tests2.StubTest.stubWithReturnValue":270,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":240,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":392,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":295,"org.easymock.tests2.SerializationTest.testAllMockedMethod":123,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":329,"org.easymock.samples.SupportTest.voteForRemovals":496,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":307,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":365,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":497,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":334,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":248,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":475,"org.easymock.tests.UsageExpectAndThrowTest.object":363,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":292,"org.easymock.tests2.DelegateToTest.testWrongClass":1,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":411,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":412,"org.easymock.samples.ConstructorCalledMockTest.testTax":134,"org.easymock.tests.UsageStrictMockTest.range":95,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":244,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":364,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":154,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":86,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":377,"org.easymock.tests2.CaptureTest.testCaptureNone":260,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":375,"org.easymock.tests.UsageUnorderedTest.message":89,"org.easymock.tests.UsageVerifyTest.twoReturns":81,"org.easymock.tests.UsageVarargTest.varargByteAccepted":461,"org.easymock.tests2.ThreadingTest.testThreadSafe":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":168,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":422,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":137,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":56,"org.easymock.tests2.CaptureTest.testCapture_2617107":197,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":332,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":339,"org.easymock.tests2.UsageConstraintsTest.any":283,"org.easymock.tests2.StubTest.stub":269,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":348,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":333,"org.easymock.tests.UsageExpectAndThrowTest.longType":356,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":186,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":347,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":47,"org.easymock.tests2.SerializationTest.testClass":122,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":51,"org.easymock.tests.LimitationsTest.mockNativeMethod":124,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":402,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":128,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":114,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":230,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":50,"org.easymock.tests2.NameTest.nameForMocksControl":14,"org.easymock.tests2.MockedExceptionTest.testMockedException":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":158,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":452,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":133,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":258,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":357,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":25,"org.easymock.tests.MockingTest.testNicePartialClassMocking":132,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":101,"org.easymock.tests2.CaptureTest.testCaptureLast":202,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":228,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":72,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":280,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":293,"org.easymock.tests.MockingTest.testTwoMocks":130,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":263,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":383,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":361,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":41,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":297,"org.easymock.samples.ExampleTest.removeNonExistingDocument":491,"org.easymock.tests.UsageStrictMockTest.differentMethods":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":233,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":345,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":306,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":184,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":266,"org.easymock.tests2.MockBuilderTest.testCreateMockString":28,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":159,"org.easymock.tests.UsageExpectAndThrowTest.floatType":355,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":156,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":250,"org.easymock.tests.UsageVerifyTest.twoThrows":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":227,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":118,"org.easymock.samples.ExampleTest.voteAgainstRemoval":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":324,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":373,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":105,"org.easymock.tests.LimitationsTest.privateConstructor":176,"org.easymock.tests2.UsageConstraintsTest.testNotNull":296,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":444,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":143,"org.easymock.tests2.UsageTest.defaultResetToNice":302,"org.easymock.samples.ExampleTest.voteAgainstRemovals":485,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":325,"org.easymock.tests.UsageVarargTest.differentLength":90,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":229,"org.easymock.tests2.CallbackTest.callback":29,"org.easymock.tests2.UsageConstraintsTest.equals":275,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":140,"org.easymock.tests.UsageTest.openCallCountByLastCall":451,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":272,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":338,"org.easymock.tests.UsageCallCountTest.tooFewCalls":67,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":121,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":379,"org.easymock.tests.UsageThrowableTest.throwCheckedException":441,"org.easymock.tests.MockingTest.testStrictClassMocking":191,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":419,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":32,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":20,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":350,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":262,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":252,"org.easymock.tests2.CompareToTest.testGreateOrEqual":504,"org.easymock.tests.ObjectMethodsTest.testHashCode":404,"org.easymock.tests2.NameTest.nameForNiceMock":13,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":268,"org.easymock.tests2.DependencyTest.testInterfaceMocking":246,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":500,"org.easymock.samples.ExampleTest.addDocument":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":173,"org.easymock.tests2.DelegateToTest.testStubDelegate":223,"org.easymock.tests2.AnswerTest.stubAnswer":251,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":93,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":241,"org.easymock.tests.UsageVarargTest.varargLongAccepted":460,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":323,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":401,"org.easymock.tests.UsageExpectAndReturnTest.floatType":385,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":107,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":135,"org.easymock.tests.UsageThrowableTest.noUpperLimit":438,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":59,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":290,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":311,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":273,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":148,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":200,"org.easymock.tests2.SerializationTest.test":271,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":503,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":384,"org.easymock.tests2.UsageConstraintsTest.testSame":278,"org.easymock.samples.SupportTest.addDocument":495,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":261,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":160,"org.easymock.tests.GenericTest.testPackageScope":126,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":310,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":477,"org.easymock.tests2.NameTest.nameForMock":11,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":395,"org.easymock.tests2.UsageStrictMockTest.differentMethods":49,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":242,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":141,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":387,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":367,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":403,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":382,"org.easymock.tests2.MockedExceptionTest.testRealException":221,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":78,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":326,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":337,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":352,"org.easymock.tests2.NameTest.nameForStrictMock":12,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":146,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":257,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":100,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":151,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":185,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":291,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":22,"org.easymock.tests2.UsageStrictMockTest.range":48,"org.easymock.tests2.UsageConstraintsTest.lessThan":298,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":308,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":164,"org.easymock.tests2.CaptureTest.testCaptureRightOne":205,"org.easymock.tests2.UsageConstraintsTest.testOr":279,"org.easymock.tests.UsageRangeTest.combination":54,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":15,"org.easymock.tests.UsageTest.wrongArguments":85,"org.easymock.tests2.MockBuilderTest.testWithConstructor":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":161,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":125,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":388,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":315,"org.easymock.tests.UsageVarargTest.varargShortAccepted":459,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":187,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":68,"org.easymock.tests2.UsageConstraintsTest.cmpTo":284,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":317,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":301,"org.easymock.tests2.CaptureTest.testCaptureFromStub":206,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":342,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":23,"org.easymock.tests.UsageTest.unexpectedCallWithArray":84,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":92,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":421,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":397,"org.easymock.tests2.CaptureTest.testCapture":204,"org.easymock.tests2.UsageConstraintsTest.constraints":34,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":94,"org.easymock.samples.ExampleTest.addAndChangeDocument":492,"org.easymock.tests.UsageStrictMockTest.testVerify":472,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":493,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":471,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":447,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":408,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":113,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":389,"org.easymock.tests.LimitationsTest.abstractClass":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":409,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":60,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":454,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":8}}]
