[{"position":"org.easymock.internal.RecordState:85","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,175,176,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[329,325,326,327],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injection:74","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"matched":"lastInvocationUsed"}},{"position":"org.easymock.internal.RecordState:233","failures":[0,1,330,331,332,2,4,5,6,7,9,10,11,12,333,13,14,15,16,17,18,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,334,69,70,72,73,74,75,76,77,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,78,79,80,81,82,83,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,362,363,364,365,108,109,110,111,112,113,114,115,116,366,367,117,118,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,162,163,164,165,166,167,168,169,170,171,172,174,175,175,176,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,234,235,237,239,240,241,242,243,244,245,246,247,248,250,252,253,254,255,368,369,256,257,258,259,260,370,261,262,263,371,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,298,299,300,301,302,303,304,305,306,307,372,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[262],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[348,369],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[373,374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[225,375,376,377],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[344,346,355,356,358],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[329,325,326,327],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[267,275,300],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[18,34,35,37,38,70,72,75,76,154,155,156,189,191,192,205,206,212,213,226,227,228,229],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[0,1,330,331,332,2,3,4,5,6,7,8,9,10,378,11,12,333,379,380,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,381,382,31,383,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,384,385,386,387,334,388,69,70,71,72,73,74,75,76,77,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,78,79,80,81,82,83,84,85,86,87,88,89,389,90,91,390,92,93,94,95,96,391,97,98,99,100,101,102,103,104,362,363,364,392,105,106,107,393,394,365,395,396,397,108,109,398,110,399,400,401,111,112,113,114,115,116,402,366,367,403,404,405,406,407,408,409,410,411,412,117,118,413,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,414,161,415,416,417,418,419,420,421,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,422,423,424,373,425,184,426,427,428,429,430,431,432,433,185,186,187,188,189,190,191,192,193,194,195,434,435,436,437,438,439,440,196,197,198,199,441,200,201,202,442,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,375,443,444,226,227,228,229,230,445,231,446,447,448,232,233,234,376,235,449,450,236,237,451,238,452,453,454,239,455,456,240,457,458,459,460,461,462,463,464,465,241,466,467,468,469,470,242,471,472,243,244,245,246,247,248,249,473,250,474,475,251,252,253,254,476,477,255,368,369,256,257,258,259,478,260,370,261,262,263,371,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,479,480,481,374,482,293,483,484,485,486,487,488,294,295,296,297,298,299,300,301,489,302,303,304,305,306,307,372,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[0,2,3,4,5,6,7,11,12,13,14,17,31,33,35,38,39,40,42,43,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,386,70,78,79,80,81,82,83,84,85,86,87,88,92,94,95,96,97,98,100,101,102,103,104,108,109,110,111,112,113,114,115,116,117,118,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,174,185,188,189,192,193,194,195,197,198,201,202,204,205,207,208,211,214,216,217,218,219,220,221,224,225,226,227,228,229,230,232,233,243,245,246,247,248,250,251,253,255,256,257,258,259,260,261,262,264,265,266,267,268,270,271,272,273,274,275,278,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[75,212,489],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[444],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[35,38,39,70,92,154,155,156,189,192,193,205],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.MockBuilder:172","failures":[410,234],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,175,176,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[301,306,317],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[301,305,372],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[370,371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[490,491,492,493,494,375,376],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[490,491,492,495,496,225,375,376,450,325],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[497,498,499,232,252,253],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[378,379],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[161,162],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":301,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":69,"org.easymock.tests2.UsageTest.argumentsOrdered":213,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":289,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":345,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":208,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":178,"org.easymock.tests2.DelegateToTest.testReturnException":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":112,"org.easymock.tests.MockingTest.testPartialClassMocking":108,"org.easymock.tests.MockClassControlTest.testToString":121,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":444,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":334,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":460,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":130,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":240,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":490,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":13,"org.easymock.tests2.UsageTest.wrongArguments":206,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":488,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":159,"org.easymock.samples.ExampleTest.answerVsDelegate":168,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":410,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":400,"org.easymock.tests2.UsageConstraintsTest.testNull":303,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":246,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":126,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":288,"org.easymock.tests2.CaptureTest.testPrimitive":268,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":17,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":149,"org.easymock.tests.UsageTest.moreThanOneArgument":70,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":164,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":402,"org.easymock.tests.UsageTest.argumentsOrdered":76,"org.easymock.tests.UsageVarargTest.varargIntAccepted":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":79,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":494,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":230,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":436,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":430,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":83,"org.easymock.tests.ReplayStateInvalidUsageTest.times":27,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":293,"org.easymock.tests2.DependencyTest.testClassMocking":432,"org.easymock.tests2.AnswerTest.answer":255,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":297,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":407,"org.easymock.tests2.CaptureTest.testAnd":265,"org.easymock.tests2.UsageTest.strictResetToDefault":204,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":447,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":163,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":152,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":283,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":404,"org.easymock.tests2.DelegateToTest.testDelegate":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":145,"org.easymock.tests.LimitationsTest.mockFinalMethod":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":88,"org.easymock.tests2.DependencyTest.testClassMockingSupport":433,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":384,"org.easymock.tests2.CaptureTest.testCapture1_2446744":269,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":473,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":143,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":295,"org.easymock.tests.UsageThrowableTest.throwError":41,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":21,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":409,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":431,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":380,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":472,"org.easymock.samples.PartialClassMockTest.testGetArea":177,"org.easymock.tests.MockingTest.testInterfaceMocking":398,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":80,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":461,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":394,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":131,"org.easymock.tests2.UsageTest.niceToStrict":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":335,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":232,"org.easymock.tests2.MockBuilderTest.testCreateMock":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":468,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":485,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":139,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":284,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":406,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":332,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":2,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":157,"org.easymock.tests.UsageOverloadedMethodTest.overloading":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":465,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":91,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":312,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":60,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":311,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":274,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":391,"org.easymock.tests.MockClassControlTest.testEquals":125,"org.easymock.tests2.EasyMockSupportClassTest.testAll":239,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":12,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":147,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":497,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":86,"org.easymock.tests2.CaptureTest.testCaptureAll":266,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":296,"org.easymock.tests.MockNameTest.defaultName":413,"org.easymock.tests2.UsageConstraintsTest.testMatches":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":165,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":19,"org.easymock.samples.ExampleTest.voteForRemovals":172,"org.easymock.tests.UsageVarargTest.allKinds":104,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":154,"org.easymock.samples.BasicClassMockTest.testPrintContent":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":87,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":47,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":187,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":116,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":371,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":496,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":420,"org.easymock.tests2.UsageConstraintsTest.greaterThan":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":455,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":151,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":254,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":421,"org.easymock.samples.ExampleTest.voteForRemoval":169,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":476,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":221,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":411,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":437,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":249,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":78,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":203,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":281,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":453,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":111,"org.easymock.tests2.CaptureTest.testCaptureFirst":278,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":282,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":215,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":56,"org.easymock.tests2.UsageTest.moreThanOneArgument":205,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":223,"org.easymock.tests2.CaptureTest.testCapture2_2446744":277,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":353,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":103,"org.easymock.tests.GenericTest.testBridgedEquals":379,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":9,"org.easymock.tests.UsageExpectAndReturnTest.longType":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":84,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":279,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":148,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":320,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":365,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":162,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":360,"org.easymock.tests.UsageCallCountTest.tooManyCalls":10,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":469,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":57,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":487,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":135,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":46,"org.easymock.tests.MockingTest.testNiceClassMocking":401,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":197,"org.easymock.tests.MockingTest.testClassMocking":396,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":499,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":3,"org.easymock.tests2.UsageConstraintsTest.testContains":310,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":218,"org.easymock.tests2.UsageConstraintsTest.testFind":302,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":129,"org.easymock.tests.MockTypeTest.fromEasyMockClass":408,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":32,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":260,"org.easymock.tests.UsageExpectAndReturnTest.object":59,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":250,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":486,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":491,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":98,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":107,"org.easymock.tests.UsageTest.exactCallCountByLastCall":77,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":340,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":387,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":366,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":375,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":65,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":94,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":90,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":423,"org.easymock.tests.MockClassControlTest.testHashCode":124,"org.easymock.tests2.EasyMockSupportTest.testVerify":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":463,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":367,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":89,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":331,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":294,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":292,"org.easymock.tests.UsageVarargTest.varargCharAccepted":97,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":414,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":358,"org.easymock.tests2.UsageTest.openCallCountByLastCall":209,"org.easymock.tests.DefaultClassInstantiatorTest.object":161,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":290,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":330,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":464,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":44,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":422,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":123,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":252,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":136,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":66,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":359,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":242,"org.easymock.tests2.UsageTest.resumeIfFailure":214,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":405,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":435,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":114,"org.easymock.tests2.StubTest.stubWithReturnValue":195,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":376,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":58,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":321,"org.easymock.tests2.SerializationTest.testAllMockedMethod":327,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":351,"org.easymock.samples.SupportTest.voteForRemovals":183,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":378,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":373,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":142,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":329,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":357,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":368,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":388,"org.easymock.tests.UsageExpectAndThrowTest.object":140,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":318,"org.easymock.tests2.DelegateToTest.testWrongClass":263,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":117,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":118,"org.easymock.samples.ConstructorCalledMockTest.testTax":175,"org.easymock.tests.UsageStrictMockTest.range":37,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":439,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":286,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":196,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":452,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":29,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":75,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":158,"org.easymock.tests2.CaptureTest.testCaptureNone":273,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":364,"org.easymock.tests.UsageUnorderedTest.message":18,"org.easymock.tests.UsageVerifyTest.twoReturns":156,"org.easymock.tests.UsageVarargTest.varargByteAccepted":102,"org.easymock.tests2.ThreadingTest.testThreadSafe":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":466,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":7,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":393,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":180,"org.easymock.tests2.CaptureTest.testCapture_2617107":267,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":386,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":355,"org.easymock.tests2.UsageConstraintsTest.any":308,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":26,"org.easymock.tests2.StubTest.stub":194,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":361,"org.easymock.tests.UsageExpectAndThrowTest.longType":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":356,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":418,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":25,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":190,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":184,"org.easymock.tests2.SerializationTest.testClass":325,"org.easymock.tests.LimitationsTest.mockNativeMethod":31,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":68,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":333,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":498,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":481,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":193,"org.easymock.tests2.NameTest.nameForMocksControl":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":482,"org.easymock.tests2.MockedExceptionTest.testMockedException":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":456,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":74,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":478,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":134,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":110,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":243,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":235,"org.easymock.tests.MockingTest.testNicePartialClassMocking":109,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":248,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":479,"org.easymock.tests2.CaptureTest.testCaptureLast":272,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":385,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":202,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":306,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":319,"org.easymock.tests.MockingTest.testTwoMocks":397,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":442,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":138,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":212,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":323,"org.easymock.samples.ExampleTest.removeNonExistingDocument":173,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":484,"org.easymock.tests.UsageStrictMockTest.differentMethods":38,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":23,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":424,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":416,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":222,"org.easymock.tests2.MockBuilderTest.testCreateMockString":238,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":457,"org.easymock.tests.UsageExpectAndThrowTest.floatType":132,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":454,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":256,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":443,"org.easymock.tests.UsageVerifyTest.twoThrows":155,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":241,"org.easymock.samples.ExampleTest.voteAgainstRemoval":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":346,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":362,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":253,"org.easymock.tests.LimitationsTest.privateConstructor":382,"org.easymock.tests2.UsageConstraintsTest.testNotNull":322,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":48,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":216,"org.easymock.tests2.UsageTest.defaultResetToNice":211,"org.easymock.samples.ExampleTest.voteAgainstRemovals":167,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":347,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":480,"org.easymock.tests.UsageVarargTest.differentLength":99,"org.easymock.tests2.CallbackTest.callback":328,"org.easymock.tests2.UsageConstraintsTest.equals":489,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":474,"org.easymock.tests.UsageTest.openCallCountByLastCall":73,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":298,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":15,"org.easymock.tests.UsageCallCountTest.tooFewCalls":5,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":160,"org.easymock.tests.UsageThrowableTest.throwCheckedException":45,"org.easymock.tests.MockingTest.testStrictClassMocking":395,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":1,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":483,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":198,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":28,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":200,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":258,"org.easymock.tests.ObjectMethodsTest.testHashCode":106,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":493,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":224,"org.easymock.tests2.NameTest.nameForNiceMock":228,"org.easymock.tests2.DependencyTest.testInterfaceMocking":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":492,"org.easymock.samples.ExampleTest.addDocument":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":471,"org.easymock.tests2.DelegateToTest.testStubDelegate":262,"org.easymock.tests2.AnswerTest.stubAnswer":257,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":35,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":449,"org.easymock.tests.UsageVarargTest.varargLongAccepted":101,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":344,"org.easymock.tests.UsageExpectAndReturnTest.floatType":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":67,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":225,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":429,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":390,"org.easymock.tests.UsageThrowableTest.noUpperLimit":42,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":316,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":299,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":434,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":270,"org.easymock.tests2.SerializationTest.test":326,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":415,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":50,"org.easymock.tests2.UsageConstraintsTest.testSame":304,"org.easymock.samples.SupportTest.addDocument":182,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":441,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":458,"org.easymock.tests.GenericTest.testPackageScope":11,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":428,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":399,"org.easymock.tests2.NameTest.nameForMock":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":61,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":451,"org.easymock.tests2.UsageStrictMockTest.differentMethods":192,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":475,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":53,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":144,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":392,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":153,"org.easymock.tests2.MockedExceptionTest.testRealException":219,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":412,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":377,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":348,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":14,"org.easymock.tests2.NameTest.nameForStrictMock":227,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":448,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":259,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":247,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":438,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":417,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":317,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":231,"org.easymock.tests2.UsageStrictMockTest.range":191,"org.easymock.tests2.UsageConstraintsTest.lessThan":324,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":425,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":495,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":462,"org.easymock.tests2.CaptureTest.testCaptureRightOne":275,"org.easymock.tests2.UsageConstraintsTest.testOr":305,"org.easymock.tests.UsageRangeTest.combination":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":244,"org.easymock.tests.UsageTest.wrongArguments":72,"org.easymock.tests2.MockBuilderTest.testWithConstructor":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":459,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":54,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":336,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":419,"org.easymock.tests.UsageVarargTest.varargShortAccepted":100,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":8,"org.easymock.tests2.UsageConstraintsTest.cmpTo":309,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":338,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":210,"org.easymock.tests2.CaptureTest.testCaptureFromStub":276,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":20,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":446,"org.easymock.tests.UsageTest.unexpectedCallWithArray":71,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":34,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":6,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":63,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":36,"org.easymock.tests2.UsageConstraintsTest.constraints":300,"org.easymock.samples.ExampleTest.addAndChangeDocument":174,"org.easymock.tests.UsageStrictMockTest.testVerify":40,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":179,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":85,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":81,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":55,"org.easymock.tests.LimitationsTest.abstractClass":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":82,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":92,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":95,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":285}}]
