[{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:324","failures":[3,4,5],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[6,7,8,9,10,11,12,2,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[32,33,34,35,36,37,38,39,40,41,42,43,5,44],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[45,46,47,48,49,7,50,51,52,53,54,55,56,57,58,59,60,32,61,11,62,63,15,21,64,65,33,66,67,34,35,68,69,70,71,36,72,73,37,74,75,27,76,39,77,78,41,79,80,42,43,81,82,83,5,44],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[84],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[86,87,88],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[89],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[90,91,92,93,94],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[95,59,96,97,98,11,99,12,100,101,102,103,104,14,15,105,106,21,107,108,109,110,70,71,111,72,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,128,129,129],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[106,130],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[131,132,17,18,19,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,0,200,201,202,1,203,204,205,206,207,208,209,210,211,90,91,92,93,94,212,213,214,85,215,216,217,218,219,220,221,222,223,224,225,226,227,128,128,129,129],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod","bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[131,228,132,229],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[230,231],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[232,233,56,234,235,236,58,237,238,239],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[232,233,240,15],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[230,241],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:287","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[242,45,46,47,48,232,243,233,244,245,246,247,131,228,132,248,6,49,7,16,50,51,52,53,54,249,8,95,250,55,56,251,234,235,57,236,252,253,254,255,256,257,258,259,260,261,262,263,17,18,19,20,58,264,265,266,267,268,269,270,271,272,273,274,275,276,277,59,60,32,61,278,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,279,280,161,281,282,96,97,9,10,283,98,11,99,12,2,284,13,62,285,100,89,101,102,63,103,104,14,286,287,240,288,15,105,106,162,163,289,164,165,166,167,290,168,169,170,171,172,173,174,175,176,291,292,293,294,295,296,177,178,179,180,297,298,181,182,299,300,301,302,303,304,305,230,21,306,307,308,309,183,185,186,187,188,189,190,191,310,192,193,194,196,64,311,65,33,312,313,66,67,314,34,35,315,68,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,69,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,198,380,381,382,383,384,385,386,387,107,108,388,389,390,391,392,393,394,109,395,396,397,398,399,400,401,402,403,404,405,199,0,200,201,202,1,203,110,70,22,241,71,111,406,407,408,409,410,36,72,73,37,74,411,412,30,413,75,31,3,4,414,415,204,205,206,207,208,209,210,211,90,91,92,93,94,112,113,114,115,116,416,417,84,212,213,214,85,215,418,216,419,420,217,23,24,25,26,27,28,218,421,422,423,424,219,425,426,427,428,429,430,117,29,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,76,462,463,464,465,466,467,468,469,470,118,471,472,473,119,120,474,475,476,477,478,479,480,237,121,481,482,483,484,122,485,486,231,487,39,123,124,125,126,127,220,221,222,223,77,78,40,41,79,80,42,43,81,238,488,489,490,491,492,493,494,495,82,496,497,498,499,500,501,502,503,504,505,224,83,5,44,506,507,225,226,508,227,509,128,129,510,239,511,512,513,514,515,516],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:171","sourceCode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())","type":"CtInvocationImpl"},"failures":[131,132,17,18,19,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,196,198,199,0,200,201,202,1,203,204,205,206,207,208,209,210,211,90,91,92,93,94,212,213,214,85,215,216,217,218,219,220,221,222,223,225,226,227,128,128,129,129],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[131,132,17,18,19,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,517,197,198,199,0,200,201,202,1,203,204,205,206,207,208,209,210,211,90,91,92,93,94,212,213,214,85,215,216,217,218,219,220,221,222,223,224,225,226,227,128,128,129,129],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":10,"org.easymock.tests2.UsageTest.argumentsOrdered":35,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":77,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":326,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":478,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":313,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":508,"org.easymock.tests2.DelegateToTest.testReturnException":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":24,"org.easymock.tests.MockingTest.testPartialClassMocking":85,"org.easymock.tests.MockClassControlTest.testToString":206,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":242,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":393,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":143,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":338,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":309,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":379,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":284,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":110,"org.easymock.tests2.UsageTest.wrongArguments":33,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":263,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":336,"org.easymock.samples.ExampleTest.answerVsDelegate":239,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":219,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":420,"org.easymock.tests2.UsageConstraintsTest.testNull":11,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":164,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":211,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":325,"org.easymock.tests2.CaptureTest.testPrimitive":16,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":71,"org.easymock.tests.UsageTest.moreThanOneArgument":78,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":357,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":289,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":114,"org.easymock.tests.UsageTest.argumentsOrdered":43,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":383,"org.easymock.tests.UsageVarargTest.varargIntAccepted":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":481,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":123,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":274,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":280,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":472,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":127,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":363,"org.easymock.tests.ReplayStateInvalidUsageTest.times":402,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":257,"org.easymock.tests2.DependencyTest.testClassMocking":306,"org.easymock.tests2.AnswerTest.answer":56,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":483,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":247,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":422,"org.easymock.tests2.CaptureTest.testAnd":6,"org.easymock.tests2.UsageTest.strictResetToDefault":311,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":171,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":113,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":320,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":387,"org.easymock.tests2.DelegateToTest.testDelegate":333,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":362,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":353,"org.easymock.tests.LimitationsTest.mockFinalMethod":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":27,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":500,"org.easymock.tests2.DependencyTest.testClassMockingSupport":307,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":416,"org.easymock.tests2.CaptureTest.testCapture1_2446744":50,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":290,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":351,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":245,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":396,"org.easymock.tests.UsageThrowableTest.throwError":30,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":424,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":157,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":366,"org.easymock.samples.PartialClassMockTest.testGetArea":227,"org.easymock.tests.MockingTest.testInterfaceMocking":418,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":124,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":144,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":224,"org.easymock.tests2.UsageTest.niceToStrict":312,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":339,"org.easymock.tests2.ThreadingTest.testChangeDefault":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":118,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":86,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":188,"org.easymock.tests2.MockBuilderTest.testCreateMock":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":152,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":347,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":321,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":421,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":430,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":462,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":334,"org.easymock.tests.UsageOverloadedMethodTest.overloading":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":148,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":490,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":101,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":494,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":442,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":89,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":249,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":454,"org.easymock.tests2.EasyMockSupportClassTest.testAll":136,"org.easymock.tests.MockClassControlTest.testEquals":210,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":355,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":498,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":246,"org.easymock.tests.MockNameTest.defaultName":427,"org.easymock.tests2.UsageConstraintsTest.testMatches":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":115,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":109,"org.easymock.samples.ExampleTest.voteForRemovals":514,"org.easymock.tests.UsageVarargTest.allKinds":76,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":499,"org.easymock.samples.BasicClassMockTest.testPrintContent":226,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":414,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":28,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":271,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":332,"org.easymock.tests2.UsageConstraintsTest.greaterThan":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":389,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":174,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":367,"org.easymock.samples.ExampleTest.voteForRemoval":511,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":203,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":175,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":293,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":425,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":167,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":359,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":64,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":198,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":318,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":23,"org.easymock.tests2.CaptureTest.testCaptureFirst":55,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":319,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":68,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":493,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":438,"org.easymock.tests2.UsageTest.moreThanOneArgument":65,"org.easymock.tests2.CaptureTest.testCapture2_2446744":250,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":484,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":194,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":461,"org.easymock.tests.GenericTest.testBridgedEquals":94,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":469,"org.easymock.tests.UsageExpectAndReturnTest.longType":434,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":496,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":316,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":195,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":356,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":111,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":240,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":354,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":112,"org.easymock.tests.UsageCallCountTest.tooManyCalls":470,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":153,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":439,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":262,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":343,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":178,"org.easymock.tests.MockingTest.testNiceClassMocking":217,"org.easymock.tests.MockingTest.testClassMocking":213,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":463,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":184,"org.easymock.tests2.UsageConstraintsTest.testContains":100,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":19,"org.easymock.tests2.UsageConstraintsTest.testFind":98,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":82,"org.easymock.tests.MockTypeTest.fromEasyMockClass":423,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":409,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":233,"org.easymock.tests.UsageExpectAndReturnTest.object":441,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":168,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":324,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":456,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":504,"org.easymock.tests.UsageTest.exactCallCountByLastCall":81,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":120,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":392,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":384,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":159,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":451,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":447,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":489,"org.easymock.tests.MockClassControlTest.testHashCode":209,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":265,"org.easymock.tests2.EasyMockSupportTest.testVerify":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":146,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":385,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":429,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":238,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":244,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":248,"org.easymock.tests.UsageVarargTest.varargCharAccepted":455,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":487,"org.easymock.tests2.UsageTest.openCallCountByLastCall":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":87,"org.easymock.tests.DefaultClassInstantiatorTest.object":199,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":327,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":428,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":502,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":147,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":345,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":255,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":264,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":172,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":208,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":365,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":344,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":448,"org.easymock.tests.ReplayStateInvalidCallsTest.times":371,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":406,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":155,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":207,"org.easymock.tests2.UsageTest.resumeIfFailure":315,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":218,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":26,"org.easymock.tests2.StubTest.stubWithReturnValue":21,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":440,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":288,"org.easymock.tests2.SerializationTest.testAllMockedMethod":132,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":482,"org.easymock.samples.SupportTest.voteForRemovals":507,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":350,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":229,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":231,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":251,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":394,"org.easymock.tests.UsageExpectAndThrowTest.object":348,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":286,"org.easymock.tests2.DelegateToTest.testWrongClass":331,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":107,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":369,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":108,"org.easymock.samples.ConstructorCalledMockTest.testTax":128,"org.easymock.tests.UsageStrictMockTest.range":37,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":281,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":323,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":177,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":349,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":190,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":133,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":335,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":361,"org.easymock.tests2.CaptureTest.testCaptureNone":54,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":382,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":301,"org.easymock.tests.UsageUnorderedTest.message":39,"org.easymock.tests.UsageVerifyTest.twoReturns":44,"org.easymock.tests.UsageVarargTest.varargByteAccepted":460,"org.easymock.tests2.ThreadingTest.testThreadSafe":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":150,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":467,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":505,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":225,"org.easymock.tests2.CaptureTest.testCapture_2617107":7,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":485,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":241,"org.easymock.tests2.UsageConstraintsTest.any":62,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":401,"org.easymock.tests2.StubTest.stub":230,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":25,"org.easymock.tests.UsageExpectAndThrowTest.longType":341,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":202,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":400,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":60,"org.easymock.tests2.SerializationTest.testClass":131,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":269,"org.easymock.tests.LimitationsTest.mockNativeMethod":222,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":450,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":93,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":254,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":377,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":278,"org.easymock.tests2.NameTest.nameForMocksControl":48,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":302,"org.easymock.tests2.MockedExceptionTest.testMockedException":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":138,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":80,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":216,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":243,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":342,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":191,"org.easymock.tests.MockingTest.testNicePartialClassMocking":215,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":166,"org.easymock.tests2.CaptureTest.testCaptureLast":53,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":252,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":417,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":182,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":2,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":376,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":287,"org.easymock.tests.MockingTest.testTwoMocks":214,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":373,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":299,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":431,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":346,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":34,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":105,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":305,"org.easymock.samples.ExampleTest.removeNonExistingDocument":515,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":398,"org.easymock.tests.UsageStrictMockTest.differentMethods":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":259,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":266,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":200,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":304,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":294,"org.easymock.tests2.MockBuilderTest.testCreateMockString":196,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":140,"org.easymock.tests.UsageExpectAndThrowTest.floatType":340,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":135,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":235,"org.easymock.tests.UsageVerifyTest.twoThrows":5,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":149,"org.easymock.samples.ExampleTest.voteAgainstRemoval":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":479,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":380,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":173,"org.easymock.tests.LimitationsTest.privateConstructor":221,"org.easymock.tests2.UsageConstraintsTest.testNotNull":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":415,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":17,"org.easymock.tests2.UsageTest.defaultResetToNice":314,"org.easymock.samples.ExampleTest.voteAgainstRemovals":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":446,"org.easymock.tests.UsageVarargTest.differentLength":457,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":253,"org.easymock.tests2.CallbackTest.callback":58,"org.easymock.tests2.UsageConstraintsTest.equals":283,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":169,"org.easymock.tests.UsageTest.openCallCountByLastCall":79,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":22,"org.easymock.tests.UsageCallCountTest.tooFewCalls":465,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":180,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":337,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":303,"org.easymock.tests.UsageThrowableTest.throwCheckedException":3,"org.easymock.tests.MockingTest.testStrictClassMocking":212,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":181,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":29,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":258,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":403,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":298,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":236,"org.easymock.tests.ObjectMethodsTest.testHashCode":503,"org.easymock.tests2.NameTest.nameForNiceMock":47,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":296,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":375,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":370,"org.easymock.tests2.DependencyTest.testInterfaceMocking":308,"org.easymock.samples.ExampleTest.addDocument":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":156,"org.easymock.tests2.DelegateToTest.testStubDelegate":69,"org.easymock.tests2.AnswerTest.stubAnswer":57,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":72,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":310,"org.easymock.tests.UsageVarargTest.varargLongAccepted":459,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":477,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":449,"org.easymock.tests.UsageExpectAndReturnTest.floatType":433,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":158,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":129,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":491,"org.easymock.tests.UsageThrowableTest.noUpperLimit":413,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":273,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":97,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":160,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":51,"org.easymock.tests2.SerializationTest.test":228,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":432,"org.easymock.tests2.UsageConstraintsTest.testSame":99,"org.easymock.samples.SupportTest.addDocument":506,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":297,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":360,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":141,"org.easymock.tests.GenericTest.testPackageScope":91,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":119,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":272,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":419,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":358,"org.easymock.tests2.NameTest.nameForMock":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":443,"org.easymock.tests2.UsageStrictMockTest.differentMethods":61,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":170,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":435,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":352,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":501,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":391,"org.easymock.tests2.MockedExceptionTest.testRealException":20,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":121,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":282,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":237,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":405,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":70,"org.easymock.tests2.NameTest.nameForStrictMock":46,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":187,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":88,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":232,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":165,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":161,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":14,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":201,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":185,"org.easymock.tests2.UsageStrictMockTest.range":32,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":364,"org.easymock.tests2.UsageConstraintsTest.lessThan":106,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":517,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":476,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":145,"org.easymock.tests2.CaptureTest.testCaptureRightOne":8,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":300,"org.easymock.tests2.UsageConstraintsTest.testOr":12,"org.easymock.tests.UsageRangeTest.combination":388,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":163,"org.easymock.tests.UsageTest.wrongArguments":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":142,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":205,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":444,"org.easymock.tests.UsageVarargTest.varargShortAccepted":458,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":468,"org.easymock.tests2.UsageConstraintsTest.cmpTo":285,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":378,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":234,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":368,"org.easymock.tests2.CompareToTest.testLessThan":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":473,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":67,"org.easymock.tests2.CaptureTest.testCaptureFromStub":95,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":395,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":186,"org.easymock.tests.UsageTest.unexpectedCallWithArray":40,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":374,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":36,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":466,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":445,"org.easymock.tests2.UsageConstraintsTest.constraints":9,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":73,"org.easymock.samples.ExampleTest.addAndChangeDocument":516,"org.easymock.tests.UsageStrictMockTest.testVerify":412,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":509,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":410,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":497,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":52,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":125,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":197,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":437,"org.easymock.tests.LimitationsTest.abstractClass":220,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":492,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":126,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":322}}]
