[{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[3,4],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:85","failures":[5,6,7,8],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[9,10,11,12,12,13,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[66,67,68,69,70,71,72,73,74,75,76,9,10,11,12,12,13,13,77,14,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,18,97,98,19,99,100,101,102,103,104,105,106,107,20,108,109,110,111,112,21,113,114,115,116,22,117,118,119,120,23,121,24,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,5,147,148,149,150,6,151,152,153,154,155,156,157,158,159,7,160,161,162,163,8,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,0,1,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,25,26,27,28,213,29,30,31,33,34,214,35,36,37,38,215,39,40,42,216,217,218,219,220,221,222,223,43,44,224,45,46,47,48,225,49,226,227,50,51,52,53,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,54,247,248,55,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,56,57,58,282,59,283,284,285,286,287,288,60,61,62,289,290,291,2,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,63,384,385,64,386,387,3,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,4,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,65,470,471,472,473,474,475],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:81","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[76,77,201,202,203,205,207,208,209,212,230,231,232,234,236,237,238,241],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[135],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[79,82,83,84,88,89,90,91,123,127,128,131,143,157,166,169,170,171,200,33,39,40,42,44,51,53,265,267,268,271,272,273,279,476,477,396,397,398,399,401,403,404,405,416,417,436,457,478,479],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[119],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[78,480,481,482,483,484,485],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[290,291,308],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[78,480,481,482,483,484,485],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[288],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[338],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[82,88,89,170,267,268,271,272,279,477,401,404,416,417],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[150,155,165,486],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[158,488],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[489],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"failures":[490,491,492,493,401],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[9,10,11,94,95,18,98,19,99,100,101,103,104,105,106,20,108,109,110,111,112,21,115,116,22,24,25,26,28,29,31,33,34,214,35,36,37,38,39,40,42,220,221,43,44,45,46,47,48,49,227,50,51,52,53,228,229,54,247,248,55,249,280,281,56,57,58,59,285,288,60,61,62,289,63,64,418,419,420,421,422,423,424,469,65,470,471,472,473,474,475],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[144,146],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[143,144,5,148,149,6,7,8,182,184,192],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":144,"org.easymock.tests2.UsageTest.argumentsOrdered":89,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":265,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":302,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":84,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":76,"org.easymock.tests2.DelegateToTest.testReturnException":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":426,"org.easymock.tests.MockingTest.testPartialClassMocking":57,"org.easymock.tests.MockClassControlTest.testToString":470,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":173,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":255,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":102,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":19,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":364,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":480,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":150,"org.easymock.tests2.UsageTest.wrongArguments":82,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":274,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":241,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":252,"org.easymock.samples.ExampleTest.answerVsDelegate":67,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":64,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":284,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":45,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":475,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":131,"org.easymock.tests2.CaptureTest.testPrimitive":185,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":278,"org.easymock.tests.UsageTest.moreThanOneArgument":266,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":383,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":358,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":446,"org.easymock.tests.UsageTest.argumentsOrdered":272,"org.easymock.tests.UsageVarargTest.varargIntAccepted":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":431,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":484,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":211,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":435,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":235,"org.easymock.tests.ReplayStateInvalidUsageTest.times":344,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":487,"org.easymock.tests2.DependencyTest.testClassMocking":216,"org.easymock.tests2.AnswerTest.answer":178,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":199,"org.easymock.tests2.CaptureTest.testAnd":182,"org.easymock.tests2.UsageTest.strictResetToDefault":80,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":50,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":357,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":126,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":450,"org.easymock.tests2.DelegateToTest.testDelegate":140,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":379,"org.easymock.tests.LimitationsTest.mockFinalMethod":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":429,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":261,"org.easymock.tests2.DependencyTest.testClassMockingSupport":217,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":290,"org.easymock.tests2.CaptureTest.testCapture1_2446744":186,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":377,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":197,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":338,"org.easymock.tests.UsageThrowableTest.throwError":348,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":385,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":479,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":114,"org.easymock.samples.PartialClassMockTest.testGetArea":11,"org.easymock.tests.MockingTest.testInterfaceMocking":282,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":432,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":443,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":103,"org.easymock.tests2.UsageTest.niceToStrict":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":292,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":35,"org.easymock.tests2.MockBuilderTest.testCreateMock":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":110,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":238,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":490,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":373,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":127,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":389,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":390,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":250,"org.easymock.tests.UsageOverloadedMethodTest.overloading":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":107,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":411,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":155,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":327,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":154,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":191,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":454,"org.easymock.tests.MockClassControlTest.testEquals":474,"org.easymock.tests2.EasyMockSupportClassTest.testAll":18,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":61,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":381,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":15,"org.easymock.tests2.CaptureTest.testCaptureAll":183,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":259,"org.easymock.tests.MockNameTest.defaultName":363,"org.easymock.tests2.UsageConstraintsTest.testMatches":156,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":359,"org.easymock.samples.ExampleTest.voteForRemovals":71,"org.easymock.tests.UsageVarargTest.allKinds":462,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":415,"org.easymock.samples.BasicClassMockTest.testPrintContent":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":260,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":354,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":430,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":139,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":208,"org.easymock.tests2.UsageConstraintsTest.greaterThan":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":97,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":437,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":53,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":424,"org.easymock.samples.ExampleTest.voteForRemoval":68,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":228,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":243,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":48,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":54,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":79,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":124,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":425,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":135,"org.easymock.tests2.CaptureTest.testCaptureFirst":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":125,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":91,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":414,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":323,"org.easymock.tests2.UsageTest.moreThanOneArgument":81,"org.easymock.tests2.CaptureTest.testCapture2_2446744":194,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":245,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":310,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":461,"org.easymock.tests.GenericTest.testBridgedEquals":289,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":397,"org.easymock.tests.UsageExpectAndReturnTest.longType":319,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":257,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":41,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":382,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":445,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":162,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":380,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":440,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":356,"org.easymock.tests.UsageCallCountTest.tooManyCalls":398,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":111,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":324,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":240,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":369,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":353,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":26,"org.easymock.tests.MockingTest.testNiceClassMocking":285,"org.easymock.tests.MockingTest.testClassMocking":281,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":391,"org.easymock.tests2.UsageConstraintsTest.testContains":153,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":32,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":22,"org.easymock.tests2.UsageConstraintsTest.testFind":146,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":264,"org.easymock.tests.MockTypeTest.fromEasyMockClass":384,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":399,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":120,"org.easymock.tests.UsageExpectAndReturnTest.object":326,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":239,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":481,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":456,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":466,"org.easymock.tests.UsageTest.exactCallCountByLastCall":273,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":297,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":447,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":254,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":78,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":451,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":332,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":410,"org.easymock.tests.MockClassControlTest.testHashCode":473,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":202,"org.easymock.tests2.EasyMockSupportTest.testVerify":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":105,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":448,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":408,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":388,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":476,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":196,"org.easymock.tests.UsageVarargTest.varargCharAccepted":455,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":315,"org.easymock.tests2.UsageTest.openCallCountByLastCall":85,"org.easymock.tests.DefaultClassInstantiatorTest.object":418,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":133,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":3,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":464,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":106,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":371,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":233,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":201,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":472,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":51,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":370,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":333,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":4,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":21,"org.easymock.tests2.UsageTest.resumeIfFailure":90,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":428,"org.easymock.tests2.StubTest.stubWithReturnValue":93,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":485,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":163,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":325,"org.easymock.tests2.SerializationTest.testAllMockedMethod":24,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":308,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":491,"org.easymock.samples.SupportTest.voteForRemovals":75,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":288,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":204,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":376,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":314,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":179,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":256,"org.easymock.tests.UsageExpectAndThrowTest.object":374,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":160,"org.easymock.tests2.DelegateToTest.testWrongClass":138,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":286,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":287,"org.easymock.tests.UsageStrictMockTest.range":404,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":222,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":129,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":25,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":375,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":94,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":271,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":251,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":492,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":444,"org.easymock.tests2.CaptureTest.testCaptureNone":190,"org.easymock.tests.UsageUnorderedTest.message":279,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":478,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":489,"org.easymock.tests.UsageVerifyTest.twoReturns":417,"org.easymock.tests.UsageVarargTest.varargByteAccepted":460,"org.easymock.tests2.ThreadingTest.testThreadSafe":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":108,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":395,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":467,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":9,"org.easymock.tests2.CaptureTest.testCapture_2617107":184,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":312,"org.easymock.tests2.UsageConstraintsTest.any":151,"org.easymock.tests2.StubTest.stub":92,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":343,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":313,"org.easymock.tests.UsageExpectAndThrowTest.longType":367,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":422,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":342,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":169,"org.easymock.tests2.SerializationTest.testClass":23,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":206,"org.easymock.tests.LimitationsTest.mockNativeMethod":55,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":62,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":335,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":17,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":232,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":172,"org.easymock.tests2.NameTest.nameForMocksControl":177,"org.easymock.tests2.MockedExceptionTest.testMockedException":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":98,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":270,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":119,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":59,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":368,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":43,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":38,"org.easymock.tests.MockingTest.testNicePartialClassMocking":58,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":47,"org.easymock.tests2.CaptureTest.testCaptureLast":189,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":230,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":291,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":149,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":30,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":161,"org.easymock.tests.MockingTest.testTwoMocks":56,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":372,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":88,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":164,"org.easymock.samples.ExampleTest.removeNonExistingDocument":72,"org.easymock.tests.UsageStrictMockTest.differentMethods":405,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":237,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":340,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":203,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":420,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":244,"org.easymock.tests2.MockBuilderTest.testCreateMockString":42,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":99,"org.easymock.tests.UsageExpectAndThrowTest.floatType":366,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":96,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":181,"org.easymock.tests.UsageVerifyTest.twoThrows":416,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":20,"org.easymock.samples.ExampleTest.voteAgainstRemoval":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":303,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":52,"org.easymock.tests.LimitationsTest.privateConstructor":248,"org.easymock.tests2.UsageConstraintsTest.testNotNull":8,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":355,"org.easymock.tests2.UsageTest.defaultResetToNice":87,"org.easymock.samples.ExampleTest.voteAgainstRemovals":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":304,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":331,"org.easymock.tests.UsageVarargTest.differentLength":457,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":231,"org.easymock.tests2.CallbackTest.callback":200,"org.easymock.tests2.UsageConstraintsTest.equals":145,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":226,"org.easymock.tests.UsageTest.openCallCountByLastCall":269,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":276,"org.easymock.tests.UsageCallCountTest.tooFewCalls":393,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":28,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":253,"org.easymock.tests.UsageThrowableTest.throwCheckedException":352,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":493,"org.easymock.tests.MockingTest.testStrictClassMocking":280,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":29,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":362,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":236,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":345,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":213,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":1,"org.easymock.tests2.CompareToTest.testGreateOrEqual":486,"org.easymock.tests.ObjectMethodsTest.testHashCode":465,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":483,"org.easymock.tests2.NameTest.nameForNiceMock":176,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":246,"org.easymock.tests2.DependencyTest.testInterfaceMocking":218,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":482,"org.easymock.samples.ExampleTest.addDocument":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":109,"org.easymock.tests2.DelegateToTest.testStubDelegate":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":113,"org.easymock.tests2.AnswerTest.stubAnswer":0,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":402,"org.easymock.tests.UsageVarargTest.varargLongAccepted":459,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":301,"org.easymock.tests.UsageExpectAndReturnTest.floatType":318,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":334,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":14,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":412,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":159,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":210,"org.easymock.tests.UsageThrowableTest.noUpperLimit":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":142,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":220,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":187,"org.easymock.tests2.SerializationTest.test":121,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":419,"org.easymock.tests2.UsageConstraintsTest.testSame":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":317,"org.easymock.samples.SupportTest.addDocument":74,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":100,"org.easymock.tests.GenericTest.testPackageScope":60,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":296,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":209,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":283,"org.easymock.tests2.NameTest.nameForMock":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":328,"org.easymock.tests2.UsageStrictMockTest.differentMethods":171,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":227,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":320,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":378,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":463,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":439,"org.easymock.tests2.MockedExceptionTest.testRealException":117,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":387,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":305,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":275,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":347,"org.easymock.tests2.NameTest.nameForStrictMock":175,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":214,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":118,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":46,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":221,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":421,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":7,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":33,"org.easymock.tests2.UsageStrictMockTest.range":170,"org.easymock.tests2.UsageConstraintsTest.lessThan":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":205,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":104,"org.easymock.tests2.CaptureTest.testCaptureRightOne":192,"org.easymock.tests2.UsageConstraintsTest.testOr":148,"org.easymock.tests.UsageRangeTest.combination":436,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":44,"org.easymock.tests.UsageTest.wrongArguments":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":101,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":65,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":293,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":329,"org.easymock.tests.UsageVarargTest.varargShortAccepted":458,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":423,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":396,"org.easymock.tests2.UsageConstraintsTest.cmpTo":152,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":295,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":86,"org.easymock.tests2.CaptureTest.testCaptureFromStub":193,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":337,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":34,"org.easymock.tests.UsageTest.unexpectedCallWithArray":267,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":401,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":394,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":330,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":403,"org.easymock.tests2.UsageConstraintsTest.constraints":143,"org.easymock.samples.ExampleTest.addAndChangeDocument":73,"org.easymock.tests.UsageStrictMockTest.testVerify":407,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":77,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":400,"org.easymock.tests2.CompareToTest.testGreateThan":488,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":258,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":433,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":16,"org.easymock.tests.LimitationsTest.abstractClass":247,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":434,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":413,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":128}}]
