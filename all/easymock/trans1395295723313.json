[{"position":"org.easymock.internal.MockBuilder:178","failures":[0,1],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[2,3,4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[13],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,2,36,37,38,4,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,0,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,6,7,8,9,12,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[186],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[187,17,19,20,22,25,188,27,189,190,28,191,192,193,29,194,195,31,33,34,2,36,196,197,37,38,198,4,199,39,40,41,42,43,44,46,47,200,48,49,50,51,52,53,54,55,56,201,57,58,59,60,202,61,62,0,203,204,205,206,207,208,209,210,211,63,65,66,67,68,212,213,214,215,71,73,76,77,78,216,79,217,218,5,6,219,7,220,8,9,221,186,222,223,224,225,226,227,228,229,11,230,231,232,12,233,234,80,81,235,236,237,238,86,88,89,91,92,95,96,97,118,119,120,121,122,239,240,241,242,123,124,125,137,139,140,142,143,144,145,146,147,153,154,155,156,157,243,244,245,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[33,88,246,138,139],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:230","sourceCode":"throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[247,248],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[249,249,250,250,187,14,15,16,17,18,19,20,21,22,23,24,25,26,188,27,189,190,28,191,251,192,252,193,29,194,253,254,195,255,256,30,31,32,33,34,35,257,258,259,260,2,36,3,196,197,261,262,37,38,198,4,263,199,39,40,264,265,266,267,41,42,43,268,44,45,46,47,200,269,270,48,49,50,51,52,53,54,55,56,201,57,58,59,60,271,272,202,61,273,62,0,274,203,275,204,205,206,207,208,209,210,211,63,276,277,64,65,278,66,67,279,68,212,213,214,215,69,70,71,280,72,73,74,281,75,76,77,78,216,79,217,218,5,6,219,7,220,8,9,221,186,222,223,224,225,226,227,228,229,11,230,231,282,232,12,233,234,80,81,283,284,82,285,83,84,286,235,287,288,236,237,238,289,85,290,86,87,88,89,90,291,91,92,93,94,95,96,97,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,312,313,120,121,314,315,122,316,317,318,319,320,239,240,241,242,321,322,123,124,125,126,127,128,129,130,323,131,132,133,134,135,324,325,326,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,327,243,158,244,328,159,160,161,162,163,164,245,329,330,331,332,333,334,165,335,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[66,67,279,336],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[301,337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[17,18,19,20,21,22,23,188,27,189,190,28,191,192,252,29,253,254,195,255,256,30,31,32,33,34,35,257,258,259,260,2,36,3,196,197,261,262,37,38,198,4,263,199,39,264,265,266,267,41,42,43,268,44,45,46,47,200,269,270,48,49,272,61,273,203,275,204,206,207,210,211,63,64,65,278,13,66,67,279,69,70,71,72,73,74,75,76,77,78,216,79,217,218,5,6,219,7,220,8,9,221,186,222,223,224,225,226,227,228,229,11,230,231,232,12,233,234,80,283,284,235,236,237,238,289,85,290,86,87,88,89,90,291,91,92,93,94,95,96,97,338,292,339,293,294,295,296,306,307,308,309,310,311,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,312,313,120,121,314,315,122,317,318,319,320,340,239,240,241,242,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,327,243,158,159,160,161,162,163,164,245,165,335,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[249,249,250,250,187,14,15,16,17,18,19,20,21,22,341,23,24,25,26,188,27,189,190,28,191,251,342,192,343,344,252,193,29,194,345,346,253,254,195,255,256,30,31,32,33,34,35,347,257,258,259,260,2,36,3,196,197,261,262,37,38,198,4,263,199,39,348,349,350,351,352,40,353,354,355,356,357,358,264,265,266,267,41,42,43,268,44,45,46,47,200,269,270,48,49,50,51,52,53,54,55,56,201,57,58,59,60,271,272,202,359,360,61,273,62,0,361,274,203,275,204,362,205,206,207,208,209,210,211,363,364,365,366,63,276,277,64,65,278,66,67,279,367,368,369,370,371,68,372,373,374,375,376,377,378,379,380,212,381,382,213,383,384,385,386,387,388,389,390,391,214,392,393,394,395,396,215,397,398,69,70,71,280,72,73,74,281,75,76,77,78,216,79,217,218,5,6,399,219,7,220,8,9,221,10,186,222,223,224,225,226,227,228,229,11,230,231,282,232,12,233,234,400,401,80,81,283,402,284,82,285,83,84,286,235,287,403,404,288,236,237,405,238,406,407,408,289,85,290,86,87,88,89,90,291,91,92,93,94,95,96,97,409,410,411,412,338,413,414,415,416,417,418,419,292,339,293,294,295,296,297,298,299,300,301,302,303,304,305,306,420,307,308,309,310,311,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,312,313,120,121,314,315,122,1,421,422,423,424,425,316,317,318,319,320,426,340,427,428,429,430,431,432,239,240,241,242,433,337,434,435,436,437,438,439,440,441,442,443,444,445,446,447,321,448,449,450,451,452,322,453,123,124,125,454,455,456,457,458,459,460,461,462,463,464,465,466,467,126,127,128,468,129,130,323,131,132,133,134,135,324,325,326,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,327,247,243,158,244,248,469,328,470,159,160,161,162,163,164,471,472,245,473,329,330,331,332,333,334,165,335,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[305],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[41,47,118,121,138,142],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[224],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[474,475,290,312,476,477],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[478,225],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[31,36,37,38,39,8,186,86,91,92,93,94,95,96,97,136,153,154,155,156,157,163,165,335],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[249,249,250,250,187,15,16,188,27,190,28,191,251,192,343,344,252,193,29,194,345,346,253,254,195,272,479,202,359,360,61,273,62,0,361,274,203,480,275,481,204,362,205,206,207,208,210,211,363,364,66,279,378,379,380,212,381,382,213,383,384,385,386,387,388,389,390,391,214,392,393,394,395,396,215,397,398,403,404,288,236,237,238,408,1,423,426,340,427,428,429,430,431,432,459,460,461,462,463,464,465,466,327,247,243,158,244,248,471,472,245,473],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[14,17,18,19,20,21,22,341,23,24,25,26,189,253,254,195,255,256,30,31,32,33,34,35,347,257,258,259,260,2,36,3,196,197,261,262,37,38,198,4,263,199,39,348,349,350,351,352,40,353,354,355,356,357,358,264,265,266,267,41,42,43,268,44,45,46,47,200,269,270,48,49,50,51,52,53,54,55,56,201,57,58,59,60,271,209,365,366,63,276,277,64,65,278,13,67,367,368,369,370,371,68,372,373,374,375,376,377,69,70,71,280,72,73,74,281,75,76,77,78,216,79,217,218,5,6,399,219,7,220,8,9,221,10,186,222,223,224,225,226,227,228,229,11,230,231,282,232,12,233,234,80,81,283,402,284,82,285,83,84,286,235,287,405,406,407,289,85,290,86,87,88,89,90,291,91,92,93,94,95,96,97,409,410,411,412,338,413,414,415,416,417,418,419,292,339,293,294,295,296,297,298,299,300,301,302,303,304,305,306,420,307,308,309,310,311,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,312,313,120,121,314,315,122,421,422,424,425,316,317,318,319,320,239,240,241,242,433,337,434,435,436,437,438,439,440,441,442,443,444,445,446,447,321,448,449,450,451,452,322,453,123,124,125,454,455,456,457,458,459,467,126,127,128,468,129,130,323,131,132,133,134,135,324,325,326,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,469,328,470,159,160,161,162,163,164,329,330,331,332,333,334,165,335,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[482,483,484,485,486,487,488,489,490,362],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"failures":[491,136],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[27,346,347,257],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[482,361,483,492,493,484,485,486,488,489,490,204,362,66],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[361,66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[494,225,231,234],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[495,496,497],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":6,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":118,"org.easymock.tests2.UsageTest.argumentsOrdered":270,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":442,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":45,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":14,"org.easymock.tests2.DelegateToTest.testReturnException":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":160,"org.easymock.tests.MockingTest.testPartialClassMocking":236,"org.easymock.tests.MockClassControlTest.testToString":427,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":347,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":386,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":98,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":213,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":81,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":484,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":221,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":91,"org.easymock.tests2.UsageTest.wrongArguments":268,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":358,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":319,"org.easymock.samples.ExampleTest.answerVsDelegate":18,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":423,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":407,"org.easymock.tests2.UsageConstraintsTest.testNull":7,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":190,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":432,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":58,"org.easymock.tests2.CaptureTest.testPrimitive":196,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":95,"org.easymock.tests.UsageTest.moreThanOneArgument":119,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":117,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":150,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":300,"org.easymock.tests.UsageTest.argumentsOrdered":315,"org.easymock.tests.UsageVarargTest.varargIntAccepted":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":447,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":489,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":272,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":376,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":157,"org.easymock.tests.ReplayStateInvalidUsageTest.times":416,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":40,"org.easymock.tests2.DependencyTest.testClassMocking":400,"org.easymock.tests2.AnswerTest.answer":63,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":448,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":267,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests2.UsageTest.strictResetToDefault":42,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":54,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":241,"org.easymock.tests2.DelegateToTest.testDelegate":75,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":304,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":113,"org.easymock.tests.LimitationsTest.mockFinalMethod":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":311,"org.easymock.tests2.DependencyTest.testClassMockingSupport":401,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":305,"org.easymock.tests2.CaptureTest.testCapture1_2446744":197,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":342,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":111,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":265,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":411,"org.easymock.tests.UsageThrowableTest.throwError":140,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":422,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":377,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":398,"org.easymock.samples.PartialClassMockTest.testGetArea":187,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":412,"org.easymock.tests.MockingTest.testInterfaceMocking":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":154,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":330,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":387,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":99,"org.easymock.tests2.UsageTest.niceToStrict":44,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":61,"org.easymock.tests2.MockBuilderTest.testCreateMock":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":394,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":355,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":474,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":107,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":55,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":326,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":292,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":317,"org.easymock.tests.UsageOverloadedMethodTest.overloading":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":391,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":84,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":177,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":123,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":224,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":198,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":468,"org.easymock.tests.MockClassControlTest.testEquals":431,"org.easymock.tests2.EasyMockSupportClassTest.testAll":212,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":158,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":115,"org.easymock.tests2.CaptureTest.testCaptureAll":36,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":309,"org.easymock.tests.MockNameTest.defaultName":467,"org.easymock.tests2.UsageConstraintsTest.testMatches":226,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":409,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":151,"org.easymock.samples.ExampleTest.voteForRemovals":22,"org.easymock.tests.UsageVarargTest.allKinds":135,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":137,"org.easymock.samples.BasicClassMockTest.testPrintContent":16,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":310,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":146,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":256,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":164,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":281,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":373,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":490,"org.easymock.tests2.UsageConstraintsTest.greaterThan":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":240,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":194,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":466,"org.easymock.samples.ExampleTest.voteForRemoval":19,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":77,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":345,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":424,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":251,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":41,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":327,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":52,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":379,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":159,"org.easymock.tests2.CaptureTest.testCaptureFirst":39,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":53,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":49,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":173,"org.easymock.tests2.UsageTest.moreThanOneArgument":43,"org.easymock.tests2.CaptureTest.testCapture2_2446744":199,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":449,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":203,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":134,"org.easymock.tests.GenericTest.testBridgedEquals":248,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":298,"org.easymock.tests.UsageExpectAndReturnTest.longType":169,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":50,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":307,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":480,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":116,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":282,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":316,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":148,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":333,"org.easymock.tests.UsageCallCountTest.tooManyCalls":299,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":395,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":174,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":357,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":103,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":145,"org.easymock.tests.MockingTest.testNiceClassMocking":408,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":206,"org.easymock.tests.MockingTest.testClassMocking":404,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":479,"org.easymock.tests2.UsageConstraintsTest.testContains":223,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":339,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":195,"org.easymock.tests2.UsageConstraintsTest.testFind":219,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":125,"org.easymock.tests.MockTypeTest.fromEasyMockClass":421,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":284,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":289,"org.easymock.tests.UsageExpectAndReturnTest.object":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":356,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":485,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":130,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":457,"org.easymock.tests.UsageTest.exactCallCountByLastCall":122,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":469,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":301,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":362,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":182,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":126,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":83,"org.easymock.tests.MockClassControlTest.testHashCode":430,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":368,"org.easymock.tests2.EasyMockSupportTest.testVerify":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":389,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":302,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":82,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":264,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":13,"org.easymock.tests.UsageVarargTest.varargCharAccepted":129,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":453,"org.easymock.tests2.UsageTest.openCallCountByLastCall":46,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":495,"org.easymock.tests.DefaultClassInstantiatorTest.object":460,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":60,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":324,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":390,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":105,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":143,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":367,"org.easymock.tests2.ConstraintsToStringTest.anyToString":491,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":429,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":193,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":104,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":183,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":332,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":215,"org.easymock.tests2.UsageTest.resumeIfFailure":48,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":162,"org.easymock.tests2.StubTest.stubWithReturnValue":71,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":482,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":175,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":232,"org.easymock.tests2.SerializationTest.testAllMockedMethod":279,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":321,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":492,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":475,"org.easymock.samples.SupportTest.voteForRemovals":25,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":247,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":110,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":336,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":322,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":276,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":470,"org.easymock.tests.UsageExpectAndThrowTest.object":108,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":230,"org.easymock.tests2.DelegateToTest.testWrongClass":74,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":96,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":97,"org.easymock.tests.UsageStrictMockTest.range":88,"org.easymock.samples.ConstructorCalledMockTest.testTax":249,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":365,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":201,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":205,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":109,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":62,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":418,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":378,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":318,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":476,"org.easymock.tests2.CaptureTest.testCaptureNone":38,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":331,"org.easymock.tests.UsageUnorderedTest.message":136,"org.easymock.tests.UsageVerifyTest.twoReturns":139,"org.easymock.tests.UsageVarargTest.varargByteAccepted":133,"org.easymock.tests2.ThreadingTest.testThreadSafe":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":392,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":296,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":458,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":15,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":94,"org.easymock.tests2.UsageConstraintsTest.any":186,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":415,"org.easymock.tests2.StubTest.stub":70,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":161,"org.easymock.tests.UsageExpectAndThrowTest.longType":101,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":464,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":414,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":32,"org.easymock.tests2.SerializationTest.testClass":66,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":68,"org.easymock.tests.LimitationsTest.mockNativeMethod":245,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":185,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":244,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":350,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":35,"org.easymock.tests2.NameTest.nameForMocksControl":260,"org.easymock.tests2.MockedExceptionTest.testMockedException":254,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":382,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":121,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":402,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":102,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":238,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":188,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":0,"org.easymock.tests.MockingTest.testNicePartialClassMocking":237,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":191,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":493,"org.easymock.tests2.CaptureTest.testCaptureLast":37,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":348,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":306,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":9,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":211,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":231,"org.easymock.tests.MockingTest.testTwoMocks":288,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":106,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":269,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":233,"org.easymock.samples.ExampleTest.removeNonExistingDocument":341,"org.easymock.tests.UsageStrictMockTest.differentMethods":89,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":338,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":354,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":369,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":462,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":78,"org.easymock.tests2.MockBuilderTest.testCreateMockString":275,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":426,"org.easymock.tests.UsageExpectAndThrowTest.floatType":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":383,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":64,"org.easymock.tests.UsageVerifyTest.twoThrows":138,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":214,"org.easymock.samples.ExampleTest.voteAgainstRemoval":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":443,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":329,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":29,"org.easymock.tests.LimitationsTest.privateConstructor":472,"org.easymock.tests2.UsageConstraintsTest.testNotNull":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":147,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":253,"org.easymock.tests2.UsageTest.defaultResetToNice":200,"org.easymock.samples.ExampleTest.voteAgainstRemovals":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":181,"org.easymock.tests.UsageVarargTest.differentLength":323,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":349,"org.easymock.tests2.CallbackTest.callback":69,"org.easymock.tests2.UsageConstraintsTest.equals":399,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":343,"org.easymock.tests.UsageTest.openCallCountByLastCall":120,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":217,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":93,"org.easymock.tests.UsageCallCountTest.tooFewCalls":294,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":208,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":320,"org.easymock.tests.UsageThrowableTest.throwCheckedException":144,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":477,"org.easymock.tests.MockingTest.testStrictClassMocking":403,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":210,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":335,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":207,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":353,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":417,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":209,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":278,"org.easymock.tests2.CompareToTest.testGreateOrEqual":478,"org.easymock.tests.ObjectMethodsTest.testHashCode":456,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":488,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":79,"org.easymock.tests2.NameTest.nameForNiceMock":259,"org.easymock.tests2.DependencyTest.testInterfaceMocking":80,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":486,"org.easymock.samples.ExampleTest.addDocument":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.DelegateToTest.testStubDelegate":73,"org.easymock.tests2.AnswerTest.stubAnswer":65,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":86,"org.easymock.tests.UsageVarargTest.varargLongAccepted":132,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":441,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":184,"org.easymock.tests.UsageExpectAndReturnTest.floatType":168,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":204,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":250,"org.easymock.tests.UsageThrowableTest.noUpperLimit":141,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":229,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":286,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":375,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":218,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":363,"org.easymock.tests2.SerializationTest.test":67,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":261,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":167,"org.easymock.tests2.UsageConstraintsTest.testSame":220,"org.easymock.samples.SupportTest.addDocument":24,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":384,"org.easymock.tests.GenericTest.testPackageScope":243,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":374,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":406,"org.easymock.tests2.NameTest.nameForMock":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":178,"org.easymock.tests2.UsageStrictMockTest.differentMethods":34,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":344,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":170,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":112,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":454,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":242,"org.easymock.tests2.MockedExceptionTest.testRealException":255,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":366,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":445,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":31,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":419,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":92,"org.easymock.tests2.NameTest.nameForStrictMock":258,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":360,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":496,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":283,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":28,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":364,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":463,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":11,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":202,"org.easymock.tests2.UsageStrictMockTest.range":33,"org.easymock.tests2.UsageConstraintsTest.lessThan":234,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":371,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":388,"org.easymock.tests2.CaptureTest.testCaptureRightOne":4,"org.easymock.tests2.UsageConstraintsTest.testOr":8,"org.easymock.tests.UsageRangeTest.combination":239,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":27,"org.easymock.tests.UsageTest.wrongArguments":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":385,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":340,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":337,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":465,"org.easymock.tests.UsageVarargTest.varargShortAccepted":131,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":297,"org.easymock.tests2.UsageConstraintsTest.cmpTo":222,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":277,"org.easymock.tests2.CompareToTest.testLessThan":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":435,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":47,"org.easymock.tests2.CaptureTest.testCaptureFromStub":263,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":410,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":359,"org.easymock.tests.UsageTest.unexpectedCallWithArray":312,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":290,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":295,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":180,"org.easymock.tests2.UsageConstraintsTest.constraints":5,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":87,"org.easymock.samples.ExampleTest.addAndChangeDocument":23,"org.easymock.tests.UsageStrictMockTest.testVerify":291,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":26,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":308,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":262,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":481,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":155,"org.easymock.tests.LimitationsTest.abstractClass":471,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":172,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":156,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":235,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":127,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":56,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":246}}]
