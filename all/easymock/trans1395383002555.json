[{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"hashCodeMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[24,25,26,27,28,29,30,31],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[32,33,34,35,36,37,38,21,23,39,40,41,42,43,44,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnValue":"arg","returnedType":"paramType"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:193","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isArray()) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n                return false;\n            } \n            break;\n        } \n    } \n    if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[110,111,75,76,79,112,113],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[115,116,117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[118,119,120,68,121,70,122,123,124,125,126,127,128,129,130,25,131,132,133,134,31,135,108,136,137],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[31],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[138,139,140,46,47,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,72,122,73,74,75,76,77,78,164,165,166,167,168,169,170,171,79,172,173,174,175,176,177,178,179,180,181,182,81,183,84,85,87,92,97,184,185,102,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,105,114,203,204,27,205,206,207,28,29,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,115,116,117,229,230,231,11,12,107,232,233,234,235,236,237,238,239,240,241,242,16,243,244,245,246,247,248,249,20,21,250,251,22,23,252,253,254,255,256,257,258],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[216,218,259,220,221,224,225,260,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"captured"}},{"position":"org.easymock.internal.MockBuilder:223","failures":[103,8,262,263,19,256],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[138,139,140,46,264,264,265,265,47,141,142,143,144,145,146,147,148,266,267,268,269,270,271,149,150,151,62,63,64,65,66,67,272,273,120,274,152,153,275,276,277,156,278,279,280,157,281,282,283,284,285,159,68,69,286,287,160,121,70,161,162,163,288,71,72,122,73,74,75,76,77,78,164,165,166,289,290,167,168,291,169,292,293,294,295,170,296,297,298,299,171,300,301,302,303,304,305,306,307,308,123,79,172,173,174,175,176,177,178,179,180,181,182,309,124,310,311,312,313,314,80,81,315,183,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,316,317,186,318,319,320,321,322,187,188,323,189,125,126,190,324,191,192,193,194,195,196,197,325,198,199,200,201,202,103,104,105,106,326,128,129,114,130,24,25,131,203,204,27,205,132,206,327,133,207,328,134,28,29,208,210,30,31,329,211,212,330,331,332,213,214,215,216,217,218,219,259,220,221,222,223,224,225,260,261,226,227,228,115,116,117,229,333,230,334,335,336,337,338,8,231,262,11,12,14,15,107,232,339,233,234,235,135,108,340,236,237,341,238,239,240,241,342,343,344,345,242,16,243,244,245,246,247,17,248,249,20,21,250,251,22,23,346,109,347,348,349,350,351,352,252,353,253,136,137,254,255,256,257,258],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[354],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[129,114,131,203,26,28,216,218,225],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[69,121,70,163,123,172,323,107,135,108,238,240,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[144,184,355,240,356,241,343,344,345,347],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[138,139,140,46,264,264,265,265,47,141,142,143,144,145,146,147,148,357,266,358,118,119,359,360,267,268,269,270,271,361,149,150,362,363,364,365,151,366,62,63,64,65,66,67,272,273,120,274,152,153,367,154,155,275,368,276,369,277,156,370,278,371,372,279,373,280,157,281,282,283,284,285,158,159,68,374,375,376,377,69,286,287,160,121,70,161,162,163,288,71,378,110,111,72,122,73,74,75,76,77,78,379,380,381,382,383,384,385,386,387,388,164,165,389,166,390,391,392,289,290,167,168,291,169,292,293,294,295,170,296,297,298,299,171,300,301,302,303,304,305,306,307,308,123,79,172,173,174,175,393,176,177,394,178,179,180,181,182,0,309,1,2,3,4,395,396,124,310,311,312,313,314,80,81,315,397,183,398,5,399,400,6,401,402,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,403,316,317,184,404,185,102,405,186,406,407,112,113,318,319,320,321,322,187,188,323,189,125,126,190,324,408,409,410,411,412,413,414,415,7,416,127,417,418,419,420,421,422,423,424,425,426,427,355,428,429,430,431,432,433,434,435,436,437,191,192,193,194,195,196,197,325,198,199,200,201,202,438,439,440,441,103,104,105,106,326,128,129,114,442,130,24,25,131,203,204,26,27,205,132,206,327,133,207,328,134,28,29,208,209,210,30,31,329,211,48,49,50,443,51,212,444,52,53,445,446,54,330,331,332,213,214,55,56,57,447,58,215,448,59,60,449,450,61,216,217,218,219,259,220,221,222,223,224,225,260,261,226,451,452,227,228,115,116,117,453,229,333,230,454,334,335,336,337,338,8,9,10,455,231,262,11,12,456,13,14,15,107,232,339,233,234,235,135,108,340,236,237,341,238,239,37,240,457,356,241,342,343,344,458,345,242,16,243,244,245,246,263,459,247,460,461,17,462,248,18,463,19,249,20,21,250,251,22,23,346,109,347,464,348,349,350,351,352,252,353,253,136,137,254,465,466,467,255,468,469,256,470,471,472,473,474,475,476,477,478,257,479,480,481,482,483,258,484,485],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl() : org.easymock.EasyMockSupport.createNiceControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:360","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[138,264,265,361,164,165,166,103,263,462,248,20,21,22,23],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[34,486,239,37],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[207,235,245],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":114,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":69,"org.easymock.tests2.UsageTest.argumentsOrdered":237,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":200,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":425,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":235,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":46,"org.easymock.tests2.DelegateToTest.testReturnException":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":63,"org.easymock.tests.MockingTest.testPartialClassMocking":164,"org.easymock.tests.MockClassControlTest.testToString":1,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":464,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":473,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":82,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":256,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":228,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":204,"org.easymock.tests2.UsageTest.wrongArguments":233,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":313,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":61,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":320,"org.easymock.samples.ExampleTest.answerVsDelegate":144,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":6,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":391,"org.easymock.tests2.UsageConstraintsTest.testNull":24,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":244,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":396,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":199,"org.easymock.tests2.CaptureTest.testPrimitive":219,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":315,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":101,"org.easymock.tests.UsageTest.moreThanOneArgument":286,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":283,"org.easymock.tests.UsageTest.argumentsOrdered":162,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":358,"org.easymock.tests.UsageVarargTest.varargIntAccepted":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":429,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":304,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":8,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":446,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":308,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":215,"org.easymock.tests.ReplayStateInvalidUsageTest.times":372,"org.easymock.tests2.DependencyTest.testClassMocking":451,"org.easymock.tests2.AnswerTest.answer":240,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":431,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":338,"org.easymock.tests2.CaptureTest.testAnd":216,"org.easymock.tests2.UsageTest.strictResetToDefault":232,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":33,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":282,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":195,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":311,"org.easymock.tests2.DelegateToTest.testDelegate":334,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":97,"org.easymock.tests.LimitationsTest.mockFinalMethod":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":271,"org.easymock.tests2.DependencyTest.testClassMockingSupport":452,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":397,"org.easymock.tests2.CaptureTest.testCapture1_2446744":259,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":459,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":95,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":336,"org.easymock.tests.UsageThrowableTest.throwError":72,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":369,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":400,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":285,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":485,"org.easymock.samples.PartialClassMockTest.testGetArea":138,"org.easymock.tests.MockingTest.testInterfaceMocking":389,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":305,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":474,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":7,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":83,"org.easymock.tests2.UsageTest.niceToStrict":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":231,"org.easymock.tests2.MockBuilderTest.testCreateMock":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":481,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":60,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":91,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":196,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":111,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":272,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":318,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":43,"org.easymock.tests.UsageOverloadedMethodTest.overloading":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":478,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":102,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":327,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":296,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":206,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":224,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":393,"org.easymock.tests.MockClassControlTest.testEquals":395,"org.easymock.tests2.EasyMockSupportClassTest.testAll":255,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":150,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":99,"org.easymock.tests2.CaptureTest.testCaptureAll":217,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":269,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":337,"org.easymock.tests.MockNameTest.defaultName":377,"org.easymock.tests2.UsageConstraintsTest.testMatches":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":284,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":368,"org.easymock.samples.ExampleTest.voteForRemovals":148,"org.easymock.tests.UsageVarargTest.allKinds":182,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":123,"org.easymock.samples.BasicClassMockTest.testPrintContent":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":270,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":77,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":352,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":454,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":67,"org.easymock.tests2.UsageConstraintsTest.greaterThan":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":468,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":310,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":18,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":385,"org.easymock.samples.ExampleTest.voteForRemoval":145,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":463,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":331,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":401,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":263,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":157,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":107,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":193,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":62,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":453,"org.easymock.tests2.CaptureTest.testCaptureFirst":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":194,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":238,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":406,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":293,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":213,"org.easymock.tests2.CaptureTest.testCapture2_2446744":261,"org.easymock.tests2.UsageTest.moreThanOneArgument":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":432,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":14,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":181,"org.easymock.tests.GenericTest.testBridgedEquals":363,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":154,"org.easymock.tests.UsageExpectAndReturnTest.longType":168,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":267,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":100,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":403,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":209,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":98,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":112,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":281,"org.easymock.tests.UsageCallCountTest.tooManyCalls":155,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":450,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":87,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":76,"org.easymock.tests.MockingTest.testNiceClassMocking":392,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":20,"org.easymock.tests.MockingTest.testClassMocking":387,"org.easymock.tests2.UsageConstraintsTest.testContains":132,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":273,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":105,"org.easymock.tests2.UsageConstraintsTest.testFind":130,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":68,"org.easymock.tests.MockTypeTest.fromEasyMockClass":399,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":322,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":345,"org.easymock.tests.UsageExpectAndReturnTest.object":170,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":198,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":177,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":414,"org.easymock.tests.UsageTest.exactCallCountByLastCall":163,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":45,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":118,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":374,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":37,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":173,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":300,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":185,"org.easymock.tests.MockClassControlTest.testHashCode":4,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":49,"org.easymock.tests2.EasyMockSupportTest.testVerify":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":476,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":119,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":184,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":335,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":211,"org.easymock.tests.UsageVarargTest.varargCharAccepted":176,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":437,"org.easymock.tests2.UsageTest.openCallCountByLastCall":135,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":201,"org.easymock.tests.DefaultClassInstantiatorTest.object":379,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":378,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":477,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":89,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":447,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":48,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":462,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":3,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":88,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":407,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":258,"org.easymock.tests2.UsageTest.resumeIfFailure":341,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":5,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":65,"org.easymock.tests2.StubTest.stubWithReturnValue":109,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":34,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":210,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":295,"org.easymock.tests2.SerializationTest.testAllMockedMethod":117,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":430,"org.easymock.samples.SupportTest.voteForRemovals":142,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":361,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":443,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":94,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":436,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":457,"org.easymock.tests.UsageExpectAndThrowTest.object":92,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":376,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":29,"org.easymock.tests2.DelegateToTest.testWrongClass":230,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":316,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":317,"org.easymock.tests.UsageStrictMockTest.range":125,"org.easymock.samples.ConstructorCalledMockTest.testTax":264,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":440,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":325,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":249,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":42,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":93,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":465,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":161,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":319,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":410,"org.easymock.tests2.CaptureTest.testCaptureNone":223,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":354,"org.easymock.tests.UsageUnorderedTest.message":275,"org.easymock.tests.UsageVerifyTest.twoReturns":172,"org.easymock.tests.UsageVarargTest.varargByteAccepted":180,"org.easymock.tests2.ThreadingTest.testThreadSafe":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":479,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":153,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":415,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":139,"org.easymock.tests2.CaptureTest.testCapture_2617107":218,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":434,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":81,"org.easymock.tests2.UsageConstraintsTest.any":27,"org.easymock.tests2.StubTest.stub":346,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":371,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":64,"org.easymock.tests.UsageExpectAndThrowTest.longType":85,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":383,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":278,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":253,"org.easymock.tests2.SerializationTest.testClass":115,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":212,"org.easymock.tests.LimitationsTest.mockNativeMethod":151,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":303,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":362,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":57,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":254,"org.easymock.tests2.NameTest.nameForMocksControl":351,"org.easymock.tests2.MockedExceptionTest.testMockedException":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":469,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":70,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":458,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":166,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":86,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":242,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":12,"org.easymock.tests.MockingTest.testNicePartialClassMocking":165,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":246,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":55,"org.easymock.tests2.CaptureTest.testCaptureLast":222,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":183,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":23,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":203,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":208,"org.easymock.tests.MockingTest.testTwoMocks":388,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":39,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":289,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":90,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":236,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":31,"org.easymock.samples.ExampleTest.removeNonExistingDocument":357,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":156,"org.easymock.tests.UsageStrictMockTest.differentMethods":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":59,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":50,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":381,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":332,"org.easymock.tests2.MockBuilderTest.testCreateMockString":15,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":470,"org.easymock.tests.UsageExpectAndThrowTest.floatType":84,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":467,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":241,"org.easymock.tests.UsageVerifyTest.twoThrows":79,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":257,"org.easymock.samples.ExampleTest.voteAgainstRemoval":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":426,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":408,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":248,"org.easymock.tests.LimitationsTest.privateConstructor":365,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":41,"org.easymock.tests2.UsageConstraintsTest.testNotNull":30,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":103,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":78,"org.easymock.tests2.UsageTest.defaultResetToNice":340,"org.easymock.samples.ExampleTest.voteAgainstRemovals":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":171,"org.easymock.tests.UsageVarargTest.differentLength":394,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":56,"org.easymock.tests2.CallbackTest.callback":347,"org.easymock.tests2.UsageConstraintsTest.equals":442,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":460,"org.easymock.tests.UsageTest.openCallCountByLastCall":121,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":326,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":80,"org.easymock.tests.UsageCallCountTest.tooFewCalls":274,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":250,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":321,"org.easymock.tests.UsageThrowableTest.throwCheckedException":75,"org.easymock.tests.MockingTest.testStrictClassMocking":386,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":22,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":71,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":448,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":21,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":279,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":251,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":343,"org.easymock.tests.ObjectMethodsTest.testHashCode":413,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":214,"org.easymock.tests2.NameTest.nameForNiceMock":350,"org.easymock.tests2.DependencyTest.testInterfaceMocking":227,"org.easymock.samples.ExampleTest.addDocument":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":484,"org.easymock.tests2.DelegateToTest.testStubDelegate":333,"org.easymock.tests2.AnswerTest.stubAnswer":342,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":323,"org.easymock.tests.UsageVarargTest.varargLongAccepted":179,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":424,"org.easymock.tests.UsageExpectAndReturnTest.floatType":167,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":302,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":239,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":265,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":445,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":405,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":134,"org.easymock.tests.UsageThrowableTest.noUpperLimit":122,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":128,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":438,"org.easymock.tests2.SerializationTest.test":116,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":220,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":380,"org.easymock.tests2.UsageConstraintsTest.testSame":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":290,"org.easymock.samples.SupportTest.addDocument":141,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":471,"org.easymock.tests.GenericTest.testPackageScope":149,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":53,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":390,"org.easymock.tests2.NameTest.nameForMock":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":297,"org.easymock.tests2.UsageStrictMockTest.differentMethods":137,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":36,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":461,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":291,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":96,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":411,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":312,"org.easymock.tests2.MockedExceptionTest.testRealException":106,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":402,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":486,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":355,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":280,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":314,"org.easymock.tests2.NameTest.nameForStrictMock":349,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":455,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":38,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":344,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":245,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":439,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":28,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":382,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":9,"org.easymock.tests2.UsageStrictMockTest.range":136,"org.easymock.tests2.UsageConstraintsTest.lessThan":329,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":475,"org.easymock.tests2.CaptureTest.testCaptureRightOne":225,"org.easymock.tests2.UsageConstraintsTest.testOr":131,"org.easymock.tests.UsageRangeTest.combination":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":16,"org.easymock.tests.UsageTest.wrongArguments":160,"org.easymock.tests2.MockBuilderTest.testWithConstructor":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":472,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":298,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":384,"org.easymock.tests.UsageVarargTest.varargShortAccepted":178,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":367,"org.easymock.tests2.UsageConstraintsTest.cmpTo":205,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":418,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":108,"org.easymock.tests2.CaptureTest.testCaptureFromStub":260,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":276,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":10,"org.easymock.tests.UsageTest.unexpectedCallWithArray":287,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":188,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":152,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":35,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":299,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":189,"org.easymock.tests2.UsageConstraintsTest.constraints":129,"org.easymock.samples.ExampleTest.addAndChangeDocument":266,"org.easymock.tests.UsageStrictMockTest.testVerify":324,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":47,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":268,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":306,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":292,"org.easymock.tests.LimitationsTest.abstractClass":364,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":307,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":197}}]
