[{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[8,9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[11,12,13,14,15,16],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[17,18,19,20],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,0,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,11,12,13,14,77,15,16,78,79,80,81,82,83,84],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[85,86,87,88,89,90],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[91],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[92,93,94,95,96,97,89,98,90,99,100,101,102,103,104],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[131,132],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && ((((java.lang.String)(java.lang.Object)).indexOf(java.lang.String)) >= 0)","type":"CtReturnImpl"},"failures":[133,134,135],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[85,86,87,88,89,90],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[136,137,138,139],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[140],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[85,86,87,88,89,90],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[141,142,143,144,145,146,147,8,148,149,150,151,152,136,153,133,154,155,156,157,158,134,159,160,161,135,162,163,164,165,137,166,91,167,168,169,138,170,171,172,173,174,175,176,177,17,18,19,21,22,178,23,24,25,26,27,29,31,179,180,181,182,183,184,185,186,187,1,188,2,4,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,37,38,39,207,208,209,210,211,92,212,213,41,214,215,216,110,217,218,219,220,221,222,223,9,224,225,226,227,228,229,122,230,231,232,50,51,52,53,233,54,55,56,57,58,59,129,60,130,234,235,236,5,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,61,62,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,74,97,306,307,308,309,310,311,312,313,98,314,315,76,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,102,103,352,353,354,355,356,81,82,83,357,7,358],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[172,359],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[28,9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[360,361,362,363,364,141,142,143,144,145,146,147,8,148,149,150,151,152,136,153,133,154,365,155,156,157,158,134,159,366,160,161,135,162,163,164,165,137,166,91,167,168,169,138,170,171,172,18,178,179,180,181,182,183,184,185,186,187,367,1,188,2,3,4,189,190,191,192,193,194,195,196,197,198,199,200,201,202,368,369,370,203,204,205,206,37,38,39,207,371,209,210,211,92,212,213,105,106,107,108,109,110,111,112,113,114,115,116,217,218,219,93,220,221,222,223,9,94,95,224,225,226,372,373,227,228,229,117,118,119,120,121,122,123,124,125,126,127,128,230,374,231,232,233,129,130,234,235,236,5,237,238,239,240,375,241,242,243,244,245,246,247,248,249,250,251,252,253,254,376,377,378,379,255,256,257,258,259,260,380,261,262,381,263,264,265,266,267,268,382,269,270,271,272,273,274,275,276,277,383,384,385,386,387,388,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,389,390,298,299,300,301,391,302,303,392,393,394,395,304,305,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,140,413,414,415,416,6,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,97,306,307,308,309,310,441,311,89,312,313,98,314,315,442,316,317,90,99,318,319,100,101,320,443,444,445,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,446,447,448,351,102,103,352,353,354,355,356,449,450,451,452,357,453,7,358,454,455,104],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[85,86,87,88,89,90],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[420],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[179,185],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:175","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Constructor<?>.getModifiers())) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[456],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[92,93,94,95,96,97,89,98,90,99,100,101,102,103,104],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[361,362,363,364,141,142,143,144,145,146,147,8,148,149,150,151,152,136,153,133,154,155,156,157,158,134,159,160,161,135,162,163,164,165,137,166,91,167,168,138,170,171,172,173,174,175,176,177,17,18,19,21,178,23,24,25,27,29,31,179,180,181,182,183,184,187,1,188,4,189,190,191,192,194,195,196,197,198,199,202,203,204,205,206,37,38,39,207,208,209,210,212,213,41,214,215,216,110,218,219,220,221,9,224,226,227,228,229,122,230,231,232,50,51,52,53,233,54,55,56,57,58,59,129,60,130,234,235,236,5,237,238,239,240,241,243,244,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,61,62,268,382,269,270,271,273,274,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,65,389,390,298,299,300,301,304,305,74,306,307,308,309,310,311,312,314,315,442,76,317,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,102,103,352,353,354,355,356,81,82,83,455],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[361,362,363,364,141,142,143,144,145,146,147,8,148,149,150,151,152,136,153,133,154,155,156,157,158,134,159,366,160,161,135,162,163,164,165,137,166,91,167,168,169,138,170,171,172,457,174,176,177,458,17,18,19,21,22,178,23,24,25,27,30,31,32,183,184,185,186,187,367,1,188,2,3,4,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,37,38,39,207,208,371,209,210,211,92,212,213,41,214,215,216,110,217,218,219,93,220,221,222,223,9,94,95,224,225,226,372,373,227,228,229,122,230,231,232,50,51,52,53,233,54,55,56,57,58,58,59,59,129,60,130,234,235,236,5,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,377,379,255,256,257,258,259,260,261,262,381,263,264,265,266,267,61,62,459,268,382,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,389,298,299,300,301,302,303,304,305,396,397,398,399,400,74,140,413,414,430,436,438,439,440,97,441,311,89,312,313,98,314,315,442,76,316,317,99,318,319,100,101,320,443,444,445,321,322,323,324,325,326,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,446,447,351,102,103,352,353,354,355,356,80,81,82,83,357,453,7,358,454,455],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[460,461,462,463,464,456,465,208],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[436],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[206,37,38,39,207,217,223,242,244,245,246,247,248,249,257,272,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,316,319,321,322,323,324,325,326,102,358],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":154,"org.easymock.tests2.UsageTest.argumentsOrdered":95,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":316,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":424,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":221,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":129,"org.easymock.tests2.DelegateToTest.testReturnException":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":322,"org.easymock.tests.MockingTest.testPartialClassMocking":81,"org.easymock.tests.MockClassControlTest.testToString":66,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":360,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":34,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":214,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":278,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":204,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":461,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":159,"org.easymock.tests2.UsageTest.wrongArguments":93,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":273,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":116,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":329,"org.easymock.samples.ExampleTest.answerVsDelegate":5,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":452,"org.easymock.tests2.UsageConstraintsTest.testNull":156,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":23,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":149,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":71,"org.easymock.tests2.CaptureTest.testPrimitive":192,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":277,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":297,"org.easymock.tests.UsageTest.moreThanOneArgument":317,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":354,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":396,"org.easymock.tests.UsageTest.argumentsOrdered":101,"org.easymock.tests.UsageVarargTest.varargIntAccepted":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":429,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":456,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":173,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":127,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":254,"org.easymock.tests.ReplayStateInvalidUsageTest.times":409,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":110,"org.easymock.tests2.AnswerTest.answer":226,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":431,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":182,"org.easymock.tests2.CaptureTest.testAnd":189,"org.easymock.tests2.UsageTest.strictResetToDefault":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":353,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":145,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":269,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":400,"org.easymock.tests2.DelegateToTest.testDelegate":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":293,"org.easymock.tests.LimitationsTest.mockFinalMethod":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":310,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":446,"org.easymock.tests2.CaptureTest.testCapture1_2446744":193,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":291,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":180,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":403,"org.easymock.tests.UsageThrowableTest.throwError":242,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":393,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":128,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":356,"org.easymock.samples.PartialClassMockTest.testGetArea":60,"org.easymock.tests.MockingTest.testInterfaceMocking":450,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":404,"org.easymock.tests2.CompareToTest.testLessOrEqual":139,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":251,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":413,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":45,"org.easymock.tests2.UsageTest.niceToStrict":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":174,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":113,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":85,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":287,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":146,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":440,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":389,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":327,"org.easymock.tests.UsageOverloadedMethodTest.overloading":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":49,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":163,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":358,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":255,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":342,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":162,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":131,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":198,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":380,"org.easymock.tests2.EasyMockSupportClassTest.testAll":41,"org.easymock.tests.MockClassControlTest.testEquals":70,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":62,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":295,"org.easymock.tests2.CaptureTest.testCaptureAll":190,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":308,"org.easymock.tests.MockNameTest.defaultName":449,"org.easymock.tests2.UsageConstraintsTest.testMatches":164,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":401,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":355,"org.easymock.samples.ExampleTest.voteForRemovals":240,"org.easymock.tests.UsageVarargTest.allKinds":267,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":351,"org.easymock.samples.BasicClassMockTest.testPrintContent":57,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":309,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":248,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":371,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":124,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":326,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":465,"org.easymock.tests2.UsageConstraintsTest.greaterThan":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":382,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":32,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":16,"org.easymock.samples.ExampleTest.voteForRemoval":237,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":184,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":33,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":26,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":76,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":143,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":321,"org.easymock.tests2.CaptureTest.testCaptureFirst":202,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":144,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":225,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":104,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":338,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":186,"org.easymock.tests2.CaptureTest.testCapture2_2446744":201,"org.easymock.tests2.UsageTest.moreThanOneArgument":219,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":432,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":266,"org.easymock.tests.GenericTest.testBridgedEquals":63,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":302,"org.easymock.tests.UsageExpectAndReturnTest.longType":334,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":306,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":296,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":169,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":379,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":294,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":444,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":352,"org.easymock.tests.UsageCallCountTest.tooManyCalls":303,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":298,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":339,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":115,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":283,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":247,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":51,"org.easymock.tests.MockingTest.testNiceClassMocking":84,"org.easymock.tests.MockingTest.testClassMocking":79,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":390,"org.easymock.tests2.UsageConstraintsTest.testContains":135,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":39,"org.easymock.tests2.UsageConstraintsTest.testFind":155,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":257,"org.easymock.tests.MockTypeTest.fromEasyMockClass":392,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":441,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":231,"org.easymock.tests.UsageExpectAndReturnTest.object":341,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":114,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":462,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":262,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":386,"org.easymock.tests.UsageTest.exactCallCountByLastCall":320,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":397,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":376,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":258,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":347,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":7,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":118,"org.easymock.tests.MockClassControlTest.testHashCode":69,"org.easymock.tests2.EasyMockSupportTest.testVerify":152,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":398,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":439,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":179,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":370,"org.easymock.tests.UsageVarargTest.varargCharAccepted":261,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":437,"org.easymock.tests2.UsageTest.openCallCountByLastCall":222,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":151,"org.easymock.tests.DefaultClassInstantiatorTest.object":11,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":438,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":384,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":46,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":285,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":245,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":108,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":117,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":30,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":68,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":284,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":348,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":443,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":216,"org.easymock.tests2.UsageTest.resumeIfFailure":224,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":324,"org.easymock.tests2.StubTest.stubWithReturnValue":206,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":138,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":340,"org.easymock.tests2.SerializationTest.testAllMockedMethod":19,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":430,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":86,"org.easymock.samples.SupportTest.voteForRemovals":235,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":290,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":20,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":436,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":372,"org.easymock.tests.UsageExpectAndThrowTest.object":288,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":378,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":167,"org.easymock.tests2.DelegateToTest.testWrongClass":2,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":304,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":305,"org.easymock.tests.UsageStrictMockTest.range":98,"org.easymock.samples.ConstructorCalledMockTest.testTax":58,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":368,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":8,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":50,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":289,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":176,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":411,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":40,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":328,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":87,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":414,"org.easymock.tests2.CaptureTest.testCaptureNone":197,"org.easymock.tests.UsageUnorderedTest.message":97,"org.easymock.tests.UsageVerifyTest.twoReturns":103,"org.easymock.tests.UsageVarargTest.varargByteAccepted":265,"org.easymock.tests2.ThreadingTest.testThreadSafe":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":47,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":301,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":387,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":56,"org.easymock.tests2.CaptureTest.testCapture_2617107":191,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":434,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":276,"org.easymock.tests2.UsageConstraintsTest.any":160,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":408,"org.easymock.tests2.StubTest.stub":205,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndThrowTest.longType":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":323,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":77,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":407,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":211,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":122,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests.LimitationsTest.mockNativeMethod":74,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":459,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":350,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":107,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":213,"org.easymock.tests2.NameTest.nameForMocksControl":364,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":109,"org.easymock.tests2.MockedExceptionTest.testMockedException":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":42,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":319,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":83,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":282,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":374,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":21,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":177,"org.easymock.tests.MockingTest.testNicePartialClassMocking":82,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":25,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":460,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":105,"org.easymock.tests2.CaptureTest.testCaptureLast":196,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":447,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":134,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":55,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":168,"org.easymock.tests.MockingTest.testTwoMocks":80,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":331,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":286,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":94,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":171,"org.easymock.samples.ExampleTest.removeNonExistingDocument":375,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":405,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":112,"org.easymock.tests.UsageStrictMockTest.differentMethods":314,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":119,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":13,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":185,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":43,"org.easymock.tests.UsageExpectAndThrowTest.floatType":280,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":165,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":227,"org.easymock.tests.UsageVerifyTest.twoThrows":102,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":215,"org.easymock.samples.ExampleTest.voteAgainstRemoval":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":425,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":140,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":31,"org.easymock.tests.LimitationsTest.privateConstructor":73,"org.easymock.tests2.UsageConstraintsTest.testNotNull":170,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":37,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":249,"org.easymock.tests2.UsageTest.defaultResetToNice":9,"org.easymock.samples.ExampleTest.voteAgainstRemovals":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":346,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":106,"org.easymock.tests.UsageVarargTest.differentLength":381,"org.easymock.tests2.CallbackTest.callback":232,"org.easymock.tests2.UsageConstraintsTest.equals":365,"org.easymock.tests.UsageTest.openCallCountByLastCall":318,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":136,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":275,"org.easymock.tests.UsageCallCountTest.tooFewCalls":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":330,"org.easymock.tests.UsageThrowableTest.throwCheckedException":246,"org.easymock.tests.MockingTest.testStrictClassMocking":78,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":88,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":54,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":111,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":52,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":410,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":233,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":229,"org.easymock.tests.ObjectMethodsTest.testHashCode":385,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":464,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":10,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":187,"org.easymock.tests2.NameTest.nameForNiceMock":363,"org.easymock.tests2.DependencyTest.testInterfaceMocking":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":463,"org.easymock.samples.ExampleTest.addDocument":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":48,"org.easymock.tests2.DelegateToTest.testStubDelegate":188,"org.easymock.tests2.AnswerTest.stubAnswer":228,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":312,"org.easymock.tests.UsageVarargTest.varargLongAccepted":264,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndReturnTest.floatType":333,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":349,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":208,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":59,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":454,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":166,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":126,"org.easymock.tests.UsageThrowableTest.noUpperLimit":243,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":153,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":35,"org.easymock.tests2.SerializationTest.test":18,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":194,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":132,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":12,"org.easymock.tests2.UsageConstraintsTest.testSame":157,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":332,"org.easymock.samples.SupportTest.addDocument":234,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":44,"org.easymock.tests.GenericTest.testPackageScope":61,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":125,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":451,"org.easymock.tests2.NameTest.nameForMock":361,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":343,"org.easymock.tests2.UsageStrictMockTest.differentMethods":212,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":28,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":335,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":292,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":383,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":270,"org.easymock.tests2.MockedExceptionTest.testRealException":207,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":427,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":210,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":412,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":274,"org.easymock.tests2.NameTest.nameForStrictMock":362,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":230,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":24,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":36,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":14,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":457,"org.easymock.tests2.UsageStrictMockTest.range":92,"org.easymock.tests2.UsageConstraintsTest.lessThan":172,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":422,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":142,"org.easymock.tests2.CaptureTest.testCaptureRightOne":199,"org.easymock.tests2.UsageConstraintsTest.testOr":158,"org.easymock.tests.UsageRangeTest.combination":268,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":22,"org.easymock.tests.UsageTest.wrongArguments":99,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":65,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":344,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":15,"org.easymock.tests.UsageVarargTest.varargShortAccepted":263,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":391,"org.easymock.tests2.UsageConstraintsTest.cmpTo":161,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":373,"org.easymock.tests2.CompareToTest.testLessThan":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":417,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":223,"org.easymock.tests2.CaptureTest.testCaptureFromStub":200,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":402,"org.easymock.tests.UsageTest.unexpectedCallWithArray":90,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":89,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":345,"org.easymock.tests2.UsageConstraintsTest.constraints":133,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":313,"org.easymock.samples.ExampleTest.addAndChangeDocument":241,"org.easymock.tests.UsageStrictMockTest.testVerify":442,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":130,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":311,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":307,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":195,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":252,"org.easymock.tests.LimitationsTest.abstractClass":72,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":337,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":455,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":147,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":259}}]
