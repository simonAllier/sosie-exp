[{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:45","sourceCode":"final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[6,7,8,9,10,11,12,13],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[14,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,6,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,5,327,328,329,330,331,332,333,334,335],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[336,337,338,339,340,341,342,343,344,345,346,347],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[348,349,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType()))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[53,87,108],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[14,15,16,17,18,19,20,21,22,351,23,24,25,26,27,28,29,6,352,353,30,31,32,33,34,354,35,36,37,38,39,355,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,356,357,358,359,360,64,361,362,65,363,66,67,364,365,366,68,367,69,70,71,72,73,74,75,76,77,78,79,80,81,82,368,369,370,371,372,373,83,84,85,86,87,88,374,375,89,376,377,378,90,91,92,379,380,93,381,94,95,96,97,98,99,100,101,382,336,337,383,338,102,384,339,340,385,386,341,103,104,105,106,107,108,109,110,111,112,113,114,115,387,388,116,117,118,389,390,342,343,391,344,119,392,345,346,393,394,347,120,121,122,123,124,125,395,396,397,398,399,400,126,127,128,129,130,131,401,132,133,134,402,135,136,137,138,139,140,141,142,143,144,145,146,147,403,404,405,148,406,407,149,408,409,410,411,412,413,414,415,416,150,417,418,419,420,421,151,422,423,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,424,425,426,211,212,427,213,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,214,215,216,217,218,443,444,445,446,447,448,449,450,219,451,220,221,452,222,453,454,455,456,223,224,225,226,227,228,229,4,230,231,232,233,234,235,236,457,237,238,458,459,460,461,462,463,464,465,466,467,468,348,469,470,239,240,241,242,243,244,471,245,246,247,248,249,250,251,252,472,253,254,255,473,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,474,286,287,288,289,290,291,292,293,294,475,476,477,478,479,480,481,482,483,295,484,296,297,298,299,300,485,486,487,488,301,302,303,304,305,489,306,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,307,308,309,310,311,312,313,314,315,316,519,317,318,319,320,520,321,322,323,324,325,326,5,327,328,329,330,331,332,333,334,335],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[472],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[17,19,20,22,29,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[64,366,68,367,106,112,113,114,144,162,163,521,522,453,523,524,224,4,230,233,234,239,314,315,520,321,322,5,329,330],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[472],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[52],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[39],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[55,160,431,223,259,263,264,273,278,327],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[472,253,254,255,473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","candidateMethod":"bridgeMethod","candidateMethods":"candidateMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[15,15,16,16,36,37,40,41,42,43,49,51,52,54,55,61,62,63,80,127,160,214,215,216,217,218,223,243,259,263,264,273,278,296,297,300,301,302,303,304,305,323,324,327],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[525,526,527],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[348,349,350],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[365,528,165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[106,112,113,162,453,524,4,230,233,234,239,314,315,5,329],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[38,39,41,43,44,46,56,61,69,71,79],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[47,243],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[15,16,36,37,40,41,42,43,49,51,52,54,55,61,62,63,80,127,160,431,214,215,216,217,218,223,243,259,263,264,273,278,296,297,300,301,302,303,304,305,323,324,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"value"}},{"position":"org.easymock.internal.Range:40","failures":[14,15,16,17,18,19,20,21,22,351,23,24,25,26,27,28,29,6,352,529,353,30,31,32,33,34,354,35,36,37,38,39,355,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,356,357,358,359,360,530,64,361,531,362,65,363,66,532,67,364,365,366,68,533,367,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,374,375,89,376,377,378,90,91,92,379,380,93,94,95,96,97,98,99,100,101,382,336,337,383,338,102,384,339,340,385,386,341,103,104,105,106,107,108,109,110,111,112,113,114,115,387,388,116,117,118,389,390,342,343,391,344,119,392,345,346,393,394,347,120,121,122,123,124,125,395,396,397,534,398,399,400,126,127,128,129,130,131,401,132,133,134,402,135,136,137,138,139,140,141,142,143,144,145,146,147,403,404,405,148,406,407,149,408,409,410,411,412,413,414,415,416,150,417,418,419,420,421,151,422,423,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,522,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,424,425,426,211,212,427,213,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,214,215,216,217,218,443,444,445,446,447,448,449,450,219,451,220,221,452,222,453,454,455,456,223,224,225,226,227,228,229,4,230,231,232,233,234,235,236,457,237,238,458,459,460,461,462,463,464,535,465,466,467,468,348,469,536,470,239,240,241,242,243,244,471,245,246,247,248,249,250,251,252,472,253,254,255,473,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,474,286,287,288,289,290,291,292,293,294,475,476,477,478,479,480,481,482,483,295,484,296,297,298,299,300,485,486,487,488,301,302,303,304,305,489,306,490,491,492,493,494,495,496,307,308,309,310,311,312,313,314,315,316,519,317,318,319,320,520,321,322,323,324,325,326,5,327,328,329,330,331,332,333,334,335],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[18,121,123,125,220],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[537,538,539,540,541,542,543,544],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:70","failures":[162,163,329,330],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[15,16,6,352,530,531,532,365,545,533,546,547,528,376,165],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[92],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[137,144,491,494],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[14,15,16,17,18,19,20,21,22,351,23,24,25,26,27,28,29,6,352,529,353,30,31,32,33,34,354,35,36,37,38,39,355,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,356,357,358,359,360,530,64,361,531,362,65,363,66,532,67,364,365,366,68,533,367,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,374,375,89,376,377,378,90,91,92,379,380,93,94,95,96,97,98,99,100,101,382,336,337,383,338,102,384,339,340,385,386,341,103,104,105,106,107,108,109,110,111,112,113,114,115,387,388,116,117,118,389,390,342,343,391,344,119,392,345,346,393,394,347,120,121,122,123,124,125,395,396,397,534,398,399,400,126,127,128,129,130,131,401,132,133,134,402,135,136,137,138,139,140,141,142,143,144,145,146,147,403,404,405,148,406,407,149,408,409,410,411,412,413,414,415,416,150,417,418,419,420,421,151,422,423,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,522,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,424,425,426,211,212,427,213,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,214,215,216,217,218,443,444,445,446,447,448,449,450,219,451,220,221,452,222,453,454,455,456,223,224,225,226,227,228,229,4,230,231,232,233,234,235,236,457,237,238,458,459,460,461,462,463,464,535,465,466,467,468,348,469,536,470,239,240,241,242,243,244,471,245,246,247,248,249,250,251,252,472,253,254,255,473,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,474,286,287,288,289,290,291,292,293,294,475,476,477,478,479,480,481,482,483,295,484,296,297,298,299,300,485,486,487,488,301,302,303,304,305,489,306,490,491,492,493,494,495,496,307,308,309,310,311,312,313,314,315,316,519,317,318,319,320,520,321,322,323,324,325,326,5,327,328,329,330,331,332,333,334,335],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[15,16,36,37,40,41,42,43,49,51,52,54,55,61,62,63,80,127,160,214,215,216,217,218,243,259,263,264,273,278,296,297,300,301,302,303,304,305,323,324,327],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"value"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":39,"org.easymock.tests2.UsageTest.argumentsOrdered":113,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":228,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":145,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":269,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":108,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":24,"org.easymock.tests2.DelegateToTest.testReturnException":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":308,"org.easymock.tests.MockingTest.testPartialClassMocking":211,"org.easymock.tests.MockClassControlTest.testToString":476,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":353,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":278,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":411,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":168,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":149,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":117,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":518,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":8,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":45,"org.easymock.tests2.UsageTest.wrongArguments":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":296,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":487,"org.easymock.samples.ExampleTest.answerVsDelegate":18,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":448,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":429,"org.easymock.tests2.UsageConstraintsTest.testNull":41,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":86,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":481,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":144,"org.easymock.tests2.CaptureTest.testPrimitive":72,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":300,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":187,"org.easymock.tests.UsageTest.moreThanOneArgument":229,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":216,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":457,"org.easymock.tests.UsageTest.argumentsOrdered":234,"org.easymock.tests.UsageVarargTest.varargIntAccepted":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":274,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":301,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":12,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":360,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":397,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":386,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":261,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":305,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":502,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":526,"org.easymock.tests.ReplayStateInvalidUsageTest.times":439,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":119,"org.easymock.tests2.DependencyTest.testClassMocking":387,"org.easymock.tests2.AnswerTest.answer":152,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":276,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":359,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":445,"org.easymock.tests2.CaptureTest.testAnd":69,"org.easymock.tests2.UsageTest.strictResetToDefault":104,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":531,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":139,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":226,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":459,"org.easymock.tests2.DelegateToTest.testDelegate":125,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":501,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":183,"org.easymock.tests.LimitationsTest.mockFinalMethod":484,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":311,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":464,"org.easymock.tests2.DependencyTest.testClassMockingSupport":388,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":454,"org.easymock.tests2.CaptureTest.testCapture1_2446744":73,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":375,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":181,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":357,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":433,"org.easymock.tests.UsageThrowableTest.throwError":245,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":447,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":522,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":218,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":546,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":423,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":505,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":434,"org.easymock.tests.MockingTest.testInterfaceMocking":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":302,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":334,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":412,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":169,"org.easymock.tests2.UsageTest.niceToStrict":107,"org.easymock.tests2.ThreadingTest.testChangeDefault":381,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":544,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":259,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":65,"org.easymock.tests2.MockBuilderTest.testCreateMock":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":419,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":177,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":140,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":444,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":242,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":316,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":485,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":541,"org.easymock.tests.UsageOverloadedMethodTest.overloading":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":416,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":51,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":221,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":202,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":256,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":50,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":349,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":78,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":474,"org.easymock.tests.MockClassControlTest.testEquals":480,"org.easymock.tests2.EasyMockSupportClassTest.testAll":148,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":254,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":462,"org.easymock.tests2.CaptureTest.testCaptureAll":70,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":358,"org.easymock.tests.MockNameTest.defaultName":471,"org.easymock.tests2.UsageConstraintsTest.testMatches":52,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":217,"org.easymock.samples.ExampleTest.voteForRemovals":22,"org.easymock.tests.UsageVarargTest.allKinds":293,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":313,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":463,"org.easymock.samples.BasicClassMockTest.testPrintContent":26,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":251,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":158,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":312,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":339,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":536,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":13,"org.easymock.tests2.UsageConstraintsTest.greaterThan":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":406,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":225,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":92,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":506,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":470,"org.easymock.samples.ExampleTest.voteForRemoval":19,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":94,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":379,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":449,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":534,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":374,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":498,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":103,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":236,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":266,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":137,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":307,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":120,"org.easymock.tests2.CaptureTest.testCaptureFirst":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":138,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":115,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":453,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":198,"org.easymock.tests2.UsageTest.moreThanOneArgument":105,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":96,"org.easymock.tests2.CaptureTest.testCapture2_2446744":81,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":277,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":292,"org.easymock.tests.GenericTest.testBridgedEquals":473,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":542,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":539,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":321,"org.easymock.tests.UsageExpectAndReturnTest.longType":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":460,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":135,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":186,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":59,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":223,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":184,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":214,"org.easymock.tests.UsageCallCountTest.tooManyCalls":322,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":527,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":420,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":199,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":394,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":173,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":250,"org.easymock.tests.MockingTest.testNiceClassMocking":430,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":129,"org.easymock.tests.MockingTest.testClassMocking":425,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":519,"org.easymock.tests2.UsageConstraintsTest.testContains":49,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":100,"org.easymock.tests2.UsageConstraintsTest.testFind":40,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":258,"org.easymock.tests.MockTypeTest.fromEasyMockClass":446,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":35,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":325,"org.easymock.tests.UsageExpectAndReturnTest.object":201,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":89,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":143,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":9,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":287,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":494,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":543,"org.easymock.tests.UsageTest.exactCallCountByLastCall":235,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":264,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":489,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":237,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":352,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":207,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":283,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":220,"org.easymock.tests.MockClassControlTest.testHashCode":479,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":336,"org.easymock.tests2.EasyMockSupportTest.testVerify":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":414,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":525,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":238,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":219,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":241,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":523,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":356,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":389,"org.easymock.tests.UsageVarargTest.varargCharAccepted":286,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":535,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":282,"org.easymock.tests2.UsageTest.openCallCountByLastCall":109,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":537,"org.easymock.tests.DefaultClassInstantiatorTest.object":465,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":146,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":240,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":492,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":524,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":415,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":175,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":248,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":391,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":382,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":504,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":478,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":174,"org.easymock.tests.ReplayStateInvalidCallsTest.times":510,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":208,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":188,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":511,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":151,"org.easymock.tests2.UsageTest.resumeIfFailure":114,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":443,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":310,"org.easymock.tests2.StubTest.stubWithReturnValue":127,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":532,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":60,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":200,"org.easymock.tests2.SerializationTest.testAllMockedMethod":167,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":275,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":528,"org.easymock.samples.SupportTest.voteForRemovals":29,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":383,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":180,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":281,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":153,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":490,"org.easymock.tests.UsageExpectAndThrowTest.object":178,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":57,"org.easymock.tests2.DelegateToTest.testWrongClass":123,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":508,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":323,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":324,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests.UsageStrictMockTest.range":329,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":399,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":142,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":128,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":540,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":179,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":66,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":403,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":486,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":500,"org.easymock.tests2.CaptureTest.testCaptureNone":77,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":335,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":369,"org.easymock.tests.UsageUnorderedTest.message":239,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":521,"org.easymock.tests.UsageVerifyTest.twoReturns":315,"org.easymock.tests.UsageVarargTest.varargByteAccepted":291,"org.easymock.tests2.ThreadingTest.testThreadSafe":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":417,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":320,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":495,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":25,"org.easymock.tests2.CaptureTest.testCapture_2617107":71,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":279,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":299,"org.easymock.tests2.UsageConstraintsTest.any":47,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":438,"org.easymock.tests2.StubTest.stub":126,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":190,"org.easymock.tests.UsageExpectAndThrowTest.longType":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":309,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":348,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":437,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":161,"org.easymock.tests2.SerializationTest.testClass":165,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":102,"org.easymock.tests.LimitationsTest.mockNativeMethod":295,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":210,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":255,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":343,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":516,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":164,"org.easymock.tests2.NameTest.nameForMocksControl":33,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":370,"org.easymock.tests2.MockedExceptionTest.testMockedException":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":407,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":172,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":213,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":354,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":83,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":67,"org.easymock.tests.MockingTest.testNicePartialClassMocking":212,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":88,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":390,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":7,"org.easymock.tests2.CaptureTest.testCaptureLast":76,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":455,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":515,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":134,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":44,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":58,"org.easymock.tests.MockingTest.testTwoMocks":426,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":512,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":402,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":191,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":176,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":112,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":62,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":373,"org.easymock.samples.ExampleTest.removeNonExistingDocument":351,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":435,"org.easymock.tests.UsageStrictMockTest.differentMethods":330,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":345,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":337,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":467,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":372,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":95,"org.easymock.tests2.MockBuilderTest.testCreateMockString":367,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":408,"org.easymock.tests.UsageExpectAndThrowTest.floatType":170,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":405,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":155,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":529,"org.easymock.tests.UsageVerifyTest.twoThrows":314,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":150,"org.easymock.samples.ExampleTest.voteAgainstRemoval":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":270,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":333,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":91,"org.easymock.tests.LimitationsTest.privateConstructor":483,"org.easymock.tests2.UsageConstraintsTest.testNotNull":61,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":98,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":252,"org.easymock.tests2.UsageTest.defaultResetToNice":111,"org.easymock.samples.ExampleTest.voteAgainstRemovals":17,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":271,"org.easymock.tests.UsageVarargTest.differentLength":288,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":342,"org.easymock.tests2.CallbackTest.callback":118,"org.easymock.tests2.UsageConstraintsTest.equals":355,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":376,"org.easymock.tests.UsageTest.openCallCountByLastCall":231,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":298,"org.easymock.tests.UsageCallCountTest.tooFewCalls":318,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":488,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":371,"org.easymock.tests.UsageThrowableTest.throwCheckedException":249,"org.easymock.tests.MockingTest.testStrictClassMocking":424,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":133,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":244,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":392,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":130,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":440,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":132,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":157,"org.easymock.tests.ObjectMethodsTest.testHashCode":493,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":11,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":514,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":97,"org.easymock.tests2.NameTest.nameForNiceMock":32,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":509,"org.easymock.tests2.DependencyTest.testInterfaceMocking":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":10,"org.easymock.samples.ExampleTest.addDocument":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.DelegateToTest.testStubDelegate":122,"org.easymock.tests2.AnswerTest.stubAnswer":156,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":327,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":364,"org.easymock.tests.UsageVarargTest.varargLongAccepted":290,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":268,"org.easymock.tests.UsageExpectAndReturnTest.floatType":193,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":209,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":6,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":452,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":385,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":55,"org.easymock.tests.UsageThrowableTest.noUpperLimit":246,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":37,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":395,"org.easymock.tests2.SerializationTest.test":166,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":74,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":350,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":466,"org.easymock.tests2.UsageConstraintsTest.testSame":42,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":192,"org.easymock.samples.SupportTest.addDocument":28,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":401,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":499,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":409,"org.easymock.tests.GenericTest.testPackageScope":253,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":263,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":340,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":428,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":497,"org.easymock.tests2.NameTest.nameForMock":30,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":203,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":533,"org.easymock.tests2.UsageStrictMockTest.differentMethods":163,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":377,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":195,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":182,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":491,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":227,"org.easymock.tests2.MockedExceptionTest.testRealException":101,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":450,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":273,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":547,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":272,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":442,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":297,"org.easymock.tests2.NameTest.nameForStrictMock":31,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":362,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":538,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":398,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":468,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":56,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":64,"org.easymock.tests2.UsageStrictMockTest.range":162,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":503,"org.easymock.tests2.UsageConstraintsTest.lessThan":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":338,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":413,"org.easymock.tests2.CaptureTest.testCaptureRightOne":79,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":368,"org.easymock.tests2.UsageConstraintsTest.testOr":43,"org.easymock.tests.UsageRangeTest.combination":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":84,"org.easymock.tests.UsageTest.wrongArguments":230,"org.easymock.tests2.MockBuilderTest.testWithConstructor":530,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":410,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":475,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":260,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":469,"org.easymock.tests.UsageVarargTest.varargShortAccepted":289,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":520,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":517,"org.easymock.tests2.UsageConstraintsTest.cmpTo":48,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":154,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":262,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":110,"org.easymock.tests2.CaptureTest.testCaptureFromStub":80,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":432,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":361,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":513,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":319,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":545,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":205,"org.easymock.tests2.UsageConstraintsTest.constraints":38,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":328,"org.easymock.samples.ExampleTest.addAndChangeDocument":23,"org.easymock.tests.UsageStrictMockTest.testVerify":332,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":27,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":326,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":461,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":75,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":303,"org.easymock.tests.LimitationsTest.abstractClass":482,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":197,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":304,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":141,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":284}}]
