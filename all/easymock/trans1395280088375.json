[{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[15,5,16,17,18,19,20,21,22,23,24,25,26,27,6,28,29,30,31,32,33,34,7,8,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,9,11,63,12,64,1,65,66,67,68,69,70,71,72,73,2,3,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,13,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[20,6,7,8,35,50,53,62,1,70,71,3,74,75,76,82,85,155,161,167,171,173,201,208,214,220,224,226,230,271,272,251],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[273,273,274,274,15,5,17,275,25,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,9,63,12,276,277,278,279,64,66,67,72,73,280,2,74,75,76,77,78,79,80,81,82,83,84,85,87,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,281,282,109,110,283,111,112,284,285,114,115,116,117,118,119,286,120,287,121,122,123,124,125,126,127,128,129,130,131,132,133,138,139,288,289,140,290,143,145,149,291,292,293,294,150,151,295,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,296,297,298,299,175,176,177,178,300,301,302,303,304,305,306,307,179,192,193,308,309,310,311,312,313,314,315,316,317,318,319,195,196,199,200,201,320,203,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,13,321,243,244,245,322,246,247,248,249,250,323,324,325,326,327,255,257,260,328,329,330,331,261,332,333,334,335,336,337,338,339],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[86,92,93,145,340,320,202,205,206,232,233,251,254,257],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[341,342,343,344,345,346,347,348,349,350,351,352,271,14,353,354,355,356,357,358,359,360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"failMessage"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[361,362,363,364,320,254],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[25,28,365,109,110,111,112,113,366,285,286,121,122,367,368,301,369,370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:90","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()))","type":"CtThrowImpl"},"failures":[371,372,373,374,375,376,377,378],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[342,262],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"failures":[38,43,55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[273,273,274,274,21,22,25,28,30,31,32,33,34,282,109,379,110,283,111,112,284,113,285,114,115,117,118,119,286,120,287,121,122,123,380,124,125,126,127,129,130,138,140,381,152,153,154,382,300,301,302,303,304,305,306,307,179,180,383,384,194,369,370,242],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[28,29,30,385],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[120,386,387,287,121,122,123,388,380,124,125,126,127,129,130,138,389,288,289,140,295,390,391,392,393,394,395,396,397,381,152,153,154,398,300,301,302,303,304,305,306,307,399,179,180,383,384,194,369,370,400,401,242,402],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[154],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[44,50,62,403],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:41","failures":[404],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Comparable)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[7,8,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,1,65,66,67,68,69,70,71,72,73,280,2,3,77,120,143,150,151,191,192,193,195,196,197,198,199,246,247,248,249,250,251,254,255,261],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[49],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[55],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[84,96],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:190","failures":[6,38,43,44,46,49,55,56,57,59,73,87,88,93,97,99,101,102,105,106,107,113,115,122,141,145,146,175,206,229,232,234,235,237,238,239,240,241,251,252,257,258],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:107","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[273,273,274,274,21,22,25,28,30,31,32,33,34,282,365,109,379,110,283,111,112,284,113,366,285,114,115,117,118,119,286,120,287,121,122,123,124,125,126,127,129,130,405,367,368,138,140,381,152,153,154,301,179,180,383,194,369,370,242],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[399],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[15,5,16,17,18,19,20,6,28,29,30,7,8,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,9,11,63,12,276,277,278,279,64,1,65,66,67,68,69,70,71,72,73,280,2,3,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,281,282,110,283,113,285,114,115,116,117,118,119,120,287,122,125,126,129,130,131,134,135,136,137,138,288,289,140,290,141,142,143,144,145,146,147,148,149,291,292,293,294,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,296,175,176,177,178,301,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,312,195,196,197,198,199,200,201,320,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,245,246,247,248,249,250,323,324,325,326,327,251,252,253,254,255,256,257,258,259,260,328,329,330,331,261,332,333,334,335,336,337,264,338,265,266,267,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[399,384],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[406,407,408,409,410,411,389],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[84,387],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[77,412,79,80,81,413,82,116,128,288,289,140,290,390,394,247,326],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[414],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[361,362,363,364,320,254],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[415,416,417],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":38,"org.easymock.tests2.UsageTest.argumentsOrdered":93,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":200,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":351,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":88,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":24,"org.easymock.tests2.DelegateToTest.testReturnException":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":329,"org.easymock.tests.MockingTest.testPartialClassMocking":152,"org.easymock.tests.MockClassControlTest.testToString":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":380,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":32,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":208,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":407,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":44,"org.easymock.tests2.UsageTest.wrongArguments":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":195,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":293,"org.easymock.samples.ExampleTest.answerVsDelegate":5,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":370,"org.easymock.tests2.UsageConstraintsTest.testNull":40,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":117,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":105,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":307,"org.easymock.tests2.CaptureTest.testPrimitive":66,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":199,"org.easymock.tests.UsageTest.moreThanOneArgument":201,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":227,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":116,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":335,"org.easymock.tests.UsageTest.argumentsOrdered":206,"org.easymock.tests.UsageVarargTest.varargIntAccepted":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":246,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":411,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":282,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":378,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":250,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":133,"org.easymock.tests.ReplayStateInvalidUsageTest.times":316,"org.easymock.tests2.AnswerTest.answer":9,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":355,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":279,"org.easymock.tests2.CaptureTest.testAnd":64,"org.easymock.tests2.UsageTest.strictResetToDefault":84,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":334,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":100,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":414,"org.easymock.tests2.DelegateToTest.testDelegate":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":223,"org.easymock.tests.LimitationsTest.mockFinalMethod":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":327,"org.easymock.tests2.CaptureTest.testCapture1_2446744":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":277,"org.easymock.tests.UsageThrowableTest.throwError":234,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":337,"org.easymock.samples.PartialClassMockTest.testGetArea":25,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":247,"org.easymock.tests2.UsageTest.niceToStrict":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":209,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":382,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":341,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":110,"org.easymock.tests2.MockBuilderTest.testCreateMock":284,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":217,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":361,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":101,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":264,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":291,"org.easymock.tests.UsageOverloadedMethodTest.overloading":229,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":50,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":166,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":228,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":49,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":72,"org.easymock.tests2.EasyMockSupportClassTest.testAll":31,"org.easymock.tests.MockClassControlTest.testEquals":306,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":180,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":225,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":405,"org.easymock.tests2.CaptureTest.testCaptureAll":1,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":278,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":325,"org.easymock.tests2.UsageConstraintsTest.testMatches":51,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":336,"org.easymock.samples.ExampleTest.voteForRemovals":19,"org.easymock.tests.UsageVarargTest.allKinds":191,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":231,"org.easymock.samples.BasicClassMockTest.testPrintContent":22,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":326,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":240,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":141,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":376,"org.easymock.tests2.UsageConstraintsTest.greaterThan":53,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":176,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":123,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":395,"org.easymock.samples.ExampleTest.voteForRemoval":16,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":388,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":286,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":83,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":98,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":328,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":412,"org.easymock.tests2.CaptureTest.testCaptureFirst":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":99,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":95,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":162,"org.easymock.tests2.CaptureTest.testCapture2_2446744":2,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":77,"org.easymock.tests2.UsageTest.moreThanOneArgument":85,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":356,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":190,"org.easymock.tests.GenericTest.testBridgedEquals":384,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":269,"org.easymock.tests.UsageExpectAndReturnTest.longType":158,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":96,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":323,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":226,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":366,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":58,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":333,"org.easymock.tests.UsageCallCountTest.tooManyCalls":270,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":163,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":374,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":213,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":239,"org.easymock.tests.MockingTest.testNiceClassMocking":398,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":125,"org.easymock.tests.MockingTest.testClassMocking":397,"org.easymock.tests2.UsageConstraintsTest.testContains":48,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":338,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":365,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":140,"org.easymock.tests2.UsageConstraintsTest.testFind":39,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":230,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":8,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":252,"org.easymock.tests.UsageExpectAndReturnTest.object":165,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":104,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":408,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":185,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":299,"org.easymock.tests.UsageTest.exactCallCountByLastCall":207,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":346,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":389,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":181,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":171,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":243,"org.easymock.tests.MockClassControlTest.testHashCode":305,"org.easymock.tests2.EasyMockSupportTest.testVerify":108,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":263,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":13,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":276,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":281,"org.easymock.tests.UsageVarargTest.varargCharAccepted":184,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":360,"org.easymock.tests2.UsageTest.openCallCountByLastCall":89,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":416,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":107,"org.easymock.tests.DefaultClassInstantiatorTest.object":295,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":297,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":340,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":215,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":237,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":121,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":304,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":214,"org.easymock.tests.CapturesMatcherTest.test":4,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":34,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":303,"org.easymock.tests2.UsageTest.resumeIfFailure":94,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":369,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":331,"org.easymock.tests2.StubTest.stubWithReturnValue":149,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":406,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":164,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":59,"org.easymock.tests2.SerializationTest.testAllMockedMethod":30,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":272,"org.easymock.samples.SupportTest.voteForRemovals":27,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":362,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":220,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":385,"org.easymock.tests.UsageExpectAndThrowTest.object":218,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":56,"org.easymock.tests2.DelegateToTest.testWrongClass":81,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":192,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":193,"org.easymock.tests.UsageStrictMockTest.range":257,"org.easymock.samples.ConstructorCalledMockTest.testTax":273,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":103,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":124,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":219,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":111,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":205,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":292,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":363,"org.easymock.tests2.CaptureTest.testCaptureNone":71,"org.easymock.tests.UsageUnorderedTest.message":251,"org.easymock.tests.UsageVerifyTest.twoReturns":233,"org.easymock.tests.UsageVarargTest.varargByteAccepted":189,"org.easymock.tests2.ThreadingTest.testThreadSafe":74,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":268,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":21,"org.easymock.tests2.CaptureTest.testCapture_2617107":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":358,"org.easymock.tests2.UsageConstraintsTest.any":46,"org.easymock.tests2.StubTest.stub":148,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":315,"org.easymock.tests.UsageExpectAndThrowTest.longType":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":359,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":393,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":314,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":144,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":139,"org.easymock.tests2.SerializationTest.testClass":28,"org.easymock.tests.LimitationsTest.mockNativeMethod":242,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":174,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":383,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":368,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":147,"org.easymock.tests2.NameTest.nameForMocksControl":137,"org.easymock.tests2.MockedExceptionTest.testMockedException":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":371,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":204,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":154,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":212,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":114,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":112,"org.easymock.tests.MockingTest.testNicePartialClassMocking":153,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":119,"org.easymock.tests2.CompareToTest.testNotComparable":404,"org.easymock.tests2.CaptureTest.testCaptureLast":70,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":296,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":130,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":43,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":57,"org.easymock.tests.MockingTest.testTwoMocks":381,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":216,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":92,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":61,"org.easymock.samples.ExampleTest.removeNonExistingDocument":275,"org.easymock.tests.UsageStrictMockTest.differentMethods":258,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":372,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":391,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":76,"org.easymock.tests2.MockBuilderTest.testCreateMockString":285,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":300,"org.easymock.tests.UsageExpectAndThrowTest.floatType":210,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":52,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":11,"org.easymock.tests.UsageVerifyTest.twoThrows":232,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":33,"org.easymock.samples.ExampleTest.voteAgainstRemoval":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":352,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":122,"org.easymock.tests.LimitationsTest.privateConstructor":401,"org.easymock.tests2.UsageConstraintsTest.testNotNull":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":241,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":288,"org.easymock.tests2.UsageTest.defaultResetToNice":91,"org.easymock.samples.ExampleTest.voteAgainstRemovals":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":271,"org.easymock.tests.UsageVarargTest.differentLength":186,"org.easymock.tests2.CallbackTest.callback":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":386,"org.easymock.tests.UsageTest.openCallCountByLastCall":203,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":197,"org.easymock.tests.UsageCallCountTest.tooFewCalls":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":127,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":294,"org.easymock.tests.UsageThrowableTest.throwCheckedException":238,"org.easymock.tests.MockingTest.testStrictClassMocking":396,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":364,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":151,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":129,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":126,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":128,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":12,"org.easymock.tests2.CompareToTest.testGreateOrEqual":403,"org.easymock.tests.ObjectMethodsTest.testHashCode":298,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":410,"org.easymock.tests2.NameTest.nameForNiceMock":136,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":78,"org.easymock.tests2.DependencyTest.testInterfaceMocking":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":409,"org.easymock.samples.ExampleTest.addDocument":18,"org.easymock.tests2.DelegateToTest.testStubDelegate":80,"org.easymock.tests2.AnswerTest.stubAnswer":63,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":255,"org.easymock.tests.UsageVarargTest.varargLongAccepted":188,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":350,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":173,"org.easymock.tests.UsageExpectAndReturnTest.floatType":157,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":138,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":274,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":54,"org.easymock.tests.UsageThrowableTest.noUpperLimit":235,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":377,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":36,"org.easymock.tests2.SerializationTest.test":29,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":68,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":156,"org.easymock.tests2.UsageConstraintsTest.testSame":41,"org.easymock.samples.SupportTest.addDocument":26,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":313,"org.easymock.tests.GenericTest.testPackageScope":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests2.NameTest.nameForMock":134,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":167,"org.easymock.tests2.UsageStrictMockTest.differentMethods":146,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":387,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":222,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":178,"org.easymock.tests2.MockedExceptionTest.testRealException":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":353,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":196,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":319,"org.easymock.tests2.NameTest.nameForStrictMock":135,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":417,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":7,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":118,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":392,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":109,"org.easymock.tests2.UsageStrictMockTest.range":145,"org.easymock.tests2.UsageConstraintsTest.lessThan":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":375,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":349,"org.easymock.tests2.CaptureTest.testCaptureRightOne":73,"org.easymock.tests2.UsageConstraintsTest.testOr":42,"org.easymock.tests.UsageRangeTest.combination":175,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":115,"org.easymock.tests.UsageTest.wrongArguments":202,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":342,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":394,"org.easymock.tests.UsageVarargTest.varargShortAccepted":187,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":339,"org.easymock.tests2.UsageConstraintsTest.cmpTo":47,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":344,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":90,"org.easymock.tests2.CaptureTest.testCaptureFromStub":280,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":309,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":379,"org.easymock.tests.UsageTest.unexpectedCallWithArray":320,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":254,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":267,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":169,"org.easymock.tests2.UsageConstraintsTest.constraints":37,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":256,"org.easymock.samples.ExampleTest.addAndChangeDocument":20,"org.easymock.tests.UsageStrictMockTest.testVerify":260,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":23,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":253,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":324,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":69,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":248,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":367,"org.easymock.tests.LimitationsTest.abstractClass":400,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":161,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":249,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":102}}]
