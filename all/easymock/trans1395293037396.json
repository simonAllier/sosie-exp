[{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[2,3,4,5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[8,8,9,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[266],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[117,150,213,215,216],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[225],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[267],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[56,268,58],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[24,25,26,27,28,29,30,33,48,101,102,103,105,106,107,108,109,8,8,9,9,169,194,217,218,221,222,223,224,229,231,232,234,235,241,242,243],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[269],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[24,25,26,27,28,270,29,30,31,32,33,38,39,2,48,69,100,101,102,0,103,104,105,158,159,160,161,162,163,164,165,166,167,168,169,170,171,184,271,188,194,195,217,218,219,220,221,222,223,224,225,226,272,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,273,249,260,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[270],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[274,275,21,276,277,278,279,22,23,280,281,24,25,26,27,28,270,282,29,30,31,32,33,34,35,36,37,38,39,283,284,285,286,287,288,289,40,41,42,43,44,45,46,290,47,2,48,49,50,51,52,291,53,292,54,55,56,57,268,293,294,295,296,297,298,59,60,299,300,301,302,303,304,305,306,307,308,309,310,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,311,96,97,98,99,100,101,102,0,312,313,103,104,105,106,107,108,109,314,315,110,111,112,113,316,114,115,116,317,117,118,318,319,320,321,322,323,324,325,326,327,328,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,5,329,141,142,143,330,144,331,332,333,334,1,335,336,337,145,146,147,8,8,9,9,338,148,149,150,151,152,153,154,339,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,340,184,271,341,342,343,344,345,346,347,185,186,187,188,189,190,348,349,191,192,350,351,352,353,354,355,356,193,194,195,196,197,198,11,199,200,201,202,203,204,205,206,207,357,208,209,210,211,212,358,213,214,215,359,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,360,361,362,363,364,365,366,367,368,245,246,369,370,371,247,248,249,250,251,252,372,253,254,255,256,373,257,374,258,259,260,261,17,262,375,376,263,264,265],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[11,15,377],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[184,228,378],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[277,44,56,268,325,326,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[41,42,2,50,69,320,379,5,329,143,330,196,372,257,374],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:114","sourceCode":"return this","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,285,286,287,288,289,40,41,42,44,45,46,48,50,51,53,54,55,56,61,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,101,102,103,104,105,106,107,108,109,116,117,118,322,323,324,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,331,332,333,334,8,9,338,149,150,151,152,154,157,158,159,161,162,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,340,184,271,342,185,186,187,188,189,190,348,349,191,192,350,351,352,353,354,355,194,196,197,11,199,201,202,203,204,205,206,207,357,208,209,210,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,360,362,363,364,365,245,246,369,370,371,247,248,249,250,251,252,253,255,256,373,258,259,260,261,17,262,263,264,265],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[182,233,254],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[380,381,382,43,266,56,57,268,58,293,294,295,296,297,298,59,60,383,384,70,385,386,387,321,322,323,324,388,328,389,390,391,392,393,394,146,147,8,8,9,9,338,172,173,174,178,179,181,182,183,340,184,10,395,271,341,342,343,396,397,398,399,190,348,349,191,350,351,11,200,360,400,361,401,402,362,363,364,365,15,366,367,403,368,404,405,406,246,407,408,369,409,410,411,412,413,414,415,416,417,370,418,419,420,421,422,371,423,424,17,18,425],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[41,42,2,50,69,320,426,379,5,329,143,330,196,372,257,374],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[14,18,427,428,429,430,431],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[158,160,168,219,220,222,224,225,272,236,241],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[41,42,290,2,49,50,51,53,69,311,316,114,115,426,379,432,433,139,5,329,143,330,144,179,341,343,356,195,196,197,202,206,207,209,219,233,361,366,367,368,249,250,372,253,254,257,374,258,259],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[179,271],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[30,33,38,40,41,42,46,2,48,49,50,51,63,69,100,139,140,329,141,142,143,330,144,159,160,162,163,164,165,166,171,177,344,345,346,347,194,195,196,197,214,222,227,233,241,249,250,252,372,255,256,257,374,259,262,264],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[302],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[41,42,2,50,69,379,5,329,143,330,196,372,257,374],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[158,160,168,219,220,222,224,225,272,236,241],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[29,30,31,32,41,42,43,44,45,290,47,2,48,49,50,51,52,291,53,56,57,61,62,63,64,65,66,67,68,69,70,73,74,76,81,86,91,92,93,94,95,311,96,97,98,99,100,101,314,111,112,113,114,115,116,117,118,319,322,323,324,121,122,124,129,134,329,143,330,144,145,146,147,338,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,171,172,174,178,179,180,181,182,183,184,342,344,345,346,347,188,189,190,348,349,191,192,350,351,356,193,194,195,196,197,198,11,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,220,222,225,226,272,227,228,230,233,236,237,238,239,240,241,244,361,362,364,365,367,245,246,369,370,371,247,248,249,250,251,372,253,254,257,374,259,17,262,263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[270,29,30,31,41,45,290,47,48,49,50,51,52,53,61,64,65,66,67,68,69,91,92,93,94,95,96,97,98,99,100,111,113,115,143,330,338,149,151,152,154,155,157,159,160,161,163,164,165,166,167,168,171,179,182,342,356,193,194,195,196,197,198,201,202,203,204,206,207,209,210,211,216,220,222,225,226,227,230,233,236,237,238,239,240,241,362,367,249,251,253,254,257,374],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[434],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[266],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[312,313,335,336],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[435,11,199,200],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:148","sourceCode":"final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":220,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":139,"org.easymock.tests2.UsageTest.argumentsOrdered":374,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":210,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":254,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":148,"org.easymock.tests2.DelegateToTest.testReturnException":213,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":35,"org.easymock.tests.MockingTest.testPartialClassMocking":322,"org.easymock.tests.MockClassControlTest.testToString":295,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":277,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":412,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":71,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":369,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":248,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":427,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":226,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":29,"org.easymock.tests2.UsageTest.wrongArguments":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":333,"org.easymock.samples.ExampleTest.answerVsDelegate":150,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":382,"org.easymock.tests2.UsageConstraintsTest.testNull":222,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":181,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":60,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":209,"org.easymock.tests2.CaptureTest.testPrimitive":161,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":33,"org.easymock.tests.UsageTest.moreThanOneArgument":140,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":90,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":107,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":279,"org.easymock.tests.UsageTest.argumentsOrdered":330,"org.easymock.tests.UsageVarargTest.varargIntAccepted":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":24,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":431,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":360,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":363,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":28,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":245,"org.easymock.tests.ReplayStateInvalidUsageTest.times":307,"org.easymock.tests2.AnswerTest.answer":262,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":272,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":355,"org.easymock.tests2.CaptureTest.testAnd":158,"org.easymock.tests2.UsageTest.strictResetToDefault":251,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":13,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":271,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":106,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":205,"org.easymock.tests2.DelegateToTest.testDelegate":216,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":281,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":86,"org.easymock.tests.LimitationsTest.mockFinalMethod":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":289,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":270,"org.easymock.tests2.CaptureTest.testCapture1_2446744":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":84,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":353,"org.easymock.tests.UsageThrowableTest.throwError":61,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":301,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":433,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":424,"org.easymock.samples.PartialClassMockTest.testGetArea":338,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":25,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":413,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":72,"org.easymock.tests2.UsageTest.niceToStrict":253,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":380,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":362,"org.easymock.tests2.MockBuilderTest.testCreateMock":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":420,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":6,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":80,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":206,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":336,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":331,"org.easymock.tests.UsageOverloadedMethodTest.overloading":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":417,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":118,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":231,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":130,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":44,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":230,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":167,"org.easymock.tests.MockClassControlTest.testEquals":59,"org.easymock.tests2.EasyMockSupportClassTest.testAll":246,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":57,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":88,"org.easymock.tests2.CaptureTest.testCaptureAll":159,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":354,"org.easymock.tests2.UsageConstraintsTest.testMatches":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":108,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":299,"org.easymock.samples.ExampleTest.voteForRemovals":154,"org.easymock.tests.UsageVarargTest.allKinds":100,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":40,"org.easymock.samples.BasicClassMockTest.testPrintContent":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":288,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":67,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":39,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":359,"org.easymock.tests2.UsageConstraintsTest.greaterThan":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":407,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":292,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":343,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":394,"org.easymock.samples.ExampleTest.voteForRemoval":151,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":396,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":186,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":340,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":43,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":250,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":15,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":203,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":34,"org.easymock.tests2.CaptureTest.testCaptureFirst":171,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":204,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":259,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":126,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":188,"org.easymock.tests2.CaptureTest.testCapture2_2446744":170,"org.easymock.tests2.UsageTest.moreThanOneArgument":252,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":367,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":99,"org.easymock.tests.GenericTest.testBridgedEquals":58,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":114,"org.easymock.tests.UsageExpectAndReturnTest.longType":122,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":285,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":403,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":89,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":239,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":105,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":312,"org.easymock.tests.UsageCallCountTest.tooManyCalls":115,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":421,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":127,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":76,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":66,"org.easymock.tests.MockingTest.testNiceClassMocking":388,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":348,"org.easymock.tests.MockingTest.testClassMocking":387,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":400,"org.easymock.tests2.UsageConstraintsTest.testContains":229,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":315,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":174,"org.easymock.tests2.UsageConstraintsTest.testFind":221,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":46,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":261,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":290,"org.easymock.tests.UsageExpectAndReturnTest.object":129,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":208,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":428,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":95,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":21,"org.easymock.tests.UsageTest.exactCallCountByLastCall":144,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":103,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":22,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":276,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":135,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":91,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":117,"org.easymock.tests.MockClassControlTest.testHashCode":298,"org.easymock.tests2.EasyMockSupportTest.testVerify":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":415,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":23,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":116,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":335,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":426,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":352,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":273,"org.easymock.tests.UsageVarargTest.varargCharAccepted":94,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":193,"org.easymock.tests2.UsageTest.openCallCountByLastCall":255,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":211,"org.easymock.tests.DefaultClassInstantiatorTest.object":328,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":1,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":274,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":416,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":64,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":297,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":341,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":77,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":136,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":0,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":371,"org.easymock.tests2.UsageTest.resumeIfFailure":258,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":37,"org.easymock.tests2.StubTest.stubWithReturnValue":177,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":14,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":128,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":240,"org.easymock.tests2.SerializationTest.testAllMockedMethod":200,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":283,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":377,"org.easymock.samples.SupportTest.voteForRemovals":157,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":7,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":83,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":435,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":284,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":375,"org.easymock.tests.UsageExpectAndThrowTest.object":81,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":278,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":237,"org.easymock.tests2.DelegateToTest.testWrongClass":215,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":101,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":102,"org.easymock.samples.ConstructorCalledMockTest.testTax":8,"org.easymock.tests.UsageStrictMockTest.range":50,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":357,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":190,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":82,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":404,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":143,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":309,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":332,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests2.CaptureTest.testCaptureNone":166,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":327,"org.easymock.tests.UsageUnorderedTest.message":69,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":432,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":434,"org.easymock.tests.UsageVerifyTest.twoReturns":42,"org.easymock.tests.UsageVarargTest.varargByteAccepted":98,"org.easymock.tests2.ThreadingTest.testThreadSafe":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":418,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":113,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":146,"org.easymock.tests2.CaptureTest.testCapture_2617107":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":32,"org.easymock.tests2.UsageConstraintsTest.any":227,"org.easymock.tests2.StubTest.stub":176,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":306,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":36,"org.easymock.tests.UsageExpectAndThrowTest.longType":74,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":392,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":305,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":195,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":244,"org.easymock.tests.LimitationsTest.mockNativeMethod":70,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":138,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":268,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":198,"org.easymock.tests2.NameTest.nameForMocksControl":347,"org.easymock.tests2.MockedExceptionTest.testMockedException":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":408,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":142,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":75,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":267,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":324,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":178,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":365,"org.easymock.tests.MockingTest.testNicePartialClassMocking":323,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":183,"org.easymock.tests2.CaptureTest.testCaptureLast":165,"org.easymock.tests2.CompareToTest.testCompareEqual":378,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":282,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":225,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":351,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":238,"org.easymock.tests.MockingTest.testTwoMocks":321,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":79,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":257,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":242,"org.easymock.samples.ExampleTest.removeNonExistingDocument":339,"org.easymock.tests.UsageStrictMockTest.differentMethods":51,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":303,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":390,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":187,"org.easymock.tests2.MockBuilderTest.testCreateMockString":368,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":409,"org.easymock.tests.UsageExpectAndThrowTest.floatType":73,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":406,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":263,"org.easymock.tests.UsageVerifyTest.twoThrows":41,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":19,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":370,"org.easymock.samples.ExampleTest.voteAgainstRemoval":152,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":325,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":342,"org.easymock.tests.LimitationsTest.privateConstructor":384,"org.easymock.tests2.UsageConstraintsTest.testNotNull":241,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":172,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":68,"org.easymock.tests2.UsageTest.defaultResetToNice":373,"org.easymock.samples.ExampleTest.voteAgainstRemovals":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":134,"org.easymock.tests.UsageVarargTest.differentLength":311,"org.easymock.tests2.CallbackTest.callback":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":10,"org.easymock.tests.UsageTest.openCallCountByLastCall":141,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":217,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":31,"org.easymock.tests.UsageCallCountTest.tooFewCalls":111,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":334,"org.easymock.tests.UsageThrowableTest.throwCheckedException":65,"org.easymock.tests.MockingTest.testStrictClassMocking":386,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":104,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":350,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":349,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":308,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":192,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":265,"org.easymock.tests.ObjectMethodsTest.testHashCode":275,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":430,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":189,"org.easymock.tests2.NameTest.nameForNiceMock":346,"org.easymock.tests2.DependencyTest.testInterfaceMocking":247,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":429,"org.easymock.samples.ExampleTest.addDocument":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":423,"org.easymock.tests2.DelegateToTest.testStubDelegate":214,"org.easymock.tests2.AnswerTest.stubAnswer":264,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":48,"org.easymock.tests.UsageVarargTest.varargLongAccepted":97,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":52,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":137,"org.easymock.tests.UsageExpectAndReturnTest.floatType":121,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":17,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":9,"org.easymock.tests.UsageThrowableTest.noUpperLimit":62,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":235,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":318,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":218,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":398,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":163,"org.easymock.tests2.SerializationTest.test":199,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":389,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":120,"org.easymock.tests2.UsageConstraintsTest.testSame":223,"org.easymock.samples.SupportTest.addDocument":156,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":410,"org.easymock.tests.GenericTest.testPackageScope":56,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":280,"org.easymock.tests2.NameTest.nameForMock":344,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":131,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":16,"org.easymock.tests2.UsageStrictMockTest.differentMethods":197,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":395,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":85,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":20,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":55,"org.easymock.tests2.MockedExceptionTest.testRealException":175,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":194,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":30,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":310,"org.easymock.tests2.NameTest.nameForStrictMock":345,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":402,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":260,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":182,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":399,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":391,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":236,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":361,"org.easymock.tests2.UsageStrictMockTest.range":196,"org.easymock.tests2.UsageConstraintsTest.lessThan":243,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":414,"org.easymock.tests2.CaptureTest.testCaptureRightOne":168,"org.easymock.tests2.UsageConstraintsTest.testOr":224,"org.easymock.tests.UsageRangeTest.combination":53,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":179,"org.easymock.tests.UsageTest.wrongArguments":329,"org.easymock.tests2.MockBuilderTest.testWithConstructor":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":411,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":294,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":124,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":132,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":393,"org.easymock.tests.UsageVarargTest.varargShortAccepted":96,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":316,"org.easymock.tests2.UsageConstraintsTest.cmpTo":228,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":376,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":256,"org.easymock.tests2.CaptureTest.testCaptureFromStub":169,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":300,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":401,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":112,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":133,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":49,"org.easymock.tests2.UsageConstraintsTest.constraints":219,"org.easymock.samples.ExampleTest.addAndChangeDocument":155,"org.easymock.tests.UsageStrictMockTest.testVerify":291,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":145,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":47,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":286,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":164,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":26,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":125,"org.easymock.tests.LimitationsTest.abstractClass":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":27,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":92,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":207}}]
