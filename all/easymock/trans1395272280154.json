[{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[0],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lastRange":"range"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[38],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"answer"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[39,40,41,42],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[43],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:218","failures":[44,45,46,47,48],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[49,50,51],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[52,53,54,55,56,57],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[58,59,60,61,47,48],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[39,40,41,42],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[62,63,64,65,66,67,39,41,68,69,70,71,72,73,74,75,76,77,78,79,44,45,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,46,47,47,48,48,110,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[10,112,113,114,115,116,117,54,20,55,118,119,120,121,122],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[123,124,125,126],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[127,128,129,130],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[131,132,133,134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[76,135,85,92],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1877","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.CompareEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[136,74],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[137],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[138,1,2,139,3,140,4,5,141,127,142,136,6,143,128,7,144,145,8,146,147,148,149,150,151,9,129,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,62,63,64,65,171,66,67,172,173,124,125,174,175,176,177,39,40,41,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,10,11,198,199,200,201,112,202,203,12,13,204,113,114,14,205,68,69,206,70,71,72,73,74,75,76,77,78,207,15,208,209,210,79,44,45,80,81,211,212,213,214,215,216,217,82,218,83,85,87,88,89,90,91,92,94,98,99,115,219,220,16,221,17,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,18,116,117,104,105,106,19,245,246,247,248,249,250,251,252,54,253,254,20,21,255,256,257,258,259,22,260,261,262,23,24,263,25,264,265,26,266,267,268,269,270,107,271,272,55,118,27,28,119,120,273,274,275,276,277,278,279,280,281,282,283,284,29,31,32,285,286,287,121,288,289,290,291,108,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,33,309,310,311,34,35,312,36,313,314,37,315,316,317,318,319,46,47,48,320,321,322,323,324,325,326,327,328,329,330,110,111],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:262","failures":[199,13,208,216,217,82,218,331,332,16,221,222,223,224,225,226,227,237,238,116,256,257,258,259,22,260,261,262,23,24,263,25,264,265,26,266,267,268,269,270,271,28,279,280,281,282,283,284,287,132,133,304],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[333,334,335,336,337,49,39,338,339,340,79,341,342,44,343,344,345,346,347,348,349,350,351,45,352,353,354,355,356,80,357,358,50,51,359],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[152,154,360,155,286,38,321],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:541","sourceCode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\n    org.easymock.IMocksControl.replay();\n}","type":"CtForEachImpl"},"failures":[178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,207,79,44,45,80,89,90,46,47,47,48,48,327,328,329,330,110,111],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[141,127,157,158,159,160,167,168],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[361,360],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[73,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[10,112,113,114,115,116,117,54,20,55,118,119,120,121,122],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[362,363,333,334,335,336,337,64,67,364,365,51,59,366,367,60,61],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[144],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[368,369,370],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[371,0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[10,116,117,20,372],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[373],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[127,128,129,130],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[374,375,376,377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"propertyFileName"}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":139,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":271,"org.easymock.tests2.UsageTest.argumentsOrdered":114,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":282,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":203,"org.easymock.tests2.StubTest.stubWithReturnValue":208,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":367,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":328,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":35,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":150,"org.easymock.tests2.SerializationTest.testAllMockedMethod":41,"org.easymock.tests2.DelegateToTest.testReturnException":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":280,"org.easymock.tests.MockingTest.testPartialClassMocking":104,"org.easymock.samples.SupportTest.voteForRemovals":330,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":53,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":346,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":42,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":256,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":44,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":123,"org.easymock.tests.UsageExpectAndThrowTest.object":263,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":193,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":147,"org.easymock.tests2.DelegateToTest.testWrongClass":154,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":233,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":234,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":127,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":235,"org.easymock.tests2.UsageTest.wrongArguments":112,"org.easymock.tests.UsageStrictMockTest.range":20,"org.easymock.samples.ConstructorCalledMockTest.testTax":47,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":290,"org.easymock.samples.ExampleTest.answerVsDelegate":321,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":186,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":62,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":102,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":334,"org.easymock.tests2.UsageConstraintsTest.testNull":140,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":70,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":25,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":89,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":188,"org.easymock.tests2.CaptureTest.testPrimitive":160,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":338,"org.easymock.tests.UsageTest.moreThanOneArgument":272,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":270,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":119,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":289,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":230,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":56,"org.easymock.tests2.CaptureTest.testCaptureNone":165,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":375,"org.easymock.tests.UsageUnorderedTest.message":115,"org.easymock.tests.UsageVerifyTest.twoReturns":117,"org.easymock.tests.UsageVarargTest.varargByteAccepted":300,"org.easymock.tests2.ThreadingTest.testThreadSafe":211,"org.easymock.tests.UsageTest.argumentsOrdered":120,"org.easymock.tests.UsageVarargTest.varargIntAccepted":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":352,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":247,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":110,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":274,"org.easymock.tests2.CaptureTest.testCapture_2617107":159,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":83,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":238,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":88,"org.easymock.tests2.UsageConstraintsTest.any":142,"org.easymock.tests2.StubTest.stub":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":38,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":278,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":281,"org.easymock.tests.UsageExpectAndThrowTest.longType":259,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":197,"org.easymock.tests2.SerializationTest.testClass":39,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":178,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":207,"org.easymock.tests.LimitationsTest.mockNativeMethod":107,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":319,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":100,"org.easymock.tests2.AnswerTest.answer":172,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":177,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":97,"org.easymock.tests2.CaptureTest.testAnd":157,"org.easymock.tests2.UsageTest.strictResetToDefault":200,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":366,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":198,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":75,"org.easymock.tests2.MockedExceptionTest.testMockedException":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":342,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":31,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":183,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":28,"org.easymock.tests2.DelegateToTest.testDelegate":155,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":22,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":43,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":106,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":68,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":90,"org.easymock.tests.MockingTest.testNicePartialClassMocking":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":266,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":72,"org.easymock.tests2.CaptureTest.testCaptureLast":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":283,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":244,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":148,"org.easymock.tests.MockingTest.testTwoMocks":103,"org.easymock.tests2.CaptureTest.testCapture1_2446744":161,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":364,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":305,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":265,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":23,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":175,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":113,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":9,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":377,"org.easymock.tests.UsageThrowableTest.throwError":221,"org.easymock.tests.UsageStrictMockTest.differentMethods":21,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":213,"org.easymock.tests2.MockBuilderTest.testCreateMockString":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":343,"org.easymock.tests.UsageExpectAndThrowTest.floatType":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":232,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":340,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":173,"org.easymock.tests.UsageVerifyTest.twoThrows":116,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":45,"org.easymock.samples.PartialClassMockTest.testGetArea":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":275,"org.easymock.samples.ExampleTest.voteAgainstRemoval":323,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":347,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":257,"org.easymock.tests2.UsageTest.niceToStrict":202,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":363,"org.easymock.tests2.UsageConstraintsTest.testNotNull":151,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":227,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":216,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":49,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":87,"org.easymock.tests2.UsageTest.defaultResetToNice":204,"org.easymock.tests2.MockBuilderTest.testCreateMock":91,"org.easymock.samples.ExampleTest.voteAgainstRemovals":320,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":354,"org.easymock.tests.UsageVarargTest.differentLength":297,"org.easymock.tests2.CallbackTest.callback":156,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":58,"org.easymock.tests.UsageTest.openCallCountByLastCall":27,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":52,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":24,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":184,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":138,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":237,"org.easymock.tests.UsageCallCountTest.tooFewCalls":245,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":335,"org.easymock.tests.UsageOverloadedMethodTest.overloading":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":351,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":287,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":128,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":65,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":36,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":373,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":143,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":166,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":291,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":376,"org.easymock.tests.UsageThrowableTest.throwCheckedException":224,"org.easymock.tests2.EasyMockSupportClassTest.testAll":79,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":99,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":268,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":57,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":95,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":242,"org.easymock.tests2.CaptureTest.testCaptureAll":158,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":176,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":304,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":66,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":64,"org.easymock.tests2.UsageConstraintsTest.testMatches":7,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":171,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":231,"org.easymock.tests2.CompareToTest.testGreateOrEqual":130,"org.easymock.samples.ExampleTest.voteForRemovals":325,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":215,"org.easymock.tests.UsageVarargTest.allKinds":302,"org.easymock.tests2.DependencyTest.testInterfaceMocking":192,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":243,"org.easymock.samples.BasicClassMockTest.testPrintContent":111,"org.easymock.samples.ExampleTest.addDocument":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":357,"org.easymock.tests2.DelegateToTest.testStubDelegate":153,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":226,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":194,"org.easymock.tests2.AnswerTest.stubAnswer":124,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":360,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":284,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":253,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":369,"org.easymock.tests2.UsageConstraintsTest.greaterThan":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":341,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":30,"org.easymock.tests.UsageVarargTest.varargLongAccepted":299,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":78,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":255,"org.easymock.samples.ExampleTest.voteForRemoval":322,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":212,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":318,"org.easymock.tests.UsageExpectAndReturnTest.floatType":307,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":81,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":73,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":48,"org.easymock.tests.UsageThrowableTest.noUpperLimit":17,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":8,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":199,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":1,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":108,"org.easymock.tests2.SerializationTest.test":40,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":162,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":134,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":181,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":222,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":306,"org.easymock.tests2.UsageConstraintsTest.testSame":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":339,"org.easymock.samples.SupportTest.addDocument":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":279,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":370,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":361,"org.easymock.tests2.CaptureTest.testCaptureFirst":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":182,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":205,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":121,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":344,"org.easymock.tests.GenericTest.testPackageScope":98,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":214,"org.easymock.tests2.UsageTest.moreThanOneArgument":201,"org.easymock.tests2.CaptureTest.testCapture2_2446744":169,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":92,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":301,"org.easymock.tests.GenericTest.testBridgedEquals":0,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":336,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":333,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":249,"org.easymock.tests.UsageExpectAndReturnTest.longType":308,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":240,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":179,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":313,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":269,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":93,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":149,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":267,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":61,"org.easymock.tests2.UsageStrictMockTest.differentMethods":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":228,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":132,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":33,"org.easymock.tests.UsageCallCountTest.tooManyCalls":250,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":26,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":32,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":355,"org.easymock.tests2.MockedExceptionTest.testRealException":218,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":260,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":196,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":225,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":63,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":84,"org.easymock.tests2.UsageConstraintsTest.testContains":6,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":82,"org.easymock.tests2.UsageConstraintsTest.testFind":3,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":16,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":209,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":51,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":71,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":251,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":210,"org.easymock.tests.UsageExpectAndReturnTest.object":312,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":146,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":74,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":85,"org.easymock.tests2.UsageStrictMockTest.range":10,"org.easymock.tests2.UsageConstraintsTest.lessThan":129,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":187,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":296,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":337,"org.easymock.tests.UsageTest.exactCallCountByLastCall":273,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":303,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":348,"org.easymock.tests2.CaptureTest.testCaptureRightOne":167,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":374,"org.easymock.tests2.UsageConstraintsTest.testOr":5,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":365,"org.easymock.tests.UsageRangeTest.combination":29,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":316,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":292,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":69,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":286,"org.easymock.tests.UsageTest.wrongArguments":118,"org.easymock.tests2.MockBuilderTest.testWithConstructor":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":345,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":109,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":309,"org.easymock.tests2.EasyMockSupportTest.testVerify":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":349,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":331,"org.easymock.tests.UsageVarargTest.varargShortAccepted":298,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":285,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":174,"org.easymock.tests2.UsageConstraintsTest.cmpTo":136,"org.easymock.tests.UsageVarargTest.varargCharAccepted":295,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":368,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":195,"org.easymock.tests2.UsageTest.openCallCountByLastCall":12,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":13,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":50,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":190,"org.easymock.tests2.CaptureTest.testCaptureFromStub":168,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":86,"org.easymock.tests.UsageTest.unexpectedCallWithArray":55,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":350,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":262,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":223,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":54,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":246,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":60,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":37,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":254,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":76,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.samples.ExampleTest.addAndChangeDocument":326,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":261,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":317,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":131,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":327,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":241,"org.easymock.tests2.UsageTest.resumeIfFailure":14,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":276,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":96,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":310,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":101,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":277,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":372,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":293,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":185}}]
