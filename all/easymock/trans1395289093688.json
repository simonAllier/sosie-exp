[{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[4,5,6,7,8,9],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[10,11,12,13],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,10,11,12,36,37,38,39,40,41,42,43,0,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,3,222],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[223,224,225,226,6,227,228,229,230,231,9,232,196,197],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[259,260],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:169","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, 0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[261,262,54,263,226,91,264,265,230,266,267,268,232,196,197,209,269,270],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","m":"this"}},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[41,42,45,46,271,57,76,78,85],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[272,273,274],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[42,43,271,48],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[14,15,16,17,18,19,297,20,298,299,233,300,301,302,303,304,234,21,305,306,261,22,23,223,24,25,307,308,26,224,225,27,262,309,28,29,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,30,31,32,33,34,335,35,10,11,12,336,337,338,339,340,341,342,343,344,345,346,347,348,349,36,37,350,351,38,39,40,41,42,352,43,0,44,45,46,47,271,48,49,50,51,52,53,54,55,56,57,58,59,1,60,61,62,63,353,64,65,263,226,66,67,354,68,69,70,71,72,355,356,73,74,75,76,77,78,79,357,80,81,82,83,84,85,358,359,86,87,88,89,90,91,235,236,237,238,239,240,241,242,243,244,245,246,360,92,93,361,362,363,94,95,364,96,365,366,367,368,369,97,98,370,371,372,373,374,375,376,377,378,379,380,99,381,382,383,384,385,386,387,388,100,389,101,102,103,104,390,391,105,392,393,106,394,107,395,396,397,247,248,249,250,251,252,253,254,255,256,257,258,108,109,398,2,110,111,399,400,112,401,113,114,115,116,402,403,404,117,118,119,120,121,405,122,123,264,124,6,227,406,407,228,229,265,125,126,408,409,127,230,410,411,412,128,129,413,130,414,415,416,131,132,259,133,134,417,260,272,273,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,274,435,436,437,438,439,440,441,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,442,443,444,445,446,447,448,449,450,451,452,453,454,155,156,455,456,457,458,459,157,158,159,160,161,162,460,461,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,462,463,464,465,466,467,468,469,470,471,472,183,184,185,186,187,188,473,266,267,474,189,9,190,268,232,191,192,193,475,476,477,478,479,194,480,195,196,197,481,482,483,484,485,486,487,488,489,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,490,491,492,493,494,495,496,497,498,499,500,501,213,214,215,502,216,217,503,218,219,220,221,3,504,505,506,507,508,509,510,222,511,512,513,514,515,516,517],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[10,11,12,13],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[302,10,96,518,366,367,97,98,370,372,375,376,519,378,390,417,462,467],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[62],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[10,11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[63,520],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[434,440,444],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"failures":[10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[4,5,6,7,8,9],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[41,42,0,45,46,271,57,61,76,78,85],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[300,301,302,303,303,304,304,21,305,521,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,30,31,32,10,12,360,92,93,361,94,95,96,518,366,367,369,97,98,370,372,374,375,376,519,378,382,386,100,389,102,103,104,390,105,392,393,106,394,107,395,396,397,111,399,400,112,401,410,411,412,128,129,130,416,259,133,134,417,260,462,467,482,483,484,485,486,487,489,509,510,222,511,512,513,514,515,516],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[10,11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[470,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[486,522,523],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.RecordState:117","failures":[15,34,35,72,73,75,91,475],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[10,11,12,13],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type","org.easymock.MockType.NICE":"type"}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[300,301,302,303,303,304,304,21,524,521,525,313,316,326,332,32,10,12,360,92,93,361,94,95,96,518,366,367,97,98,370,372,375,376,519,378,100,389,102,103,104,390,105,106,394,107,395,111,112,412,128,129,130,133,134,417,462,467,222],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[14,15,16,17,18,19,20,298,299,233,300,301,234,261,22,23,24,25,307,308,224,27,262,28,29,313,30,31,32,33,34,35,11,12,336,337,338,339,340,341,342,344,345,346,347,348,36,37,350,38,39,40,41,42,43,0,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,1,60,61,62,63,64,65,263,226,66,67,72,73,74,75,76,77,78,79,357,80,81,82,83,84,85,358,359,86,91,240,360,361,363,99,381,100,389,101,102,103,104,105,252,108,109,398,2,110,111,112,405,122,123,264,124,406,407,228,265,125,126,408,409,127,230,131,132,133,134,260,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,454,155,156,455,456,457,458,459,157,158,159,160,161,162,460,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185,186,187,188,266,267,189,190,268,232,191,192,475,477,478,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,211,212,498,499,213,214,215,216,217,218,219,220,221,3,504,507,515,516],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[52,59,63,520],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[305,526,527,528,529,371],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":42,"org.easymock.tests2.UsageTest.argumentsOrdered":225,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":264,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":346,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":429,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":25,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":233,"org.easymock.tests2.DelegateToTest.testReturnException":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":199,"org.easymock.tests.MockingTest.testPartialClassMocking":128,"org.easymock.tests.MockClassControlTest.testToString":511,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":354,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":163,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":316,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":381,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":296,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":526,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":125,"org.easymock.tests2.UsageTest.wrongArguments":223,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":258,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":115,"org.easymock.samples.ExampleTest.answerVsDelegate":15,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":467,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":415,"org.easymock.tests2.UsageConstraintsTest.testNull":0,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":102,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":516,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":345,"org.easymock.tests2.CaptureTest.testPrimitive":79,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":127,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":182,"org.easymock.tests.UsageTest.moreThanOneArgument":124,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":101,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":159,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":497,"org.easymock.tests.UsageTest.argumentsOrdered":229,"org.easymock.tests.UsageVarargTest.varargIntAccepted":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":204,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":96,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":245,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":208,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":280,"org.easymock.tests.ReplayStateInvalidUsageTest.times":450,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":252,"org.easymock.tests2.DependencyTest.testClassMocking":379,"org.easymock.tests2.AnswerTest.answer":72,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":435,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":90,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":464,"org.easymock.tests2.CaptureTest.testAnd":76,"org.easymock.tests2.UsageTest.strictResetToDefault":22,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":106,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":368,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":158,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":340,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":501,"org.easymock.tests2.DelegateToTest.testDelegate":38,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":279,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":178,"org.easymock.tests.LimitationsTest.mockFinalMethod":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":121,"org.easymock.tests2.DependencyTest.testClassMockingSupport":380,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":272,"org.easymock.tests2.CaptureTest.testCapture1_2446744":357,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":391,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":176,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":88,"org.easymock.tests.UsageThrowableTest.throwError":454,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":444,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":466,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":517,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":334,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":283,"org.easymock.samples.PartialClassMockTest.testGetArea":302,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":445,"org.easymock.tests.MockingTest.testInterfaceMocking":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":205,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":494,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":509,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":164,"org.easymock.tests2.UsageTest.niceToStrict":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":97,"org.easymock.tests2.MockBuilderTest.testCreateMock":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":329,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":255,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":172,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":341,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":463,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":472,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":183,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":113,"org.easymock.tests.UsageOverloadedMethodTest.overloading":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":331,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":478,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":52,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":405,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":146,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":522,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":51,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":84,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":502,"org.easymock.tests.MockClassControlTest.testEquals":515,"org.easymock.tests2.EasyMockSupportClassTest.testAll":313,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":134,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":180,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":524,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":119,"org.easymock.tests2.CaptureTest.testCaptureAll":77,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":89,"org.easymock.tests.MockNameTest.defaultName":461,"org.easymock.tests2.UsageConstraintsTest.testMatches":53,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":442,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":160,"org.easymock.samples.ExampleTest.voteForRemovals":19,"org.easymock.tests.UsageVarargTest.allKinds":3,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":120,"org.easymock.samples.BasicClassMockTest.testPrintContent":301,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":458,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":203,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":242,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":351,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":529,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":488,"org.easymock.tests2.UsageConstraintsTest.greaterThan":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":314,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":210,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":395,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":284,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":489,"org.easymock.samples.ExampleTest.voteForRemoval":16,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":396,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":109,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":385,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":390,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":276,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":111,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":261,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":426,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":338,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":198,"org.easymock.tests2.CaptureTest.testCaptureFirst":86,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":425,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":339,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":262,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":480,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":142,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":2,"org.easymock.tests2.UsageTest.moreThanOneArgument":23,"org.easymock.tests2.CaptureTest.testCapture2_2446744":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":436,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":376,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":221,"org.easymock.tests.GenericTest.testBridgedEquals":260,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":266,"org.easymock.tests.UsageExpectAndReturnTest.longType":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":117,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":336,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":519,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":181,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":496,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":1,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":179,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":491,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":157,"org.easymock.tests.UsageCallCountTest.tooManyCalls":267,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":330,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":143,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":257,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":168,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":457,"org.easymock.tests.MockingTest.testNiceClassMocking":416,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":92,"org.easymock.tests.MockingTest.testClassMocking":411,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":518,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":184,"org.easymock.tests2.UsageConstraintsTest.testContains":50,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":32,"org.easymock.tests2.UsageConstraintsTest.testFind":43,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":123,"org.easymock.tests.MockTypeTest.fromEasyMockClass":465,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":474,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":35,"org.easymock.tests.UsageExpectAndReturnTest.object":145,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":105,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":256,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":344,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":527,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":217,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":507,"org.easymock.tests.UsageTest.exactCallCountByLastCall":265,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":498,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":402,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":305,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":151,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":213,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":477,"org.easymock.tests.MockClassControlTest.testHashCode":514,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":236,"org.easymock.tests2.EasyMockSupportTest.testVerify":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":323,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":499,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":475,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":471,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":87,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":309,"org.easymock.tests.UsageVarargTest.varargCharAccepted":216,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":481,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":441,"org.easymock.tests2.UsageTest.openCallCountByLastCall":307,"org.easymock.tests.DefaultClassInstantiatorTest.object":482,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":347,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":470,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":505,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":231,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":324,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":455,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":250,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":235,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":513,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":394,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":282,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":169,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":152,"org.easymock.tests.ReplayStateInvalidCallsTest.times":288,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":490,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":289,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":512,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":332,"org.easymock.tests2.UsageTest.resumeIfFailure":27,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":462,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":201,"org.easymock.tests2.StubTest.stubWithReturnValue":29,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":371,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":144,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":60,"org.easymock.tests2.SerializationTest.testAllMockedMethod":12,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":274,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.samples.SupportTest.voteForRemovals":299,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":238,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":175,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":13,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":440,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":355,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":404,"org.easymock.tests.UsageExpectAndThrowTest.object":173,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":58,"org.easymock.tests2.DelegateToTest.testWrongClass":350,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":131,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":286,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":132,"org.easymock.tests.UsageStrictMockTest.range":232,"org.easymock.samples.ConstructorCalledMockTest.testTax":303,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":387,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":343,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":174,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":370,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":452,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":114,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":7,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":278,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":495,"org.easymock.tests2.CaptureTest.testCaptureNone":83,"org.easymock.tests.UsageUnorderedTest.message":230,"org.easymock.tests.UsageVerifyTest.twoReturns":197,"org.easymock.tests.UsageVarargTest.varargByteAccepted":220,"org.easymock.tests2.ThreadingTest.testThreadSafe":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":327,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":188,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":508,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":300,"org.easymock.tests2.CaptureTest.testCapture_2617107":78,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":438,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":409,"org.easymock.tests2.UsageConstraintsTest.any":48,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":449,"org.easymock.tests2.StubTest.stub":28,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndThrowTest.longType":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":200,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":486,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":448,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":263,"org.easymock.tests2.SerializationTest.testClass":10,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":240,"org.easymock.tests.LimitationsTest.mockNativeMethod":112,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":417,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":154,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":525,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":249,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":294,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":67,"org.easymock.tests2.NameTest.nameForMocksControl":71,"org.easymock.tests2.MockedExceptionTest.testMockedException":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":315,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":407,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":167,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":130,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":335,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":100,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":372,"org.easymock.tests.MockingTest.testNicePartialClassMocking":129,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":104,"org.easymock.tests2.CaptureTest.testCaptureLast":82,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":247,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":273,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":46,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":95,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":293,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":59,"org.easymock.tests.MockingTest.testTwoMocks":412,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":290,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":364,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":171,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":224,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":62,"org.easymock.samples.ExampleTest.removeNonExistingDocument":297,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":446,"org.easymock.tests.UsageStrictMockTest.differentMethods":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":254,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":237,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":484,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":398,"org.easymock.tests2.MockBuilderTest.testCreateMockString":378,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":510,"org.easymock.tests.UsageExpectAndThrowTest.floatType":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":317,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":312,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":73,"org.easymock.tests.UsageVerifyTest.twoThrows":196,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":306,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":326,"org.easymock.samples.ExampleTest.voteAgainstRemoval":17,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":430,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":107,"org.easymock.tests.LimitationsTest.privateConstructor":400,"org.easymock.tests2.UsageConstraintsTest.testNotNull":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":459,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":30,"org.easymock.tests2.UsageTest.defaultResetToNice":26,"org.easymock.samples.ExampleTest.voteAgainstRemovals":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":150,"org.easymock.tests.UsageVarargTest.differentLength":503,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":248,"org.easymock.tests2.CallbackTest.callback":91,"org.easymock.tests2.UsageConstraintsTest.equals":352,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":392,"org.easymock.tests.UsageTest.openCallCountByLastCall":406,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":408,"org.easymock.tests.UsageCallCountTest.tooFewCalls":186,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":116,"org.easymock.tests.UsageThrowableTest.throwCheckedException":456,"org.easymock.tests.MockingTest.testStrictClassMocking":410,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":8,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":460,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":94,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":93,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":253,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":363,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":75,"org.easymock.tests.ObjectMethodsTest.testHashCode":506,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":110,"org.easymock.tests2.NameTest.nameForNiceMock":70,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":292,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":287,"org.easymock.tests2.DependencyTest.testInterfaceMocking":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":528,"org.easymock.samples.ExampleTest.addDocument":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":328,"org.easymock.tests2.DelegateToTest.testStubDelegate":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.AnswerTest.stubAnswer":74,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":190,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":373,"org.easymock.tests.UsageVarargTest.varargLongAccepted":219,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":153,"org.easymock.tests.UsageExpectAndReturnTest.floatType":137,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":21,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":304,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":479,"org.easymock.tests.UsageThrowableTest.noUpperLimit":155,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":56,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":244,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":40,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":382,"org.easymock.tests2.SerializationTest.test":11,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":80,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":523,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":136,"org.easymock.tests2.UsageConstraintsTest.testSame":44,"org.easymock.samples.SupportTest.addDocument":298,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":362,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":277,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":318,"org.easymock.tests.GenericTest.testPackageScope":133,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":243,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":414,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":275,"org.easymock.tests2.NameTest.nameForMock":68,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":147,"org.easymock.tests2.UsageStrictMockTest.differentMethods":66,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":377,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":393,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":139,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":177,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":504,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":212,"org.easymock.tests2.MockedExceptionTest.testRealException":33,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":432,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":65,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":126,"org.easymock.tests2.NameTest.nameForStrictMock":69,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":369,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":103,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":386,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":485,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":57,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":269,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":366,"org.easymock.tests2.UsageStrictMockTest.range":226,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":281,"org.easymock.tests2.UsageConstraintsTest.lessThan":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":337,"org.easymock.tests2.CaptureTest.testCaptureRightOne":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":322,"org.easymock.tests2.UsageConstraintsTest.testOr":45,"org.easymock.tests.UsageRangeTest.combination":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":389,"org.easymock.tests.UsageTest.wrongArguments":227,"org.easymock.tests2.MockBuilderTest.testWithConstructor":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":319,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":222,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":148,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":487,"org.easymock.tests.UsageVarargTest.varargShortAccepted":218,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":473,"org.easymock.tests2.UsageConstraintsTest.cmpTo":49,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":295,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":356,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":285,"org.easymock.tests2.CompareToTest.testLessThan":520,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":422,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":308,"org.easymock.tests2.CaptureTest.testCaptureFromStub":358,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":443,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":367,"org.easymock.tests.UsageTest.unexpectedCallWithArray":6,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":291,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":187,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":149,"org.easymock.tests2.UsageConstraintsTest.constraints":41,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":268,"org.easymock.samples.ExampleTest.addAndChangeDocument":20,"org.easymock.tests.UsageStrictMockTest.testVerify":193,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":234,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":118,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":81,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":521,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":206,"org.easymock.tests.LimitationsTest.abstractClass":399,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":141,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":207,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":214,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":342}}]
