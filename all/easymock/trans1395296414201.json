[{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,245,246,246,247,248,249,250,251,252],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[253,254,255,256,0,1,257,258,259,260,2,3,261,4,5,262,6,7,263,264,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,265,266,28,267,29,30,268,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,269,46,47,48,49,50,51,52,53,54,55,56,57,270,58,59,60,61,62,63,64,65,66,67,271,68,272,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,273,88,89,274,90,91,275,92,276,93,94,95,277,96,278,97,98,99,279,280,100,101,102,103,104,105,106,107,108,109,110,111,112,113,281,114,115,116,117,118,119,282,283,284,285,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,286,287,288,165,289,166,167,290,291,168,169,170,171,172,173,174,175,176,292,177,178,179,180,181,182,293,183,294,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,295,296,297,298,299,300,301,302,303,304,305,306,218,307,308,309,310,311,312,219,220,221,222,223,224,225,226,227,228,229,313,314,230,231,315,316,232,233,317,234,235,318,236,319,237,238,239,320,321,322,323,324,240,241,242,325,243,326,327,328,244,329,245,245,246,246,247,248,249,250,330,251,252],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:266","sourceCode":"return ","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[331],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[332],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[2,3,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[2,3,261,334],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[335,336,288,337,338,313],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[91,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[12,28,36,37,40,41,42,43,48,50,51,53,54,59,60,61,85,149,150,156,157,160,165,178,179,180,181,182,196,340,341,342,343,344,222,223,224,225,226,245,246],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"value"}},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[28,29,30,95,345,346,347,348,165,166,167,221,229,240,241,242],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[349,253,254,255,256,0,350,1,257,258,259,260,2,3,261,4,5,262,6,7,263,264,8,9,10,11,12,13,14,15,16,17,18,19,20,351,352,353,354,355,21,356,357,358,359,360,361,22,23,24,25,26,362,363,364,365,366,27,367,368,369,370,371,372,265,266,28,267,29,30,268,373,374,375,31,376,377,32,378,379,380,381,382,383,384,385,386,33,387,388,389,390,391,34,392,393,35,394,395,396,397,398,36,37,38,39,399,40,41,42,43,44,45,269,46,47,48,49,50,51,52,53,54,55,56,57,270,58,59,60,61,62,63,64,65,66,67,271,400,68,401,402,272,69,70,71,403,404,72,73,74,75,76,77,78,79,80,81,82,83,84,85,405,406,86,87,273,88,407,408,89,274,90,91,409,275,92,276,93,94,95,277,96,278,97,98,99,279,280,100,101,102,103,104,105,106,107,108,109,110,111,112,113,281,114,115,116,117,118,119,282,283,284,285,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,410,155,411,412,413,414,415,416,417,418,419,420,331,421,422,423,424,425,426,427,428,429,156,157,158,159,160,161,162,163,164,286,287,288,165,289,166,167,290,291,168,169,170,171,172,173,174,175,430,431,432,433,434,435,436,437,438,176,292,177,439,178,179,180,181,182,293,183,440,441,442,294,184,185,443,186,444,445,446,187,188,189,190,191,192,339,447,448,449,450,451,452,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,295,296,297,453,298,299,300,301,302,303,304,305,306,454,218,307,308,309,310,311,312,340,455,456,457,341,342,458,459,460,461,462,463,464,465,343,466,219,467,468,344,469,470,220,471,221,222,223,224,225,226,472,473,227,474,228,229,313,314,230,231,315,316,232,233,317,234,235,318,236,319,237,238,239,320,321,322,323,324,475,476,477,478,479,480,240,241,242,325,243,326,327,328,244,329,245,246,247,248,249,250,330,251,481,252],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[28,29,30,482,335,483,484,485,486,487,488,336,489,490,95,277,279,280,288,165,166,167,293,183,337,491,338,492,493,494,495,221,229,313,314,315,316,317,318,236,319,240,241,242],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl() : org.easymock.EasyMockSupport.createNiceControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[496,497,498],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"type"}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[179,201,207,214,215,226],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[73,74],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[162,193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[2,261,24,31,32,33,34,35,62,63,65,66,67,271,68,272,69,70,71,77,78,79,80,82,83,273,88,89,274,90,91,275,92,276,140,431,176,292,177,294,184,185,186,227,326,327,244,245,245,246,246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[499],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[2,261,24,31,32,33,34,35,62,63,65,66,67,271,68,272,69,70,71,77,78,79,80,82,83,273,88,89,274,90,91,275,92,276,140,431,176,292,177,294,184,185,186,227,326,327,244,245,245,246,246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[349],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[85,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,159,168,171,172,173,174,175,191,193,194,195,235,241],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[500],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:66","sourceCode":"org.easymock.internal.Injector.org.easymock.internal.Injector.createMocksForAnnotations(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan)","type":"CtInvocationImpl"},"failures":[351,352,353,354,355,21,356,357,358,359,360,361,362,363,364,365,366,27,367,368,369,370,371,372,328,329],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[162,163,164,459],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[401,501,502,245,246],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":39,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":228,"org.easymock.tests2.UsageTest.argumentsOrdered":280,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":462,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":278,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":328,"org.easymock.tests2.DelegateToTest.testReturnException":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":188,"org.easymock.tests.MockingTest.testPartialClassMocking":184,"org.easymock.tests.MockClassControlTest.testToString":432,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":349,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":120,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":32,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":345,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":87,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":156,"org.easymock.tests2.UsageTest.wrongArguments":277,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":284,"org.easymock.samples.ExampleTest.answerVsDelegate":248,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":449,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":445,"org.easymock.tests2.UsageConstraintsTest.testNull":41,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":65,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":437,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":111,"org.easymock.tests2.CaptureTest.testPrimitive":6,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":160,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":139,"org.easymock.tests.UsageTest.moreThanOneArgument":229,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":180,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":144,"org.easymock.tests.UsageTest.argumentsOrdered":316,"org.easymock.tests.UsageVarargTest.varargIntAccepted":297,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":222,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":273,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":371,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":226,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":485,"org.easymock.tests.ReplayStateInvalidUsageTest.times":420,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":21,"org.easymock.tests2.DependencyTest.testClassMocking":405,"org.easymock.tests2.AnswerTest.answer":15,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":260,"org.easymock.tests2.CaptureTest.testAnd":4,"org.easymock.tests2.UsageTest.strictResetToDefault":94,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":272,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":179,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":106,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":148,"org.easymock.tests2.DelegateToTest.testDelegate":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":135,"org.easymock.tests.LimitationsTest.mockFinalMethod":474,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":324,"org.easymock.tests2.DependencyTest.testClassMockingSupport":406,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":293,"org.easymock.tests2.CaptureTest.testCapture1_2446744":7,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":400,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":133,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":258,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":414,"org.easymock.tests.UsageThrowableTest.throwError":168,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":448,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":372,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":393,"org.easymock.samples.PartialClassMockTest.testGetArea":244,"org.easymock.tests.MockingTest.testInterfaceMocking":443,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":223,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":142,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":480,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":121,"org.easymock.tests2.UsageTest.niceToStrict":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":382,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":340,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":89,"org.easymock.tests2.MockBuilderTest.testCreateMock":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":389,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":129,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":335,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":107,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":195,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":282,"org.easymock.tests.UsageOverloadedMethodTest.overloading":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":386,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":50,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":209,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":237,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":49,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":10,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":453,"org.easymock.tests.MockClassControlTest.testEquals":436,"org.easymock.tests2.EasyMockSupportClassTest.testAll":31,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":292,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":487,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":137,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":499,"org.easymock.tests2.CaptureTest.testCaptureAll":5,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":322,"org.easymock.tests.MockNameTest.defaultName":452,"org.easymock.tests2.UsageConstraintsTest.testMatches":51,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":412,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":181,"org.easymock.samples.ExampleTest.voteForRemovals":251,"org.easymock.tests.UsageVarargTest.allKinds":305,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":323,"org.easymock.samples.BasicClassMockTest.testPrintContent":327,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":174,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":265,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":368,"org.easymock.tests2.UsageConstraintsTest.greaterThan":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":376,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":152,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":71,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":429,"org.easymock.samples.ExampleTest.voteForRemoval":249,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":403,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":73,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":450,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":271,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":140,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":93,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":459,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":104,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":374,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":187,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":114,"org.easymock.tests2.CaptureTest.testCaptureFirst":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":105,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":101,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":205,"org.easymock.tests2.CaptureTest.testCapture2_2446744":13,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":75,"org.easymock.tests2.UsageTest.moreThanOneArgument":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":468,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":92,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":304,"org.easymock.tests.GenericTest.testBridgedEquals":439,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":311,"org.easymock.tests.UsageExpectAndReturnTest.longType":201,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":102,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":320,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":138,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":161,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":270,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":178,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":163,"org.easymock.tests.UsageCallCountTest.tooManyCalls":312,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":491,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":206,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":125,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":173,"org.easymock.tests.MockingTest.testNiceClassMocking":446,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":78,"org.easymock.tests.MockingTest.testClassMocking":442,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":454,"org.easymock.tests2.UsageConstraintsTest.testContains":48,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":24,"org.easymock.tests2.UsageConstraintsTest.testFind":40,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":239,"org.easymock.tests.MockTypeTest.fromEasyMockClass":447,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":1,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":286,"org.easymock.tests.UsageExpectAndReturnTest.object":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":110,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":299,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":478,"org.easymock.tests.UsageTest.exactCallCountByLastCall":232,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":410,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":145,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":494,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":394,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":214,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":295,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":234,"org.easymock.tests.MockClassControlTest.testHashCode":435,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":363,"org.easymock.tests2.EasyMockSupportTest.testVerify":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":384,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":484,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":146,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":194,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":233,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":257,"org.easymock.tests.UsageVarargTest.varargCharAccepted":298,"org.easymock.tests2.CaptureTest.testCaptureMultiple":332,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":471,"org.easymock.tests2.UsageTest.openCallCountByLastCall":97,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":497,"org.easymock.tests.DefaultClassInstantiatorTest.object":423,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":113,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":193,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":476,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":385,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":171,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":354,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":362,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":434,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":69,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":126,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":215,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":162,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":486,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":34,"org.easymock.tests2.UsageTest.resumeIfFailure":100,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":339,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":190,"org.easymock.tests2.StubTest.stubWithReturnValue":85,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":58,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":207,"org.easymock.tests2.SerializationTest.testAllMockedMethod":261,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":219,"org.easymock.samples.SupportTest.voteForRemovals":243,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":336,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":438,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":132,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":334,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":220,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":16,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":411,"org.easymock.tests.UsageExpectAndThrowTest.object":130,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":56,"org.easymock.tests2.DelegateToTest.testWrongClass":117,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":149,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":150,"org.easymock.tests.UsageStrictMockTest.range":166,"org.easymock.samples.ConstructorCalledMockTest.testTax":245,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":397,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":109,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":77,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":131,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":90,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":421,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":283,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":337,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":143,"org.easymock.tests2.CaptureTest.testCaptureNone":9,"org.easymock.tests.UsageUnorderedTest.message":221,"org.easymock.tests.UsageVerifyTest.twoReturns":242,"org.easymock.tests.UsageVarargTest.varargByteAccepted":303,"org.easymock.tests2.ThreadingTest.testThreadSafe":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":387,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":309,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":479,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":326,"org.easymock.tests2.CaptureTest.testCapture_2617107":262,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":490,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":159,"org.easymock.tests2.UsageConstraintsTest.any":46,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":419,"org.easymock.tests2.StubTest.stub":84,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":189,"org.easymock.tests.UsageExpectAndThrowTest.longType":123,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":427,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":418,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":267,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":27,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":227,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":353,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":268,"org.easymock.tests2.NameTest.nameForMocksControl":256,"org.easymock.tests2.MockedExceptionTest.testMockedException":23,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":377,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":231,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":186,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":124,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":350,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":62,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":91,"org.easymock.tests.MockingTest.testNicePartialClassMocking":185,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":67,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":351,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":183,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":44,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":83,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":57,"org.easymock.tests.MockingTest.testTwoMocks":294,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":128,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":279,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":60,"org.easymock.samples.ExampleTest.removeNonExistingDocument":481,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":416,"org.easymock.tests.UsageStrictMockTest.differentMethods":167,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":364,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":425,"org.easymock.tests2.ConstraintsToStringTest.andToString":488,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":74,"org.easymock.tests2.MockBuilderTest.testCreateMockString":276,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":430,"org.easymock.tests.UsageExpectAndThrowTest.floatType":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":378,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":375,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":18,"org.easymock.tests.UsageVerifyTest.twoThrows":241,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":33,"org.easymock.samples.ExampleTest.voteAgainstRemoval":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":463,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":141,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":70,"org.easymock.tests.LimitationsTest.privateConstructor":473,"org.easymock.tests2.UsageConstraintsTest.testNotNull":59,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":175,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":22,"org.easymock.tests2.UsageTest.defaultResetToNice":99,"org.easymock.samples.ExampleTest.voteAgainstRemovals":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":213,"org.easymock.tests.UsageVarargTest.differentLength":300,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":352,"org.easymock.tests2.CallbackTest.callback":26,"org.easymock.tests2.UsageConstraintsTest.equals":399,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":492,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":401,"org.easymock.tests.UsageTest.openCallCountByLastCall":230,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":158,"org.easymock.tests.UsageCallCountTest.tooFewCalls":307,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":80,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":285,"org.easymock.tests.UsageThrowableTest.throwCheckedException":172,"org.easymock.tests.MockingTest.testStrictClassMocking":441,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":338,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":82,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":197,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":356,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":331,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":81,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":20,"org.easymock.tests.ObjectMethodsTest.testHashCode":477,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":76,"org.easymock.tests2.NameTest.nameForNiceMock":255,"org.easymock.tests2.DependencyTest.testInterfaceMocking":86,"org.easymock.samples.ExampleTest.addDocument":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.DelegateToTest.testStubDelegate":116,"org.easymock.tests2.AnswerTest.stubAnswer":19,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":165,"org.easymock.tests.UsageVarargTest.varargLongAccepted":302,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.floatType":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":35,"org.easymock.tests2.ConstraintsToStringTest.orToString":482,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":246,"org.easymock.tests.UsageThrowableTest.noUpperLimit":169,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":54,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":318,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":370,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":37,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":395,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":263,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":500,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":424,"org.easymock.tests2.UsageConstraintsTest.testSame":42,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":199,"org.easymock.samples.SupportTest.addDocument":325,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":379,"org.easymock.tests.GenericTest.testPackageScope":176,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":341,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":369,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":444,"org.easymock.tests2.NameTest.nameForMock":253,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":210,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":502,"org.easymock.tests2.UsageStrictMockTest.differentMethods":30,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":402,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":202,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":134,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":475,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":154,"org.easymock.tests2.MockedExceptionTest.testRealException":25,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":451,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":465,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":28,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":422,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":157,"org.easymock.tests2.NameTest.nameForStrictMock":254,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":408,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":498,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":0,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":66,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":396,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":426,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":55,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":346,"org.easymock.tests.ErrorMessageTest.testGetters":347,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":88,"org.easymock.tests2.UsageStrictMockTest.range":29,"org.easymock.tests2.UsageConstraintsTest.lessThan":61,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":460,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":103,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":383,"org.easymock.tests2.UsageConstraintsTest.testOr":43,"org.easymock.tests.UsageRangeTest.combination":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":63,"org.easymock.tests.UsageTest.wrongArguments":314,"org.easymock.tests2.MockBuilderTest.testWithConstructor":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":380,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":431,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":211,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":428,"org.easymock.tests.UsageVarargTest.varargShortAccepted":301,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":310,"org.easymock.tests2.UsageConstraintsTest.cmpTo":47,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":457,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":98,"org.easymock.tests2.CaptureTest.testCaptureFromStub":12,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":413,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":407,"org.easymock.tests.UsageTest.unexpectedCallWithArray":313,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":288,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":212,"org.easymock.tests2.UsageConstraintsTest.constraints":38,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":289,"org.easymock.samples.ExampleTest.addAndChangeDocument":252,"org.easymock.tests2.ConstraintsToStringTest.notToString":483,"org.easymock.tests.UsageStrictMockTest.testVerify":291,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":329,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":287,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":321,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":264,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":224,"org.easymock.tests.LimitationsTest.abstractClass":472,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":225,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":108,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":296,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":348}}]
