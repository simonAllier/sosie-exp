[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Invocation:99","failures":[1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[13,14,15,16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[17,18,19,20,4,21,22,23,24,25,26,27,28,29,5,30,31,32],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[33,34,35],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[36],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[37,38,39,40,41,42,43,44,45],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[46,47,37,38,48,49,50,39,40,51,41,3,52,53,54,55,56,33,57,58,42,59,60,13,61,14,62,63,17,64,65,66,67,43,68,44,69,70,71,72,73,74,75,45,76,77,78,79,80,81,82,15,16,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:42","sourceCode":"return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c","this":"this"}},{"position":"org.easymock.internal.matchers.Any:36","failures":[39,3,68,73,74,78,81,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,102,103],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[105,106,107,108,109,110,111,112,28,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[145],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[146,147,148,149,150,91,94,151,152,153,154,103,104],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[57,155],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[43,44,69,70,71,72,73,75,156,45,76,78],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[157,158,159,160,161,162,163,164,165,166,167,168,169,170,1,171,2,172,46,47,37,38,173,48,49,50,39,40,51,41,3,52,53,54,55,56,33,57,58,42,59,60,13,61,14,62,63,17,107,19,20,108,174,4,21,22,109,23,110,24,25,112,27,28,175,176,177,178,179,180,34,181,29,182,64,183,184,65,185,186,187,188,189,190,191,192,193,194,195,196,66,197,67,198,199,200,201,202,43,68,44,69,70,71,72,73,74,75,45,76,77,78,203,204,205,206,79,207,208,209,210,80,146,147,148,149,150,113,114,211,212,213,81,82,214,215,216,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,35,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,15,259,16,83,260,261,140,262,263,264,141,265,266,143,143,144,144,267,5,268,269,6,270,271,7,8,272,9,273,10,274,275,276,277,278,279,280,281,84,85,86,87,88,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,89,300,301,302,30,303,12,304,305,306,90,91,92,93,94,95,96,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,31,350,351,32,352,353,97,98,145,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,36,393,394,395,396,397,398,399,400,401,402,99,100,403,404,405,406,407,408,101,102,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,151,152,153,154,103,104,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[17,19,20,4,22,23,25,27,28,29,185,186,189,121,131,137,5,30,31,32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[207,208],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"position":"org.easymock.Capture:82","failures":[43,44,69,70,71,72,73,75,156,45,76,78],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[33,34],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[150,485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"t"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[178,180,181,65,187,81,214,215,101,102,410,411,413,417],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[489],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[156,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[38,48,41,3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[163,167,168,1,37,33,19,24,25,27,178,185,187,212,82,214,215,229,232,233,35,237,238,239,240,83,295,491,492,12,493,494,347,348,349,99,407,101,409,410,411,415,417,418,421,422,423,464,465],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[37,51,55,63,495],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[156],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[380,400,401,402],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[162,163,164,165,166,167,168,169,170,1,171,2,46,47,37,38,48,49,50,39,40,51,3,52,53,54,55,56,33,57,58,42,59,60,61,14,62,63,19,4,22,23,25,28,175,177,178,179,180,34,181,64,185,186,187,194,195,196,66,197,67,198,199,200,201,202,43,68,69,70,73,74,75,45,76,77,78,209,210,80,146,147,148,149,150,113,81,214,215,118,121,131,137,222,229,230,231,233,234,235,236,239,240,241,242,243,244,245,246,252,15,16,83,260,261,140,262,263,264,141,143,143,144,144,5,6,270,271,7,8,9,10,274,275,276,277,278,279,280,281,84,85,86,87,88,283,285,286,287,288,301,30,12,304,305,306,90,91,92,93,94,95,96,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,343,97,98,145,354,355,356,357,372,374,375,376,36,398,400,401,402,99,102,410,411,414,415,416,419,420,423,424,425,426,151,152,153,154,103,104,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,463,464,465,466,467,468,469,470,475,476,478,482,484,485,487],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[105,106,107,108,109,110,111,112,28,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"failures":[15,259],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[496],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[74,156,45,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[230],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[303],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[474],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:108","failures":[146,274,277,278,279,280,281,288,95,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,103,464,485],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[28,175,176,497],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":38,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":415,"org.easymock.tests2.UsageTest.argumentsOrdered":238,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":171,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":387,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":35,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":267,"org.easymock.tests2.DelegateToTest.testReturnException":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":152,"org.easymock.tests.MockingTest.testPartialClassMocking":475,"org.easymock.tests.MockClassControlTest.testToString":335,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":157,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":125,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":313,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":210,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":92,"org.easymock.tests2.UsageTest.wrongArguments":232,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":228,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":429,"org.easymock.samples.ExampleTest.answerVsDelegate":271,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":32,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":480,"org.easymock.tests2.UsageConstraintsTest.testNull":49,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":180,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":1,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":340,"org.easymock.tests2.CaptureTest.testPrimitive":69,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":96,"org.easymock.tests.UsageTest.moreThanOneArgument":416,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":332,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":179,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":468,"org.easymock.tests.UsageTest.argumentsOrdered":422,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":145,"org.easymock.tests.UsageVarargTest.varargIntAccepted":291,"org.easymock.tests.InvocationTest.testEquals":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":392,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":84,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":17,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":257,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":88,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":222,"org.easymock.tests.ReplayStateInvalidUsageTest.times":366,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":0,"org.easymock.tests2.DependencyTest.testClassMocking":207,"org.easymock.tests2.AnswerTest.answer":241,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":393,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":193,"org.easymock.tests2.CaptureTest.testAnd":43,"org.easymock.tests2.UsageTest.strictResetToDefault":230,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":108,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":166,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":305,"org.easymock.tests2.DelegateToTest.testDelegate":202,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":357,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":328,"org.easymock.tests.LimitationsTest.mockFinalMethod":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":406,"org.easymock.tests2.DependencyTest.testClassMockingSupport":208,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":460,"org.easymock.tests2.CaptureTest.testCapture1_2446744":70,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":182,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":191,"org.easymock.tests.UsageThrowableTest.throwError":274,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":360,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":351,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":492,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":470,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":139,"org.easymock.samples.PartialClassMockTest.testGetArea":5,"org.easymock.tests.MockingTest.testInterfaceMocking":477,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":361,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":85,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":126,"org.easymock.tests2.UsageTest.niceToStrict":233,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":312,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":377,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":4,"org.easymock.tests2.MockBuilderTest.testCreateMock":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":134,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":225,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":322,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":167,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":402,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":341,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":427,"org.easymock.tests.UsageOverloadedMethodTest.overloading":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":130,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":485,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":451,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":286,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":54,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":75,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":292,"org.easymock.tests2.EasyMockSupportClassTest.testAll":118,"org.easymock.tests.MockClassControlTest.testEquals":339,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":302,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":330,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":404,"org.easymock.tests2.CaptureTest.testCaptureAll":68,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":192,"org.easymock.tests.MockNameTest.defaultName":471,"org.easymock.tests2.UsageConstraintsTest.testMatches":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":469,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":358,"org.easymock.samples.ExampleTest.voteForRemovals":9,"org.easymock.tests.UsageVarargTest.allKinds":89,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":463,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":405,"org.easymock.samples.BasicClassMockTest.testPrintContent":266,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":280,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":212,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":104,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":201,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":254,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":438,"org.easymock.tests2.UsageConstraintsTest.greaterThan":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":119,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":304,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":187,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":439,"org.easymock.samples.ExampleTest.voteForRemoval":7,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":188,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":195,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":352,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":29,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":414,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":229,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":164,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":151,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":67,"org.easymock.tests2.CaptureTest.testCaptureFirst":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":383,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":165,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":240,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":488,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":447,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":66,"org.easymock.tests2.CaptureTest.testCapture2_2446744":77,"org.easymock.tests2.UsageTest.moreThanOneArgument":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":394,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":25,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":299,"org.easymock.tests.GenericTest.testBridgedEquals":303,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":348,"org.easymock.tests.UsageExpectAndReturnTest.longType":443,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":100,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":331,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":13,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":285,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":466,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":425,"org.easymock.tests.UsageCallCountTest.tooManyCalls":349,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":448,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":227,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":318,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":279,"org.easymock.tests.MockingTest.testNiceClassMocking":481,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":261,"org.easymock.tests.MockingTest.testClassMocking":473,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":18,"org.easymock.tests2.UsageConstraintsTest.testContains":53,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":342,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":149,"org.easymock.tests2.UsageConstraintsTest.testFind":48,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":288,"org.easymock.tests.MockTypeTest.fromEasyMockClass":350,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":407,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":16,"org.easymock.tests.UsageExpectAndReturnTest.object":450,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":170,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":294,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":310,"org.easymock.tests.UsageTest.exactCallCountByLastCall":423,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":282,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":354,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":114,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":456,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":289,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":484,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":248,"org.easymock.tests.MockClassControlTest.testHashCode":338,"org.easymock.tests2.EasyMockSupportTest.testVerify":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":128,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":355,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":482,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":401,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":493,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":190,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":79,"org.easymock.tests.UsageVarargTest.varargCharAccepted":293,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":431,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":399,"org.easymock.tests2.UsageTest.openCallCountByLastCall":234,"org.easymock.tests.DefaultClassInstantiatorTest.object":432,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":2,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":400,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":308,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":129,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":320,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":220,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":247,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":185,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":337,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":319,"org.easymock.tests.CapturesMatcherTest.test":490,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":457,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":137,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":336,"org.easymock.tests2.UsageTest.resumeIfFailure":239,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":31,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":154,"org.easymock.tests2.StubTest.stubWithReturnValue":146,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":109,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":449,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":61,"org.easymock.tests2.SerializationTest.testAllMockedMethod":176,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":36,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":496,"org.easymock.samples.SupportTest.voteForRemovals":6,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":300,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":250,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":325,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":497,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":398,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":242,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":284,"org.easymock.tests.UsageExpectAndThrowTest.object":323,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":59,"org.easymock.tests2.DelegateToTest.testWrongClass":200,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":97,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":98,"org.easymock.tests.UsageStrictMockTest.range":410,"org.easymock.samples.ConstructorCalledMockTest.testTax":143,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":205,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":169,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":260,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":324,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":22,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":115,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":368,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":428,"org.easymock.tests2.CaptureTest.testCaptureNone":74,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":376,"org.easymock.tests.UsageUnorderedTest.message":99,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":491,"org.easymock.tests.UsageVerifyTest.twoReturns":465,"org.easymock.tests.UsageVarargTest.varargByteAccepted":298,"org.easymock.tests2.ThreadingTest.testThreadSafe":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":132,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":346,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":265,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":311,"org.easymock.tests2.CaptureTest.testCapture_2617107":44,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":396,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":95,"org.easymock.tests2.UsageConstraintsTest.any":3,"org.easymock.tests2.StubTest.stub":80,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":365,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":153,"org.easymock.tests.UsageExpectAndThrowTest.longType":316,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":436,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":364,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":82,"org.easymock.tests2.SerializationTest.testClass":28,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":252,"org.easymock.tests.LimitationsTest.mockNativeMethod":372,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":459,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":30,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":219,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":216,"org.easymock.tests2.NameTest.nameForMocksControl":161,"org.easymock.tests2.MockedExceptionTest.testMockedException":148,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":120,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":420,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":478,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":259,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":317,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":177,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":23,"org.easymock.tests.MockingTest.testNicePartialClassMocking":476,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":181,"org.easymock.tests2.CaptureTest.testCaptureLast":73,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":217,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":461,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":141,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":40,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":60,"org.easymock.tests.MockingTest.testTwoMocks":474,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":142,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":440,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":321,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":237,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":62,"org.easymock.samples.ExampleTest.removeNonExistingDocument":273,"org.easymock.tests.UsageStrictMockTest.differentMethods":411,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":224,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":362,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":249,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":434,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":196,"org.easymock.tests2.MockBuilderTest.testCreateMockString":27,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":122,"org.easymock.tests.UsageExpectAndThrowTest.floatType":315,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":117,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":244,"org.easymock.tests.UsageVerifyTest.twoThrows":464,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":211,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":131,"org.easymock.samples.ExampleTest.voteAgainstRemoval":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":388,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":374,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":186,"org.easymock.tests.LimitationsTest.privateConstructor":371,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":106,"org.easymock.tests2.UsageConstraintsTest.testNotNull":14,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":147,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":281,"org.easymock.tests2.UsageTest.defaultResetToNice":236,"org.easymock.samples.ExampleTest.voteAgainstRemovals":270,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":389,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":218,"org.easymock.tests.UsageVarargTest.differentLength":295,"org.easymock.tests2.CallbackTest.callback":83,"org.easymock.tests2.UsageConstraintsTest.equals":173,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":183,"org.easymock.tests.UsageTest.openCallCountByLastCall":419,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":94,"org.easymock.tests.UsageCallCountTest.tooFewCalls":344,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":262,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":430,"org.easymock.tests.UsageThrowableTest.throwCheckedException":278,"org.easymock.tests.MockingTest.testStrictClassMocking":472,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":91,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":264,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":223,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":367,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":263,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":246,"org.easymock.tests2.CompareToTest.testGreateOrEqual":495,"org.easymock.tests.ObjectMethodsTest.testHashCode":309,"org.easymock.tests2.NameTest.nameForNiceMock":160,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":197,"org.easymock.tests2.DependencyTest.testInterfaceMocking":209,"org.easymock.samples.ExampleTest.addDocument":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":138,"org.easymock.tests2.DelegateToTest.testStubDelegate":199,"org.easymock.tests2.AnswerTest.stubAnswer":245,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":102,"org.easymock.tests.UsageVarargTest.varargLongAccepted":297,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":386,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":458,"org.easymock.tests.UsageExpectAndReturnTest.floatType":442,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":113,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":144,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":486,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":256,"org.easymock.tests.UsageThrowableTest.noUpperLimit":275,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":47,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":203,"org.easymock.tests2.SerializationTest.test":175,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":71,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":433,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":441,"org.easymock.tests2.UsageConstraintsTest.testSame":50,"org.easymock.samples.SupportTest.addDocument":269,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":123,"org.easymock.tests.GenericTest.testPackageScope":301,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":255,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":479,"org.easymock.tests2.NameTest.nameForMock":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":452,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":112,"org.easymock.tests2.UsageStrictMockTest.differentMethods":215,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":444,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":327,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":307,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":306,"org.easymock.tests2.MockedExceptionTest.testRealException":150,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":390,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":93,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":369,"org.easymock.tests2.NameTest.nameForStrictMock":159,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":174,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":15,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":34,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":204,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":435,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":42,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":19,"org.easymock.tests2.UsageStrictMockTest.range":214,"org.easymock.tests2.UsageConstraintsTest.lessThan":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":127,"org.easymock.tests2.CaptureTest.testCaptureRightOne":45,"org.easymock.tests2.UsageConstraintsTest.testOr":39,"org.easymock.tests.UsageRangeTest.combination":12,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":178,"org.easymock.tests.UsageTest.wrongArguments":418,"org.easymock.tests2.MockBuilderTest.testWithConstructor":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":124,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":334,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":445,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":378,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":437,"org.easymock.tests.UsageVarargTest.varargShortAccepted":296,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":347,"org.easymock.tests2.UsageConstraintsTest.cmpTo":52,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":380,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":235,"org.easymock.tests2.CaptureTest.testCaptureFromStub":76,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":359,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":20,"org.easymock.tests.UsageTest.unexpectedCallWithArray":417,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":101,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":345,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":111,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":454,"org.easymock.tests2.CaptureTest.testCapture":156,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":409,"org.easymock.tests2.UsageConstraintsTest.constraints":37,"org.easymock.samples.ExampleTest.addAndChangeDocument":10,"org.easymock.tests2.ConstraintsToStringTest.containsToString":489,"org.easymock.tests.UsageStrictMockTest.testVerify":413,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":268,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":408,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":403,"org.easymock.tests2.CompareToTest.testGreateThan":155,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":86,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":446,"org.easymock.tests.LimitationsTest.abstractClass":370,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":487,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":87,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":168,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":290}}]
