[{"position":"org.easymock.internal.RecordState:233","failures":[0,1,2,3,4,5,6,7,7,8,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[0,2,3,5,10,13,16,17,22,24,25,76,77,78,79,80,81,82,83,84,85,86,90,105,106,107,108,109,128,129,130,131,132,133,134,138,139,140,141,148,158,159,160,161,166,168,169,172,173,174,175,176,177,180,181,183,184,185,187,188,189,190,191,198,199,200,201,232,233,234,241,271,272,273,274,275,278,283,284],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[22,24,25,112,113,119,120,142,143,144,145,165,166,168,169,203,204,205,253,254,257,258,305,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[22,24,25,112,323,324,325,326,327,328,166,168,169,203,204,205,329,330,331,332,333,253,305,334,335,322,336],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[22,24,25,112,166,168,169,203,204,205,253,337,338,339,340,305],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[7,7,8,8,10,14,15,76,77,79,80,81,341,82,342,83,84,85,86,343,344,105,345,106,346,107,108,347,109,348,349,125,128,129,130,131,133,134,135,137,138,139,140,141,350,351,352,155,156,157,353,232,233,234,354,355,241,356,277],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:327","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[333],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[151],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[146,148,218],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[24,168,204,205,340],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[0,1,3,358,7,7,8,8,10,16,17,22,24,359,360,361,362,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,59,60,65,66,67,68,70,74,75,357,76,77,78,79,80,81,341,82,342,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,343,106,346,107,108,347,349,110,111,112,114,116,117,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,147,148,149,151,154,363,364,365,366,155,158,159,160,161,162,367,166,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,232,233,234,238,239,240,368,369,370,241,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,356,386,387,388,389,390,391,252,253,392,255,256,259,271,272,273,274,275,278,279,282,283,284,393,394,395,396,397,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,308,309,310,311,312,313,319,320,321,322,336],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[398,399,400,401,402],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1877","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.CompareEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[40,82],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[69,70],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[7,7,8,8,22,28,29,32,33,34,35,41,43,44,46,47,53,54,55,67,158,159,160,161,162,166,206,271,272,273,274,275,278,279,282,283,284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[24,113,119,120,165,168,204,205,333,392,254,257,258,305,336],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:333","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int));\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[6,18,19,28,43,46,55,57,63,64,69,87,88,112,151,152,172,178,184,188,190,220,224,240,381,253,285,291,297,301,303,305],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[86,403,404,405,135,406,407,408,409,410],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:93","sourceCode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,359,360,361,362,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,80,81,341,82,342,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,343,106,346,107,108,110,111,112,114,115,116,117,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,152,153,154,363,364,365,366,155,156,158,159,160,161,162,164,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,203,204,205,206,207,232,233,234,238,239,240,241,243,244,245,246,247,248,252,253,255,256,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,393,394,395,396,397,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,319,320,321],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[56,57,58,59,60,61,62,63,65,66,67,68,69,411],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,359,360,361,362,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,80,81,341,82,342,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,343,105,106,346,107,108,347,109,349,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,152,153,154,363,364,365,366,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,203,204,205,206,207,232,233,234,238,239,240,241,243,244,245,246,372,247,248,252,253,392,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,393,394,395,396,397,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,319,320,321,336],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[1,147,149,151,320],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[412,413,414],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(this.java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[270,279],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"expected","this":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[24,25,168,169,203],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,358,6,7,7,8,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,359,360,361,362,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,80,81,341,82,342,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,343,105,106,346,107,108,347,109,349,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,151,152,153,154,363,364,365,366,155,156,158,159,160,161,162,367,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,232,233,234,238,239,240,368,369,370,241,242,371,243,244,245,246,372,247,248,373,374,375,376,377,378,379,380,381,382,383,384,385,356,386,387,388,389,390,391,252,253,392,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,393,394,395,396,397,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,319,320,321,322,336],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":31,"org.easymock.tests2.UsageTest.argumentsOrdered":120,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":252,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":218,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":115,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":11,"org.easymock.tests2.DelegateToTest.testReturnException":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":193,"org.easymock.tests.MockingTest.testPartialClassMocking":232,"org.easymock.tests.MockClassControlTest.testToString":386,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":227,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":285,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":337,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":17,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":406,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":37,"org.easymock.tests2.UsageTest.wrongArguments":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":278,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":365,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":355,"org.easymock.tests2.UsageConstraintsTest.testNull":33,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":79,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":391,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":101,"org.easymock.tests2.CaptureTest.testPrimitive":59,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":282,"org.easymock.tests.UsageTest.moreThanOneArgument":253,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":304,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":160,"org.easymock.tests.UsageTest.argumentsOrdered":258,"org.easymock.tests.UsageVarargTest.varargIntAccepted":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":223,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":271,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":402,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":343,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":275,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":27,"org.easymock.tests.ReplayStateInvalidUsageTest.times":381,"org.easymock.tests2.AnswerTest.answer":70,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":225,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":362,"org.easymock.tests2.CaptureTest.testAnd":56,"org.easymock.tests2.UsageTest.strictResetToDefault":111,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":96,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":200,"org.easymock.tests2.DelegateToTest.testDelegate":151,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":397,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":329,"org.easymock.tests2.CaptureTest.testCapture1_2446744":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":360,"org.easymock.tests.UsageThrowableTest.throwError":306,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":162,"org.easymock.samples.PartialClassMockTest.testGetArea":10,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":376,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":272,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":236,"org.easymock.tests2.UsageTest.niceToStrict":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":208,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":106,"org.easymock.tests2.MockBuilderTest.testCreateMock":347,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":294,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":324,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":97,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":318,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":242,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":363,"org.easymock.tests.UsageOverloadedMethodTest.overloading":239,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":43,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":183,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":238,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":413,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":42,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":65,"org.easymock.tests.MockClassControlTest.testEquals":390,"org.easymock.tests2.EasyMockSupportClassTest.testAll":138,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":156,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":302,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":350,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":395,"org.easymock.tests2.CaptureTest.testCaptureAll":57,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":361,"org.easymock.tests2.UsageConstraintsTest.testMatches":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":161,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":373,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":270,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":396,"org.easymock.samples.BasicClassMockTest.testPrintContent":15,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":312,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":20,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":410,"org.easymock.tests2.UsageConstraintsTest.greaterThan":46,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":199,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":85,"org.easymock.samples.ExampleTest.voteForRemoval":2,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":88,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":341,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":110,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":277,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":94,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":192,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":146,"org.easymock.tests2.CaptureTest.testCaptureFirst":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":95,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":122,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":179,"org.easymock.tests2.UsageTest.moreThanOneArgument":112,"org.easymock.tests2.CaptureTest.testCapture2_2446744":68,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":226,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":269,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":247,"org.easymock.tests.UsageExpectAndReturnTest.longType":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":393,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":303,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":348,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":51,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":276,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":158,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":250,"org.easymock.tests.UsageCallCountTest.tooManyCalls":248,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":243,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":180,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":290,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":311,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":129,"org.easymock.tests2.UsageConstraintsTest.testContains":41,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":344,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":371,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":125,"org.easymock.tests2.UsageConstraintsTest.testFind":32,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":240,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":163,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":19,"org.easymock.tests.UsageExpectAndReturnTest.object":182,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":82,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":100,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":407,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":264,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":370,"org.easymock.tests.UsageTest.exactCallCountByLastCall":259,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":213,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":314,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":403,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":188,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":260,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":320,"org.easymock.tests.MockClassControlTest.testHashCode":389,"org.easymock.tests2.EasyMockSupportTest.testVerify":104,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":315,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":317,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":319,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":359,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":357,"org.easymock.tests.UsageVarargTest.varargCharAccepted":263,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":231,"org.easymock.tests2.UsageTest.openCallCountByLastCall":116,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":103,"org.easymock.tests.DefaultClassInstantiatorTest.object":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":316,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":368,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":333,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":292,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":309,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":388,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":83,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":291,"org.easymock.tests.CapturesMatcherTest.test":411,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":189,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":249,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":141,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":326,"org.easymock.tests2.UsageTest.resumeIfFailure":121,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":195,"org.easymock.tests2.StubTest.stubWithReturnValue":154,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":404,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":181,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":52,"org.easymock.tests2.SerializationTest.testAllMockedMethod":137,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":224,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":399,"org.easymock.samples.SupportTest.voteForRemovals":13,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":297,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":230,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":71,"org.easymock.tests.UsageExpectAndThrowTest.object":295,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":49,"org.easymock.tests2.DelegateToTest.testWrongClass":149,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":283,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":284,"org.easymock.tests.UsageStrictMockTest.range":168,"org.easymock.samples.ConstructorCalledMockTest.testTax":7,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":99,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":296,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":107,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":257,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":364,"org.easymock.tests2.CaptureTest.testCaptureNone":64,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":237,"org.easymock.tests.UsageUnorderedTest.message":305,"org.easymock.tests.UsageVerifyTest.twoReturns":205,"org.easymock.tests.UsageVarargTest.varargByteAccepted":268,"org.easymock.tests2.ThreadingTest.testThreadSafe":87,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":246,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":14,"org.easymock.tests2.CaptureTest.testCapture_2617107":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":228,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":281,"org.easymock.tests2.UsageConstraintsTest.any":39,"org.easymock.tests2.StubTest.stub":153,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":380,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":229,"org.easymock.tests.UsageExpectAndThrowTest.longType":288,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":412,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":379,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":23,"org.easymock.tests2.SerializationTest.testClass":135,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":127,"org.easymock.tests.LimitationsTest.mockNativeMethod":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":191,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":157,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":352,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":26,"org.easymock.tests2.NameTest.nameForMocksControl":145,"org.easymock.tests2.MockedExceptionTest.testMockedException":124,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":256,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":234,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":289,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":76,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":108,"org.easymock.tests.MockingTest.testNicePartialClassMocking":233,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":81,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":400,"org.easymock.tests2.CaptureTest.testCaptureLast":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":330,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":134,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":36,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":50,"org.easymock.tests.MockingTest.testTwoMocks":353,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":172,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":293,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":119,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":54,"org.easymock.samples.ExampleTest.removeNonExistingDocument":358,"org.easymock.tests.UsageStrictMockTest.differentMethods":169,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":377,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":89,"org.easymock.tests2.ConstraintsToStringTest.andToString":327,"org.easymock.tests2.MockBuilderTest.testCreateMockString":349,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":385,"org.easymock.tests.UsageExpectAndThrowTest.floatType":287,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":45,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":73,"org.easymock.tests.UsageVerifyTest.twoThrows":204,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":140,"org.easymock.samples.ExampleTest.voteAgainstRemoval":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":219,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":235,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":84,"org.easymock.tests2.UsageConstraintsTest.testNotNull":53,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":313,"org.easymock.tests2.UsageTest.defaultResetToNice":118,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":220,"org.easymock.tests.UsageVarargTest.differentLength":265,"org.easymock.tests2.CallbackTest.callback":152,"org.easymock.tests.UsageTest.openCallCountByLastCall":255,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":280,"org.easymock.tests.UsageCallCountTest.tooFewCalls":244,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":366,"org.easymock.tests.UsageThrowableTest.throwCheckedException":310,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":331,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":133,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":207,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":130,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":382,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":132,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":75,"org.easymock.tests.ObjectMethodsTest.testHashCode":369,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":401,"org.easymock.tests2.NameTest.nameForNiceMock":144,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":91,"org.easymock.tests2.DependencyTest.testInterfaceMocking":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":408,"org.easymock.samples.ExampleTest.addDocument":4,"org.easymock.tests2.DelegateToTest.testStubDelegate":148,"org.easymock.tests2.AnswerTest.stubAnswer":74,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":166,"org.easymock.tests.UsageVarargTest.varargLongAccepted":267,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":217,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":190,"org.easymock.tests.UsageExpectAndReturnTest.floatType":174,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":86,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":8,"org.easymock.tests2.ConstraintsToStringTest.orToString":323,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":47,"org.easymock.tests.UsageThrowableTest.noUpperLimit":307,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":29,"org.easymock.tests2.SerializationTest.test":136,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":61,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":414,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":173,"org.easymock.tests2.UsageConstraintsTest.testSame":34,"org.easymock.samples.SupportTest.addDocument":12,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":378,"org.easymock.tests.GenericTest.testPackageScope":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":212,"org.easymock.tests2.NameTest.nameForMock":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":184,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":176,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":299,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":201,"org.easymock.tests2.MockedExceptionTest.testRealException":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":222,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":332,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":398,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":221,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":279,"org.easymock.tests2.NameTest.nameForStrictMock":143,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":18,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":80,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":48,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":338,"org.easymock.tests.ErrorMessageTest.testGetters":339,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":105,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":55,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":409,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":216,"org.easymock.tests2.CaptureTest.testCaptureRightOne":66,"org.easymock.tests2.UsageConstraintsTest.testOr":35,"org.easymock.tests.UsageRangeTest.combination":198,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":77,"org.easymock.tests.UsageTest.wrongArguments":254,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":356,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":209,"org.easymock.tests.UsageVarargTest.varargShortAccepted":266,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":372,"org.easymock.tests2.UsageConstraintsTest.cmpTo":40,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":211,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":117,"org.easymock.tests2.CaptureTest.testCaptureFromStub":67,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":374,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":345,"org.easymock.tests.UsageTest.unexpectedCallWithArray":392,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":165,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":245,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":186,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":167,"org.easymock.tests2.UsageConstraintsTest.constraints":30,"org.easymock.samples.ExampleTest.addAndChangeDocument":6,"org.easymock.tests2.ConstraintsToStringTest.notToString":325,"org.easymock.tests.UsageStrictMockTest.testVerify":171,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":9,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":394,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":273,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":351,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":178,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":274,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":98,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":261,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":340}}]
