[{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[2,3,4,5,5,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,0,86,87,88,89,57,58,1,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,20,125,126,42,43,127,128],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[129,130,34,131],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[2,3,4,132,5,6,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,7,8,10,148,148,149,150,151,152,59,60,153,154,155,156,157,158,159,61,11,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,63,64,177,178,179,180,181,182,183,184,13,14,15,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,66,67,68,69,70,71,205,206,207,208,209,210,211,212,213,214,215,216,72,217,218,219,74,75,76,77,78,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,79,80,240,241,242,243,244,245,246,247,248,249,81,82,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,19,269,83,84,85,0,86,87,88,89,57,58,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,270,271,272,109,273,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,274,275,20,276,21,277,278,279,280,281,282,283,284,22,24,26,27,28,29,30,31,33,285,286,287,288,289,290,291,292,293,294,295,296,297,34,298,299,300,301,125,126,36,37,302,38,39,40,41,42,43,44,45,46,47,48,49,50,303,51,52,304,305,306,307,308,127,128,309,310,311,53,54,55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[85,57],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[312,313],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[2,3,4,132,5,5,6,6,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,7,8,10,149,150,151,152,59,60,314,315,153,154,155,156,159,61,316,317,318,319,320,321,11,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,63,64,177,178,179,180,181,182,183,184,13,14,15,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,66,67,68,69,70,71,205,206,207,208,209,210,211,213,214,215,216,72,16,217,322,218,219,74,75,76,77,78,323,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,79,80,324,244,245,246,247,248,249,81,82,250,251,252,253,325,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,19,269,83,84,85,0,86,87,88,89,57,58,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,270,271,272,109,273,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,274,275,20,276,21,277,278,279,280,281,282,283,284,22,24,26,27,28,29,31,33,285,286,287,288,289,290,291,292,293,294,295,296,297,34,298,299,300,301,125,126,36,37,302,38,39,40,42,43,44,45,46,47,48,49,50,303,51,52,304,305,306,326,327,328,329,307,308,127,128,309,310,311,53,54,55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[2,3,4,132,5,6,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,7,8,10,149,150,151,152,59,60,153,154,155,156,157,158,159,61,11,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,63,64,177,178,179,180,181,182,183,184,13,14,15,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,66,67,68,69,70,71,205,206,207,208,209,210,211,212,213,214,215,216,72,217,218,219,74,75,76,77,78,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,79,80,240,241,242,243,244,245,246,247,248,249,81,82,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,19,269,83,84,85,0,86,87,88,89,57,58,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,270,271,109,273,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,274,275,20,276,21,277,278,279,280,281,282,283,284,22,24,26,27,28,29,30,31,33,285,286,287,288,289,290,291,292,293,294,295,296,297,34,298,299,300,301,125,126,36,37,302,38,39,40,41,42,43,44,45,46,47,48,49,50,303,51,52,304,305,306,307,308,127,128,309,310,311,53,54,55,56],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:58","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalArgumentException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:827","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:613","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[93],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[46,331,327],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[332],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[118,120],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[97,333],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[97,333],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":295,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":168,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":152,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":290,"org.easymock.tests2.StubTest.stubWithReturnValue":305,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":129,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":194,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":103,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":132,"org.easymock.tests2.SerializationTest.testAllMockedMethod":21,"org.easymock.tests2.DelegateToTest.testReturnException":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":150,"org.easymock.tests.MockingTest.testPartialClassMocking":13,"org.easymock.samples.SupportTest.voteForRemovals":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":331,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":220,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":54,"org.easymock.tests.UsageExpectAndThrowTest.object":230,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":275,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":100,"org.easymock.tests2.DelegateToTest.testWrongClass":279,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":79,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":80,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":58,"org.easymock.tests2.UsageTest.wrongArguments":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":74,"org.easymock.tests.UsageStrictMockTest.range":251,"org.easymock.samples.ConstructorCalledMockTest.testTax":5,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":246,"org.easymock.samples.ExampleTest.answerVsDelegate":137,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":261,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":18,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":47,"org.easymock.tests2.UsageConstraintsTest.testNull":87,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":231,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":38,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":263,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":28,"org.easymock.tests2.CaptureTest.testPrimitive":114,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":78,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":239,"org.easymock.tests.UsageTest.moreThanOneArgument":169,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":174,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":162,"org.easymock.tests2.CaptureTest.testCaptureNone":119,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":332,"org.easymock.tests.UsageUnorderedTest.message":61,"org.easymock.tests.UsageVerifyTest.twoReturns":206,"org.easymock.tests.UsageVarargTest.varargByteAccepted":215,"org.easymock.tests2.ThreadingTest.testThreadSafe":270,"org.easymock.tests.UsageTest.argumentsOrdered":175,"org.easymock.tests.UsageVarargTest.varargIntAccepted":209,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":156,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":66,"org.easymock.tests2.CaptureTest.testCapture_2617107":113,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":77,"org.easymock.tests2.UsageConstraintsTest.any":90,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":27,"org.easymock.tests2.StubTest.stub":304,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":70,"org.easymock.tests.UsageExpectAndThrowTest.longType":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":151,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":319,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":128,"org.easymock.tests2.SerializationTest.testClass":20,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":108,"org.easymock.tests.LimitationsTest.mockNativeMethod":10,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":110,"org.easymock.tests2.AnswerTest.answer":298,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":204,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":9,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":1,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":284,"org.easymock.tests2.CaptureTest.testAnd":111,"org.easymock.tests2.UsageTest.strictResetToDefault":286,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":311,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":43,"org.easymock.tests2.NameTest.nameForMocksControl":329,"org.easymock.tests2.MockedExceptionTest.testMockedException":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":161,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":258,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":218,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":173,"org.easymock.tests2.DelegateToTest.testDelegate":280,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":224,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":15,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":36,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":29,"org.easymock.tests.MockingTest.testNicePartialClassMocking":14,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":235,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":40,"org.easymock.tests2.CaptureTest.testCaptureLast":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":323,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":57,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":52,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":147,"org.easymock.tests.MockingTest.testTwoMocks":12,"org.easymock.tests2.CaptureTest.testCapture1_2446744":115,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":185,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":233,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":282,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":228,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":294,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":105,"org.easymock.tests.UsageThrowableTest.throwError":177,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":318,"org.easymock.tests.UsageStrictMockTest.differentMethods":252,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":272,"org.easymock.tests2.MockBuilderTest.testCreateMockString":33,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":73,"org.easymock.tests.UsageExpectAndThrowTest.floatType":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":164,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":96,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":299,"org.easymock.tests.UsageVerifyTest.twoThrows":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":55,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":317,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":67,"org.easymock.samples.ExampleTest.voteAgainstRemoval":139,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":330,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":45,"org.easymock.tests2.UsageTest.niceToStrict":289,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":221,"org.easymock.tests2.UsageConstraintsTest.testNotNull":104,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":184,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":26,"org.easymock.tests2.UsageTest.defaultResetToNice":293,"org.easymock.tests2.MockBuilderTest.testCreateMock":30,"org.easymock.samples.ExampleTest.voteAgainstRemovals":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":200,"org.easymock.tests.UsageVarargTest.differentLength":212,"org.easymock.tests2.CallbackTest.callback":306,"org.easymock.tests.UsageTest.openCallCountByLastCall":172,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":229,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":259,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":83,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":76,"org.easymock.tests.UsageCallCountTest.tooFewCalls":154,"org.easymock.tests.UsageOverloadedMethodTest.overloading":166,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":242,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":196,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":50,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":165,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":93,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":120,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":247,"org.easymock.tests.UsageThrowableTest.throwCheckedException":181,"org.easymock.tests2.EasyMockSupportClassTest.testAll":53,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":237,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":283,"org.easymock.tests2.CaptureTest.testCaptureAll":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":145,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":64,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":51,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":49,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":320,"org.easymock.tests2.UsageConstraintsTest.testMatches":95,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":303,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":301,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":163,"org.easymock.samples.ExampleTest.voteForRemovals":141,"org.easymock.tests2.NameTest.nameForNiceMock":328,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":273,"org.easymock.tests.UsageVarargTest.allKinds":72,"org.easymock.tests2.DependencyTest.testInterfaceMocking":274,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":71,"org.easymock.samples.BasicClassMockTest.testPrintContent":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":146,"org.easymock.samples.ExampleTest.addDocument":140,"org.easymock.tests2.DelegateToTest.testStubDelegate":278,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":183,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":307,"org.easymock.tests2.AnswerTest.stubAnswer":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":60,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":82,"org.easymock.tests2.UsageConstraintsTest.greaterThan":97,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":322,"org.easymock.tests.UsageVarargTest.varargLongAccepted":214,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":46,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":253,"org.easymock.samples.ExampleTest.voteForRemoval":138,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":271,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":203,"org.easymock.tests.UsageExpectAndReturnTest.floatType":187,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":34,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":41,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":6,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":98,"org.easymock.tests.UsageThrowableTest.noUpperLimit":178,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":285,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":84,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":11,"org.easymock.tests2.SerializationTest.test":276,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":116,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":256,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":179,"org.easymock.tests2.UsageConstraintsTest.testSame":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":186,"org.easymock.samples.SupportTest.addDocument":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":149,"org.easymock.tests2.CaptureTest.testCaptureFirst":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":257,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":297,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":192,"org.easymock.tests.GenericTest.testPackageScope":7,"org.easymock.tests2.UsageTest.moreThanOneArgument":287,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":109,"org.easymock.tests2.CaptureTest.testCapture2_2446744":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":313,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":31,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":216,"org.easymock.tests2.NameTest.nameForMock":326,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":158,"org.easymock.tests.UsageExpectAndReturnTest.longType":188,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":197,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":32,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":102,"org.easymock.tests2.UsageStrictMockTest.differentMethods":310,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":160,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":189,"org.easymock.tests.UsageCallCountTest.tooManyCalls":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":234,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":219,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":153,"org.easymock.tests2.MockedExceptionTest.testRealException":269,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":193,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":130,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":225,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":127,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":321,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":182,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":48,"org.easymock.tests2.NameTest.nameForStrictMock":327,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":315,"org.easymock.tests2.UsageConstraintsTest.testContains":92,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":23,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":19,"org.easymock.tests2.UsageConstraintsTest.testFind":86,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":167,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":125,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":39,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":248,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":126,"org.easymock.tests.UsageExpectAndReturnTest.object":195,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":42,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":24,"org.easymock.tests2.UsageStrictMockTest.range":309,"org.easymock.tests2.UsageConstraintsTest.lessThan":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":262,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":211,"org.easymock.tests.UsageTest.exactCallCountByLastCall":176,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":63,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":255,"org.easymock.tests2.CaptureTest.testCaptureRightOne":121,"org.easymock.tests2.UsageConstraintsTest.testOr":89,"org.easymock.tests.UsageRangeTest.combination":217,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":131,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":207,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":37,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":241,"org.easymock.tests.UsageTest.wrongArguments":171,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":16,"org.easymock.tests2.EasyMockSupportTest.testVerify":266,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":198,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":312,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":240,"org.easymock.tests.UsageVarargTest.varargShortAccepted":213,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":281,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":157,"org.easymock.tests2.UsageConstraintsTest.cmpTo":91,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":107,"org.easymock.tests.UsageVarargTest.varargCharAccepted":210,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":308,"org.easymock.tests2.UsageTest.openCallCountByLastCall":291,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":292,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":265,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":65,"org.easymock.tests2.CaptureTest.testCaptureFromStub":122,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":316,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":25,"org.easymock.tests.UsageTest.unexpectedCallWithArray":170,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":227,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":81,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":180,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":155,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":199,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":250,"org.easymock.tests2.UsageConstraintsTest.constraints":85,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":44,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":226,"org.easymock.samples.ExampleTest.addAndChangeDocument":142,"org.easymock.tests.CapturesMatcherTest.test":148,"org.easymock.tests.UsageStrictMockTest.testVerify":325,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":202,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":133,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":56,"org.easymock.tests2.CompareToTest.testGreateThan":333,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":144,"org.easymock.tests2.UsageTest.resumeIfFailure":296,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":68,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":35,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":17,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":191,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":69,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":260,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":208}}]
