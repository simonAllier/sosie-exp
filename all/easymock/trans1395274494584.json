[{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,0,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,41,136,42,137,43,138,139,44,140,141,45,142,143,144,145,146,147,148,46,149,47,48,150,151,152,153,154,155,156,157,158,159,160,1,2,3,4,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,5,190,191,6,7,8,9,10,192,193,194,195,196,197,198,199,200,201,202,203,204,205,11,12,13,14,15,16,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,49,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,17,249,250,50,51,251,52,53,252,54,253,254,255,256,257,18,258,259,260,261,262,263,264,265,266,267,19,268,269,270,271,20,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,292,293,294,295,296],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[297,298,299],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[84,300,301,277,290],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:64","sourceCode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], int, int)","type":"CtInvocationImpl"},"failures":[55,60,302,195,196,197,198,199,200,201,202,203,204,205],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[77,78,79,303],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[304],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[305,306,307,308,309,310,311,312,313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[314,315],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[317,318,319],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[123,124,130,131,320,321,322,323,324,325,326,327,328,329,330,46,47,48,192,331,332,333,334,335,336,220,49,221,224,225,50,51,52,53,267,19,268,270,337,272,273,338,274],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[76],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[86,103,106,339],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[47,48,52,53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[0,121,128,1,2,3,4,5,191,6,7,8,9,10,11,12,13,14,15,16,219,223,340,341,342,17,18,19,20,343,344,345,289,290,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:105","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:102","sourceCode":"return org.easymock.internal.MockInvocationHandler","type":"CtReturnImpl"},"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,0,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,346,347,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,41,136,42,137,43,138,139,348,44,140,141,45,349,142,143,144,145,146,147,148,46,149,47,48,150,151,152,153,154,155,156,157,158,159,160,1,2,3,4,161,162,350,351,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,5,190,191,6,7,8,9,10,192,352,353,354,355,356,357,193,194,195,196,197,198,199,200,201,202,203,204,205,11,12,13,14,15,16,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,49,221,222,223,224,225,226,227,228,229,230,231,358,359,232,233,360,234,361,362,363,235,236,237,238,239,240,241,242,243,244,245,246,247,248,17,249,250,50,51,251,52,53,252,54,253,254,255,256,257,18,258,259,260,261,262,263,264,265,266,267,19,268,269,270,271,20,272,273,274,364,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,292,293,294,295,296],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[99],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[42,43,46,47,48,50,51,52,53,54],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[63,64,65,66,73,74,88,89,90,91,92,93,94,95,365,96,105,106,110,111],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[341,342,344,345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[366],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":89,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":219,"org.easymock.tests2.UsageTest.argumentsOrdered":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":14,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":126,"org.easymock.tests2.StubTest.stubWithReturnValue":0,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":109,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":179,"org.easymock.tests2.SerializationTest.testAllMockedMethod":79,"org.easymock.tests2.DelegateToTest.testReturnException":80,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":12,"org.easymock.tests.MockingTest.testPartialClassMocking":232,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":328,"org.easymock.samples.SupportTest.voteForRemovals":302,"org.easymock.tests.MockClassControlTest.testToString":208,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":33,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":303,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":21,"org.easymock.tests.UsageExpectAndThrowTest.object":31,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":106,"org.easymock.tests2.DelegateToTest.testWrongClass":82,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":292,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":293,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":287,"org.easymock.tests2.UsageTest.wrongArguments":124,"org.easymock.tests.UsageStrictMockTest.range":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":241,"org.easymock.samples.ExampleTest.answerVsDelegate":56,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":355,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":362,"org.easymock.tests2.UsageConstraintsTest.testNull":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":32,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":42,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":213,"org.easymock.tests2.CaptureTest.testPrimitive":66,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":291,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":285,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":224,"org.easymock.tests.UsageTest.moreThanOneArgument":220,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":40,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":240,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":136,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":216,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":313,"org.easymock.tests2.CaptureTest.testCaptureNone":71,"org.easymock.tests.UsageUnorderedTest.message":192,"org.easymock.tests.UsageVerifyTest.twoReturns":268,"org.easymock.tests.UsageVarargTest.varargByteAccepted":203,"org.easymock.tests2.ThreadingTest.testThreadSafe":142,"org.easymock.tests.UsageTest.argumentsOrdered":225,"org.easymock.tests.UsageVarargTest.varargIntAccepted":197,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":263,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":243,"org.easymock.tests2.CaptureTest.testCapture_2617107":65,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":330,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":161,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":364,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":290,"org.easymock.tests2.UsageConstraintsTest.any":96,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":164,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":282,"org.easymock.tests2.StubTest.stub":84,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":13,"org.easymock.tests.UsageExpectAndThrowTest.longType":24,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":324,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":281,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":149,"org.easymock.tests2.SerializationTest.testClass":77,"org.easymock.tests.ReplayStateInvalidUsageTest.times":283,"org.easymock.tests.LimitationsTest.mockNativeMethod":194,"org.easymock.tests2.AnswerTest.answer":117,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":189,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":365,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":160,"org.easymock.tests2.CaptureTest.testAnd":63,"org.easymock.tests2.UsageTest.strictResetToDefault":122,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":44,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":150,"org.easymock.tests2.NameTest.nameForMocksControl":155,"org.easymock.tests2.MockedExceptionTest.testMockedException":2,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":215,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":237,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":223,"org.easymock.tests2.DelegateToTest.testDelegate":83,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":234,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":25,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":135,"org.easymock.tests.MockingTest.testNicePartialClassMocking":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":36,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":43,"org.easymock.tests2.CaptureTest.testCaptureLast":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":15,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":274,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":94,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":231,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":107,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":338,"org.easymock.tests2.CaptureTest.testCapture1_2446744":67,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":158,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":130,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":111,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":277,"org.easymock.tests.UsageThrowableTest.throwError":5,"org.easymock.samples.ExampleTest.removeNonExistingDocument":61,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":279,"org.easymock.tests.UsageStrictMockTest.differentMethods":53,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":354,"org.easymock.tests2.ConstraintsToStringTest.andToString":327,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":144,"org.easymock.tests2.MockBuilderTest.testCreateMockString":167,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":218,"org.easymock.tests.UsageExpectAndThrowTest.floatType":23,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":102,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":118,"org.easymock.tests.UsageVerifyTest.twoThrows":19,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":270,"org.easymock.tests.MockingTest.testInterfaceMocking":360,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":244,"org.easymock.samples.ExampleTest.voteAgainstRemoval":58,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":312,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":306,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":22,"org.easymock.tests2.UsageTest.niceToStrict":125,"org.easymock.tests2.UsageConstraintsTest.testNotNull":110,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":1,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":10,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":299,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":163,"org.easymock.tests2.UsageTest.defaultResetToNice":129,"org.easymock.tests2.MockBuilderTest.testCreateMock":165,"org.easymock.samples.ExampleTest.voteAgainstRemovals":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":185,"org.easymock.tests.UsageVarargTest.differentLength":200,"org.easymock.tests2.CallbackTest.callback":156,"org.easymock.tests.UsageTest.openCallCountByLastCall":222,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":321,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":30,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":86,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":258,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":289,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":239,"org.easymock.tests.UsageCallCountTest.tooFewCalls":261,"org.easymock.tests.UsageOverloadedMethodTest.overloading":257,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":20,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":100,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":256,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":181,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":99,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":72,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":242,"org.easymock.tests.UsageThrowableTest.throwCheckedException":7,"org.easymock.tests.MockClassControlTest.testEquals":212,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":254,"org.easymock.tests.MockingTest.testStrictClassMocking":358,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":333,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":229,"org.easymock.tests2.CaptureTest.testCaptureAll":64,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":159,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":17,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":115,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":114,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":284,"org.easymock.tests2.UsageConstraintsTest.testMatches":101,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":120,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":217,"org.easymock.tests.ObjectMethodsTest.testHashCode":295,"org.easymock.samples.ExampleTest.voteForRemovals":60,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":146,"org.easymock.tests2.NameTest.nameForNiceMock":154,"org.easymock.tests.UsageVarargTest.allKinds":205,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":267,"org.easymock.tests2.DependencyTest.testInterfaceMocking":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":230,"org.easymock.samples.ExampleTest.addDocument":59,"org.easymock.tests2.DelegateToTest.testStubDelegate":81,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":9,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":147,"org.easymock.tests2.AnswerTest.stubAnswer":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":16,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":51,"org.easymock.tests2.UsageConstraintsTest.greaterThan":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":236,"org.easymock.tests.UsageVarargTest.varargLongAccepted":202,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":45,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":305,"org.easymock.samples.ExampleTest.voteForRemoval":57,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":349,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":143,"org.easymock.tests.UsageExpectAndReturnTest.floatType":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":188,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":356,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":319,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":138,"org.easymock.tests2.ConstraintsToStringTest.orToString":320,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":104,"org.easymock.tests.UsageThrowableTest.noUpperLimit":190,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":255,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":87,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":121,"org.easymock.tests2.SerializationTest.test":78,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":366,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":304,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":314,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":191,"org.easymock.tests2.UsageConstraintsTest.testSame":92,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":11,"org.easymock.tests2.CaptureTest.testCaptureFirst":76,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":133,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":280,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":273,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":177,"org.easymock.tests.GenericTest.testPackageScope":253,"org.easymock.tests2.CaptureTest.testCapture2_2446744":75,"org.easymock.tests2.UsageTest.moreThanOneArgument":123,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":145,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":166,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":361,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":204,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":265,"org.easymock.tests2.NameTest.nameForMock":152,"org.easymock.tests.UsageExpectAndReturnTest.longType":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":227,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":39,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":182,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":108,"org.easymock.tests2.UsageStrictMockTest.differentMethods":48,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":37,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":214,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":348,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":174,"org.easymock.tests.UsageCallCountTest.tooManyCalls":266,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":332,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":35,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":238,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":260,"org.easymock.tests2.MockedExceptionTest.testRealException":4,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":357,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":178,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":347,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":334,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":26,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":288,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":286,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":8,"org.easymock.tests.MockingTest.testNiceClassMocking":363,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":113,"org.easymock.tests.MockingTest.testClassMocking":359,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":259,"org.easymock.tests2.UsageConstraintsTest.testContains":98,"org.easymock.tests2.NameTest.nameForStrictMock":153,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":3,"org.easymock.tests2.UsageConstraintsTest.testFind":90,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":18,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":351,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":298,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":168,"org.easymock.tests.MockTypeTest.fromEasyMockClass":353,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":137,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":249,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":169,"org.easymock.tests.UsageExpectAndReturnTest.object":180,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":346,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":105,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":139,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":162,"org.easymock.tests2.UsageStrictMockTest.range":47,"org.easymock.tests2.UsageConstraintsTest.lessThan":112,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":199,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":296,"org.easymock.tests.UsageTest.exactCallCountByLastCall":226,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":248,"org.easymock.tests2.CaptureTest.testCaptureRightOne":73,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":335,"org.easymock.tests2.UsageConstraintsTest.testOr":93,"org.easymock.tests.UsageRangeTest.combination":235,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":41,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":186,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":271,"org.easymock.tests.UsageTest.wrongArguments":221,"org.easymock.tests.MockClassControlTest.testHashCode":211,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":207,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":183,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":344,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":315,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":269,"org.easymock.tests.UsageVarargTest.varargShortAccepted":201,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":264,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":157,"org.easymock.tests2.UsageConstraintsTest.cmpTo":97,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":134,"org.easymock.tests.UsageVarargTest.varargCharAccepted":198,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":309,"org.easymock.tests2.UsageTest.openCallCountByLastCall":127,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":128,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":297,"org.easymock.tests.DefaultClassInstantiatorTest.object":193,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":343,"org.easymock.tests2.CaptureTest.testCaptureFromStub":74,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":276,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":350,"org.easymock.tests.UsageTest.unexpectedCallWithArray":49,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":294,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":336,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":28,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":50,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":262,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":184,"org.easymock.tests2.CaptureTest.testCapture":316,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":251,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":210,"org.easymock.tests2.UsageConstraintsTest.constraints":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":140,"org.easymock.samples.ExampleTest.addAndChangeDocument":62,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":27,"org.easymock.tests2.ConstraintsToStringTest.notToString":322,"org.easymock.tests.UsageStrictMockTest.testVerify":54,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":187,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":340,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":325,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":250,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":209,"org.easymock.tests2.CompareToTest.testGreateThan":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":228,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":69,"org.easymock.tests2.UsageTest.resumeIfFailure":132,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":245,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":352,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":176,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":246,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":196,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":317}}]
