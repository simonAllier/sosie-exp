[{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:508","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:172","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[13,14,15,16,17,18,19,20,21,22],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[23,24,25],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[26,27,28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Contains:40","failures":[30],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[4],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"substring","key":"substring"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[31],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[14,32,33,34],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksBehavior:200","failures":[36],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[37,38,39,40,41,42],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[43,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[45,46,47,48],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[49],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,64,65,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,0,1,86,87,88,89,90,91,92,93,94,95,31,96,2,3,97,98,99,100,101,102,103,104,105,106,107,108,109,36,110,111,46,112,113,23,114,115,116,117,24,118,119,120,121,122,123,124,13,47,4,25,48,125,126,32,127,128,129,130,131,132,33,34,133,134,135,136,137,15,16,138,17,18,19,20,21,139,140,141,142,22,143,144,145,146,147,148,149,150,151,152,153,154,155,26,27,28,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,5,177,178,179,180,6,181,182,183,184,185,186,187,188,189,190,191,192,193,7,194,195,196,197,198,199,200,8,9,201,202,203,204,205,206,10,11,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.Range:52","failures":[52,84,0,1,92,94,95,2,3,98,99,101,115,116,119,120,32,127,129,130,131,132,136,156,5,193,7,194,195,198,199,8,9,203,204,206,10,11,207,208,209,12,44,257,266,267,269,301,303,310],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[22,143],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[311,46,113,47,126],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[26,27,28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":23,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":203,"org.easymock.tests2.UsageTest.argumentsOrdered":99,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":214,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":96,"org.easymock.tests2.StubTest.stubWithReturnValue":103,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":244,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":50,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":126,"org.easymock.tests2.SerializationTest.testAllMockedMethod":28,"org.easymock.tests2.DelegateToTest.testReturnException":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":212,"org.easymock.tests.MockingTest.testPartialClassMocking":295,"org.easymock.samples.SupportTest.voteForRemovals":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":287,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":275,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":49,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":105,"org.easymock.tests.UsageExpectAndThrowTest.object":285,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":73,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":48,"org.easymock.tests2.DelegateToTest.testWrongClass":135,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":191,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":192,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":118,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":225,"org.easymock.tests2.UsageTest.wrongArguments":95,"org.easymock.samples.ConstructorCalledMockTest.testTax":64,"org.easymock.tests.UsageStrictMockTest.range":8,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":179,"org.easymock.samples.ExampleTest.answerVsDelegate":52,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":150,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":74,"org.easymock.tests2.UsageConstraintsTest.testNull":115,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":286,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":170,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":152,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":163,"org.easymock.tests2.CaptureTest.testPrimitive":138,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":294,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":207,"org.easymock.tests.UsageTest.moreThanOneArgument":204,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":169,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":307,"org.easymock.tests2.CaptureTest.testCaptureNone":21,"org.easymock.tests.UsageUnorderedTest.message":193,"org.easymock.tests.UsageVerifyTest.twoReturns":195,"org.easymock.tests.UsageVarargTest.varargByteAccepted":264,"org.easymock.tests2.ThreadingTest.testThreadSafe":108,"org.easymock.tests.UsageTest.argumentsOrdered":208,"org.easymock.tests.UsageVarargTest.varargIntAccepted":259,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":303,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":230,"org.easymock.tests2.CaptureTest.testCapture_2617107":16,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":228,"org.easymock.tests2.UsageConstraintsTest.any":119,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":162,"org.easymock.tests2.StubTest.stub":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":234,"org.easymock.tests.UsageExpectAndThrowTest.longType":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":213,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":221,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":85,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":81,"org.easymock.tests2.SerializationTest.testClass":26,"org.easymock.tests.LimitationsTest.mockNativeMethod":210,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":71,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":254,"org.easymock.tests2.AnswerTest.answer":156,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":90,"org.easymock.tests2.CaptureTest.testAnd":137,"org.easymock.tests2.UsageTest.strictResetToDefault":93,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":86,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":174,"org.easymock.tests2.NameTest.nameForMocksControl":132,"org.easymock.tests2.MockedExceptionTest.testMockedException":67,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":147,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":182,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":11,"org.easymock.tests2.DelegateToTest.testDelegate":136,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":297,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":279,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":167,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":164,"org.easymock.tests.MockingTest.testNicePartialClassMocking":296,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":290,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":172,"org.easymock.tests2.CaptureTest.testCaptureLast":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":215,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":80,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":24,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":190,"org.easymock.tests2.CaptureTest.testCapture1_2446744":17,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":235,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":283,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":88,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":98,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":127,"org.easymock.tests.UsageThrowableTest.throwError":267,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":220,"org.easymock.tests.UsageStrictMockTest.differentMethods":9,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":39,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":36,"org.easymock.tests2.MockBuilderTest.testCreateMockString":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":309,"org.easymock.tests.UsageExpectAndThrowTest.floatType":277,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":13,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":157,"org.easymock.tests.UsageVerifyTest.twoThrows":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":106,"org.easymock.samples.PartialClassMockTest.testGetArea":63,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":219,"org.easymock.tests2.CompareToTest.testLessOrEqual":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":231,"org.easymock.samples.ExampleTest.voteAgainstRemoval":54,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":175,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":276,"org.easymock.tests2.UsageTest.niceToStrict":31,"org.easymock.tests2.UsageConstraintsTest.testNotNull":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":274,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":66,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":161,"org.easymock.tests2.UsageTest.defaultResetToNice":97,"org.easymock.samples.ExampleTest.voteAgainstRemovals":51,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":250,"org.easymock.tests2.CallbackTest.callback":91,"org.easymock.tests.UsageTest.openCallCountByLastCall":10,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":284,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":148,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":46,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":298,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":227,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":177,"org.easymock.tests.UsageCallCountTest.tooFewCalls":301,"org.easymock.tests.UsageOverloadedMethodTest.overloading":176,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":123,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":246,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":77,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":122,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":139,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":180,"org.easymock.tests.UsageThrowableTest.throwCheckedException":271,"org.easymock.tests2.EasyMockSupportClassTest.testAll":104,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":185,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":292,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":89,"org.easymock.tests2.CaptureTest.testCaptureAll":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":188,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":256,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":79,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":76,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":222,"org.easymock.tests2.UsageConstraintsTest.testMatches":124,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":78,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":308,"org.easymock.samples.ExampleTest.voteForRemovals":56,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":111,"org.easymock.tests2.NameTest.nameForNiceMock":131,"org.easymock.tests.UsageVarargTest.allKinds":266,"org.easymock.tests2.DependencyTest.testInterfaceMocking":72,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":7,"org.easymock.samples.BasicClassMockTest.testPrintContent":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":189,"org.easymock.samples.ExampleTest.addDocument":55,"org.easymock.tests2.DelegateToTest.testStubDelegate":134,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":273,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":82,"org.easymock.tests2.AnswerTest.stubAnswer":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":216,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":199,"org.easymock.tests2.UsageConstraintsTest.greaterThan":47,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":181,"org.easymock.tests.UsageVarargTest.varargLongAccepted":263,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":201,"org.easymock.samples.ExampleTest.voteForRemoval":53,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":42,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":253,"org.easymock.tests.UsageExpectAndReturnTest.floatType":237,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":70,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":65,"org.easymock.tests.UsageThrowableTest.noUpperLimit":268,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":4,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":217,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":92,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":112,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":18,"org.easymock.tests2.SerializationTest.test":27,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":38,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":145,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":269,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":236,"org.easymock.tests2.UsageConstraintsTest.testSame":116,"org.easymock.samples.SupportTest.addDocument":61,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":211,"org.easymock.tests2.CaptureTest.testCaptureFirst":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":146,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":101,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":242,"org.easymock.tests.GenericTest.testPackageScope":184,"org.easymock.tests2.UsageTest.moreThanOneArgument":94,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":110,"org.easymock.tests2.CaptureTest.testCapture2_2446744":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":43,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":165,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":265,"org.easymock.tests2.NameTest.nameForMock":129,"org.easymock.tests.UsageExpectAndReturnTest.longType":238,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":186,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":293,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":247,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":14,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":291,"org.easymock.tests2.UsageStrictMockTest.differentMethods":1,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":305,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":239,"org.easymock.tests.UsageCallCountTest.tooManyCalls":310,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":289,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":183,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":300,"org.easymock.tests2.MockedExceptionTest.testRealException":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":243,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":280,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":84,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":272,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":226,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":223,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":75,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":299,"org.easymock.tests2.UsageConstraintsTest.testContains":121,"org.easymock.tests2.NameTest.nameForStrictMock":130,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":68,"org.easymock.tests2.UsageConstraintsTest.testFind":114,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":5,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":33,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":171,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":196,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":34,"org.easymock.tests.UsageExpectAndReturnTest.object":245,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":25,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":173,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":128,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":151,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":261,"org.easymock.tests.UsageTest.exactCallCountByLastCall":209,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":255,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":144,"org.easymock.tests2.CaptureTest.testCaptureRightOne":140,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":12,"org.easymock.tests2.UsageConstraintsTest.testOr":117,"org.easymock.tests.UsageRangeTest.combination":6,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":257,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":251,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":168,"org.easymock.tests.UsageTest.wrongArguments":206,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":304,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":240,"org.easymock.tests2.EasyMockSupportTest.testVerify":155,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":248,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":44,"org.easymock.tests.UsageVarargTest.varargShortAccepted":262,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":41,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":87,"org.easymock.tests2.UsageConstraintsTest.cmpTo":120,"org.easymock.tests.UsageVarargTest.varargCharAccepted":260,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":35,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":83,"org.easymock.tests2.UsageTest.openCallCountByLastCall":2,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":3,"org.easymock.tests.DefaultClassInstantiatorTest.object":37,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":154,"org.easymock.tests2.CaptureTest.testCaptureFromStub":141,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":218,"org.easymock.tests.UsageTest.unexpectedCallWithArray":205,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":282,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":270,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":198,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":302,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":249,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":200,"org.easymock.tests2.UsageConstraintsTest.constraints":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":281,"org.easymock.samples.ExampleTest.addAndChangeDocument":57,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":252,"org.easymock.tests.UsageStrictMockTest.testVerify":202,"org.easymock.tests2.ConstraintsToStringTest.containsToString":30,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":58,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":107,"org.easymock.tests2.CompareToTest.testGreateThan":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":187,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":19,"org.easymock.tests2.UsageTest.resumeIfFailure":100,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":232,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":241,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":233,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":224,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":149}}]
