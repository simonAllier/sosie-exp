[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[0,1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"failures":[9],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[22,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"finalizeMethod"}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[25],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[26,27,28,29,30,31,32,33,3,4,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,10,56,57,11,12,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,5,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,25,169,170,171,172,173,174,13,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,22,23,24,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,9,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,14,278,279,15,16,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,17,18,19,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,20,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,21,513],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[169,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[312,328,330,339,340,342,353,354,355],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[85],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[514,515],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[319,323,324,333,338,386,434],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[395],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[253,334,341,388,440],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[51,53,74,90,93,102,104,110,111,116,142,144,145,13,251,252,281,287,293,297,299,331,358,20,471,477,483,487,489,491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[173,179,18,409,413,494],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[3,3,4,4,35,39,40,124,125,127,128,129,130,132,134,135,136,137,140,161,516,162,163,165,166,167,168,170,171,517,172,187,201,202,203,204,207,208,22,24,213,216,226,232,518,259,260,261,345,346,347,349,365,370,375,399,436],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[335],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[10,57,11,13,175,181,182,519,520,521,522,523,524,525,14,279,15,17,18,19,316,317,20,411,414,415,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[57,11,178,179,279,15,17,358,412,413],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"transplant":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[35,130,161,516,162,163,165,166,167,168,170,171,517,172,22,261,365,370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[137],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[125,134,137,203,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":77,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":409,"org.easymock.tests2.UsageTest.argumentsOrdered":182,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":158,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":329,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":177,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":36,"org.easymock.tests2.DelegateToTest.testReturnException":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":302,"org.easymock.tests.MockingTest.testPartialClassMocking":346,"org.easymock.tests.MockClassControlTest.testToString":400,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":241,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":312,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":471,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":216,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":44,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":465,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":437,"org.easymock.tests2.UsageTest.wrongArguments":175,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":73,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":257,"org.easymock.samples.ExampleTest.answerVsDelegate":27,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":370,"org.easymock.tests2.UsageConstraintsTest.testNull":80,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":351,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":127,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":405,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":157,"org.easymock.tests2.CaptureTest.testPrimitive":106,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":441,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":490,"org.easymock.tests.UsageTest.moreThanOneArgument":20,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":126,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":265,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":500,"org.easymock.tests.UsageTest.argumentsOrdered":415,"org.easymock.tests.UsageVarargTest.varargIntAccepted":419,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":524,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":429,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":161,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":2,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":199,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":433,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":449,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":521,"org.easymock.tests.ReplayStateInvalidUsageTest.times":394,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":67,"org.easymock.tests2.DependencyTest.testClassMocking":41,"org.easymock.tests2.AnswerTest.answer":117,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":336,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":61,"org.easymock.tests2.CaptureTest.testAnd":103,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":367,"org.easymock.tests2.UsageTest.strictResetToDefault":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":134,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":264,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":152,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":309,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":504,"org.easymock.tests2.DelegateToTest.testDelegate":251,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":448,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":486,"org.easymock.tests.LimitationsTest.mockFinalMethod":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":305,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":470,"org.easymock.tests2.DependencyTest.testClassMockingSupport":42,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":316,"org.easymock.tests2.CaptureTest.testCapture1_2446744":107,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":484,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":59,"org.easymock.tests.UsageThrowableTest.throwError":492,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":388,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":369,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":234,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":452,"org.easymock.samples.PartialClassMockTest.testGetArea":35,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":389,"org.easymock.tests.MockingTest.testInterfaceMocking":348,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":430,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":354,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":472,"org.easymock.tests2.UsageTest.niceToStrict":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":221,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":364,"org.easymock.tests2.ThreadingTest.testChangeDefault":143,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":165,"org.easymock.tests2.MockBuilderTest.testCreateMock":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":229,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":70,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":480,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":153,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":366,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":507,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":255,"org.easymock.tests.UsageOverloadedMethodTest.overloading":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":231,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":511,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":90,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":292,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":356,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":89,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":112,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":420,"org.easymock.tests.MockClassControlTest.testEquals":404,"org.easymock.tests2.EasyMockSupportClassTest.testAll":213,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":488,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":468,"org.easymock.tests2.CaptureTest.testCaptureAll":104,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":60,"org.easymock.tests.MockNameTest.defaultName":435,"org.easymock.tests2.UsageConstraintsTest.testMatches":91,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":386,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":266,"org.easymock.samples.ExampleTest.voteForRemovals":31,"org.easymock.tests.UsageVarargTest.allKinds":428,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":17,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":469,"org.easymock.samples.BasicClassMockTest.testPrintContent":40,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":498,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":54,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":196,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":250,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":306,"org.easymock.tests2.UsageConstraintsTest.greaterThan":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":214,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":308,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":137,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":453,"org.easymock.samples.ExampleTest.voteForRemoval":28,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":274,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":144,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":138,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":371,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":130,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":445,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":436,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":173,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":150,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":301,"org.easymock.tests2.CaptureTest.testCaptureFirst":116,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":151,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":184,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":513,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":288,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":146,"org.easymock.tests2.CaptureTest.testCapture2_2446744":115,"org.easymock.tests2.UsageTest.moreThanOneArgument":13,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":337,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":427,"org.easymock.tests.GenericTest.testBridgedEquals":262,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":384,"org.easymock.tests.UsageExpectAndReturnTest.longType":284,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":466,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":148,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":517,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":489,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":434,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":98,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":487,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":263,"org.easymock.tests.UsageCallCountTest.tooManyCalls":385,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":230,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":72,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":476,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":497,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":202,"org.easymock.tests.MockingTest.testNiceClassMocking":352,"org.easymock.tests.MockingTest.testClassMocking":344,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":516,"org.easymock.tests2.UsageConstraintsTest.testContains":88,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":378,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":187,"org.easymock.tests2.UsageConstraintsTest.testFind":79,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":358,"org.easymock.tests.MockTypeTest.fromEasyMockClass":368,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":53,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":275,"org.easymock.tests.UsageExpectAndReturnTest.object":291,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":132,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":71,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":156,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":422,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":362,"org.easymock.tests.UsageTest.exactCallCountByLastCall":416,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":501,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":311,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":141,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":417,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":297,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":510,"org.easymock.tests.MockClassControlTest.testHashCode":403,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":190,"org.easymock.tests2.EasyMockSupportTest.testVerify":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":223,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":502,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":508,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":506,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":58,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":123,"org.easymock.tests.UsageVarargTest.varargCharAccepted":421,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":342,"org.easymock.tests2.UsageTest.openCallCountByLastCall":178,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":159,"org.easymock.tests.DefaultClassInstantiatorTest.object":268,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":505,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":360,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":224,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":495,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":65,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":189,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":451,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":402,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":135,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":477,"org.easymock.tests.ReplayStateInvalidCallsTest.times":457,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":298,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":406,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":458,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":232,"org.easymock.tests2.UsageTest.resumeIfFailure":183,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":365,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":46,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":304,"org.easymock.tests2.StubTest.stubWithReturnValue":254,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":99,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":290,"org.easymock.tests2.SerializationTest.testAllMockedMethod":24,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":335,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":523,"org.easymock.samples.SupportTest.voteForRemovals":38,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":192,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":483,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":341,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":118,"org.easymock.tests.UsageExpectAndThrowTest.object":481,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":313,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":96,"org.easymock.tests2.DelegateToTest.testWrongClass":249,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":455,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":442,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":443,"org.easymock.samples.ConstructorCalledMockTest.testTax":3,"org.easymock.tests.UsageStrictMockTest.range":279,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":49,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":155,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":482,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":167,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":414,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":210,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":256,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":447,"org.easymock.tests2.CaptureTest.testCaptureNone":111,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":355,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":236,"org.easymock.tests.UsageUnorderedTest.message":491,"org.easymock.tests.UsageVerifyTest.twoReturns":19,"org.easymock.tests.UsageVarargTest.varargByteAccepted":426,"org.easymock.tests2.ThreadingTest.testThreadSafe":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":227,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":382,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":39,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":363,"org.easymock.tests2.CaptureTest.testCapture_2617107":105,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":525,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":318,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":339,"org.easymock.tests2.UsageConstraintsTest.any":86,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":393,"org.easymock.tests2.StubTest.stub":253,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":408,"org.easymock.tests.UsageExpectAndThrowTest.longType":474,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":340,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":272,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":392,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":56,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":194,"org.easymock.tests.LimitationsTest.mockNativeMethod":375,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":261,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":300,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":64,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":463,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":12,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":237,"org.easymock.tests2.NameTest.nameForMocksControl":245,"org.easymock.tests2.MockedExceptionTest.testMockedException":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":215,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":413,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":475,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":52,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":349,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":124,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":168,"org.easymock.tests.MockingTest.testNicePartialClassMocking":347,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":129,"org.easymock.tests2.CaptureTest.testCaptureLast":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":0,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":62,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":317,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":462,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":83,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":208,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":97,"org.easymock.tests.MockingTest.testTwoMocks":345,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":459,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":209,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":281,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":479,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":181,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":101,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":240,"org.easymock.samples.ExampleTest.removeNonExistingDocument":32,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":390,"org.easymock.tests.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":69,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":191,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":239,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":270,"org.easymock.tests2.ConstraintsToStringTest.andToString":522,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":145,"org.easymock.tests2.MockBuilderTest.testCreateMockString":172,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":398,"org.easymock.tests.UsageExpectAndThrowTest.floatType":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":217,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":212,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":120,"org.easymock.tests.UsageVerifyTest.twoThrows":18,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":226,"org.easymock.samples.ExampleTest.voteAgainstRemoval":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":330,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":353,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":136,"org.easymock.tests.LimitationsTest.privateConstructor":374,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":514,"org.easymock.tests2.UsageConstraintsTest.testNotNull":100,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":499,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":185,"org.easymock.tests2.UsageTest.defaultResetToNice":180,"org.easymock.samples.ExampleTest.voteAgainstRemovals":26,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":331,"org.easymock.tests.UsageVarargTest.differentLength":423,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":63,"org.easymock.tests2.CallbackTest.callback":252,"org.easymock.tests2.UsageConstraintsTest.equals":78,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":5,"org.easymock.tests.UsageTest.openCallCountByLastCall":412,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":439,"org.easymock.tests.UsageCallCountTest.tooFewCalls":380,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":204,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":258,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":238,"org.easymock.tests.UsageThrowableTest.throwCheckedException":496,"org.easymock.tests.MockingTest.testStrictClassMocking":343,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":207,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":68,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":203,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":395,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":206,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":122,"org.easymock.tests.ObjectMethodsTest.testHashCode":361,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":1,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":461,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":147,"org.easymock.tests2.NameTest.nameForNiceMock":244,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":456,"org.easymock.tests2.DependencyTest.testInterfaceMocking":43,"org.easymock.samples.ExampleTest.addDocument":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":233,"org.easymock.tests2.DelegateToTest.testStubDelegate":248,"org.easymock.tests2.AnswerTest.stubAnswer":121,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":14,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":25,"org.easymock.tests.UsageVarargTest.varargLongAccepted":425,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":328,"org.easymock.tests.UsageExpectAndReturnTest.floatType":283,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":299,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":140,"org.easymock.tests2.ConstraintsToStringTest.orToString":519,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":4,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":512,"org.easymock.tests.UsageThrowableTest.noUpperLimit":493,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":94,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":198,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":75,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":45,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":108,"org.easymock.tests2.SerializationTest.test":23,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":269,"org.easymock.tests2.UsageConstraintsTest.testSame":81,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":282,"org.easymock.samples.SupportTest.addDocument":37,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":205,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":446,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":218,"org.easymock.tests.GenericTest.testPackageScope":259,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":197,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":350,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":444,"org.easymock.tests2.NameTest.nameForMock":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":293,"org.easymock.tests2.UsageStrictMockTest.differentMethods":11,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":133,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":285,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":485,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":359,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":310,"org.easymock.tests2.MockedExceptionTest.testRealException":188,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":372,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":332,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":438,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":397,"org.easymock.tests2.NameTest.nameForStrictMock":243,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":164,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":51,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":128,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":48,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":95,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":271,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":162,"org.easymock.tests2.UsageStrictMockTest.range":57,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":450,"org.easymock.tests2.UsageConstraintsTest.lessThan":102,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":193,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":327,"org.easymock.tests2.CaptureTest.testCaptureRightOne":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":222,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":235,"org.easymock.tests2.UsageConstraintsTest.testOr":82,"org.easymock.tests.UsageRangeTest.combination":307,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":125,"org.easymock.tests.UsageTest.wrongArguments":411,"org.easymock.tests2.MockBuilderTest.testWithConstructor":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":219,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":399,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":320,"org.easymock.tests.UsageVarargTest.varargShortAccepted":424,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":273,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":383,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":464,"org.easymock.tests2.UsageConstraintsTest.cmpTo":87,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":119,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":322,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":179,"org.easymock.tests2.CaptureTest.testCaptureFromStub":114,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":387,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":163,"org.easymock.tests.UsageTest.unexpectedCallWithArray":410,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":460,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":277,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":381,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":7,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":295,"org.easymock.tests2.UsageConstraintsTest.constraints":76,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":278,"org.easymock.samples.ExampleTest.addAndChangeDocument":33,"org.easymock.tests2.ConstraintsToStringTest.notToString":520,"org.easymock.tests.UsageStrictMockTest.testVerify":280,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":34,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":467,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":109,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":518,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":431,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":287,"org.easymock.tests.LimitationsTest.abstractClass":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":432,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":21,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":154}}]
