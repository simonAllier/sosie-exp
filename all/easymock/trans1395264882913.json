[{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[2],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[2,4],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:78","sourceCode":"final java.util.Stack<org.easymock.IArgumentMatcher> java.util.Stack<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.get()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[8,9,10,11,12,13,14],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[15,16,17,18,8,19,20,21,9,22,23,24,25,26,27],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[28],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,17,51,52,18,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,1,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[233],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[234,235],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[17,51,52,236],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[177,237],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[3,238,233,1,239],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:318","failures":[149,152],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[43,44,45,46,57,59,60,240,142,146,147,170,171,173,174,177,241,237,242,243,191,192,244,229,230,231],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[8,9,10,11,12,13,14],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[245,140,246,149,151,152,153,154,155,156,247,191,1,248,249,211,212,250,213,251,252,253,254,214,255,256,257,258,215,259,260,261,262,225,228,263,264],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[89,265,266,267],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[268,269,57,58,70,270,74,75,76,77,78,79,80,81,82,83,84,271,272,85,86,89,3,273,274,91,275,276,277,104,105,106,107,278,108,109,110,111,112,279,113,114,280,115,116,28,117,118,119,120,121,122,281,282,167,168,170,171,177,193,194,195,1,196,197,198,199,200,201,203,204,219,220,228,283],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[117],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[284,74,76,77,78,79,80,81,83,285,84,271,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[286,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[284,74,76,77,78,79,80,81,83,285,84,271,85],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,15,16,41,42,47,288,48,49,50,17,51,52,18,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,289,70,270,71,72,73,74,75,76,77,78,79,80,81,82,83,84,271,272,85,86,87,290,88,291,292,293,89,90,3,245,294,295,296,297,273,274,91,92,93,94,95,96,97,98,99,100,101,102,103,275,276,277,104,105,106,107,278,108,109,111,112,279,113,114,280,115,116,28,117,118,119,120,121,122,281,282,298,299,123,300,301,124,125,302,126,127,303,128,304,129,130,131,132,133,134,135,136,137,138,139,140,141,240,142,143,144,305,246,145,146,147,306,148,307,308,309,310,149,150,151,152,153,154,155,156,311,312,313,314,315,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,247,182,316,317,183,184,318,185,319,320,321,322,186,323,324,325,326,187,327,328,329,330,188,331,332,333,334,335,336,337,243,191,192,193,194,195,1,196,197,198,199,200,201,202,203,204,338,206,207,208,339,209,210,340,340,248,249,211,212,250,213,251,252,253,254,214,255,256,257,258,215,259,260,261,262,216,217,218,219,220,222,224,225,341,342,343,344,345,228,283,263,244,346,229,347,264,230,231,232],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[29,30,31,32,33,34,35,36,37,39,40,41,42,47,48,17,51,52,18,53,54,56,58,61,62,63,64,65,66,67,68,69,70,72,74,75,76,77,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,108,109,111,112,113,115,117,118,119,120,121,123,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,169,170,172,175,178,179,180,181,182,183,184,185,186,187,190,191,192,1,202,207,208,209,210,211,212,213,214,215,216,217,218,222,224,225,227,348,229,230,231,232],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[17,51,52,236],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:71","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[349],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[350,351,352],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[353,354,355,356,357,358,359,360,361,362,363,364],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[3,233,239],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":104,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":263,"org.easymock.tests2.UsageTest.argumentsOrdered":147,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":345,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":144,"org.easymock.tests2.StubTest.stubWithReturnValue":245,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":322,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":29,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":121,"org.easymock.tests2.SerializationTest.testAllMockedMethod":52,"org.easymock.tests2.DelegateToTest.testReturnException":47,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":343,"org.easymock.tests.MockingTest.testPartialClassMocking":216,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":27,"org.easymock.samples.SupportTest.voteForRemovals":40,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":2,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":256,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":236,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":248,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":233,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":137,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":266,"org.easymock.tests.UsageExpectAndThrowTest.object":214,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":241,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":63,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":118,"org.easymock.tests2.DelegateToTest.testWrongClass":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":10,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":219,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":220,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":193,"org.easymock.tests2.UsageTest.wrongArguments":142,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":358,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests.UsageStrictMockTest.range":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":309,"org.easymock.samples.ExampleTest.answerVsDelegate":33,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":98,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":129,"org.easymock.tests2.UsageConstraintsTest.testNull":106,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":255,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":67,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":100,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":126,"org.easymock.tests2.CaptureTest.testPrimitive":77,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":196,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":262,"org.easymock.tests.UsageTest.moreThanOneArgument":244,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":308,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":66,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":313,"org.easymock.tests2.CaptureTest.testCaptureNone":82,"org.easymock.tests.UsageUnorderedTest.message":177,"org.easymock.tests.UsageVerifyTest.twoReturns":192,"org.easymock.tests.UsageVarargTest.varargByteAccepted":165,"org.easymock.tests2.ThreadingTest.testThreadSafe":291,"org.easymock.tests.UsageTest.argumentsOrdered":231,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":221,"org.easymock.tests.UsageVarargTest.varargIntAccepted":159,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":208,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":197,"org.easymock.tests2.CaptureTest.testCapture_2617107":76,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":301,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":1,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":302,"org.easymock.tests2.UsageConstraintsTest.any":111,"org.easymock.tests2.StubTest.stub":3,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":344,"org.easymock.tests.UsageExpectAndThrowTest.longType":212,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":5,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":58,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":54,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests.LimitationsTest.mockNativeMethod":202,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":53,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":330,"org.easymock.tests2.AnswerTest.answer":86,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":297,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":354,"org.easymock.tests2.CaptureTest.testAnd":74,"org.easymock.tests2.UsageTest.strictResetToDefault":141,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":270,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":61,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":21,"org.easymock.tests2.NameTest.nameForMocksControl":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":355,"org.easymock.tests2.MockedExceptionTest.testMockedException":299,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":312,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":95,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":264,"org.easymock.tests2.DelegateToTest.testDelegate":49,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":250,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":218,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":64,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":127,"org.easymock.tests.MockingTest.testNicePartialClassMocking":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":215,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":69,"org.easymock.tests2.CaptureTest.testCaptureLast":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":228,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":190,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":108,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":337,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":119,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":189,"org.easymock.tests2.CaptureTest.testCapture1_2446744":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":316,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":257,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":295,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":253,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":146,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":281,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":239,"org.easymock.tests.UsageThrowableTest.throwError":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":356,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":348,"org.easymock.tests.UsageStrictMockTest.differentMethods":174,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":360,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":293,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":364,"org.easymock.tests2.MockBuilderTest.testCreateMockString":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":315,"org.easymock.tests.UsageExpectAndThrowTest.floatType":211,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":115,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":87,"org.easymock.tests.UsageVerifyTest.twoThrows":191,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":223,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":138,"org.easymock.samples.PartialClassMockTest.testGetArea":31,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":198,"org.easymock.samples.ExampleTest.voteAgainstRemoval":35,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":72,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":249,"org.easymock.tests2.UsageTest.niceToStrict":143,"org.easymock.tests2.UsageConstraintsTest.testNotNull":122,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":298,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":156,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":125,"org.easymock.tests2.MockBuilderTest.testCreateMock":303,"org.easymock.tests2.UsageTest.defaultResetToNice":145,"org.easymock.samples.ExampleTest.voteAgainstRemovals":32,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":187,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":353,"org.easymock.tests.UsageVarargTest.differentLength":162,"org.easymock.tests2.CallbackTest.callback":50,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":357,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":19,"org.easymock.tests.UsageTest.openCallCountByLastCall":347,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":254,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":96,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":275,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":205,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":195,"org.easymock.tests.UsageCallCountTest.tooFewCalls":206,"org.easymock.tests.UsageOverloadedMethodTest.overloading":181,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":225,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":114,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":323,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":132,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":180,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":6,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":113,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":83,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":310,"org.easymock.tests.UsageThrowableTest.throwCheckedException":153,"org.easymock.tests2.EasyMockSupportClassTest.testAll":136,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":179,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":260,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":335,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":296,"org.easymock.tests2.CaptureTest.testCaptureAll":75,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":204,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":134,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":131,"org.easymock.tests2.UsageConstraintsTest.testMatches":280,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":133,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":314,"org.easymock.samples.ExampleTest.voteForRemovals":37,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":13,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":90,"org.easymock.tests2.NameTest.nameForNiceMock":45,"org.easymock.tests.UsageVarargTest.allKinds":167,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":243,"org.easymock.tests2.DependencyTest.testInterfaceMocking":62,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":336,"org.easymock.samples.BasicClassMockTest.testPrintContent":42,"org.easymock.samples.ExampleTest.addDocument":36,"org.easymock.tests2.DelegateToTest.testStubDelegate":288,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":155,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":55,"org.easymock.tests2.AnswerTest.stubAnswer":290,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":283,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":171,"org.easymock.tests2.UsageConstraintsTest.greaterThan":116,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":73,"org.easymock.tests.UsageVarargTest.varargLongAccepted":164,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":175,"org.easymock.samples.ExampleTest.voteForRemoval":34,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":292,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":329,"org.easymock.tests.UsageExpectAndReturnTest.floatType":183,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":289,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":18,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":226,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":28,"org.easymock.tests.UsageThrowableTest.noUpperLimit":150,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":276,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":140,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":182,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":79,"org.easymock.tests2.SerializationTest.test":51,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":22,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":7,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":93,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":151,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":317,"org.easymock.tests2.UsageConstraintsTest.testSame":107,"org.easymock.samples.SupportTest.addDocument":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":342,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":269,"org.easymock.tests2.CaptureTest.testCaptureFirst":85,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":94,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":148,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":267,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":320,"org.easymock.tests.GenericTest.testPackageScope":178,"org.easymock.tests2.CaptureTest.testCapture2_2446744":272,"org.easymock.tests2.UsageTest.moreThanOneArgument":240,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":89,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":128,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":363,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":166,"org.easymock.tests.GenericTest.testBridgedEquals":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":209,"org.easymock.tests2.NameTest.nameForMock":43,"org.easymock.tests.UsageExpectAndReturnTest.longType":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":333,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":91,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":324,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":261,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":120,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":259,"org.easymock.tests2.UsageStrictMockTest.differentMethods":60,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":24,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":311,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":318,"org.easymock.tests.UsageCallCountTest.tooManyCalls":210,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":258,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":332,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":338,"org.easymock.tests2.MockedExceptionTest.testRealException":300,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":321,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":213,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":154,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":130,"org.easymock.tests2.UsageConstraintsTest.testContains":279,"org.easymock.tests2.NameTest.nameForStrictMock":44,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":123,"org.easymock.tests2.UsageConstraintsTest.testFind":105,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":247,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":273,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":68,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":274,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":168,"org.easymock.tests.UsageExpectAndReturnTest.object":186,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":237,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":117,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":70,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":124,"org.easymock.tests2.UsageStrictMockTest.range":59,"org.easymock.tests2.UsageConstraintsTest.lessThan":282,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":11,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":361,"org.easymock.tests.UsageTest.exactCallCountByLastCall":232,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":203,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":349,"org.easymock.tests2.CaptureTest.testCaptureRightOne":84,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":287,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":265,"org.easymock.tests2.UsageConstraintsTest.testOr":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":8,"org.easymock.tests.UsageRangeTest.combination":188,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":327,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":65,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":157,"org.easymock.tests.UsageTest.wrongArguments":229,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":224,"org.easymock.tests2.MockBuilderTest.testWithConstructor":20,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":359,"org.easymock.tests2.EasyMockSupportTest.testVerify":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":185,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":286,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":235,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":222,"org.easymock.tests.UsageVarargTest.varargShortAccepted":163,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":294,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":268,"org.easymock.tests2.UsageConstraintsTest.cmpTo":112,"org.easymock.tests.UsageVarargTest.varargCharAccepted":160,"org.easymock.tests2.CaptureTest.testCaptureMultiple":284,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":0,"org.easymock.tests2.UsageTest.openCallCountByLastCall":305,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":246,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":102,"org.easymock.tests2.CaptureTest.testCaptureFromStub":271,"org.easymock.tests.UsageTest.unexpectedCallWithArray":346,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":252,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":152,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":170,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":207,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":23,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":326,"org.easymock.tests2.CaptureTest.testCapture":285,"org.easymock.tests2.UsageConstraintsTest.constraints":277,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":71,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":172,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":251,"org.easymock.samples.ExampleTest.addAndChangeDocument":38,"org.easymock.tests.CapturesMatcherTest.test":340,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":328,"org.easymock.tests.UsageStrictMockTest.testVerify":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":350,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":139,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":334,"org.easymock.tests2.UsageTest.resumeIfFailure":306,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":199,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":319,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":227,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":200,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":97,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":158}}]
