[{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[4,5,6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[7,8,9,10,11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[12],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,1,2,3,302],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[24,30,34,36,37,47,48,49,50,51,52,55,56,58,59,60,62,63,64,65,66,77,78,79,80,81,102,103,104,111,112,136,303,137,138,146,147,148,149,151,153,154,156,160,166,168,169,172,174,175,179,180,181,182,183,184,185,205,207,209,210,212,213,215,217,218,219,220,221,222,223,224,225,226,228,230,231,232,240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"returnedType","type":"returnedType"}},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[13,14,304,305,306,15,22,307,24,25,26,27,28,29,30,34,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,308,309,67,68,71,72,75,310,311,312,313,314,76,77,78,79,80,81,87,88,89,315,316,317,318,319,102,103,104,105,106,107,108,109,110,320,321,322,323,324,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,303,137,138,139,140,141,146,147,148,149,150,151,152,153,154,156,157,158,158,159,159,160,166,167,168,169,172,174,175,177,178,179,180,181,182,183,184,185,186,187,188,190,192,193,194,197,198,199,200,201,202,203,204,325,205,206,207,209,210,212,213,215,217,218,219,220,221,222,223,224,225,226,228,230,231,232,233,326,327,234,235,236,237,238,328,239,240,241,329,242,243,244,246,247,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,1,2,302],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[36,37,174,175,229],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[160,210,212,213,330],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[29,33,36,331,69,70,73,74,90,140,141,174,189,195,196],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[7,332,333,334,8,9,335,207],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:229","failures":[218],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[288],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[89,202],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[336,337],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[304,305,306,27,39,41,42,43,44,45,46,67,338,89,109,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,140,178,186],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1927","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))","type":"CtInvocationImpl"},"failures":[246],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[211,227],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[332,333,334,8,9,339,340],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[13,14,304,305,306,341,342,15,16,17,18,19,20,21,336,22,23,307,337,343,24,25,26,27,28,29,344,345,346,347,348,349,350,351,352,353,354,355,356,357,30,358,31,32,33,34,35,36,37,38,359,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,360,308,361,362,309,363,67,68,69,70,71,72,73,74,75,364,365,366,338,367,368,369,370,371,372,373,374,375,376,377,378,310,379,380,381,382,383,311,384,312,313,314,76,77,78,79,80,81,82,83,84,85,86,87,385,88,89,386,315,90,91,92,93,387,94,95,96,97,98,99,100,101,316,317,318,388,389,390,391,392,393,319,394,395,396,102,103,397,104,398,399,400,105,106,107,108,109,110,320,321,322,323,324,401,402,403,404,405,406,407,408,111,112,409,410,411,412,413,414,415,416,417,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,303,137,138,139,140,141,142,143,144,145,418,419,420,421,422,4,423,424,425,146,147,148,149,150,151,152,153,154,155,156,426,157,158,159,160,161,162,163,164,165,166,427,428,429,430,431,167,432,433,434,435,436,437,438,439,168,169,170,171,172,173,174,175,176,177,178,440,441,442,443,444,445,446,179,180,181,182,447,183,184,185,448,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,325,205,206,207,339,449,450,451,452,453,454,208,455,209,456,457,458,210,211,212,340,213,459,460,214,215,461,216,462,463,464,217,465,466,218,467,468,469,470,471,472,473,474,475,219,476,477,478,479,480,220,481,482,221,222,223,224,225,226,227,483,228,484,485,229,230,231,232,486,487,233,326,327,234,235,236,237,488,238,328,239,240,241,329,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,489,490,491,492,493,494,270,495,496,497,498,499,500,271,272,273,274,275,276,277,278,501,279,280,281,282,283,284,502,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,1,2,3,302],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[503,284,289,301],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[13,14,15,16,17,18,20,21,22,23,337,24,25,26,27,28,29,344,30,31,32,33,34,35,36,37,38,359,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,87,88,89,91,92,93,94,95,96,97,98,99,100,101,388,391,105,106,107,108,109,110,321,322,111,112,416,417,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,146,147,148,149,150,151,152,153,154,155,156,157,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,325,205,206,217,221,222,223,224,225,226,228,232,233,234,235,236,237,488,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,2,3,302],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[158,159,207,339,455,457,340,460,504,461,505,10,11,484,1],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:161","sourceCode":"for (final org.easymock.internal.Injection org.easymock.internal.Injection : java.util.List<org.easymock.internal.Injection>) {\n    final java.lang.reflect.Field java.lang.reflect.Field = org.easymock.internal.Injector.org.easymock.internal.Injector.getFieldByName(java.lang.Class<?>, org.easymock.internal.Injection.getQualifier());\n    final org.easymock.internal.InjectionTarget org.easymock.internal.InjectionTarget = org.easymock.internal.Injector.org.easymock.internal.Injector.injectionTargetWithField(java.lang.reflect.Field);\n    if (org.easymock.internal.InjectionTarget == null) {\n        continue;\n    } \n    if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n        org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection);\n        java.util.List<java.lang.reflect.Field>.remove(org.easymock.internal.InjectionTarget.getTargetField());\n    } \n}","type":"CtForEachImpl"},"failures":[161,162,428,429,431,167,433,434,437,170,491,492,494,270,496,497,500,271],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[328,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[506],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":278,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":67,"org.easymock.tests2.UsageTest.argumentsOrdered":196,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":267,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":373,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":191,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":161,"org.easymock.tests2.DelegateToTest.testReturnException":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":106,"org.easymock.tests.MockingTest.testPartialClassMocking":102,"org.easymock.tests.MockClassControlTest.testToString":412,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":450,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":309,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":470,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":116,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":218,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":332,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":284,"org.easymock.tests2.UsageTest.wrongArguments":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":24,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":500,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":144,"org.easymock.samples.ExampleTest.answerVsDelegate":152,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":406,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":399,"org.easymock.tests2.UsageConstraintsTest.testNull":280,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":224,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":417,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":266,"org.easymock.tests2.CaptureTest.testPrimitive":246,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":28,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":135,"org.easymock.tests.UsageTest.moreThanOneArgument":68,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":148,"org.easymock.tests.UsageTest.argumentsOrdered":74,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":320,"org.easymock.tests.UsageVarargTest.varargIntAccepted":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":9,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":208,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":442,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":436,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":81,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":270,"org.easymock.tests.ReplayStateInvalidUsageTest.times":352,"org.easymock.tests2.DependencyTest.testClassMocking":438,"org.easymock.tests2.AnswerTest.answer":233,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":274,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":403,"org.easymock.tests2.CaptureTest.testAnd":243,"org.easymock.tests2.UsageTest.strictResetToDefault":187,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":457,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":147,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":261,"org.easymock.tests2.DelegateToTest.testDelegate":242,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":324,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":131,"org.easymock.tests.LimitationsTest.mockFinalMethod":358,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":86,"org.easymock.tests2.DependencyTest.testClassMockingSupport":439,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":360,"org.easymock.tests2.CaptureTest.testCapture1_2446744":247,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":483,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":129,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":272,"org.easymock.tests.UsageThrowableTest.throwError":39,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":346,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":405,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":437,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":343,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":150,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":482,"org.easymock.samples.PartialClassMockTest.testGetArea":160,"org.easymock.tests.MockingTest.testInterfaceMocking":397,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":78,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":471,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":393,"org.easymock.tests2.UsageTest.niceToStrict":190,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":210,"org.easymock.tests2.MockBuilderTest.testCreateMock":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":478,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":125,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":262,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":402,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":306,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":341,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":142,"org.easymock.tests.UsageOverloadedMethodTest.overloading":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":475,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":89,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":289,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":113,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":58,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":5,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":288,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":252,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":387,"org.easymock.tests.MockClassControlTest.testEquals":416,"org.easymock.tests2.EasyMockSupportClassTest.testAll":217,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":23,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":84,"org.easymock.tests2.CaptureTest.testCaptureAll":244,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":273,"org.easymock.tests.MockNameTest.defaultName":409,"org.easymock.tests2.UsageConstraintsTest.testMatches":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":149,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":344,"org.easymock.samples.ExampleTest.voteForRemovals":156,"org.easymock.tests.UsageVarargTest.allKinds":101,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":139,"org.easymock.samples.BasicClassMockTest.testPrintContent":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":85,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":45,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":110,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":329,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":424,"org.easymock.tests2.UsageConstraintsTest.greaterThan":292,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":465,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":303,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":232,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":425,"org.easymock.samples.ExampleTest.voteForRemoval":153,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":486,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":204,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":407,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":443,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":227,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":186,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":76,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":370,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":259,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":463,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":105,"org.easymock.tests2.CaptureTest.testCaptureFirst":256,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":260,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":198,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":90,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":54,"org.easymock.tests2.UsageTest.moreThanOneArgument":188,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":205,"org.easymock.tests2.CaptureTest.testCapture2_2446744":255,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":380,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":100,"org.easymock.tests.GenericTest.testBridgedEquals":337,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":20,"org.easymock.tests.UsageExpectAndReturnTest.longType":50,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":82,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":257,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":134,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":330,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":297,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":319,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":132,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":146,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":313,"org.easymock.tests.UsageCallCountTest.tooManyCalls":21,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":479,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":55,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":499,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":121,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":44,"org.easymock.tests.MockingTest.testNiceClassMocking":400,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":180,"org.easymock.tests.MockingTest.testClassMocking":395,"org.easymock.tests2.UsageConstraintsTest.testContains":287,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":342,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":201,"org.easymock.tests2.UsageConstraintsTest.testFind":279,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":115,"org.easymock.tests.MockTypeTest.fromEasyMockClass":404,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":31,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":238,"org.easymock.tests.UsageExpectAndReturnTest.object":57,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":228,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":498,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":265,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":95,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":333,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":391,"org.easymock.tests.UsageTest.exactCallCountByLastCall":75,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":368,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":321,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":362,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":339,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":63,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":91,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":88,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":428,"org.easymock.tests.MockClassControlTest.testHashCode":415,"org.easymock.tests2.EasyMockSupportTest.testVerify":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":473,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":322,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":87,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":305,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":271,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":489,"org.easymock.tests.UsageVarargTest.varargCharAccepted":94,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":418,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":384,"org.easymock.tests2.UsageTest.openCallCountByLastCall":192,"org.easymock.tests.DefaultClassInstantiatorTest.object":419,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":268,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":304,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":389,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":474,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":493,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":427,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":414,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":230,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":122,"org.easymock.tests.CapturesMatcherTest.test":506,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":64,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":312,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":220,"org.easymock.tests2.UsageTest.resumeIfFailure":197,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":401,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":108,"org.easymock.tests2.StubTest.stubWithReturnValue":178,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":340,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":56,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":298,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":310,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":11,"org.easymock.samples.SupportTest.voteForRemovals":166,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":336,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":128,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":311,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":326,"org.easymock.tests.UsageExpectAndThrowTest.object":126,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":363,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":295,"org.easymock.tests2.DelegateToTest.testWrongClass":241,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":111,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":112,"org.easymock.samples.ConstructorCalledMockTest.testTax":158,"org.easymock.tests.UsageStrictMockTest.range":36,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":445,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":179,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":127,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":462,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":73,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":143,"org.easymock.tests2.CaptureTest.testCaptureNone":251,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":318,"org.easymock.tests.UsageUnorderedTest.message":29,"org.easymock.tests.UsageVerifyTest.twoReturns":141,"org.easymock.tests.UsageVarargTest.varargByteAccepted":99,"org.easymock.tests2.ThreadingTest.testThreadSafe":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":476,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":18,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":392,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":163,"org.easymock.tests2.CaptureTest.testCapture_2617107":245,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":361,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":382,"org.easymock.tests2.UsageConstraintsTest.any":285,"org.easymock.tests2.StubTest.stub":177,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":351,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":314,"org.easymock.tests.UsageExpectAndThrowTest.longType":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":383,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":4,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":350,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":173,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":167,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests.LimitationsTest.mockNativeMethod":30,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":66,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":307,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":492,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":176,"org.easymock.tests2.NameTest.nameForMocksControl":454,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":494,"org.easymock.tests2.MockedExceptionTest.testMockedException":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":466,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":72,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":488,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":120,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":104,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":221,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":213,"org.easymock.tests.MockingTest.testNicePartialClassMocking":103,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":226,"org.easymock.tests2.CompareToTest.testNotComparable":12,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":490,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":7,"org.easymock.tests2.CaptureTest.testCaptureLast":250,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":308,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":185,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":283,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":296,"org.easymock.tests.MockingTest.testTwoMocks":396,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":448,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":47,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":124,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":195,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":300,"org.easymock.samples.ExampleTest.removeNonExistingDocument":426,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":496,"org.easymock.tests.UsageStrictMockTest.differentMethods":37,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":429,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":421,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":325,"org.easymock.tests2.MockBuilderTest.testCreateMockString":216,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":467,"org.easymock.tests.UsageExpectAndThrowTest.floatType":118,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":464,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":449,"org.easymock.tests.UsageVerifyTest.twoThrows":140,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":219,"org.easymock.samples.ExampleTest.voteAgainstRemoval":154,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":374,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":231,"org.easymock.tests.LimitationsTest.privateConstructor":357,"org.easymock.tests2.UsageConstraintsTest.testNotNull":299,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":46,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":199,"org.easymock.tests2.UsageTest.defaultResetToNice":194,"org.easymock.samples.ExampleTest.voteAgainstRemovals":151,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":375,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":491,"org.easymock.tests.UsageVarargTest.differentLength":96,"org.easymock.tests2.CallbackTest.callback":302,"org.easymock.tests2.UsageConstraintsTest.equals":501,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":484,"org.easymock.tests.UsageTest.openCallCountByLastCall":71,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":275,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":26,"org.easymock.tests.UsageCallCountTest.tooFewCalls":16,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":182,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":145,"org.easymock.tests.UsageThrowableTest.throwCheckedException":43,"org.easymock.tests.MockingTest.testStrictClassMocking":394,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":184,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":495,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":181,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":353,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":183,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":236,"org.easymock.tests2.CompareToTest.testGreateOrEqual":503,"org.easymock.tests.ObjectMethodsTest.testHashCode":390,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":8,"org.easymock.tests2.NameTest.nameForNiceMock":453,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":206,"org.easymock.tests2.DependencyTest.testInterfaceMocking":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":334,"org.easymock.samples.ExampleTest.addDocument":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":481,"org.easymock.tests2.DelegateToTest.testStubDelegate":240,"org.easymock.tests2.AnswerTest.stubAnswer":235,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":34,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":459,"org.easymock.tests.UsageVarargTest.varargLongAccepted":98,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":372,"org.easymock.tests.UsageExpectAndReturnTest.floatType":49,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":65,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":207,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":159,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":435,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":386,"org.easymock.tests.UsageThrowableTest.noUpperLimit":40,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":293,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":276,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":440,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":248,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":420,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":48,"org.easymock.tests2.UsageConstraintsTest.testSame":281,"org.easymock.samples.SupportTest.addDocument":165,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":447,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":468,"org.easymock.tests.GenericTest.testPackageScope":22,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":367,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":434,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":398,"org.easymock.tests2.NameTest.nameForMock":451,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":59,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":461,"org.easymock.tests2.UsageStrictMockTest.differentMethods":175,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":485,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":51,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":130,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":388,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":138,"org.easymock.tests2.MockedExceptionTest.testRealException":202,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":408,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":377,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":10,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":376,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":25,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":355,"org.easymock.tests2.NameTest.nameForStrictMock":452,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":458,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":237,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":225,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":444,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":422,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":294,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":209,"org.easymock.tests2.UsageStrictMockTest.range":174,"org.easymock.tests2.UsageConstraintsTest.lessThan":301,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":431,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":472,"org.easymock.tests2.CaptureTest.testCaptureRightOne":253,"org.easymock.tests2.UsageConstraintsTest.testOr":282,"org.easymock.tests.UsageRangeTest.combination":136,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":222,"org.easymock.tests.UsageTest.wrongArguments":70,"org.easymock.tests2.MockBuilderTest.testWithConstructor":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":469,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":411,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":52,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":365,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":423,"org.easymock.tests.UsageVarargTest.varargShortAccepted":97,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":19,"org.easymock.tests2.UsageConstraintsTest.cmpTo":286,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":338,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":193,"org.easymock.tests2.CaptureTest.testCaptureFromStub":254,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":345,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":456,"org.easymock.tests.UsageTest.unexpectedCallWithArray":69,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":33,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":17,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":504,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":61,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":35,"org.easymock.tests2.UsageConstraintsTest.constraints":277,"org.easymock.samples.ExampleTest.addAndChangeDocument":157,"org.easymock.tests.UsageStrictMockTest.testVerify":359,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":162,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":83,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":249,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":79,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":53,"org.easymock.tests.LimitationsTest.abstractClass":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":80,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":92,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":263}}]
