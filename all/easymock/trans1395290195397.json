[{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,38,39,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,0,1,3,4,5,6,7,8,9,10,102,11,12,13,103,14,15,16,17,18,19,20,21,22,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,24,137,25,138,139,140,141,142,143,144,26,27,28,29,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,30,31,32,33,168,34,35,36,37,38,39,169,40,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,41,42,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,56,246,247,248,249,250,251,252,253,254,255,256,257,258,259,57,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,59,60,61,307,308,309,310],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:85","failures":[311,312,313,314,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,0,1,3,4,5,6,7,8,9,10,102,11,12,13,103,14,15,16,17,18,19,20,21,22,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,315,131,132,133,134,135,136,24,137,25,138,139,140,141,142,143,144,26,27,28,29,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,30,31,32,33,168,34,35,36,37,38,38,39,39,169,40,170,171,172,173,174,175,176,177,178,316,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,41,42,207,317,208,209,210,211,212,213,214,215,216,318,319,320,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,46,47,48,49,50,51,52,53,321,322,237,238,239,240,241,242,243,244,245,323,324,325,326,327,328,329,330,331,332,333,334,56,246,247,248,249,250,251,252,253,254,255,256,257,258,259,335,57,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,336,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,59,60,61,307,308,309,337,310],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[1,3,5,6,8,12,13,103,14,15,16,18,20,21,22,111,114,131,132,25,140,142,143,26,27,28,29,30,31,32,33,168,34,35,40,172,173,175,176,178,188,189,190,191,192,207,317,208,209,212,244,245,56,255,257,258,279,280,281,282,283,284,287,288,290,291,292,294,295,296,297,298,302,303,304,305,59,60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[78,83,94],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:233","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()))","type":"CtThrowImpl"},"failures":[338,339],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[340],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[341,342,343,344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","bridgeMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[134,146,346,260,273,300],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[312,22,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[347,348,349,10,350,351,352,353,354,355,356,25,357],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[130],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[25,357],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[0,358,1,2,359,360,3,4,5,347,6,348,7,8,361,9,10,11,12,13,14,15,16,17,18,362,363,19,20,21,22,364,23,365,366,135,136,24,25,357,367,368,369,26,370,27,371,372,373,374,375,376,377,28,378,379,380,381,382,29,30,31,32,33,34,35,36,37,38,39,40,383,41,42,43,44,46,47,48,49,50,51,52,53,54,55,384,385,56,386,57,336,387,388,389,390,391,392,393,394,58,59,60,61,395],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[130],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:318","failures":[180,183],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[347,348,10,351,352,353,354,356,25,357],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":78,"org.easymock.tests2.UsageTest.argumentsOrdered":156,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":260,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":339,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":151,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":169,"org.easymock.tests2.DelegateToTest.testReturnException":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":270,"org.easymock.tests.MockingTest.testPartialClassMocking":59,"org.easymock.tests.MockClassControlTest.testToString":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":23,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":27,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":217,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":351,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":84,"org.easymock.tests2.UsageTest.wrongArguments":149,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":212,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":277,"org.easymock.samples.ExampleTest.answerVsDelegate":174,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":55,"org.easymock.tests2.UsageConstraintsTest.testNull":80,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":14,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":53,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":71,"org.easymock.tests2.CaptureTest.testPrimitive":120,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":216,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":236,"org.easymock.tests.UsageTest.moreThanOneArgument":261,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":304,"org.easymock.tests.UsageTest.argumentsOrdered":267,"org.easymock.tests.UsageVarargTest.varargIntAccepted":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":188,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":0,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":192,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":145,"org.easymock.tests.ReplayStateInvalidUsageTest.times":331,"org.easymock.tests2.AnswerTest.answer":159,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":107,"org.easymock.tests2.CaptureTest.testAnd":117,"org.easymock.tests2.UsageTest.strictResetToDefault":147,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":19,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":359,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":303,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":66,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":208,"org.easymock.tests2.DelegateToTest.testDelegate":116,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":232,"org.easymock.tests.LimitationsTest.mockFinalMethod":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":273,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":251,"org.easymock.tests2.CaptureTest.testCapture1_2446744":121,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":230,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":105,"org.easymock.tests.UsageThrowableTest.throwError":180,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":325,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":306,"org.easymock.samples.PartialClassMockTest.testGetArea":40,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":189,"org.easymock.tests2.UsageTest.niceToStrict":150,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":374,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":3,"org.easymock.tests2.MockBuilderTest.testCreateMock":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":380,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":226,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":67,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":342,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":321,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":275,"org.easymock.tests.UsageOverloadedMethodTest.overloading":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":382,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":89,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":309,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":290,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":88,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":126,"org.easymock.tests2.EasyMockSupportClassTest.testAll":26,"org.easymock.tests.MockClassControlTest.testEquals":52,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":42,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":234,"org.easymock.tests2.CaptureTest.testCaptureAll":118,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":249,"org.easymock.tests2.UsageConstraintsTest.testMatches":90,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":305,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":323,"org.easymock.samples.ExampleTest.voteForRemovals":178,"org.easymock.tests.UsageVarargTest.allKinds":206,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":299,"org.easymock.samples.BasicClassMockTest.testPrintContent":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":250,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":186,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":274,"org.easymock.tests2.UsageConstraintsTest.greaterThan":92,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":317,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":22,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":392,"org.easymock.samples.ExampleTest.voteForRemoval":175,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":109,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":364,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":17,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":146,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":57,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":64,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":369,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":269,"org.easymock.tests2.CaptureTest.testCaptureFirst":130,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":65,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":158,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":310,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":286,"org.easymock.tests2.UsageTest.moreThanOneArgument":148,"org.easymock.tests2.CaptureTest.testCapture2_2446744":129,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":111,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":8,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":205,"org.easymock.tests.GenericTest.testBridgedEquals":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":242,"org.easymock.tests.UsageExpectAndReturnTest.longType":282,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":247,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":235,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":97,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":233,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":302,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":343,"org.easymock.tests.UsageCallCountTest.tooManyCalls":243,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":381,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":287,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":222,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":185,"org.easymock.tests.MockingTest.testNiceClassMocking":395,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":31,"org.easymock.tests.MockingTest.testClassMocking":394,"org.easymock.tests2.UsageConstraintsTest.testContains":87,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":322,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":24,"org.easymock.tests2.UsageConstraintsTest.testFind":79,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":195,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":166,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":252,"org.easymock.tests.UsageExpectAndReturnTest.object":289,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":18,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":340,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":70,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":352,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":320,"org.easymock.tests.UsageTest.exactCallCountByLastCall":268,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":210,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":357,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":196,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":295,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":308,"org.easymock.tests.MockClassControlTest.testHashCode":51,"org.easymock.tests2.EasyMockSupportTest.testVerify":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":376,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":307,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":341,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":104,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":315,"org.easymock.tests.UsageVarargTest.varargCharAccepted":199,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":139,"org.easymock.tests2.UsageTest.openCallCountByLastCall":152,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":73,"org.easymock.tests.DefaultClassInstantiatorTest.object":336,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":318,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":377,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":183,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":20,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":50,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":223,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":29,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":49,"org.easymock.tests2.UsageTest.resumeIfFailure":157,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":272,"org.easymock.tests2.StubTest.stubWithReturnValue":134,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":347,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":288,"org.easymock.tests2.SerializationTest.testAllMockedMethod":11,"org.easymock.samples.SupportTest.voteForRemovals":172,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":383,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":229,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":345,"org.easymock.tests.UsageExpectAndThrowTest.object":227,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":95,"org.easymock.tests2.DelegateToTest.testWrongClass":115,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":244,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":245,"org.easymock.samples.ConstructorCalledMockTest.testTax":38,"org.easymock.tests.UsageStrictMockTest.range":257,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":69,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":30,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":228,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":5,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":266,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":368,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":276,"org.easymock.tests2.CaptureTest.testCaptureNone":125,"org.easymock.tests.UsageUnorderedTest.message":246,"org.easymock.tests.UsageVerifyTest.twoReturns":301,"org.easymock.tests.UsageVarargTest.varargByteAccepted":204,"org.easymock.tests2.ThreadingTest.testThreadSafe":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":378,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":240,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":36,"org.easymock.tests2.CaptureTest.testCapture_2617107":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":215,"org.easymock.tests2.UsageConstraintsTest.any":85,"org.easymock.tests2.StubTest.stub":133,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":330,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":344,"org.easymock.tests.UsageExpectAndThrowTest.longType":220,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":271,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":390,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":329,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":141,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":163,"org.easymock.tests2.SerializationTest.testClass":10,"org.easymock.tests.LimitationsTest.mockNativeMethod":56,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":43,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":298,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":144,"org.easymock.tests2.NameTest.nameForMocksControl":314,"org.easymock.tests2.MockedExceptionTest.testMockedException":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":370,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":265,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":165,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":61,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":221,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":12,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":6,"org.easymock.tests.MockingTest.testNicePartialClassMocking":60,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":16,"org.easymock.tests2.CaptureTest.testCaptureLast":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":350,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":35,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":83,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":96,"org.easymock.tests.MockingTest.testTwoMocks":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":279,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":225,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":155,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":100,"org.easymock.samples.ExampleTest.removeNonExistingDocument":316,"org.easymock.tests.UsageStrictMockTest.differentMethods":258,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":327,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":388,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":110,"org.easymock.tests2.MockBuilderTest.testCreateMockString":9,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":46,"org.easymock.tests.UsageExpectAndThrowTest.floatType":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":371,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":91,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":160,"org.easymock.tests.UsageVerifyTest.twoThrows":300,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":28,"org.easymock.samples.ExampleTest.voteAgainstRemoval":176,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":21,"org.easymock.tests.LimitationsTest.privateConstructor":385,"org.easymock.tests2.UsageConstraintsTest.testNotNull":99,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":187,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":135,"org.easymock.tests2.UsageTest.defaultResetToNice":154,"org.easymock.samples.ExampleTest.voteAgainstRemovals":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":294,"org.easymock.tests.UsageVarargTest.differentLength":201,"org.easymock.tests2.CallbackTest.callback":167,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":362,"org.easymock.tests.UsageTest.openCallCountByLastCall":264,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":214,"org.easymock.tests.UsageCallCountTest.tooFewCalls":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":278,"org.easymock.tests.UsageThrowableTest.throwCheckedException":184,"org.easymock.tests.MockingTest.testStrictClassMocking":393,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":34,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":211,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":338,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":332,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":168,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":162,"org.easymock.tests.ObjectMethodsTest.testHashCode":319,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":355,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":112,"org.easymock.tests2.NameTest.nameForNiceMock":313,"org.easymock.tests2.DependencyTest.testInterfaceMocking":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":353,"org.easymock.samples.ExampleTest.addDocument":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":379,"org.easymock.tests2.DelegateToTest.testStubDelegate":114,"org.easymock.tests2.AnswerTest.stubAnswer":161,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":255,"org.easymock.tests.UsageVarargTest.varargLongAccepted":203,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":259,"org.easymock.tests.UsageExpectAndReturnTest.floatType":281,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":297,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":25,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":39,"org.easymock.tests.UsageThrowableTest.noUpperLimit":181,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":93,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":76,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":365,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":122,"org.easymock.tests2.SerializationTest.test":102,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":387,"org.easymock.tests2.UsageConstraintsTest.testSame":81,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":280,"org.easymock.samples.SupportTest.addDocument":171,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":372,"org.easymock.tests.GenericTest.testPackageScope":41,"org.easymock.tests2.NameTest.nameForMock":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":291,"org.easymock.tests2.UsageStrictMockTest.differentMethods":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":361,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":363,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":283,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":231,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":209,"org.easymock.tests2.MockedExceptionTest.testRealException":137,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":349,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":140,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":213,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":334,"org.easymock.tests2.NameTest.nameForStrictMock":312,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":360,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":164,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":15,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":366,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":389,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":94,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":1,"org.easymock.tests2.UsageStrictMockTest.range":142,"org.easymock.tests2.UsageConstraintsTest.lessThan":101,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":63,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":354,"org.easymock.tests2.CaptureTest.testCaptureRightOne":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":375,"org.easymock.tests2.UsageConstraintsTest.testOr":82,"org.easymock.tests.UsageRangeTest.combination":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":13,"org.easymock.tests.UsageTest.wrongArguments":263,"org.easymock.tests2.MockBuilderTest.testWithConstructor":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":373,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":47,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":292,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":391,"org.easymock.tests.UsageVarargTest.varargShortAccepted":202,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":241,"org.easymock.tests2.UsageConstraintsTest.cmpTo":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":346,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":153,"org.easymock.tests2.CaptureTest.testCaptureFromStub":128,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":324,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":2,"org.easymock.tests.UsageTest.unexpectedCallWithArray":262,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":254,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":239,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":293,"org.easymock.tests2.UsageConstraintsTest.constraints":77,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":256,"org.easymock.samples.ExampleTest.addAndChangeDocument":179,"org.easymock.tests.UsageStrictMockTest.testVerify":335,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":170,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":253,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":248,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":123,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":190,"org.easymock.tests.LimitationsTest.abstractClass":384,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":285,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":191,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":68,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":197}}]
