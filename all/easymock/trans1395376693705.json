[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1373","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[7,8],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[9,9,10,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,7,40,41,42,43],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:133","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"failures":[44,45,46,47,48,49,50,51,52],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,29,30,113,31,32,33,34,35,114,36,37,38,39,41,42,115,116,117,118,119,120,121,122,6],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:105","failures":[123,124,125,126,127,2,128,129,130,131,132,53,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,54,150,151,55,56,152,153,57,58,154,155,156,157,158,159,160,161,162,163,164,165,166,59,60,167,168,61,169,62,63,64,65,170,66,67,68,69,171,70,71,72,73,172,173,174,11,175,74,75,176,177,178,179,180,181,182,183,12,184,13,14,185,186,15,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,3,205,206,207,208,209,210,211,212,213,214,16,17,18,19,20,215,216,217,218,219,220,221,222,223,224,76,225,226,227,228,229,230,231,232,77,78,79,233,234,80,235,81,82,83,84,236,85,86,87,88,237,89,90,91,92,21,22,93,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,94,269,270,271,272,273,274,275,276,277,0,278,23,24,25,26,27,95,96,97,98,99,279,100,101,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,102,296,297,103,298,299,104,105,106,300,301,302,107,303,304,305,28,306,108,109,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,110,111,112,327,328,29,30,113,329,330,31,32,33,34,331,332,333,334,335,35,114,36,37,336,38,39,7,8,337,338,339,40,41,42,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,115,116,356,117,118,357,119,120,358,359,43,121,122,360,361,362,363,364,365,366,367,368,369,370,371,372,4,373,5,374,6,375,376,377,378],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[123,126,341,342,343,344,345,346,347,348,349,350,351,352,360,361,362,363,364,365,366,367,368,369,370,371],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[125,379,127,128,129,131,54,151,55,56,57,58,156,380,381,382,59,60,167,168,61,169,62,63,64,65,170,66,67,68,69,171,70,71,72,73,11,74,75,12,13,14,15,207,16,17,18,19,20,383,384,231,232,77,385,21,22,268,269,270,271,272,273,274,95,96,97,98,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,103,299,105,106,300,107,303,28,108,109,44,313,317,46,323,386,387,388,389,390,391,392,393,394,395,396,397,398,325,399,400,110,111,112,327,328,29,30,113,329,31,32,33,34,331,332,334,335,35,114,36,37,336,38,39,7,8,337,339,40,41,42,401,402,340,403,404,405,406,407,408,409,346,355,115,356,117,119,120,358,359,121,122,365,373,377],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[314,315],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[397,326,402,410,409],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[411,412,264],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[410],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[150,55,58,186,205,213,77,78,79,233,234,80,235,81,82,83,84,236,85,86,87,88,237,89,90,91,92,268,269,270,271,272,273,274,280,296,106],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[111,112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[147,54,150,151,55,56,153,57,58,154,155,156,174,11,175,74,75,14,15,213,77,93,269,280,102,296,103,298,105,106,301,302,303,28,306,108,109,309,310,311,312,313,317,32,334,336,40,115,116,117,118,357,119,120,122,373],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:269","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[244,314,317,318],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[150,55,213,241,280,296],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[413],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[244,314,317,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[334],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[157],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":329,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests2.UsageTest.argumentsOrdered":302,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":291,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":248,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":104,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":126,"org.easymock.tests2.DelegateToTest.testReturnException":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":210,"org.easymock.tests.MockingTest.testPartialClassMocking":380,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":308,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":257,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":387,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":78,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":49,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":332,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":13,"org.easymock.tests2.UsageTest.wrongArguments":298,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":201,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":166,"org.easymock.tests2.UsageConstraintsTest.testNull":32,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":403,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":290,"org.easymock.tests2.CaptureTest.testPrimitive":356,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":15,"org.easymock.tests.UsageTest.moreThanOneArgument":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":92,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":25,"org.easymock.tests.UsageTest.argumentsOrdered":155,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":275,"org.easymock.tests.UsageVarargTest.varargIntAccepted":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":20,"org.easymock.tests.ReplayStateInvalidUsageTest.times":195,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":365,"org.easymock.tests2.AnswerTest.answer":313,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":255,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":322,"org.easymock.tests2.CaptureTest.testAnd":355,"org.easymock.tests2.UsageTest.strictResetToDefault":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":410,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":24,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":97,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":285,"org.easymock.tests2.DelegateToTest.testDelegate":6,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":278,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":219,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":157,"org.easymock.tests2.CaptureTest.testCapture1_2446744":117,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":87,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":320,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":189,"org.easymock.tests.UsageThrowableTest.throwError":268,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":161,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":352,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":27,"org.easymock.samples.PartialClassMockTest.testGetArea":379,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":190,"org.easymock.tests.MockingTest.testInterfaceMocking":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":17,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":79,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":267,"org.easymock.tests2.UsageTest.niceToStrict":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":238,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":391,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":368,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":84,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":286,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":135,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":223,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":199,"org.easymock.tests.UsageOverloadedMethodTest.overloading":232,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":36,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":205,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":66,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":231,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":114,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":358,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":139,"org.easymock.tests2.EasyMockSupportClassTest.testAll":386,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":90,"org.easymock.tests2.CaptureTest.testCaptureAll":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":217,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":321,"org.easymock.tests.MockNameTest.defaultName":148,"org.easymock.tests2.UsageConstraintsTest.testMatches":37,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":26,"org.easymock.samples.ExampleTest.voteForRemovals":131,"org.easymock.tests.UsageVarargTest.allKinds":147,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":218,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":273,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":348,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":374,"org.easymock.tests2.UsageConstraintsTest.greaterThan":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":52,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":96,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":409,"org.easymock.samples.ExampleTest.voteForRemoval":128,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":111,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":1,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":162,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":296,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":283,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":209,"org.easymock.tests2.CaptureTest.testCaptureFirst":122,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":284,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":303,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":208,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":63,"org.easymock.tests2.CaptureTest.testCapture2_2446744":121,"org.easymock.tests2.UsageTest.moreThanOneArgument":103,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":327,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":256,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":146,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":229,"org.easymock.tests.UsageExpectAndReturnTest.longType":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":215,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":281,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":91,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":149,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":338,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":23,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":221,"org.easymock.tests.UsageCallCountTest.tooManyCalls":230,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":235,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":272,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":396,"org.easymock.tests2.UsageConstraintsTest.testContains":35,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":224,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":377,"org.easymock.tests2.UsageConstraintsTest.testFind":31,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":77,"org.easymock.tests.MockTypeTest.fromEasyMockClass":160,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":172,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":100,"org.easymock.tests.UsageExpectAndReturnTest.object":170,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":406,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":289,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":50,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":265,"org.easymock.tests.UsageTest.exactCallCountByLastCall":156,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":243,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":181,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":276,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":45,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":136,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":70,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":3,"org.easymock.tests.MockClassControlTest.testHashCode":412,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":342,"org.easymock.tests2.EasyMockSupportTest.testVerify":293,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":277,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":134,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":203,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":319,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":324,"org.easymock.tests.UsageVarargTest.varargCharAccepted":140,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":261,"org.easymock.tests2.UsageTest.openCallCountByLastCall":105,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":292,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":133,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":263,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":270,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":341,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":407,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":81,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":71,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":389,"org.easymock.tests2.UsageTest.resumeIfFailure":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":212,"org.easymock.tests2.StubTest.stubWithReturnValue":280,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":47,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":65,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":339,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":254,"org.easymock.samples.SupportTest.voteForRemovals":125,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":344,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":86,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":260,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":314,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":183,"org.easymock.tests.UsageExpectAndThrowTest.object":236,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":8,"org.easymock.tests2.DelegateToTest.testWrongClass":5,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":21,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":22,"org.easymock.samples.ConstructorCalledMockTest.testTax":9,"org.easymock.tests.UsageStrictMockTest.range":74,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":353,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":288,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":85,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":392,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":154,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":197,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":200,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":180,"org.easymock.tests2.CaptureTest.testCaptureNone":120,"org.easymock.tests.UsageUnorderedTest.message":93,"org.easymock.tests.UsageVerifyTest.twoReturns":151,"org.easymock.tests.UsageVarargTest.varargByteAccepted":145,"org.easymock.tests2.ThreadingTest.testThreadSafe":110,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":227,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":266,"org.easymock.tests2.CaptureTest.testCapture_2617107":116,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":159,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":258,"org.easymock.tests2.UsageConstraintsTest.any":334,"org.easymock.tests2.StubTest.stub":101,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":194,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":211,"org.easymock.tests.UsageExpectAndThrowTest.longType":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":259,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":193,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":306,"org.easymock.tests2.SerializationTest.testClass":46,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":346,"org.easymock.tests.LimitationsTest.mockNativeMethod":385,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":384,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":73,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":362,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":307,"org.easymock.tests2.NameTest.nameForMocksControl":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":364,"org.easymock.tests2.MockedExceptionTest.testMockedException":376,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":58,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":80,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":279,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":382,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":401,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":393,"org.easymock.tests.MockingTest.testNicePartialClassMocking":381,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":405,"org.easymock.tests2.CaptureTest.testCaptureLast":119,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":360,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":158,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":400,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":331,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":337,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":326,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":83,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":301,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":41,"org.easymock.samples.ExampleTest.removeNonExistingDocument":132,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":191,"org.easymock.tests.UsageStrictMockTest.differentMethods":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":367,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":343,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":112,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":411,"org.easymock.tests.UsageExpectAndThrowTest.floatType":233,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":336,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":316,"org.easymock.tests.UsageVerifyTest.twoThrows":150,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":388,"org.easymock.samples.ExampleTest.voteAgainstRemoval":129,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":249,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":408,"org.easymock.tests2.UsageConstraintsTest.testNotNull":40,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":274,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":375,"org.easymock.tests2.UsageTest.defaultResetToNice":300,"org.easymock.samples.ExampleTest.voteAgainstRemovals":127,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":250,"org.easymock.tests.UsageVarargTest.differentLength":142,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":361,"org.easymock.tests2.CallbackTest.callback":102,"org.easymock.tests2.UsageConstraintsTest.equals":330,"org.easymock.tests.UsageTest.openCallCountByLastCall":57,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":185,"org.easymock.tests.UsageCallCountTest.tooFewCalls":225,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":398,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":202,"org.easymock.tests.UsageThrowableTest.throwCheckedException":271,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":399,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":184,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":397,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":366,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":196,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":325,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":318,"org.easymock.tests.ObjectMethodsTest.testHashCode":264,"org.easymock.tests2.NameTest.nameForNiceMock":311,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":328,"org.easymock.tests2.DependencyTest.testInterfaceMocking":294,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":51,"org.easymock.samples.ExampleTest.addDocument":130,"org.easymock.tests2.DelegateToTest.testStubDelegate":373,"org.easymock.tests2.AnswerTest.stubAnswer":317,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":11,"org.easymock.tests.UsageVarargTest.varargLongAccepted":144,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":247,"org.easymock.tests.UsageExpectAndReturnTest.floatType":167,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":72,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":44,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":10,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":39,"org.easymock.tests.UsageThrowableTest.noUpperLimit":94,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":206,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":350,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":30,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":118,"org.easymock.tests2.SerializationTest.test":323,"org.easymock.tests2.UsageConstraintsTest.testSame":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":60,"org.easymock.samples.SupportTest.addDocument":124,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":192,"org.easymock.tests.GenericTest.testPackageScope":383,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":242,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":349,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":165,"org.easymock.tests2.NameTest.nameForMock":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":67,"org.easymock.tests2.UsageStrictMockTest.differentMethods":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":61,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":88,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":262,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":98,"org.easymock.tests2.MockedExceptionTest.testRealException":378,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":252,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":354,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":251,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":14,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":198,"org.easymock.tests2.NameTest.nameForStrictMock":310,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":404,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":7,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":390,"org.easymock.tests2.UsageStrictMockTest.range":108,"org.easymock.tests2.UsageConstraintsTest.lessThan":42,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":246,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":282,"org.easymock.tests2.CaptureTest.testCaptureRightOne":359,"org.easymock.tests2.UsageConstraintsTest.testOr":34,"org.easymock.tests.UsageRangeTest.combination":95,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":402,"org.easymock.tests.UsageTest.wrongArguments":153,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":169,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":239,"org.easymock.tests.UsageVarargTest.varargShortAccepted":143,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":228,"org.easymock.tests2.UsageConstraintsTest.cmpTo":335,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":315,"org.easymock.tests2.CompareToTest.testLessThan":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":241,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":106,"org.easymock.tests2.CaptureTest.testCaptureFromStub":43,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":188,"org.easymock.tests.UsageTest.unexpectedCallWithArray":152,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":174,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":226,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":69,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":175,"org.easymock.tests2.UsageConstraintsTest.constraints":113,"org.easymock.samples.ExampleTest.addAndChangeDocument":53,"org.easymock.tests.UsageStrictMockTest.testVerify":177,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":123,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":216,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":18,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":19,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":207,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":287}}]
