[{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"org.easymock.MockType.NICE","org.easymock.MockType.NICE":"type"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[79,80,81,82,83,84,1,2,85,86,87,88,6,89,90,91,23,24,92,93,94,95,35,96,97,98,99,100,40,101,102,103,104,105,44,45,106,107,47,48,108,109,51,110,57,66,111,112,113],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[114,115,116,117,118,119,120,121,122,123,124,125,126,81,127,128,129,130,131,0,84,1,2,3,85,86,4,5,87,88,6,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,7,8,149,150,9,151,10,11,12,13,152,14,15,16,17,153,18,19,20,21,89,154,90,22,91,23,24,155,156,157,158,159,25,160,161,26,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,27,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,92,93,94,206,207,208,209,28,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,95,233,234,235,236,237,238,239,240,241,242,243,244,245,246,34,247,248,249,250,251,252,253,254,255,256,35,36,37,38,257,258,259,39,260,100,40,261,41,101,102,103,42,43,262,104,105,44,45,106,263,46,107,47,48,264,265,266,267,268,269,49,270,50,271,272,273,274,275,276,277,278,279,108,280,281,282,283,109,51,110,284,285,286,287,288,289,52,53,54,290,291,55,56,57,292,58,59,60,61,293,294,62,295,63,296,64,65,66,67,68,297,298,299,300,301,69,70,71,302,111,303,304,305,306,307,308,309,310,112,311,113,312,313,314,315,316,317,318,72,319,320,73,321,322,74,75,323,324,325,76,77,326,78,327,328,329,330,331,332],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[158,160,172,184,185,186,187,188,189,333,334,335,336,39,329,330,331,332],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[337,338,339],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"failures":[340,341,167,290],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[342,343,344,345,346,347,348,114,115,116,117,118,119,120,121,349,350,80,337,338,339,122,123,124,351,125,126,81,127,128,129,130,131,352,353,0,84,1,2,3,85,86,4,5,87,88,6,354,132,133,134,355,356,135,136,137,138,139,140,141,357,142,143,144,145,146,147,148,7,8,149,150,9,151,10,11,12,13,152,14,15,16,17,153,18,19,20,21,89,154,90,22,91,23,24,155,156,358,359,360,340,361,341,157,158,159,25,160,161,26,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,362,27,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,333,334,335,200,201,202,203,204,205,92,93,94,363,206,207,364,365,208,209,28,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,366,367,230,368,231,232,95,233,234,235,236,237,238,239,240,369,370,371,372,373,374,375,336,376,29,377,30,378,379,380,381,382,383,384,385,31,32,386,33,387,241,388,389,390,391,392,393,394,395,242,243,244,396,397,245,246,34,247,248,249,250,251,398,399,400,401,402,252,253,254,255,256,35,36,37,38,257,403,258,259,39,404,96,405,406,407,97,98,408,409,99,410,411,412,413,414,260,415,100,40,261,41,101,102,103,42,43,262,104,105,44,45,106,263,46,107,47,48,264,265,416,417,418,266,267,268,269,49,419,420,270,50,271,272,273,274,275,276,277,278,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,279,446,108,280,447,281,282,283,448,449,450,451,452,109,51,453,110,284,285,286,287,454,455,456,288,289,457,52,53,54,290,291,55,56,57,292,458,58,59,60,61,293,294,459,62,295,63,296,64,65,66,67,68,297,298,299,300,301,69,70,71,302,111,303,304,305,306,307,460,308,461,309,310,112,311,113,312,462,463,464,465,466,467,468,469,470,471,472,473,474,475,313,314,315,316,476,317,318,72,319,320,73,321,322,74,75,323,324,325,76,77,477,478,479,480,481,482,483,484,485,486,487,488,489,326,78,327,490,328,329,330,331,332],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:245","sourceCode":"net.sf.cglib.proxy.Factory.getCallback(0)","type":"CtInvocationImpl"},"failures":[347,349,350,134,137,140,141,357,142,143,145,148,183,206,207,364,230,233,234,235,236,237,238,239,240,278,424,427,437,443,279,108,280,281,282,283,448,450,109,51,110,285,286,454,288,302,111,304,305,306,307,308,309,310,112,311,113,312,462,468,316,329,330,331],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","toMock":"toMock"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[391,491,492],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[121,0,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,202,28,210,211,214,216,217,218,219,221,222,223,224,226,227,228,229,95,246,35,36,37,38,257,258,259,100,41,103,42,43,44,47,48,52,53,54,55,56,57,58,59,60,61,63,296,64,65,67,68,70,71,72,319,73,321,74,75,76,77,328],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:89","failures":[493,494,282,112,311],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[343,343,344,344,347,349,350,134,137,357,142,143,145,183,206,207,364,230,234,265,276,278,424,427,437,443,279,494,108,280,282,283,448,450,109,51,495,110,285,286,287,454,288,289,302,111,304,305,306,307,308,310,112,311,113,496,497,498,331],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[261],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[261],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[318,319,73,321,322,323,324,325,76],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[499,500,501,502,503,504],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[416,449,505,506,507,508,509,510,511,512],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[79,80,82,83,84,1,85,86,87,88,90,23,24,95,101,104,105,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1673","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:247","sourceCode":"return ((T)(net.sf.cglib.proxy.Factory))","type":"CtReturnImpl"},"failures":[347,349,350,134,137,140,141,357,142,143,145,148,183,363,206,207,364,365,366,230,233,234,235,236,237,238,239,240,241,388,389,390,391,392,394,278,421,422,424,426,427,428,429,430,432,433,434,435,437,438,439,440,441,442,443,279,108,280,281,282,283,448,450,109,51,110,285,286,454,288,302,111,304,305,306,307,308,309,310,112,311,113,312,462,468,475,316,329,330,331],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[513,276,277,278],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[57,292,59,61,293,459,297,69,318,319,324],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[342,343,343,344,344,345,346,347,348,114,115,116,117,118,119,120,121,349,350,337,338,339,122,123,124,351,125,126,81,127,128,129,130,131,352,353,0,84,1,2,3,85,86,4,5,87,88,6,354,132,133,134,135,136,137,138,139,140,141,357,142,143,144,145,146,147,148,7,8,149,150,9,151,10,11,12,13,152,14,15,16,17,153,18,19,20,21,89,154,90,22,91,23,24,155,156,358,359,360,340,361,341,157,158,159,25,160,161,26,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,362,27,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,333,334,335,200,201,202,203,204,205,92,93,94,363,206,207,364,365,208,209,28,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,366,367,230,368,231,232,95,233,234,235,236,237,238,239,240,369,370,371,372,373,374,375,336,376,29,377,30,378,379,380,381,382,383,384,385,31,32,386,33,387,241,388,389,390,391,392,393,394,395,242,243,244,396,397,245,246,34,247,248,249,250,251,398,399,400,401,402,252,253,254,255,256,35,36,37,38,257,403,258,259,39,404,96,405,406,407,97,98,408,409,99,410,411,412,413,414,260,415,100,40,261,41,101,102,103,42,43,262,104,105,44,45,106,263,46,107,47,48,264,265,416,417,418,266,267,268,269,49,419,420,270,50,271,272,273,274,275,276,277,278,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,279,446,108,280,447,281,282,283,448,449,450,452,109,51,453,110,284,285,286,287,454,456,288,289,52,53,54,290,291,55,56,57,292,458,58,59,60,61,293,294,459,62,295,63,296,64,65,66,67,68,297,298,299,300,301,69,70,71,302,111,303,304,305,306,307,460,308,461,309,310,112,311,113,312,462,463,464,465,466,467,468,469,470,471,472,473,474,475,316,476,317,318,72,319,320,73,321,322,74,75,323,324,325,76,77,477,478,479,480,481,482,483,484,485,486,487,488,489,326,78,327,490,328,329,330,331,332],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[343,343,344,344,346,347,114,116,117,119,353,0,1,2,3,4,5,6,354,132,142,143,145,7,8,149,150,9,151,10,11,12,13,152,14,15,16,17,153,18,19,20,21,22,23,24,359,360,361,157,159,25,26,27,190,191,192,193,194,206,364,208,209,28,230,231,232,382,386,245,34,247,248,249,250,251,252,253,254,255,256,35,36,37,38,39,404,96,405,406,407,97,98,408,409,99,410,411,260,415,40,261,41,102,42,43,262,44,45,46,47,48,265,49,50,276,277,424,427,437,443,108,282,448,450,51,285,286,287,454,456,288,289,52,53,54,290,291,55,56,57,292,58,59,60,61,293,294,62,295,63,296,64,65,66,67,68,297,298,299,301,69,70,71,302,111,303,304,305,306,308,112,311,113,468,318,72,320,73,74,75,323,324,325,76,77,482,78,331],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"returnType","throwableClass":"returnType"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[370,399],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[343,344,265,416,417,276,446,447,449,452,453,461],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[295,308,514],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[515,516,85,90,517,518],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":292,"org.easymock.tests2.UsageTest.argumentsOrdered":105,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":2,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":410,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":377,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":103,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":348,"org.easymock.tests2.DelegateToTest.testReturnException":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":185,"org.easymock.tests.MockingTest.testPartialClassMocking":142,"org.easymock.tests.MockClassControlTest.testToString":235,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":418,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":361,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":431,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":427,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":210,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":415,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":506,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":294,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":159,"org.easymock.tests2.UsageTest.wrongArguments":101,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":488,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":176,"org.easymock.samples.ExampleTest.answerVsDelegate":115,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":137,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":147,"org.easymock.tests2.UsageConstraintsTest.testNull":59,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":304,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":99,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":240,"org.easymock.tests2.CaptureTest.testPrimitive":320,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":26,"org.easymock.tests.UsageTest.moreThanOneArgument":3,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":229,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":254,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":398,"org.easymock.tests.UsageTest.argumentsOrdered":88,"org.easymock.tests.UsageVarargTest.varargIntAccepted":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":190,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":511,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":279,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":473,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":314,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":194,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":482,"org.easymock.tests.ReplayStateInvalidUsageTest.times":170,"org.easymock.tests2.DependencyTest.testClassMocking":413,"org.easymock.tests2.AnswerTest.answer":49,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":383,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":275,"org.easymock.tests2.CaptureTest.testAnd":318,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":356,"org.easymock.tests2.UsageTest.strictResetToDefault":261,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":447,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":407,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":37,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":402,"org.easymock.tests2.DelegateToTest.testDelegate":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":225,"org.easymock.tests.LimitationsTest.mockFinalMethod":368,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":199,"org.easymock.tests2.DependencyTest.testClassMockingSupport":414,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":354,"org.easymock.tests2.CaptureTest.testCapture1_2446744":73,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":460,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":223,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":273,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":164,"org.easymock.tests.UsageThrowableTest.throwError":245,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":136,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":474,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":445,"org.easymock.samples.PartialClassMockTest.testGetArea":347,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":165,"org.easymock.tests.MockingTest.testInterfaceMocking":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":191,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":432,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":397,"org.easymock.tests2.UsageTest.niceToStrict":102,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":282,"org.easymock.tests2.MockBuilderTest.testCreateMock":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":440,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":485,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":517,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":219,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":97,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":355,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":339,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":174,"org.easymock.tests.UsageOverloadedMethodTest.overloading":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":436,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":181,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":14,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":208,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":491,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":296,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":323,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":351,"org.easymock.tests2.EasyMockSupportClassTest.testAll":424,"org.easymock.tests.MockClassControlTest.testEquals":239,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":207,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":227,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":496,"org.easymock.tests2.CaptureTest.testCaptureAll":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":197,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":274,"org.easymock.tests.MockNameTest.defaultName":352,"org.easymock.tests2.UsageConstraintsTest.testMatches":65,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":255,"org.easymock.samples.ExampleTest.voteForRemovals":119,"org.easymock.tests.UsageVarargTest.allKinds":131,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":198,"org.easymock.samples.BasicClassMockTest.testPrintContent":350,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":250,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":106,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":490,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":512,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":393,"org.easymock.tests2.UsageConstraintsTest.greaterThan":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":425,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":36,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":113,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":394,"org.easymock.samples.ExampleTest.voteForRemoval":116,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":53,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":312,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":138,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":315,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":307,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":183,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":40,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":405,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":184,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":489,"org.easymock.tests2.CaptureTest.testCaptureFirst":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":406,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":45,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":182,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":11,"org.easymock.tests2.UsageTest.moreThanOneArgument":41,"org.easymock.tests2.CaptureTest.testCapture2_2446744":76,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":384,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":51,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":130,"org.easymock.tests.GenericTest.testBridgedEquals":365,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":93,"org.easymock.tests.UsageExpectAndReturnTest.longType":150,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":404,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":195,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":495,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":228,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":300,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":353,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":252,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":334,"org.easymock.tests.UsageCallCountTest.tooManyCalls":94,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":441,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":12,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":487,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":215,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":249,"org.easymock.tests.MockingTest.testNiceClassMocking":148,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":286,"org.easymock.tests.MockingTest.testClassMocking":141,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":494,"org.easymock.tests2.UsageConstraintsTest.testContains":63,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":201,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":331,"org.easymock.tests2.UsageConstraintsTest.testFind":58,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":28,"org.easymock.tests.MockTypeTest.fromEasyMockClass":135,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":89,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":258,"org.easymock.tests.UsageExpectAndReturnTest.object":152,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":308,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":486,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":409,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":507,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":126,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":244,"org.easymock.tests.UsageTest.exactCallCountByLastCall":6,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":399,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":340,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":416,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":18,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":180,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":464,"org.easymock.tests.MockClassControlTest.testHashCode":238,"org.easymock.tests2.EasyMockSupportTest.testVerify":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":434,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":400,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":178,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":338,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":82,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":272,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":284,"org.easymock.tests.UsageVarargTest.varargCharAccepted":125,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":387,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":33,"org.easymock.tests2.UsageTest.openCallCountByLastCall":42,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":411,"org.easymock.tests.DefaultClassInstantiatorTest.object":241,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":337,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":242,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":435,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":217,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":480,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":463,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":112,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":237,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":216,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":19,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":443,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":236,"org.easymock.tests2.UsageTest.resumeIfFailure":44,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":134,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":187,"org.easymock.tests2.StubTest.stubWithReturnValue":39,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":449,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":13,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":301,"org.easymock.tests2.SerializationTest.testAllMockedMethod":278,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":382,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":518,"org.easymock.samples.SupportTest.voteForRemovals":346,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":363,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":466,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":222,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":513,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":386,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":419,"org.easymock.tests.UsageExpectAndThrowTest.object":220,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":341,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":298,"org.easymock.tests2.DelegateToTest.testWrongClass":327,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":231,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":232,"org.easymock.tests.UsageStrictMockTest.range":23,"org.easymock.samples.ConstructorCalledMockTest.testTax":343,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":476,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":408,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":285,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":221,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":421,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":172,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":87,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":175,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":515,"org.easymock.tests2.CaptureTest.testCaptureNone":75,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":360,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":500,"org.easymock.tests.UsageUnorderedTest.message":95,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":79,"org.easymock.tests.UsageVerifyTest.twoReturns":1,"org.easymock.tests.UsageVarargTest.varargByteAccepted":129,"org.easymock.tests2.ThreadingTest.testThreadSafe":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":438,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":205,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":396,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":349,"org.easymock.tests2.CaptureTest.testCapture_2617107":319,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":31,"org.easymock.tests2.UsageConstraintsTest.any":62,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":169,"org.easymock.tests2.StubTest.stub":259,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":335,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":32,"org.easymock.tests.UsageExpectAndThrowTest.longType":213,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":391,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":168,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":107,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":468,"org.easymock.tests2.SerializationTest.testClass":276,"org.easymock.tests.LimitationsTest.mockNativeMethod":230,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":21,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":364,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":498,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":479,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":264,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":501,"org.easymock.tests2.NameTest.nameForMocksControl":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":481,"org.easymock.tests2.MockedExceptionTest.testMockedException":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":426,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":5,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":403,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":145,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":214,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":302,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":450,"org.easymock.tests.MockingTest.testNicePartialClassMocking":143,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":306,"org.easymock.tests2.CompareToTest.testCompareEqual":514,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":477,"org.easymock.tests2.CaptureTest.testCaptureLast":74,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":132,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":289,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":293,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":299,"org.easymock.tests.MockingTest.testTwoMocks":357,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":457,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":7,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":218,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":104,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":70,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":504,"org.easymock.samples.ExampleTest.removeNonExistingDocument":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":484,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":166,"org.easymock.tests.UsageStrictMockTest.differentMethods":24,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":465,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":503,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":389,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":54,"org.easymock.tests2.MockBuilderTest.testCreateMockString":110,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":428,"org.easymock.tests.UsageExpectAndThrowTest.floatType":212,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":423,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":270,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":417,"org.easymock.tests.UsageVerifyTest.twoThrows":84,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":437,"org.easymock.samples.ExampleTest.voteAgainstRemoval":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":30,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":358,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":311,"org.easymock.tests.LimitationsTest.privateConstructor":367,"org.easymock.tests2.UsageConstraintsTest.testNotNull":69,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":251,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":329,"org.easymock.tests2.UsageTest.defaultResetToNice":262,"org.easymock.samples.ExampleTest.voteAgainstRemovals":114,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":378,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":478,"org.easymock.tests.UsageVarargTest.differentLength":81,"org.easymock.tests2.CallbackTest.callback":100,"org.easymock.tests2.UsageConstraintsTest.equals":458,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":461,"org.easymock.tests.UsageTest.openCallCountByLastCall":4,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":160,"org.easymock.tests.UsageCallCountTest.tooFewCalls":203,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":454,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":177,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":502,"org.easymock.tests.UsageThrowableTest.throwCheckedException":248,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":516,"org.easymock.tests.MockingTest.testStrictClassMocking":140,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":158,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":288,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":483,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":287,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":171,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":456,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":271,"org.easymock.tests.ObjectMethodsTest.testHashCode":243,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":510,"org.easymock.tests2.NameTest.nameForNiceMock":268,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":291,"org.easymock.tests2.DependencyTest.testInterfaceMocking":260,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":508,"org.easymock.samples.ExampleTest.addDocument":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":444,"org.easymock.tests2.DelegateToTest.testStubDelegate":78,"org.easymock.tests2.AnswerTest.stubAnswer":50,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":22,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":451,"org.easymock.tests.UsageVarargTest.varargLongAccepted":128,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":29,"org.easymock.tests.UsageExpectAndReturnTest.floatType":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":20,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":265,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":344,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":472,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":68,"org.easymock.tests.UsageThrowableTest.noUpperLimit":246,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":362,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":56,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":475,"org.easymock.tests2.SerializationTest.test":277,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":321,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":492,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":8,"org.easymock.tests2.UsageConstraintsTest.testSame":60,"org.easymock.samples.SupportTest.addDocument":345,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":455,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":429,"org.easymock.tests.GenericTest.testPackageScope":206,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":471,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":146,"org.easymock.tests2.NameTest.nameForMock":266,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":15,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":453,"org.easymock.tests2.UsageStrictMockTest.differentMethods":48,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":309,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":9,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":224,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":395,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":38,"org.easymock.tests2.MockedExceptionTest.testRealException":332,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":139,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":505,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":379,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":173,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":25,"org.easymock.tests2.NameTest.nameForStrictMock":267,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":281,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":257,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":305,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":316,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":390,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":297,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":108,"org.easymock.tests2.UsageStrictMockTest.range":47,"org.easymock.tests2.UsageConstraintsTest.lessThan":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":467,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":493,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":509,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":433,"org.easymock.tests2.CaptureTest.testCaptureRightOne":324,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":499,"org.easymock.tests2.UsageConstraintsTest.testOr":61,"org.easymock.tests.UsageRangeTest.combination":35,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":111,"org.easymock.tests.UsageTest.wrongArguments":86,"org.easymock.tests2.MockBuilderTest.testWithConstructor":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":430,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":151,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":370,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":392,"org.easymock.tests.UsageVarargTest.varargShortAccepted":127,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":92,"org.easymock.tests2.UsageConstraintsTest.cmpTo":295,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":372,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":43,"org.easymock.tests2.CaptureTest.testCaptureFromStub":325,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":163,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":280,"org.easymock.tests.UsageTest.unexpectedCallWithArray":85,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":90,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":204,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":17,"org.easymock.tests2.UsageConstraintsTest.constraints":57,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":91,"org.easymock.samples.ExampleTest.addAndChangeDocument":121,"org.easymock.tests.UsageStrictMockTest.testVerify":156,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":342,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":154,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":196,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":322,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":497,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":192,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":10,"org.easymock.tests.LimitationsTest.abstractClass":366,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":27,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":193,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":123,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":98}}]
