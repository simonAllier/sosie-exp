[{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[1,2],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[3],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[4,5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[4,5,6,7],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,4,6,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[12,67],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[68,69,70,71,72,73,74],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[75,76,77,78,79,80,81,82,83,68,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,9,99,100,3,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,19,131,132,133,134,25,31,32,135,136,137,138,139,140,141,142,143,144,145,37,38,40,41,4,5,146,147,148,149,150,151,2,152,153,154,155,156,157,158,159,69,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,70,71,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,74,240,241,242,243,244,245,246,247],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[113],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[248],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[89,94,103],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[3,249,140],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[140],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[250,76,251,77,252,252,253,253,254,255,125,127,128,129,130,19,133,22,25,27,28,31,36,37,38,39,256,40,41,45,48,58,64,147,2,154,162,163,164,166,170,177,180,181,192,193,194,197,208,209,210,218,219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[250,75,76,251,257,77,258,252,253,259,254,260,261,255,262,263,78,264,79,80,265,82,84,85,266,267,268,269,270,86,87,88,89,90,91,92,93,94,95,96,97,98,9,99,100,3,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,271,118,119,122,123,124,125,126,127,128,129,249,130,10,13,15,19,131,272,134,273,274,275,276,277,278,279,280,281,282,283,284,285,21,25,26,27,28,136,137,139,140,67,286,33,34,35,287,288,36,37,38,39,256,40,41,4,5,6,45,48,58,64,289,290,291,292,146,147,149,150,293,151,294,295,296,297,1,298,2,152,153,154,155,299,158,160,161,300,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,301,186,187,302,303,304,188,70,71,189,192,193,194,195,196,197,305,306,307,308,309,310,311,200,312,313,314,315,316,317,318,319,320,321,208,209,210,211,212,322,213,214,217,218,219,323,324,325,326,327,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,328,241,247],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:275","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[75,79,80,123,329,124,126,150,330,331],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[82,84,85,137,158,160,161,188,70,71,332,200,247],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[133,333,334,335],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":89,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":199,"org.easymock.tests2.UsageTest.argumentsOrdered":144,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":185,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":140,"org.easymock.tests2.StubTest.stubWithReturnValue":151,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":260,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":171,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests2.DelegateToTest.testReturnException":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":183,"org.easymock.tests.MockingTest.testPartialClassMocking":192,"org.easymock.samples.SupportTest.voteForRemovals":255,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":232,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":52,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":7,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":220,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":48,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":334,"org.easymock.tests.UsageExpectAndThrowTest.object":230,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":264,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":104,"org.easymock.tests2.DelegateToTest.testWrongClass":148,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":218,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":219,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":213,"org.easymock.tests2.UsageTest.wrongArguments":138,"org.easymock.samples.ConstructorCalledMockTest.testTax":252,"org.easymock.tests.UsageStrictMockTest.range":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":296,"org.easymock.samples.ExampleTest.answerVsDelegate":75,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":280,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":36,"org.easymock.tests2.UsageConstraintsTest.testNull":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":231,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":129,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":282,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":27,"org.easymock.tests2.CaptureTest.testPrimitive":113,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":217,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":239,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":205,"org.easymock.tests.UsageTest.moreThanOneArgument":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":42,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":295,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":128,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":153,"org.easymock.tests2.CaptureTest.testCaptureNone":271,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":0,"org.easymock.tests.UsageUnorderedTest.message":74,"org.easymock.tests.UsageVerifyTest.twoReturns":71,"org.easymock.tests.UsageVarargTest.varargByteAccepted":319,"org.easymock.tests2.ThreadingTest.testThreadSafe":131,"org.easymock.tests.UsageTest.argumentsOrdered":206,"org.easymock.tests.UsageVarargTest.varargIntAccepted":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":59,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":310,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":262,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":208,"org.easymock.tests2.CaptureTest.testCapture_2617107":112,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":21,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":332,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":216,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":26,"org.easymock.tests2.UsageConstraintsTest.any":96,"org.easymock.tests2.StubTest.stub":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":212,"org.easymock.tests.UsageExpectAndThrowTest.longType":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":184,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":83,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":288,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":270,"org.easymock.tests.LimitationsTest.mockNativeMethod":197,"org.easymock.tests2.AnswerTest.answer":123,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":181,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":269,"org.easymock.tests2.CaptureTest.testAnd":110,"org.easymock.tests2.UsageTest.strictResetToDefault":136,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":13,"org.easymock.tests2.NameTest.nameForMocksControl":292,"org.easymock.tests2.MockedExceptionTest.testMockedException":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":152,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":303,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":47,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":204,"org.easymock.tests2.DelegateToTest.testDelegate":149,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":224,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":127,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":28,"org.easymock.tests.MockingTest.testNicePartialClassMocking":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":235,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":130,"org.easymock.tests2.CaptureTest.testCaptureLast":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":301,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":191,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":94,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":327,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":105,"org.easymock.tests2.CaptureTest.testCapture1_2446744":114,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":233,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":267,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":228,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":143,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":108,"org.easymock.tests.UsageThrowableTest.throwError":240,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":198,"org.easymock.tests.UsageStrictMockTest.differentMethods":160,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":132,"org.easymock.tests2.MockBuilderTest.testCreateMockString":32,"org.easymock.tests.UsageExpectAndThrowTest.floatType":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":155,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":44,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":124,"org.easymock.tests.UsageVerifyTest.twoThrows":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":58,"org.easymock.samples.PartialClassMockTest.testGetArea":254,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":209,"org.easymock.samples.ExampleTest.voteAgainstRemoval":251,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":15,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":53,"org.easymock.tests2.UsageTest.niceToStrict":139,"org.easymock.tests2.UsageConstraintsTest.testNotNull":107,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":246,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":33,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":25,"org.easymock.tests2.UsageTest.defaultResetToNice":67,"org.easymock.tests2.MockBuilderTest.testCreateMock":30,"org.easymock.samples.ExampleTest.voteAgainstRemovals":250,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":61,"org.easymock.tests2.CallbackTest.callback":150,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":11,"org.easymock.tests.UsageTest.openCallCountByLastCall":203,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":229,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":278,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":86,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":305,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":294,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":215,"org.easymock.tests.UsageCallCountTest.tooFewCalls":308,"org.easymock.tests.UsageOverloadedMethodTest.overloading":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":57,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":99,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":39,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":173,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":9,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":118,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":297,"org.easymock.tests.UsageThrowableTest.throwCheckedException":243,"org.easymock.tests2.EasyMockSupportClassTest.testAll":45,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":298,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":268,"org.easymock.tests2.CaptureTest.testCaptureAll":111,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":40,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":190,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":38,"org.easymock.tests2.UsageConstraintsTest.testMatches":100,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":256,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":126,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":154,"org.easymock.samples.ExampleTest.voteForRemovals":77,"org.easymock.tests2.NameTest.nameForNiceMock":291,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":134,"org.easymock.tests.UsageVarargTest.allKinds":321,"org.easymock.tests2.DependencyTest.testInterfaceMocking":78,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":326,"org.easymock.samples.BasicClassMockTest.testPrintContent":263,"org.easymock.samples.ExampleTest.addDocument":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":65,"org.easymock.tests2.DelegateToTest.testStubDelegate":147,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":245,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":81,"org.easymock.tests2.AnswerTest.stubAnswer":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":186,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":158,"org.easymock.tests2.UsageConstraintsTest.greaterThan":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":46,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":302,"org.easymock.tests.UsageVarargTest.varargLongAccepted":318,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":16,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":161,"org.easymock.samples.ExampleTest.voteForRemoval":76,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":272,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":17,"org.easymock.tests.UsageExpectAndReturnTest.floatType":164,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":180,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":19,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":253,"org.easymock.tests.UsageThrowableTest.noUpperLimit":328,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":102,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":322,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":87,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":135,"org.easymock.tests2.SerializationTest.test":5,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":115,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":29,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":275,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":241,"org.easymock.tests2.UsageConstraintsTest.testSame":92,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":163,"org.easymock.samples.SupportTest.addDocument":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":182,"org.easymock.tests2.CaptureTest.testCaptureFirst":122,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":276,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":145,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":335,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":50,"org.easymock.tests.GenericTest.testPackageScope":1,"org.easymock.tests2.CaptureTest.testCapture2_2446744":121,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":133,"org.easymock.tests2.UsageTest.moreThanOneArgument":137,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":31,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":320,"org.easymock.tests2.NameTest.nameForMock":289,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":248,"org.easymock.tests.UsageExpectAndReturnTest.longType":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":323,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":174,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":236,"org.easymock.tests2.UsageStrictMockTest.differentMethods":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":12,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":166,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":234,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":304,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":307,"org.easymock.tests2.MockedExceptionTest.testRealException":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":62,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":330,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":225,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":214,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":37,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":306,"org.easymock.tests2.NameTest.nameForStrictMock":290,"org.easymock.tests2.UsageConstraintsTest.testContains":98,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":35,"org.easymock.tests2.UsageConstraintsTest.testFind":90,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":196,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":24,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":79,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":249,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":80,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":156,"org.easymock.tests.UsageExpectAndReturnTest.object":172,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":72,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":103,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":10,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":22,"org.easymock.tests2.UsageStrictMockTest.range":68,"org.easymock.tests2.UsageConstraintsTest.lessThan":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":281,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":316,"org.easymock.tests.UsageTest.exactCallCountByLastCall":207,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":189,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":54,"org.easymock.tests2.CaptureTest.testCaptureRightOne":119,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":333,"org.easymock.tests2.UsageConstraintsTest.testOr":93,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":20,"org.easymock.tests.UsageRangeTest.combination":187,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":312,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":178,"org.easymock.tests.UsageTest.wrongArguments":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":51,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":311,"org.easymock.tests2.EasyMockSupportTest.testVerify":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":167,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":55,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":331,"org.easymock.tests.UsageVarargTest.varargShortAccepted":317,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":266,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":8,"org.easymock.tests2.UsageConstraintsTest.cmpTo":97,"org.easymock.tests.UsageVarargTest.varargCharAccepted":315,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":329,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":265,"org.easymock.tests2.UsageTest.openCallCountByLastCall":141,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":142,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":284,"org.easymock.tests2.CaptureTest.testCaptureFromStub":120,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":23,"org.easymock.tests.UsageTest.unexpectedCallWithArray":201,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":56,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":242,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":157,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":309,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":176,"org.easymock.tests2.UsageConstraintsTest.constraints":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":14,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":159,"org.easymock.samples.ExampleTest.addAndChangeDocument":258,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":226,"org.easymock.tests.UsageStrictMockTest.testVerify":300,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":179,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":259,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":64,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":324,"org.easymock.tests2.UsageTest.resumeIfFailure":286,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":210,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":168,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":211,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":279,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":73}}]
