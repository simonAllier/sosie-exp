[{"position":"org.easymock.internal.Range:36","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,35,36,37,39,40,41,45,46,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,81,84,86,90,93,94,95,101,111,133,134,135,136,137,138,139,140,142,143,144,145,147,148,149,150,151,152,155,161,164,165,166,167,168,169,170,171,172,173,174,175,178,179,180,181,182,183,184,185,186,188,189,190,191,192,198,208,215,216,217,218,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,277,287,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,313,314,315,316,317,318,319,344,345,347,348,349,350,351,352,368,370,371,376,377,378,379,380,388,389,390,391,392,393,394,395,396,397,398,400,401,403,404,405,406,407,409,410,415,416,417,418,420,421,422,423,424,425,427,428,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,481,484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[25,488,27,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[43,83,88,89,489,490,220,223,228,491,234],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[12,13,33,81,82,83,84,87,88,111,147,148,150,151,152,155,158,161,163,217,219,221,222,227,229,232,233,235,237,268,273,287,309,310,313,314,400,401,403,404],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"equalsMethod","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[31,32,33,492],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[141],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,493,494,495,496,497,498,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,499,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,224,225,226,227,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,284,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[41,305,455],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,83,84,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,113,114,116,117,120,121,122,123,124,126,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,178,179,180,181,182,184,185,187,189,190,191,192,193,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,221,224,225,226,227,231,232,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,271,273,275,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[34,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[281,522,523],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[136,142,143,173,267,524,346,347,350,351,392,395,423,424,431],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.internal.Range:36","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[382,383,436,437],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[17,19,27,47,48,51,53,54,56,66,71],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[525,17,19,20,21,22,23,24,26,488,27,28,30],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:269","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[138],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[55,61,73,526],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[17,19,27,47,48,53,54,56,66],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[15,15,16,16,28,41,45,46,50,51,52,53,59,61,62,64,65,66,71,72,73,171,315,316,317,318,319,320,324,325,334,339,376,377,378,379,380,388,393,441,453,454,457,478,479,480],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[90],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[17,19,27,47,48,53,54,56,66],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[527,528,529,530,346,392],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[531],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"actual"}},{"position":"org.easymock.Capture:134","failures":[531],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[17,19,27,47,48,53,54,56,66],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":48,"org.easymock.tests2.UsageTest.argumentsOrdered":143,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":344,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":330,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":138,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":1,"org.easymock.tests2.DelegateToTest.testReturnException":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":302,"org.easymock.tests.MockingTest.testPartialClassMocking":361,"org.easymock.tests.MockClassControlTest.testToString":309,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":193,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":458,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":114,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":179,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":521,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":453,"org.easymock.tests2.UsageTest.wrongArguments":136,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":107,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":374,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":273,"org.easymock.tests2.UsageConstraintsTest.testNull":51,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":366,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":150,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":189,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":314,"org.easymock.tests2.CaptureTest.testPrimitive":20,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":457,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":477,"org.easymock.tests.UsageTest.moreThanOneArgument":345,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":317,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":408,"org.easymock.tests.UsageTest.argumentsOrdered":351,"org.easymock.tests.UsageVarargTest.varargIntAccepted":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":376,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":219,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":76,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":213,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":380,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":505,"org.easymock.tests.ReplayStateInvalidUsageTest.times":449,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":101,"org.easymock.tests2.DependencyTest.testClassMocking":176,"org.easymock.tests2.AnswerTest.answer":90,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":337,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":202,"org.easymock.tests2.CaptureTest.testAnd":17,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":270,"org.easymock.tests2.UsageTest.strictResetToDefault":134,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":184,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":370,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":412,"org.easymock.tests2.DelegateToTest.testDelegate":39,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":504,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":473,"org.easymock.tests.LimitationsTest.mockFinalMethod":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":305,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":357,"org.easymock.tests2.DependencyTest.testClassMockingSupport":177,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":438,"org.easymock.tests2.CaptureTest.testCapture1_2446744":21,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":471,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":200,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":443,"org.easymock.tests.UsageThrowableTest.throwError":259,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":272,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":384,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":319,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":132,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":508,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":444,"org.easymock.tests.MockingTest.testInterfaceMocking":363,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":377,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":433,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":486,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":459,"org.easymock.tests2.UsageTest.niceToStrict":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":119,"org.easymock.tests2.ThreadingTest.testChangeDefault":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":320,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":225,"org.easymock.tests2.MockBuilderTest.testCreateMock":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":104,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":527,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":467,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":185,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":269,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":437,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":413,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":372,"org.easymock.tests.UsageOverloadedMethodTest.overloading":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":123,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":428,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":61,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":405,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":250,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":522,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":60,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":26,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":292,"org.easymock.tests2.EasyMockSupportClassTest.testAll":111,"org.easymock.tests.MockClassControlTest.testEquals":313,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":401,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":475,"org.easymock.tests2.CaptureTest.testCaptureAll":18,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":355,"org.easymock.tests.MockNameTest.defaultName":487,"org.easymock.tests2.UsageConstraintsTest.testMatches":62,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":441,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":318,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":300,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":422,"org.easymock.samples.BasicClassMockTest.testPrintContent":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":356,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":265,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":169,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":38,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":306,"org.easymock.tests2.UsageConstraintsTest.greaterThan":64,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":112,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":369,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":161,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":509,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":284,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":165,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":162,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":274,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":77,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":153,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":501,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":404,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":133,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":327,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":182,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":301,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":34,"org.easymock.tests2.CaptureTest.testCaptureFirst":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":183,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":145,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":431,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":246,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":167,"org.easymock.tests2.UsageTest.moreThanOneArgument":135,"org.easymock.tests2.CaptureTest.testCapture2_2446744":29,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":338,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":299,"org.easymock.tests.GenericTest.testBridgedEquals":403,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":420,"org.easymock.tests.UsageExpectAndReturnTest.longType":242,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":353,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":476,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":480,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":69,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":474,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":315,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":382,"org.easymock.tests.UsageCallCountTest.tooManyCalls":421,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":106,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":463,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":264,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":82,"org.easymock.tests.MockingTest.testNiceClassMocking":367,"org.easymock.tests.MockingTest.testClassMocking":359,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":414,"org.easymock.tests2.UsageConstraintsTest.testContains":59,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":217,"org.easymock.tests2.UsageConstraintsTest.testFind":50,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":407,"org.easymock.tests.MockTypeTest.fromEasyMockClass":271,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":390,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":238,"org.easymock.tests.UsageExpectAndReturnTest.object":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":105,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":188,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":294,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":484,"org.easymock.tests.UsageTest.exactCallCountByLastCall":352,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":409,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":385,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":255,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":289,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":427,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":204,"org.easymock.tests.MockClassControlTest.testHashCode":312,"org.easymock.tests2.EasyMockSupportTest.testVerify":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":121,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":410,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":436,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":425,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":199,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":146,"org.easymock.tests.UsageVarargTest.varargCharAccepted":293,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":276,"org.easymock.tests2.CaptureTest.testCaptureMultiple":525,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":343,"org.easymock.tests2.UsageTest.openCallCountByLastCall":139,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":191,"org.easymock.tests.DefaultClassInstantiatorTest.object":277,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":435,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":482,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":524,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":122,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":262,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":99,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":203,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":507,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":159,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":311,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":464,"org.easymock.tests.CapturesMatcherTest.test":531,"org.easymock.tests.ReplayStateInvalidCallsTest.times":513,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":256,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":381,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":514,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":130,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":310,"org.easymock.tests2.UsageTest.resumeIfFailure":144,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":268,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":304,"org.easymock.tests2.StubTest.stubWithReturnValue":41,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":228,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":70,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":248,"org.easymock.tests2.SerializationTest.testAllMockedMethod":33,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":336,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":528,"org.easymock.samples.SupportTest.voteForRemovals":11,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":399,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":470,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":492,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":342,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":91,"org.easymock.tests.UsageExpectAndThrowTest.object":468,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":387,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":67,"org.easymock.tests2.DelegateToTest.testWrongClass":37,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":511,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":478,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":479,"org.easymock.tests.UsageStrictMockTest.range":395,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":79,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":187,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":81,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":469,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":227,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":108,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":373,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":529,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":503,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":434,"org.easymock.tests2.CaptureTest.testCaptureNone":25,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":494,"org.easymock.tests.UsageUnorderedTest.message":267,"org.easymock.tests.UsageVerifyTest.twoReturns":424,"org.easymock.tests.UsageVarargTest.varargByteAccepted":298,"org.easymock.tests2.ThreadingTest.testThreadSafe":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":125,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":418,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":485,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":12,"org.easymock.tests2.CaptureTest.testCapture_2617107":19,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":440,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":340,"org.easymock.tests2.UsageConstraintsTest.any":57,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":448,"org.easymock.tests2.StubTest.stub":40,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":383,"org.easymock.tests.UsageExpectAndThrowTest.longType":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":341,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":281,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":447,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":172,"org.easymock.tests2.SerializationTest.testClass":31,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":208,"org.easymock.tests.LimitationsTest.mockNativeMethod":287,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":402,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":258,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":98,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":519,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":175,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":495,"org.easymock.tests2.NameTest.nameForMocksControl":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":100,"org.easymock.tests2.MockedExceptionTest.testMockedException":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":113,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":349,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":462,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":237,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":364,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":147,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":229,"org.easymock.tests.MockingTest.testNicePartialClassMocking":362,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":152,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":96,"org.easymock.tests2.CaptureTest.testCaptureLast":24,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":439,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":518,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":54,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":88,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":68,"org.easymock.tests.MockingTest.testTwoMocks":360,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":515,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":89,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":466,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":142,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":72,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":498,"org.easymock.samples.ExampleTest.removeNonExistingDocument":8,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":445,"org.easymock.tests.UsageStrictMockTest.differentMethods":396,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":103,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":205,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":497,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":279,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":166,"org.easymock.tests2.MockBuilderTest.testCreateMockString":235,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":307,"org.easymock.tests.UsageExpectAndThrowTest.floatType":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":115,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":110,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":93,"org.easymock.tests.UsageVerifyTest.twoThrows":423,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":44,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":124,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":331,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":160,"org.easymock.tests.LimitationsTest.privateConstructor":286,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":490,"org.easymock.tests2.UsageConstraintsTest.testNotNull":71,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":215,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":266,"org.easymock.tests2.UsageTest.defaultResetToNice":141,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":332,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":97,"org.easymock.tests.UsageVarargTest.differentLength":295,"org.easymock.tests2.CallbackTest.callback":198,"org.easymock.tests2.UsageConstraintsTest.equals":49,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":156,"org.easymock.tests.UsageTest.openCallCountByLastCall":348,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":455,"org.easymock.tests.UsageCallCountTest.tooFewCalls":416,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":84,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":375,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":496,"org.easymock.tests.UsageThrowableTest.throwCheckedException":263,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":530,"org.easymock.tests.MockingTest.testStrictClassMocking":358,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":389,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":87,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":102,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":83,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":450,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":86,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":95,"org.easymock.tests2.CompareToTest.testGreateOrEqual":526,"org.easymock.tests.ObjectMethodsTest.testHashCode":483,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":517,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":168,"org.easymock.tests2.NameTest.nameForNiceMock":196,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":512,"org.easymock.tests2.DependencyTest.testInterfaceMocking":178,"org.easymock.samples.ExampleTest.addDocument":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":131,"org.easymock.tests2.DelegateToTest.testStubDelegate":36,"org.easymock.tests2.AnswerTest.stubAnswer":94,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":393,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":230,"org.easymock.tests.UsageVarargTest.varargLongAccepted":297,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":329,"org.easymock.tests.UsageExpectAndReturnTest.floatType":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":42,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":429,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":65,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":212,"org.easymock.tests.UsageThrowableTest.noUpperLimit":260,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":46,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":74,"org.easymock.tests2.SerializationTest.test":32,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":22,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":523,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":278,"org.easymock.tests2.UsageConstraintsTest.testSame":52,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":240,"org.easymock.samples.SupportTest.addDocument":10,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":85,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":502,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":116,"org.easymock.tests.GenericTest.testPackageScope":400,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":211,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":365,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":500,"org.easymock.tests2.NameTest.nameForMock":194,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":251,"org.easymock.tests2.UsageStrictMockTest.differentMethods":174,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":234,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":157,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":243,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":472,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":481,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":371,"org.easymock.tests2.MockedExceptionTest.testRealException":218,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":275,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":333,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":454,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":452,"org.easymock.tests2.NameTest.nameForStrictMock":195,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":224,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":236,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":151,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":78,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":66,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":280,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":221,"org.easymock.tests2.UsageStrictMockTest.range":173,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":506,"org.easymock.tests2.UsageConstraintsTest.lessThan":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":207,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":120,"org.easymock.tests2.CaptureTest.testCaptureRightOne":27,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":493,"org.easymock.tests2.UsageConstraintsTest.testOr":53,"org.easymock.tests.UsageRangeTest.combination":368,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":148,"org.easymock.tests.UsageTest.wrongArguments":347,"org.easymock.tests2.MockBuilderTest.testWithConstructor":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":117,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":321,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":282,"org.easymock.tests.UsageVarargTest.varargShortAccepted":296,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":419,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":520,"org.easymock.tests2.UsageConstraintsTest.cmpTo":58,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":92,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":323,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":140,"org.easymock.tests2.CaptureTest.testCaptureFromStub":28,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":442,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":222,"org.easymock.tests.UsageTest.unexpectedCallWithArray":346,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":516,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":392,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":417,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":491,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":253,"org.easymock.tests2.CaptureTest.testCapture":488,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":394,"org.easymock.tests2.UsageConstraintsTest.constraints":47,"org.easymock.samples.ExampleTest.addAndChangeDocument":9,"org.easymock.tests.UsageStrictMockTest.testVerify":398,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":14,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":391,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":354,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":23,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":378,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":245,"org.easymock.tests.LimitationsTest.abstractClass":285,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":379,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":186,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":290}}]
