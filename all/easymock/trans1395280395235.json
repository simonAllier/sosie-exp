[{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[22],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.ONCE"}},{"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[28],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[30],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,7,8,10,11,14,15,16,17,19,20,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,24,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[220,103,109,120],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[221,222,223,224,225,31,226,227,228,229,230,231,32,33,34,232,233,234,235,35,236,237,238,36,239,240,241,37,38,242,243,244,39,40,41,245,42,43,44,45,46,47,246,48,49,247,248,249,250,251,252,253,50,51,52,53,54,55,56,57,58,59,60,61,62,254,63,64,65,66,255,67,68,69,256,70,0,257,258,259,260,71,261,262,72,263,264,265,266,267,268,269,270,271,73,272,273,274,275,276,74,277,278,279,280,281,282,283,284,75,285,286,76,287,288,289,77,290,78,1,79,291,292,80,81,293,82,294,7,8,9,10,11,12,13,14,15,16,17,18,19,20,83,84,85,86,87,88,295,296,89,297,298,90,91,92,93,299,300,94,95,96,97,301,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,302,117,118,119,120,303,304,121,305,306,307,308,309,310,122,311,312,313,314,315,316,23,317,24,318,319,320,123,124,125,126,127,321,322,128,129,130,131,132,323,133,134,135,136,137,138,139,140,141,324,325,326,327,142,143,328,329,330,331,144,145,146,147,148,149,332,333,334,335,150,151,336,337,152,338,339,340,341,342,343,344,345,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,346,177,178,347,348,179,180,349,350,351,352,353,354,355,356,357,358,359,181,182,183,184,185,186,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,187,384,188,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,189,190,191,192,193,194,195,196,197,198,407,26,408,409,410,411,412,413,414,415,25,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,22,199,200,456,30,201,457,458,459,460,461,462,463,202,203,204,205,464,465,466,467,468,469,470,471,472,206,207,473,474,475,476,477,478,479,480,481,208,209,210,211,482,483,484,212,213,214,215,216,485,486,487,488,217,218,489,219,490,491,492,28,27,493,494,495],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[361,362,363,364,366,368],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[496],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[31,32,33,34,232,233,234,235,35,238,36,239,37,38,242,244,40,41,42,43,46,48,50,51,52,53,54,55,56,57,58,59,60,61,62,254,63,64,65,66,67,68,69,70,71,72,73,74,280,281,282,283,284,75,285,77,290,78,79,7,8,9,10,12,13,14,15,16,17,20,83,85,86,87,88,89,90,92,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,303,304,121,305,122,317,24,320,123,124,127,322,128,131,132,323,133,134,135,136,137,138,139,140,324,325,326,327,142,143,328,144,147,148,149,332,333,334,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,351,352,353,354,355,356,181,182,183,184,185,187,188,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,406,190,191,197,198,438,439,440,441,442,443,444,445,446,448,449,451,452,453,454,455,199,200,457,202,203,204,205,464,465,466,467,206,477,478,479,480,481,208,209,210,211,483,212,215,216,485,217,218,219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[245,47,246,130,176,346,347,348,186,203,204,497,484,214],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[32,70,0,286,288,1,292,498,293,499,500,496,297,326,327],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[501],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[31,32,33,34,232,233,234,235,35,238,36,239,37,38,242,244,40,41,42,43,46,48,50,51,52,53,54,55,56,57,58,59,60,61,62,254,63,64,65,66,67,68,69,70,71,72,73,74,280,281,282,283,284,75,285,77,290,78,79,7,8,9,10,12,13,14,15,16,17,20,83,85,86,87,88,89,90,92,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,303,304,121,305,122,317,24,320,123,124,127,322,128,131,132,323,133,134,135,136,137,138,139,140,324,325,326,327,142,143,328,144,147,148,149,332,333,334,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,351,352,353,354,355,356,181,182,183,184,185,187,188,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,406,190,191,197,198,438,439,440,441,442,443,444,445,446,448,449,451,452,453,454,455,199,200,457,202,203,204,205,464,465,466,467,206,477,478,479,480,481,208,209,210,211,483,212,215,216,485,217,218,219],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[502,503,173,383],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[22,199,200,456,30],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[30],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[220,103,109,120],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[504],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[22],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[317,318,320,136,470],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[505,506,507],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[7,8,9,14,15,17,20,96,97,99,101,102,118,151,336,337,455],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":97,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":174,"org.easymock.tests2.UsageTest.argumentsOrdered":246,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":60,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":25,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":43,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":134,"org.easymock.tests2.DelegateToTest.testReturnException":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":439,"org.easymock.tests.MockingTest.testPartialClassMocking":217,"org.easymock.tests.MockClassControlTest.testToString":458,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":279,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":188,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":72,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":2,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":103,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":150,"org.easymock.tests2.UsageTest.wrongArguments":245,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":231,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":333,"org.easymock.samples.ExampleTest.answerVsDelegate":136,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":343,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":491,"org.easymock.tests2.UsageConstraintsTest.testNull":99,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":86,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":463,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":59,"org.easymock.tests2.CaptureTest.testPrimitive":10,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":403,"org.easymock.tests.UsageTest.moreThanOneArgument":175,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":465,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":28,"org.easymock.tests.UsageTest.argumentsOrdered":348,"org.easymock.tests.UsageVarargTest.varargIntAccepted":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":6,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":285,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":249,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":315,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":185,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":31,"org.easymock.tests.ReplayStateInvalidUsageTest.times":378,"org.easymock.tests2.DependencyTest.testClassMocking":240,"org.easymock.tests2.AnswerTest.answer":35,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":422,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":235,"org.easymock.tests2.CaptureTest.testAnd":7,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":340,"org.easymock.tests2.UsageTest.strictResetToDefault":40,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":90,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":54,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":210,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":495,"org.easymock.tests2.DelegateToTest.testDelegate":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":399,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":502,"org.easymock.tests.LimitationsTest.mockFinalMethod":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":442,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":481,"org.easymock.tests2.DependencyTest.testClassMockingSupport":241,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":404,"org.easymock.tests2.CaptureTest.testCapture1_2446744":11,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":296,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":397,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":233,"org.easymock.tests.UsageThrowableTest.throwError":189,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":372,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":342,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":476,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":316,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":467,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":278,"org.easymock.samples.PartialClassMockTest.testGetArea":142,"org.easymock.tests.MockingTest.testInterfaceMocking":489,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":182,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":330,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":437,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":385,"org.easymock.tests2.UsageTest.niceToStrict":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":267,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":77,"org.easymock.tests2.MockBuilderTest.testCreateMock":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":274,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":393,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":55,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":475,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":149,"org.easymock.tests.UsageOverloadedMethodTest.overloading":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":276,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":471,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":109,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":164,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":146,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":108,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":16,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":447,"org.easymock.tests.MockClassControlTest.testEquals":462,"org.easymock.tests2.EasyMockSupportClassTest.testAll":71,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":200,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":401,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":479,"org.easymock.tests2.CaptureTest.testCaptureAll":8,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":234,"org.easymock.tests.MockNameTest.defaultName":369,"org.easymock.tests2.UsageConstraintsTest.testMatches":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":466,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":370,"org.easymock.samples.ExampleTest.voteForRemovals":140,"org.easymock.tests.UsageVarargTest.allKinds":455,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":480,"org.easymock.samples.BasicClassMockTest.testPrintContent":328,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":195,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":443,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":312,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":319,"org.easymock.tests2.UsageConstraintsTest.greaterThan":112,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":261,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":209,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":93,"org.easymock.samples.ExampleTest.voteForRemoval":137,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":368,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":124,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":299,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":344,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":250,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":295,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":173,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":39,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":52,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":438,"org.easymock.tests2.CaptureTest.testCaptureFirst":20,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":53,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":49,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":207,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":160,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":126,"org.easymock.tests2.UsageTest.moreThanOneArgument":41,"org.easymock.tests2.CaptureTest.testCapture2_2446744":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":423,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":81,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":454,"org.easymock.tests.GenericTest.testBridgedEquals":30,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":504,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":358,"org.easymock.tests.UsageExpectAndReturnTest.longType":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":477,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":50,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":402,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":302,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":335,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":400,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":205,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":349,"org.easymock.tests.UsageCallCountTest.tooManyCalls":359,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":275,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":389,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":194,"org.easymock.tests.MockingTest.testNiceClassMocking":492,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":64,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Default":503,"org.easymock.tests.MockingTest.testClassMocking":487,"org.easymock.tests2.UsageConstraintsTest.testContains":107,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":352,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":121,"org.easymock.tests2.UsageConstraintsTest.testFind":98,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":148,"org.easymock.tests.MockTypeTest.fromEasyMockClass":341,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":482,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":244,"org.easymock.tests.UsageExpectAndReturnTest.object":163,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":89,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":58,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":449,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":3,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":435,"org.easymock.tests.UsageTest.exactCallCountByLastCall":179,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":429,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":27,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":0,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":444,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":169,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":470,"org.easymock.tests.MockClassControlTest.testHashCode":461,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":307,"org.easymock.tests2.EasyMockSupportTest.testVerify":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":269,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":493,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":474,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":468,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":232,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":294,"org.easymock.tests.UsageVarargTest.varargCharAccepted":448,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":360,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":428,"org.easymock.tests2.UsageTest.openCallCountByLastCall":44,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":505,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":61,"org.easymock.tests.DefaultClassInstantiatorTest.object":361,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":473,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":433,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":497,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":270,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":224,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":306,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":460,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":91,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":390,"org.easymock.tests.CapturesMatcherTest.test":21,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":170,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":180,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":74,"org.easymock.tests2.UsageTest.resumeIfFailure":48,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":338,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":441,"org.easymock.tests2.StubTest.stubWithReturnValue":75,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":162,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":117,"org.easymock.tests2.SerializationTest.testAllMockedMethod":34,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":421,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":496,"org.easymock.samples.SupportTest.voteForRemovals":133,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":22,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":396,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":427,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":236,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":431,"org.easymock.tests.UsageExpectAndThrowTest.object":394,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":115,"org.easymock.tests2.DelegateToTest.testWrongClass":318,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":197,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":198,"org.easymock.tests.UsageStrictMockTest.range":214,"org.easymock.samples.ConstructorCalledMockTest.testTax":326,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":252,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":57,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":395,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":258,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":347,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":332,"org.easymock.tests2.CaptureTest.testCaptureNone":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":331,"org.easymock.tests.UsageUnorderedTest.message":186,"org.easymock.tests.UsageVerifyTest.twoReturns":204,"org.easymock.tests.UsageVarargTest.varargByteAccepted":453,"org.easymock.tests2.ThreadingTest.testThreadSafe":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":272,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":356,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":436,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":143,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":337,"org.easymock.tests2.UsageConstraintsTest.any":105,"org.easymock.tests2.StubTest.stub":284,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":377,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndThrowTest.longType":387,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":365,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":376,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":129,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":122,"org.easymock.tests2.SerializationTest.testClass":32,"org.easymock.tests.LimitationsTest.mockNativeMethod":187,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":456,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":172,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":223,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":132,"org.easymock.tests2.NameTest.nameForMocksControl":283,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":225,"org.easymock.tests2.MockedExceptionTest.testMockedException":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":262,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":178,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":388,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":219,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":243,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":83,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":79,"org.easymock.tests.MockingTest.testNicePartialClassMocking":218,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":88,"org.easymock.tests2.CompareToTest.testCompareEqual":29,"org.easymock.tests2.CaptureTest.testCaptureLast":14,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":221,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":405,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":102,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":69,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":116,"org.easymock.tests.MockingTest.testTwoMocks":488,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":256,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":153,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":392,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":47,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":119,"org.easymock.samples.ExampleTest.removeNonExistingDocument":141,"org.easymock.tests.UsageStrictMockTest.differentMethods":215,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":227,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":308,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":363,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":125,"org.easymock.tests2.MockBuilderTest.testCreateMockString":82,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":201,"org.easymock.tests.UsageExpectAndThrowTest.floatType":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":263,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":260,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":238,"org.easymock.tests.UsageVerifyTest.twoThrows":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":257,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":73,"org.easymock.samples.ExampleTest.voteAgainstRemoval":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":416,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":329,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":92,"org.easymock.tests.LimitationsTest.privateConstructor":383,"org.easymock.tests2.UsageConstraintsTest.testNotNull":118,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":196,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":303,"org.easymock.tests2.UsageTest.defaultResetToNice":46,"org.easymock.samples.ExampleTest.voteAgainstRemovals":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":168,"org.easymock.tests.UsageVarargTest.differentLength":450,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":222,"org.easymock.tests2.CallbackTest.callback":254,"org.easymock.tests2.UsageConstraintsTest.equals":301,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":297,"org.easymock.tests.UsageTest.openCallCountByLastCall":177,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":336,"org.easymock.tests.UsageCallCountTest.tooFewCalls":354,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":334,"org.easymock.tests.UsageThrowableTest.throwCheckedException":193,"org.easymock.tests.MockingTest.testStrictClassMocking":486,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":145,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":68,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":226,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":379,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":67,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":239,"org.easymock.tests.ObjectMethodsTest.testHashCode":434,"org.easymock.tests2.CompareToTest.testGreateOrEqual":220,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":501,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":5,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":127,"org.easymock.tests2.NameTest.nameForNiceMock":282,"org.easymock.tests2.DependencyTest.testInterfaceMocking":37,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":4,"org.easymock.samples.ExampleTest.addDocument":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":273,"org.easymock.tests2.DelegateToTest.testStubDelegate":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":277,"org.easymock.tests2.AnswerTest.stubAnswer":36,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":212,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":291,"org.easymock.tests.UsageVarargTest.varargLongAccepted":452,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":171,"org.easymock.tests.UsageExpectAndReturnTest.floatType":155,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":70,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":327,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":472,"org.easymock.tests.UsageThrowableTest.noUpperLimit":190,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":314,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":95,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":247,"org.easymock.tests2.SerializationTest.test":33,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":12,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":362,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":154,"org.easymock.tests2.UsageConstraintsTest.testSame":100,"org.easymock.samples.SupportTest.addDocument":323,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":255,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":264,"org.easymock.tests.GenericTest.testPackageScope":199,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":313,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":490,"org.easymock.tests2.NameTest.nameForMock":280,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":165,"org.easymock.tests2.UsageStrictMockTest.differentMethods":131,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":293,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":298,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":157,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":398,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":432,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":211,"org.easymock.tests2.MockedExceptionTest.testRealException":305,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":253,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":418,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":151,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":381,"org.easymock.tests2.NameTest.nameForStrictMock":281,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":289,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":506,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":242,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":251,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":114,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":364,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":76,"org.easymock.tests2.UsageStrictMockTest.range":130,"org.easymock.tests2.UsageConstraintsTest.lessThan":120,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":414,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":51,"org.easymock.tests2.CaptureTest.testCaptureRightOne":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":268,"org.easymock.tests2.UsageConstraintsTest.testOr":101,"org.easymock.tests.UsageRangeTest.combination":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":84,"org.easymock.tests.UsageTest.wrongArguments":346,"org.easymock.tests2.MockBuilderTest.testWithConstructor":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":265,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":457,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":26,"org.easymock.tests.UsageVarargTest.varargShortAccepted":451,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":366,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":357,"org.easymock.tests2.UsageConstraintsTest.cmpTo":106,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":409,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":45,"org.easymock.tests2.CaptureTest.testCaptureFromStub":18,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":371,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":287,"org.easymock.tests.UsageTest.unexpectedCallWithArray":176,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":484,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":355,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":498,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":167,"org.easymock.tests2.UsageConstraintsTest.constraints":96,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":213,"org.easymock.samples.ExampleTest.addAndChangeDocument":324,"org.easymock.tests.UsageStrictMockTest.testVerify":485,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":325,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":483,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":478,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":13,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":183,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":159,"org.easymock.tests.LimitationsTest.abstractClass":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":184,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":206,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":445,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":56}}]
