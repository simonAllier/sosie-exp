[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[3,4,5,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[7,7,8,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,9,112,51,113,52,114,115,116,53,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,10,146,147,148,149,150,11,151,12,13,152,153,14,154,155,156,54,157,158,55,15,16,17,18,19,159,160,161,162,163,164,165,166,167,168,169,170,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,171,20,21,172,173,77,174,78,79,80,81,82,83,175,176,177,178,179,180,181,182,183,84,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,85,200,201,202,203,204,205,86,206,207,208,209,210,211,212,32,213,214,215,216,217,218,219,220,221,222,223,224,225,0,1,2,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,33,34,247,248,35,36,37,38,249,250,251,252,253,39,254,40,41,255,42,43,256,257,258,259,260,44,45,46,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,112,51,113,52,114,115,116,53,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,10,146,147,148,149,11,12,13,152,153,14,155,156,54,157,158,55,15,16,17,18,19,161,162,163,164,165,166,167,168,169,170,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,171,20,21,172,77,174,78,79,80,81,82,83,175,176,177,179,180,181,182,183,84,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,85,200,201,202,203,204,205,86,207,208,209,210,212,32,213,214,215,216,217,222,223,224,0,1,2,226,227,228,229,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,33,34,247,248,35,36,37,38,249,250,252,253,39,254,40,41,255,42,43,256,257,258,259,260,44,45,46,261,262,263,264,265,266,267,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[243,244],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[291,112,51,113,114,115,117,118,145,10,147,148,201,202,207,208,32,214,215,218,219,220,221],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[292,293,173],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"message","methodName":"message"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[248,38,251],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[7,7,8,8,90,99,100,296,297,298,299,300,120,121,122,301,158,302,167,168,303,304,305,306,171,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,217,324,0,2,325,326,327,226,328,329,227,330,331,332,333,334,335,336,337,338,228,339,340,341,342,343,229,344,345,346,3,347,230,348,349,231,4,232,233,350,351,234,352,353,354,235,236,237,238,240,241,261,262,264,265,266,5,267,355,356,357,268,269,270,358,6,359,360,361,362,363,364,365,366,367,368,290],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"name"}},{"transplant":{"position":"org.easymock.EasyMock:1764","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[120,262],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[369,51,113,370,115,117,118,145,147,371,172,202,207,208,214],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[248],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[3,4,5,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[256],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[324,372,373,374,375,376,377],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"failures":[254],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":248,"org.easymock.tests2.UsageTest.argumentsOrdered":208,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":52,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":194,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":204,"org.easymock.tests2.StubTest.stubWithReturnValue":84,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":372,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":260,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":91,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":132,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.DelegateToTest.testReturnException":286,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":173,"org.easymock.tests.MockingTest.testPartialClassMocking":120,"org.easymock.samples.SupportTest.voteForRemovals":89,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":302,"org.easymock.tests.MockClassControlTest.testToString":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":227,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":57,"org.easymock.tests.UsageExpectAndThrowTest.object":67,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":291,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":257,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":198,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":373,"org.easymock.tests2.DelegateToTest.testWrongClass":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":20,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":21,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":250,"org.easymock.tests2.UsageTest.wrongArguments":202,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":12,"org.easymock.samples.ConstructorCalledMockTest.testTax":7,"org.easymock.tests.UsageStrictMockTest.range":147,"org.easymock.samples.ExampleTest.answerVsDelegate":93,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":191,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":297,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":235,"org.easymock.tests2.UsageConstraintsTest.testNull":36,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":264,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":68,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":315,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":232,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":193,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":361,"org.easymock.tests2.CaptureTest.testPrimitive":275,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":325,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":76,"org.easymock.tests.UsageTest.moreThanOneArgument":114,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":117,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":29,"org.easymock.tests2.CaptureTest.testCaptureNone":280,"org.easymock.tests.UsageUnorderedTest.message":172,"org.easymock.tests.UsageVerifyTest.twoReturns":113,"org.easymock.tests.UsageVarargTest.varargByteAccepted":109,"org.easymock.tests2.ThreadingTest.testThreadSafe":242,"org.easymock.tests.UsageTest.argumentsOrdered":118,"org.easymock.tests.UsageVarargTest.varargIntAccepted":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":339,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":164,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":99,"org.easymock.tests2.CaptureTest.testCapture_2617107":274,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":15,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":377,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":3,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":153,"org.easymock.tests2.UsageConstraintsTest.any":252,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":4,"org.easymock.tests2.StubTest.stub":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":19,"org.easymock.tests.UsageExpectAndThrowTest.longType":60,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":320,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":213,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":271,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":285,"org.easymock.tests.LimitationsTest.mockNativeMethod":171,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":303,"org.easymock.tests2.AnswerTest.answer":222,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":142,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":251,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":365,"org.easymock.tests2.CaptureTest.testAnd":272,"org.easymock.tests2.UsageTest.strictResetToDefault":200,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":357,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":216,"org.easymock.tests2.NameTest.nameForMocksControl":221,"org.easymock.tests2.MockedExceptionTest.testMockedException":368,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":329,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":188,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":53,"org.easymock.tests2.DelegateToTest.testDelegate":289,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":61,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":122,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":261,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":233,"org.easymock.tests.MockingTest.testNicePartialClassMocking":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":72,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":266,"org.easymock.tests.LimitationsTest.mockFinalMethod":307,"org.easymock.tests2.CaptureTest.testCaptureLast":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":55,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":293,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":249,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":241,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":258,"org.easymock.tests.MockingTest.testTwoMocks":300,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":292,"org.easymock.tests2.CaptureTest.testCapture1_2446744":276,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":123,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":65,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":207,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":45,"org.easymock.tests.UsageThrowableTest.throwError":77,"org.easymock.tests.UsageStrictMockTest.differentMethods":148,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":318,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":244,"org.easymock.tests2.MockBuilderTest.testCreateMockString":354,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":330,"org.easymock.tests.UsageExpectAndThrowTest.floatType":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":31,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":327,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":223,"org.easymock.tests.UsageVerifyTest.twoThrows":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":228,"org.easymock.samples.PartialClassMockTest.testGetArea":90,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":16,"org.easymock.samples.ExampleTest.voteAgainstRemoval":95,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":334,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":323,"org.easymock.tests2.UsageTest.niceToStrict":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":58,"org.easymock.tests.LimitationsTest.privateConstructor":306,"org.easymock.tests2.UsageConstraintsTest.testNotNull":44,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":367,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":22,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":231,"org.easymock.tests2.MockBuilderTest.testCreateMock":351,"org.easymock.tests2.UsageTest.defaultResetToNice":206,"org.easymock.samples.ExampleTest.voteAgainstRemovals":92,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":341,"org.easymock.tests.UsageVarargTest.differentLength":106,"org.easymock.tests2.CallbackTest.callback":199,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":355,"org.easymock.tests.UsageTest.openCallCountByLastCall":116,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":66,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":189,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":33,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":50,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":152,"org.easymock.tests.UsageCallCountTest.tooFewCalls":162,"org.easymock.tests.UsageOverloadedMethodTest.overloading":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":338,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":54,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":40,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":134,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":169,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":254,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":281,"org.easymock.tests.UsageThrowableTest.throwCheckedException":80,"org.easymock.tests.MockClassControlTest.testEquals":314,"org.easymock.tests2.EasyMockSupportClassTest.testAll":226,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":168,"org.easymock.tests.MockingTest.testStrictClassMocking":298,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":74,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":362,"org.easymock.tests2.CaptureTest.testCaptureAll":273,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":240,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":151,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":237,"org.easymock.tests2.UsageConstraintsTest.testMatches":41,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":239,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":30,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":154,"org.easymock.samples.ExampleTest.voteForRemovals":97,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":376,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":246,"org.easymock.tests2.NameTest.nameForNiceMock":220,"org.easymock.tests.UsageVarargTest.allKinds":111,"org.easymock.tests2.DependencyTest.testInterfaceMocking":197,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":375,"org.easymock.samples.BasicClassMockTest.testPrintContent":100,"org.easymock.samples.ExampleTest.addDocument":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.DelegateToTest.testStubDelegate":287,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":82,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":211,"org.easymock.tests2.AnswerTest.stubAnswer":224,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":10,"org.easymock.tests2.UsageConstraintsTest.greaterThan":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":328,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":178,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":270,"org.easymock.tests.UsageVarargTest.varargLongAccepted":108,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":149,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":322,"org.easymock.samples.ExampleTest.voteForRemoval":94,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":358,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":243,"org.easymock.tests.UsageExpectAndReturnTest.floatType":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":141,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":352,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":217,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":5,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":8,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":43,"org.easymock.tests.UsageThrowableTest.noUpperLimit":174,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":85,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":34,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":158,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":359,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":277,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":350,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":186,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":78,"org.easymock.tests2.UsageConstraintsTest.testSame":37,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":326,"org.easymock.samples.SupportTest.addDocument":88,"org.easymock.tests2.CaptureTest.testCaptureFirst":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":187,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":210,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":371,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":331,"org.easymock.tests.GenericTest.testPackageScope":167,"org.easymock.tests2.CaptureTest.testCapture2_2446744":283,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":245,"org.easymock.tests2.UsageTest.moreThanOneArgument":201,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":23,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":110,"org.easymock.tests.GenericTest.testBridgedEquals":304,"org.easymock.tests2.NameTest.nameForMock":218,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":165,"org.easymock.tests.UsageExpectAndReturnTest.longType":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":159,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":184,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":353,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":135,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":259,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":9,"org.easymock.tests2.UsageStrictMockTest.differentMethods":215,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":73,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":27,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":356,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":127,"org.easymock.tests.UsageCallCountTest.tooManyCalls":166,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":71,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":180,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":342,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":25,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":62,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":13,"org.easymock.tests.MockingTest.testNiceClassMocking":301,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":236,"org.easymock.tests.MockingTest.testClassMocking":299,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":347,"org.easymock.tests2.NameTest.nameForStrictMock":219,"org.easymock.tests2.UsageConstraintsTest.testContains":39,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":290,"org.easymock.tests2.UsageConstraintsTest.testFind":35,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":56,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":349,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":181,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":265,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":143,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":182,"org.easymock.tests.UsageExpectAndReturnTest.object":133,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":360,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":319,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":267,"org.easymock.tests.ErrorMessageTest.testGetters":294,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":230,"org.easymock.tests2.UsageStrictMockTest.range":214,"org.easymock.tests2.UsageConstraintsTest.lessThan":46,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":374,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":105,"org.easymock.tests.UsageTest.exactCallCountByLastCall":119,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":346,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":24,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":335,"org.easymock.tests2.CaptureTest.testCaptureRightOne":282,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":175,"org.easymock.tests2.UsageConstraintsTest.testOr":38,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":324,"org.easymock.tests.UsageRangeTest.combination":177,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":262,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":101,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":139,"org.easymock.tests.UsageTest.wrongArguments":115,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":156,"org.easymock.tests.MockClassControlTest.testHashCode":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":332,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":309,"org.easymock.tests2.EasyMockSupportTest.testVerify":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":336,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":176,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":321,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":49,"org.easymock.tests.UsageVarargTest.varargShortAccepted":107,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":155,"org.easymock.tests2.UsageConstraintsTest.cmpTo":253,"org.easymock.tests.UsageVarargTest.varargCharAccepted":104,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":212,"org.easymock.tests2.UsageTest.openCallCountByLastCall":205,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":86,"org.easymock.tests.DefaultClassInstantiatorTest.object":316,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":195,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":48,"org.easymock.tests2.CaptureTest.testCaptureFromStub":47,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":348,"org.easymock.tests.UsageTest.unexpectedCallWithArray":370,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":337,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":64,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":366,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":79,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":145,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":163,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":295,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":137,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":312,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":268,"org.easymock.tests2.UsageConstraintsTest.constraints":247,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":146,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":63,"org.easymock.samples.ExampleTest.addAndChangeDocument":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":140,"org.easymock.tests.UsageStrictMockTest.testVerify":150,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":87,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":229,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":144,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":278,"org.easymock.tests2.UsageTest.resumeIfFailure":209,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":17,"org.easymock.tests.LimitationsTest.abstractClass":305,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":296,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":129,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":18,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":157,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":190}}]
