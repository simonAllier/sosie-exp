[{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:827","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[17,18,19,20,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[22,23,24,25,26,27,28,29,6,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"shouldFillInStackTrace"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[22,23,24,25,26,27,30,67,60,61,62,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[68,69],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1507","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[70,71],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[72,38,73,74,75],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:191","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[76,77,78,28,79,29,80,5,6,9,10,31,32,33,34,35,36,37,81,82,83,84,85,86,87,88,89,90,73,91,92,93,94,95,96,97,98,99,12,74,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,62,115,116,117,118,119,120,121,122,70,123,124,125,126,127,128,129,130,131,132,71,133,134,135,136,137,138,139,140,141,142,143,144,15,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64,160,161,162,163,65,68,164,165,166,167,168,169,170,171,172,66,173,75,174],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[175,176,177,178,179,179,180,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,22,23,24,25,26,27,211,212,213,214,215,216,217,218,219,220,221,222,17,223,224,225,226,227,228,229,230,231,2,232,233,76,234,77,235,78,28,236,79,237,238,29,80,3,4,5,6,7,8,9,10,30,239,240,241,31,242,32,33,34,35,36,37,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,81,82,83,265,266,84,85,86,87,88,267,268,269,270,271,272,273,274,89,275,90,38,73,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,91,92,93,94,95,96,67,18,97,296,297,298,299,300,301,302,303,304,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,98,305,306,307,308,309,59,310,99,311,312,313,314,315,316,317,318,319,320,11,12,321,74,100,322,323,324,101,102,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,19,346,347,348,349,350,351,20,352,103,104,105,106,107,108,109,110,111,112,113,114,353,354,355,356,357,60,61,62,63,115,116,117,118,358,119,120,121,122,70,123,359,124,125,126,127,128,129,130,131,132,71,133,134,360,135,136,137,138,361,362,363,364,365,139,366,367,368,369,370,371,140,141,142,372,143,373,374,375,376,377,144,378,379,380,381,382,383,15,145,384,146,147,385,386,148,149,150,151,152,153,154,387,388,155,156,157,158,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,159,404,405,406,407,408,409,410,64,160,161,411,162,412,163,65,68,413,414,164,165,415,416,166,417,418,419,16,420,421,422,423,424,167,425,426,168,427,428,429,169,430,69,431,170,171,172,432,433,434,435,436,437,438,439,440,21,66,441,442,443,444,445,446,447,448,173,449,75,174,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:315","failures":[22,23,24,25,26,27,28,29,6,30,32,36,37,67,18,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[175,176,177,178,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,22,23,24,25,26,27,211,212,213,214,215,216,217,218,219,220,221,222,17,223,224,225,226,227,228,229,230,231,2,232,233,76,234,77,235,78,28,236,79,237,238,29,80,3,4,5,6,7,8,9,10,30,239,240,241,31,242,32,33,34,35,36,37,476,243,244,245,246,247,248,477,249,250,251,252,255,257,258,259,260,261,262,263,264,81,82,83,265,266,84,85,86,87,88,267,268,269,270,271,272,273,274,89,275,90,38,73,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,91,92,93,94,95,96,67,18,97,296,297,298,299,300,301,302,303,304,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,98,305,306,307,308,309,59,310,99,311,312,313,314,315,316,317,318,319,320,11,12,321,74,100,322,323,324,101,102,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,19,346,347,348,349,350,351,20,352,103,104,105,106,107,108,109,110,111,112,113,114,353,354,355,356,357,60,61,62,63,115,116,117,118,358,119,120,121,122,70,123,359,124,125,126,127,128,129,130,131,132,71,133,134,360,135,136,137,138,478,361,362,363,364,365,139,366,367,368,369,370,371,140,141,142,372,143,373,374,375,376,377,144,378,379,380,381,382,383,15,145,384,146,147,385,386,148,149,150,151,152,153,154,387,388,155,156,158,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,159,404,405,406,408,409,410,64,160,161,411,162,412,163,65,68,413,414,164,165,166,417,418,419,16,420,421,422,423,424,167,425,426,168,427,428,429,169,69,431,170,171,172,432,433,434,435,437,438,479,21,66,441,442,443,444,445,446,447,448,173,449,75,174,450,451,452,454,456,457,458,459,462,465,467,468,469,470,471,472,473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[120,359,71,136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[178,181,361,362,363,368,371,373,374,375,380,383],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"obj"}},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[480,481,482,483,484,485,486,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[67,338],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[179,180,157,488,489,490,407,491,415,416,492,430],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:342","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int));\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[176,177,178,181,182,183,184,185,186,187,188,189,191,193,194,203,204,206,209,22,23,24,25,26,27,213,214,215,216,218,219,220,221,2,232,233,76,234,77,235,78,28,29,80,4,5,6,7,8,9,10,30,31,242,32,33,34,35,36,37,260,261,262,263,264,81,82,83,265,266,84,85,86,87,88,267,268,269,270,271,272,273,274,89,275,90,38,73,276,277,278,280,281,282,283,284,285,286,287,294,295,91,93,94,95,96,67,18,97,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,305,306,307,309,59,319,320,11,12,321,74,100,322,323,325,328,103,104,105,106,107,108,109,111,112,113,114,353,60,61,62,63,115,116,117,118,119,120,121,122,70,123,124,125,126,127,128,129,130,131,132,71,133,134,360,135,136,137,138,139,140,141,142,372,143,144,15,145,384,146,147,385,386,148,149,150,151,152,153,154,155,156,158,389,391,392,393,395,64,160,161,411,162,412,163,65,413,414,164,165,166,419,16,420,421,423,424,167,425,426,168,427,169,172,434,437,438,21,66,441,447,448,173,449,75,174,450,454],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[220,493,3,4,7,8,38,73,11,74,411,413,414,75],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":118,"org.easymock.tests2.UsageTest.argumentsOrdered":414,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":29,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":341,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":412,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":178,"org.easymock.tests2.DelegateToTest.testReturnException":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":23,"org.easymock.tests.MockingTest.testPartialClassMocking":253,"org.easymock.tests.MockClassControlTest.testToString":290,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":442,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":79,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":457,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":39,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":156,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":123,"org.easymock.tests2.UsageTest.wrongArguments":411,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":95,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":317,"org.easymock.samples.ExampleTest.answerVsDelegate":185,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":302,"org.easymock.tests2.UsageConstraintsTest.testNull":120,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":258,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":426,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":112,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":295,"org.easymock.tests2.CaptureTest.testPrimitive":146,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":97,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":58,"org.easymock.tests.UsageTest.moreThanOneArgument":80,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":425,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":76,"org.easymock.tests.UsageTest.argumentsOrdered":8,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":192,"org.easymock.tests.UsageVarargTest.varargIntAccepted":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":19,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":272,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":400,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":370,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":275,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":144,"org.easymock.tests.ReplayStateInvalidUsageTest.times":228,"org.easymock.tests2.DependencyTest.testClassMocking":387,"org.easymock.tests2.AnswerTest.answer":166,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":347,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":399,"org.easymock.tests2.CaptureTest.testAnd":15,"org.easymock.tests2.UsageTest.strictResetToDefault":160,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":489,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":233,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":107,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":93,"org.easymock.tests2.DelegateToTest.testDelegate":395,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":54,"org.easymock.tests.LimitationsTest.mockFinalMethod":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":201,"org.easymock.tests2.DependencyTest.testClassMockingSupport":388,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":296,"org.easymock.tests2.CaptureTest.testCapture1_2446744":147,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":429,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":52,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":397,"org.easymock.tests.UsageThrowableTest.throwError":31,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":17,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":301,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":475,"org.easymock.samples.PartialClassMockTest.testGetArea":175,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":223,"org.easymock.tests.MockingTest.testInterfaceMocking":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":273,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":462,"org.easymock.tests2.UsageTest.niceToStrict":162,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":40,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":330,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":159,"org.easymock.tests2.MockBuilderTest.testCreateMock":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":470,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":380,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":13,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":48,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":108,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":241,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":315,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":484,"org.easymock.tests.UsageOverloadedMethodTest.overloading":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":466,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":128,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":59,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":85,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":235,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":127,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":150,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":279,"org.easymock.tests2.EasyMockSupportClassTest.testAll":454,"org.easymock.tests.MockClassControlTest.testEquals":294,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":204,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":398,"org.easymock.tests2.CaptureTest.testCaptureAll":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":199,"org.easymock.tests.MockNameTest.defaultName":238,"org.easymock.tests2.UsageConstraintsTest.testMatches":129,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":234,"org.easymock.samples.ExampleTest.voteForRemovals":189,"org.easymock.tests.UsageVarargTest.allKinds":287,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":90,"org.easymock.samples.BasicClassMockTest.testPrintContent":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":200,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":36,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":447,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":27,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":367,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":477,"org.easymock.tests2.UsageConstraintsTest.greaterThan":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":455,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":92,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":172,"org.easymock.samples.ExampleTest.voteForRemoval":186,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":249,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":432,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":141,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":303,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":428,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":2,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":64,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":338,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":105,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":22,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":390,"org.easymock.tests2.CaptureTest.testCaptureFirst":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":106,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":165,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":311,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":83,"org.easymock.tests2.UsageTest.moreThanOneArgument":161,"org.easymock.tests2.CaptureTest.testCapture2_2446744":153,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":372,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":348,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":286,"org.easymock.tests.GenericTest.testBridgedEquals":206,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":485,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":482,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":218,"org.easymock.tests.UsageExpectAndReturnTest.longType":263,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":197,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":57,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":98,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":360,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":55,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":232,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":313,"org.easymock.tests.UsageCallCountTest.tooManyCalls":219,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":471,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":265,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":44,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":35,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":435,"org.easymock.tests.MockingTest.testNiceClassMocking":259,"org.easymock.tests.MockingTest.testClassMocking":251,"org.easymock.tests2.UsageConstraintsTest.testContains":126,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":212,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":62,"org.easymock.tests2.UsageConstraintsTest.testFind":119,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":28,"org.easymock.tests.MockTypeTest.fromEasyMockClass":300,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":423,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":319,"org.easymock.tests.UsageExpectAndReturnTest.object":84,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":111,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":281,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":328,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":486,"org.easymock.tests.UsageTest.exactCallCountByLastCall":9,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":193,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":416,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":268,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":276,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":309,"org.easymock.tests.MockClassControlTest.testHashCode":293,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":362,"org.easymock.tests2.EasyMockSupportTest.testVerify":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":464,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":194,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":240,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":307,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":396,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":478,"org.easymock.tests.UsageVarargTest.varargCharAccepted":280,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":476,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":352,"org.easymock.tests2.UsageTest.openCallCountByLastCall":163,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":480,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":114,"org.easymock.tests.DefaultClassInstantiatorTest.object":243,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":239,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":326,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":465,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":46,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":361,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":170,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":292,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":45,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":269,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":473,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":291,"org.easymock.tests2.UsageTest.resumeIfFailure":164,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":25,"org.easymock.tests2.StubTest.stubWithReturnValue":66,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":490,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":135,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":266,"org.easymock.tests2.SerializationTest.testAllMockedMethod":389,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":346,"org.easymock.samples.SupportTest.voteForRemovals":183,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":14,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":202,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":364,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":51,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":20,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":417,"org.easymock.tests.UsageExpectAndThrowTest.object":49,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":237,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":133,"org.easymock.tests2.DelegateToTest.testWrongClass":393,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":305,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":306,"org.easymock.samples.ConstructorCalledMockTest.testTax":179,"org.easymock.tests.UsageStrictMockTest.range":74,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":356,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":110,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":434,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":483,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":50,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":451,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":316,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":0,"org.easymock.tests2.CaptureTest.testCaptureNone":149,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":102,"org.easymock.tests.UsageUnorderedTest.message":220,"org.easymock.tests.UsageVerifyTest.twoReturns":73,"org.easymock.tests.UsageVarargTest.varargByteAccepted":285,"org.easymock.tests2.ThreadingTest.testThreadSafe":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":468,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":216,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":176,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":329,"org.easymock.tests2.CaptureTest.testCapture_2617107":384,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":298,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":350,"org.easymock.tests2.UsageConstraintsTest.any":124,"org.easymock.tests2.StubTest.stub":21,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":227,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":314,"org.easymock.tests.UsageExpectAndThrowTest.longType":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":351,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":247,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":226,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":449,"org.easymock.tests2.SerializationTest.testClass":157,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":139,"org.easymock.tests.LimitationsTest.mockNativeMethod":209,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":205,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":271,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":375,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":450,"org.easymock.tests2.NameTest.nameForMocksControl":446,"org.easymock.tests2.MockedExceptionTest.testMockedException":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":456,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":6,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":422,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":43,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":256,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":424,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":406,"org.easymock.tests.MockingTest.testNicePartialClassMocking":254,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":427,"org.easymock.tests2.CaptureTest.testCaptureLast":148,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":373,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":297,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":440,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":70,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":134,"org.easymock.tests.MockingTest.testTwoMocks":252,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":479,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":47,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":413,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":137,"org.easymock.samples.ExampleTest.removeNonExistingDocument":190,"org.easymock.tests.UsageStrictMockTest.differentMethods":100,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":363,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":245,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":142,"org.easymock.tests2.MockBuilderTest.testCreateMockString":410,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":458,"org.easymock.tests.UsageExpectAndThrowTest.floatType":41,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":453,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":419,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":492,"org.easymock.tests.UsageVerifyTest.twoThrows":38,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":467,"org.easymock.samples.ExampleTest.voteAgainstRemoval":187,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":342,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":171,"org.easymock.tests.LimitationsTest.privateConstructor":208,"org.easymock.tests2.UsageConstraintsTest.testNotNull":136,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":37,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":60,"org.easymock.tests2.UsageTest.defaultResetToNice":68,"org.easymock.samples.ExampleTest.voteAgainstRemovals":184,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":343,"org.easymock.tests.UsageVarargTest.differentLength":282,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":374,"org.easymock.tests2.CallbackTest.callback":441,"org.easymock.tests2.UsageConstraintsTest.equals":358,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":430,"org.easymock.tests.UsageTest.openCallCountByLastCall":5,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":115,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":67,"org.easymock.tests.UsageCallCountTest.tooFewCalls":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":437,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":318,"org.easymock.tests.UsageThrowableTest.throwCheckedException":34,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":1,"org.easymock.tests.MockingTest.testStrictClassMocking":250,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":439,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":30,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":436,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":378,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":229,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":438,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":420,"org.easymock.tests.ObjectMethodsTest.testHashCode":327,"org.easymock.tests2.NameTest.nameForNiceMock":445,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":143,"org.easymock.tests2.DependencyTest.testInterfaceMocking":155,"org.easymock.samples.ExampleTest.addDocument":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":474,"org.easymock.tests2.DelegateToTest.testStubDelegate":392,"org.easymock.tests2.AnswerTest.stubAnswer":16,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":12,"org.easymock.tests.UsageVarargTest.varargLongAccepted":284,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":340,"org.easymock.tests.UsageExpectAndReturnTest.floatType":262,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":270,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":415,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":180,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":132,"org.easymock.tests.UsageThrowableTest.noUpperLimit":242,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":310,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":369,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":116,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":354,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":385,"org.easymock.tests2.SerializationTest.test":158,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":244,"org.easymock.tests2.UsageConstraintsTest.testSame":121,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":261,"org.easymock.samples.SupportTest.addDocument":182,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":459,"org.easymock.tests.GenericTest.testPackageScope":203,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":335,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":368,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":257,"org.easymock.tests2.NameTest.nameForMock":443,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":86,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":491,"org.easymock.tests2.UsageStrictMockTest.differentMethods":174,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":69,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":264,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":53,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":325,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":94,"org.easymock.tests2.MockedExceptionTest.testRealException":63,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":357,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":344,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":96,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":231,"org.easymock.tests2.NameTest.nameForStrictMock":444,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":403,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":481,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":421,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":168,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":355,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":71,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":246,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":401,"org.easymock.tests2.UsageStrictMockTest.range":75,"org.easymock.tests2.UsageConstraintsTest.lessThan":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":365,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":463,"org.easymock.tests2.CaptureTest.testCaptureRightOne":151,"org.easymock.tests2.UsageConstraintsTest.testOr":122,"org.easymock.tests.UsageRangeTest.combination":91,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":167,"org.easymock.tests.UsageTest.wrongArguments":4,"org.easymock.tests2.MockBuilderTest.testWithConstructor":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":460,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":289,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":81,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":332,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":248,"org.easymock.tests.UsageVarargTest.varargShortAccepted":283,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":217,"org.easymock.tests2.UsageConstraintsTest.cmpTo":125,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":334,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":65,"org.easymock.tests2.CaptureTest.testCaptureFromStub":152,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":222,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":402,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":215,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":88,"org.easymock.tests2.UsageConstraintsTest.constraints":117,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":321,"org.easymock.samples.ExampleTest.addAndChangeDocument":191,"org.easymock.tests.UsageStrictMockTest.testVerify":323,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":181,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":198,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":386,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":274,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":82,"org.easymock.tests.LimitationsTest.abstractClass":207,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":109,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":72,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":277}}]
