[{"position":"org.easymock.internal.MockBuilder:201","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[0,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,6,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,8,9,10,171,172,173,174,175,176,177,178,179,11,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,12,15,210,16,17,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[0,114,115,116,131,147,149,150,151,153,259,170,8,9,10,196,197,198,199,200,201,202,208,13,15,16,17,18,258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[11,180,181],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[260,261,262,263,264,265,266],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[152,214,246],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[267,268,269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[270,271,77,272,273,274,98,99,100,2,275,276,3,277,278,279,101,280,281,282,283,284,285,286,108,287,288,289,110,290,291,111,112,117,119,120,292,293,294,295,296,297,298,299,300,301,155,302,7,171,183,185,187,188,190,191,195,303,197,198,201,202,203,204,205,206,12,13,14,16,17,304,18,19,305,212,306,213,214,307,308,216,309,310,218,311,312,219,220,229,313,232,246,314],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[238,239],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[315,316,317,318],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[319,320,321],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[11,260,261,262,322,323,265,324,258,266],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[0,20,21,22,23,24,25,325,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,326,327,328,329,330,331,332,55,56,1,333,270,271,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,334,335,336,337,338,339,340,82,341,342,343,344,345,346,347,348,349,350,83,84,85,86,87,88,89,90,91,351,352,353,354,92,272,273,274,355,356,357,358,93,94,359,360,361,362,363,95,96,364,365,97,98,99,100,2,366,367,275,276,3,277,278,279,101,280,281,368,369,282,283,284,102,103,104,105,106,107,370,285,371,372,286,108,287,288,109,289,110,290,291,111,112,113,373,374,375,114,115,376,116,377,378,379,380,381,382,315,383,384,385,386,387,388,389,390,391,392,393,267,394,395,396,397,398,399,268,400,117,118,119,120,121,122,292,293,294,401,123,124,125,126,127,128,129,402,295,403,404,296,297,405,406,269,407,408,409,410,411,412,413,414,415,130,131,132,133,134,316,317,318,135,136,137,416,138,139,298,140,141,142,143,144,145,146,417,418,147,419,299,300,148,149,301,150,151,152,153,4,420,154,421,422,155,5,6,302,423,7,156,157,158,159,424,160,161,162,163,164,165,425,426,166,167,168,427,259,169,428,429,430,170,431,432,8,433,434,435,436,437,438,439,440,441,9,442,443,444,445,446,10,447,448,171,172,173,174,175,176,449,450,177,178,179,11,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,451,452,453,454,455,195,303,456,457,458,459,460,196,197,198,199,461,200,201,202,462,463,203,204,205,206,464,207,208,465,466,209,12,467,13,14,468,469,15,210,16,265,17,470,324,304,18,471,19,472,473,474,475,476,477,478,305,211,212,306,213,214,479,480,215,307,308,216,309,310,217,218,311,312,219,220,221,222,223,224,481,482,225,226,227,228,483,484,485,486,487,229,313,488,489,490,491,492,230,231,232,233,493,234,235,236,237,238,239,494,240,241,242,243,244,245,246,247,248,249,250,251,495,252,253,254,255,496,256,314,257,258,266,497],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[337,381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[38,44,51,52,328,60,66,73,74,91,103,126,134],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[246],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[337,381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[30,30,31,31,81,335,95,96,97,110,380,383,384,393,397,125,126,127,128,129,130,131,132,133,134,145,146,425,218,228,230,231,234,235,236,237,242,244,245,247,248,253,254,255],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[332],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[498,499,280,289,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[267,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[319,320,321],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[502,230,247,252],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[81,240],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[21,371,464,207,208,465,466,209],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[503],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":233,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":279,"org.easymock.tests2.UsageTest.argumentsOrdered":308,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":389,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":214,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":34,"org.easymock.tests2.DelegateToTest.testReturnException":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":103,"org.easymock.tests.MockingTest.testPartialClassMocking":114,"org.easymock.tests.MockClassControlTest.testToString":272,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":463,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":436,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":35,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":8,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":226,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":260,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":95,"org.easymock.tests2.UsageTest.wrongArguments":306,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":460,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":85,"org.easymock.samples.ExampleTest.answerVsDelegate":21,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":3,"org.easymock.tests2.UsageConstraintsTest.testNull":235,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":378,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":151,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":191,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":357,"org.easymock.tests2.CaptureTest.testPrimitive":159,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":97,"org.easymock.tests.UsageTest.moreThanOneArgument":101,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":54,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":127,"org.easymock.tests.UsageTest.argumentsOrdered":283,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":336,"org.easymock.tests.UsageVarargTest.varargIntAccepted":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":267,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":130,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":12,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":264,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":491,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":474,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":134,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":321,"org.easymock.tests.ReplayStateInvalidUsageTest.times":412,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":195,"org.easymock.tests2.DependencyTest.testClassMocking":481,"org.easymock.tests2.AnswerTest.answer":176,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":395,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":224,"org.easymock.tests2.CaptureTest.testAnd":156,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":367,"org.easymock.tests2.UsageTest.strictResetToDefault":211,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":468,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":186,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":79,"org.easymock.tests2.DelegateToTest.testDelegate":209,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":340,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":50,"org.easymock.tests.LimitationsTest.mockFinalMethod":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":91,"org.easymock.tests2.DependencyTest.testClassMockingSupport":482,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":299,"org.easymock.tests2.CaptureTest.testCapture1_2446744":424,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":420,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":222,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":269,"org.easymock.tests.UsageThrowableTest.throwError":358,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":276,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":492,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":448,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":407,"org.easymock.tests.MockingTest.testInterfaceMocking":376,"org.easymock.tests2.CompareToTest.testLessOrEqual":502,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":131,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":437,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":36,"org.easymock.tests2.UsageTest.niceToStrict":213,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":15,"org.easymock.tests2.MockBuilderTest.testCreateMock":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":444,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":457,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":500,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":44,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":187,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":366,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":318,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":117,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":83,"org.easymock.tests.UsageOverloadedMethodTest.overloading":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":441,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":244,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":372,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":401,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":68,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":243,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":164,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":416,"org.easymock.tests2.EasyMockSupportClassTest.testAll":170,"org.easymock.tests.MockClassControlTest.testEquals":356,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":56,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":52,"org.easymock.tests2.CaptureTest.testCaptureAll":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":89,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":223,"org.easymock.tests.MockNameTest.defaultName":270,"org.easymock.tests2.UsageConstraintsTest.testMatches":245,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":405,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":128,"org.easymock.samples.ExampleTest.voteForRemovals":25,"org.easymock.tests.UsageVarargTest.allKinds":144,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":98,"org.easymock.samples.BasicClassMockTest.testPrintContent":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":90,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":362,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":310,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":488,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":107,"org.easymock.tests2.UsageConstraintsTest.greaterThan":247,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":323,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":431,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":78,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":302,"org.easymock.samples.ExampleTest.voteForRemoval":22,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":349,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":423,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":168,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":277,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":475,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":4,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":82,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":305,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":386,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":184,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":102,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":464,"org.easymock.tests2.CaptureTest.testCaptureFirst":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":185,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":309,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":64,"org.easymock.tests2.CaptureTest.testCapture2_2446744":426,"org.easymock.tests2.UsageTest.moreThanOneArgument":212,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":396,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":18,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":143,"org.easymock.tests.GenericTest.testBridgedEquals":333,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":293,"org.easymock.tests.UsageExpectAndReturnTest.longType":60,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":87,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":53,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":495,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":335,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":125,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":352,"org.easymock.tests.UsageCallCountTest.tooManyCalls":294,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":319,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":445,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":459,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":40,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":361,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":197,"org.easymock.tests.MockingTest.testNiceClassMocking":379,"org.easymock.tests.MockingTest.testClassMocking":374,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":118,"org.easymock.tests2.UsageConstraintsTest.testContains":242,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":174,"org.easymock.tests2.UsageConstraintsTest.testFind":234,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":124,"org.easymock.tests.MockTypeTest.fromEasyMockClass":275,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":257,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":288,"org.easymock.tests.UsageExpectAndReturnTest.object":67,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":190,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":261,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":404,"org.easymock.tests.UsageTest.exactCallCountByLastCall":284,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":329,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":337,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":266,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":135,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":73,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":484,"org.easymock.tests.MockClassControlTest.testHashCode":355,"org.easymock.tests2.EasyMockSupportTest.testVerify":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":439,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":320,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":338,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":317,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":370,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":221,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":496,"org.easymock.tests.UsageVarargTest.varargCharAccepted":138,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":341,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":400,"org.easymock.tests2.UsageTest.openCallCountByLastCall":479,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":193,"org.easymock.tests.DefaultClassInstantiatorTest.object":342,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":316,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":440,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":42,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":359,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":454,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":483,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":5,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":274,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":41,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":74,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":10,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":273,"org.easymock.tests2.UsageTest.resumeIfFailure":216,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":2,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":105,"org.easymock.tests2.StubTest.stubWithReturnValue":228,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":265,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":66,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":252,"org.easymock.tests2.SerializationTest.testAllMockedMethod":181,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":394,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":501,"org.easymock.samples.SupportTest.voteForRemovals":28,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":486,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":47,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":268,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":449,"org.easymock.tests.UsageExpectAndThrowTest.object":45,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":331,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":250,"org.easymock.tests2.DelegateToTest.testWrongClass":465,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":145,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":146,"org.easymock.samples.ConstructorCalledMockTest.testTax":30,"org.easymock.tests.UsageStrictMockTest.range":291,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":477,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":189,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":196,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":46,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":428,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":414,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":84,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":498,"org.easymock.tests2.CaptureTest.testCaptureNone":163,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":328,"org.easymock.tests.UsageUnorderedTest.message":271,"org.easymock.tests.UsageVerifyTest.twoReturns":100,"org.easymock.tests.UsageVarargTest.varargByteAccepted":142,"org.easymock.tests2.ThreadingTest.testThreadSafe":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":442,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":122,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":32,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":296,"org.easymock.tests2.CaptureTest.testCapture_2617107":158,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":398,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":365,"org.easymock.tests2.UsageConstraintsTest.any":240,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":411,"org.easymock.tests2.StubTest.stub":227,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":104,"org.easymock.tests.UsageExpectAndThrowTest.longType":38,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":346,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":410,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":311,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":229,"org.easymock.tests.LimitationsTest.mockNativeMethod":147,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":1,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":76,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":453,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":220,"org.easymock.tests2.NameTest.nameForMocksControl":206,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":455,"org.easymock.tests2.MockedExceptionTest.testMockedException":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":432,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":369,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":39,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":314,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":149,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":17,"org.easymock.tests.MockingTest.testNicePartialClassMocking":115,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":153,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":451,"org.easymock.tests2.CaptureTest.testCaptureLast":162,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":300,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":202,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":238,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":251,"org.easymock.tests.MockingTest.testTwoMocks":375,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":462,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":43,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":307,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":254,"org.easymock.samples.ExampleTest.removeNonExistingDocument":325,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":456,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":408,"org.easymock.tests.UsageStrictMockTest.differentMethods":111,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":485,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":344,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":427,"org.easymock.tests2.MockBuilderTest.testCreateMockString":19,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":433,"org.easymock.tests.UsageExpectAndThrowTest.floatType":37,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":430,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":177,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":497,"org.easymock.tests.UsageVerifyTest.twoThrows":99,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":9,"org.easymock.samples.ExampleTest.voteAgainstRemoval":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":390,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":326,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":6,"org.easymock.tests.LimitationsTest.privateConstructor":418,"org.easymock.tests2.UsageConstraintsTest.testNotNull":253,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":172,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":363,"org.easymock.tests2.UsageTest.defaultResetToNice":215,"org.easymock.samples.ExampleTest.voteAgainstRemovals":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":391,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":72,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":452,"org.easymock.tests.UsageVarargTest.differentLength":298,"org.easymock.tests2.CallbackTest.callback":171,"org.easymock.tests2.UsageConstraintsTest.equals":493,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":421,"org.easymock.tests.UsageTest.openCallCountByLastCall":368,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":230,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":364,"org.easymock.tests.UsageCallCountTest.tooFewCalls":120,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":86,"org.easymock.tests.UsageThrowableTest.throwCheckedException":360,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":499,"org.easymock.tests.MockingTest.testStrictClassMocking":373,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":201,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":334,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":303,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":413,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":200,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":179,"org.easymock.tests.ObjectMethodsTest.testHashCode":403,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":263,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":169,"org.easymock.tests2.NameTest.nameForNiceMock":205,"org.easymock.tests2.DependencyTest.testInterfaceMocking":225,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":262,"org.easymock.samples.ExampleTest.addDocument":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":447,"org.easymock.tests2.DelegateToTest.testStubDelegate":208,"org.easymock.tests2.AnswerTest.stubAnswer":178,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":110,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":470,"org.easymock.tests.UsageVarargTest.varargLongAccepted":141,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndReturnTest.floatType":59,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":75,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":258,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":490,"org.easymock.tests.UsageThrowableTest.noUpperLimit":93,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":248,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":286,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":231,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":472,"org.easymock.tests2.SerializationTest.test":180,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":160,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":343,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":58,"org.easymock.tests2.UsageConstraintsTest.testSame":236,"org.easymock.samples.SupportTest.addDocument":27,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":461,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":434,"org.easymock.tests.GenericTest.testPackageScope":55,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":489,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":377,"org.easymock.tests2.NameTest.nameForMock":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":69,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":471,"org.easymock.tests2.UsageStrictMockTest.differentMethods":219,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":422,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":61,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":49,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":402,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":80,"org.easymock.tests2.MockedExceptionTest.testRealException":175,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":278,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":392,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":218,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":415,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":96,"org.easymock.tests2.NameTest.nameForStrictMock":204,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":469,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":152,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":476,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":249,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":345,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":13,"org.easymock.tests2.UsageStrictMockTest.range":312,"org.easymock.tests2.UsageConstraintsTest.lessThan":255,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":487,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":387,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":438,"org.easymock.tests2.CaptureTest.testCaptureRightOne":165,"org.easymock.tests2.UsageConstraintsTest.testOr":237,"org.easymock.tests.UsageRangeTest.combination":77,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":301,"org.easymock.tests.UsageTest.wrongArguments":281,"org.easymock.tests2.MockBuilderTest.testWithConstructor":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":435,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":62,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":381,"org.easymock.tests.UsageVarargTest.varargShortAccepted":140,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":347,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":292,"org.easymock.tests2.UsageConstraintsTest.cmpTo":241,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":315,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":480,"org.easymock.tests2.CaptureTest.testCaptureFromStub":425,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":406,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":14,"org.easymock.tests.UsageTest.unexpectedCallWithArray":280,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":289,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":121,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":71,"org.easymock.tests2.UsageConstraintsTest.constraints":232,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":290,"org.easymock.samples.ExampleTest.addAndChangeDocument":26,"org.easymock.tests.UsageStrictMockTest.testVerify":113,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":29,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":88,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":132,"org.easymock.tests.LimitationsTest.abstractClass":417,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":133,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":108,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":188,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":136}}]
