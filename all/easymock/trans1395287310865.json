[{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,18,19,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[16,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,17,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,38,156,157,158,159,160,161,162,163,164],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:66","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[93,165],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[166,167],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[168,97,169,98,99,170,171,15,172],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[0,1,173,174,2,3,4,5,175,176,88,89,177,6,178,7,8,179,9,10,11,180,181,90,91,12,13,14,182,168,96,97,183,169,98,99,100,101,170,171,15,172,102,184,17,185,186,20,21,22,23,24,137,26,187,27,28,140,141,29,30,31,152,155,38,76],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[0,1,173,2,3,4,5,6,178,7,8,9,10,13,14,188,189,190,191,96,97,169,98,100,101,172,102,103,107,108,192,111,193,45,194,185,186,195,125,126,53,196,197,198,199,54,55,58,60,61,62,63,65,66,67,68,70,71,72,73,143,152,157,158,74,200,201,75,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[218,219,220,83,221,222,223,224,225,84,85,86,87,0,1,173,174,2,3,4,5,175,176,89,177,6,178,7,8,179,9,10,11,180,181,90,91,12,13,14,226,92,93,227,228,229,230,94,231,232,233,95,234,235,236,237,238,239,240,182,241,242,243,244,245,246,247,248,188,189,190,249,250,251,252,253,191,168,96,97,183,169,98,99,100,101,170,171,15,172,102,254,255,103,16,256,257,258,259,260,104,105,17,106,107,108,109,261,262,263,264,265,44,266,192,110,267,111,193,45,268,112,113,194,269,270,271,272,273,274,185,186,195,275,276,277,278,279,280,281,114,115,18,19,116,282,117,118,119,120,283,121,122,123,124,125,46,126,47,48,49,50,51,52,20,21,22,23,24,284,285,53,127,128,129,130,131,132,133,134,135,136,137,138,139,196,198,199,26,187,27,28,140,141,29,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,143,144,145,146,286,147,148,30,31,287,152,288,289,290,291,292,153,154,155,38,156,157,158,159,161,74,200,293,162,201,75,163,164,294,295,296,297,298,76,299,300,301,302,303,202,203,304,305,204,306,205,206,207,208,307,209,210,211,212,308,213,214,215,216,217,77,309,39,40,41,42,43,310,311,312,313,314,78,315],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[317,318,319,320,321,322,323,324,277,281,325],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[270],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[173,326],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[327,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"position":"org.easymock.internal.MocksBehavior:200","failures":[190],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[95,234,235,237,238,239,182,329,241,244,330,331,332,333,257,258,334,261,335,336,337,338,339,340,341,342,275,278,114,115,138,139,343,344,345,346,347,348,349,350,351,352,353,287,354,161,355,166,356,357,358,167,359,360,361,362,363],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[364,365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[366],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[367,368,369],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:58","sourceCode":"return java.util.List<org.easymock.IArgumentMatcher>","type":"CtReturnImpl"},"failures":[0,1,173,174,2,3,4,5,175,176,89,177,6,178,7,8,179,9,10,11,180,181,90,91,12,13,14,182,249,168,96,97,183,169,98,99,100,101,170,171,15,172,102,17,185,186,20,21,22,23,24,137,26,187,27,28,140,141,29,30,31,152,155,38,76],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[321,370,232,371,372,373,374,375,260,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[232,233,95],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Invocation:195","failures":[79,80,81,82,83,223,225,226,376,229,94,231,235,241,244,331,377,378,379,336,380,338,340,381,382,383,384,385,386,387,265,388,389,390,391,392,393,394,395,396,397,398,274,399,400,401,402,403,404,275,276,281,405,406,407,408],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[409,79,80,81,82,218,219,220,83,221,222,223,224,225,84,85,86,87,0,1,173,174,410,2,3,4,5,175,176,88,89,177,6,178,7,8,179,9,10,11,180,181,90,91,12,13,14,226,319,92,376,320,411,93,227,228,321,229,412,370,230,94,323,231,232,233,95,234,235,236,237,238,239,240,368,182,413,329,241,242,243,244,330,331,245,246,247,248,188,189,190,249,250,327,251,252,253,414,191,168,96,97,183,169,98,99,100,101,170,171,15,172,102,332,415,416,417,333,418,419,184,420,421,254,255,103,16,256,257,258,259,260,324,422,104,105,17,106,107,108,109,334,377,378,261,379,335,262,336,337,423,380,338,424,425,339,426,263,340,341,381,382,342,264,427,428,383,384,385,386,387,265,388,389,390,391,392,393,44,266,192,110,267,111,193,45,268,112,113,194,269,270,429,430,271,272,273,394,395,396,397,398,274,399,400,401,402,403,404,185,431,186,195,275,276,277,278,432,279,280,281,325,114,115,18,19,116,282,117,118,119,120,283,121,122,123,124,433,125,46,126,47,48,49,50,51,52,20,21,22,23,24,434,435,436,25,284,285,53,127,128,129,437,130,131,132,133,134,135,136,137,438,138,139,439,343,405,196,197,198,199,26,187,27,28,140,141,29,440,441,442,443,444,445,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,344,345,346,347,348,349,350,351,142,446,143,144,145,146,286,147,148,406,447,448,449,407,450,408,451,30,31,452,149,150,316,453,32,454,455,456,364,457,458,459,460,461,462,463,352,353,287,354,151,464,465,33,466,467,468,34,35,469,470,471,472,328,473,474,475,36,476,477,478,479,37,480,481,482,483,484,485,486,152,288,289,290,291,292,153,154,155,38,156,157,158,159,160,161,74,200,293,162,201,75,163,164,294,487,488,489,295,296,297,298,76,299,300,301,302,303,490,355,166,356,357,358,167,491,359,202,203,304,305,204,306,205,206,207,208,307,209,210,211,212,308,213,214,215,216,492,365,493,217,77,309,39,40,41,42,43,494,360,361,362,310,311,495,312,496,497,363,313,498,314,78,499,500,315],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[79,80,81,82,219,83,222,223,225,84,173,179,226,92,376,228,229,230,94,231,235,241,244,331,104,17,106,107,108,109,265,388,44,192,110,267,111,112,113,194,269,274,399,195,276,277,280,281,132,196,441,444,445,346,347,348,142,143,144,286,147,148,406,449,407,450,408,451,152,153,155,38,156,157,158,159,74,200,293,162,163,164,294,492,365,217,77,309,494,498,499,500,315],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[175],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[327,414],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[179,238,111,458],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":174,"org.easymock.tests2.UsageTest.argumentsOrdered":113,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":74,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":328,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":111,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":116,"org.easymock.tests2.DelegateToTest.testReturnException":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":296,"org.easymock.tests.MockingTest.testPartialClassMocking":310,"org.easymock.tests.MockClassControlTest.testToString":346,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":409,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":37,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":54,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":262,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":255,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":371,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":176,"org.easymock.tests2.UsageTest.wrongArguments":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":27,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":393,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":302,"org.easymock.samples.ExampleTest.answerVsDelegate":283,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":450,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":497,"org.easymock.tests2.UsageConstraintsTest.testNull":3,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":237,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":84,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":351,"org.easymock.tests2.CaptureTest.testPrimitive":183,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":29,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":73,"org.easymock.tests.UsageTest.moreThanOneArgument":200,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":41,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":452,"org.easymock.tests.UsageTest.argumentsOrdered":164,"org.easymock.tests.UsageVarargTest.varargIntAccepted":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":476,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":20,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":226,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":416,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":403,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":467,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":24,"org.easymock.tests.ReplayStateInvalidUsageTest.times":460,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":265,"org.easymock.tests2.DependencyTest.testClassMocking":420,"org.easymock.tests2.AnswerTest.answer":270,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":478,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":248,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":448,"org.easymock.tests2.CaptureTest.testAnd":168,"org.easymock.tests2.UsageTest.strictResetToDefault":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":241,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":40,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":198,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":221,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":453,"org.easymock.tests2.DelegateToTest.testDelegate":191,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":69,"org.easymock.tests.LimitationsTest.mockFinalMethod":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":76,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":292,"org.easymock.tests2.DependencyTest.testClassMockingSupport":421,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":492,"org.easymock.tests2.CaptureTest.testCapture1_2446744":169,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":368,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":67,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":246,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":455,"org.easymock.tests.UsageThrowableTest.throwError":46,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":407,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":405,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":43,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":366,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":428,"org.easymock.samples.PartialClassMockTest.testGetArea":282,"org.easymock.tests.MockingTest.testInterfaceMocking":495,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":21,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":464,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":445,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":55,"org.easymock.tests2.UsageTest.niceToStrict":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":338,"org.easymock.tests2.ThreadingTest.testChangeDefault":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":33,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":93,"org.easymock.tests2.MockBuilderTest.testCreateMock":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":381,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":390,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":63,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":222,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":447,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":486,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":142,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":300,"org.easymock.tests.UsageOverloadedMethodTest.overloading":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":342,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":7,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":78,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":209,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":284,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":178,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":170,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":437,"org.easymock.tests2.EasyMockSupportClassTest.testAll":261,"org.easymock.tests.MockClassControlTest.testEquals":350,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":139,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":71,"org.easymock.tests2.CaptureTest.testCaptureAll":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":247,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":290,"org.easymock.tests.MockNameTest.defaultName":494,"org.easymock.tests2.UsageConstraintsTest.testMatches":8,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":42,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":32,"org.easymock.samples.ExampleTest.voteForRemovals":124,"org.easymock.tests.UsageVarargTest.allKinds":137,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":217,"org.easymock.samples.BasicClassMockTest.testPrintContent":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":291,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":51,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":104,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":414,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":299,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":491,"org.easymock.tests2.UsageConstraintsTest.greaterThan":9,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":379,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":197,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":244,"org.easymock.samples.ExampleTest.voteForRemoval":121,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":359,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":189,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":330,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":408,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":417,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":240,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":161,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":44,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":220,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":295,"org.easymock.tests2.CaptureTest.testCaptureFirst":102,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":469,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":83,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":269,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":206,"org.easymock.tests2.CaptureTest.testCapture2_2446744":172,"org.easymock.tests2.UsageTest.moreThanOneArgument":192,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":479,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":94,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":136,"org.easymock.tests.GenericTest.testBridgedEquals":343,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":147,"org.easymock.tests.UsageExpectAndReturnTest.longType":305,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":218,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":288,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":165,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":72,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":25,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":90,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":70,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":488,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":39,"org.easymock.tests.UsageCallCountTest.tooManyCalls":148,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":382,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":207,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":392,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":59,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":50,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":276,"org.easymock.tests.MockingTest.testNiceClassMocking":363,"org.easymock.tests.MockingTest.testClassMocking":361,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":446,"org.easymock.tests2.UsageConstraintsTest.testContains":6,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":258,"org.easymock.tests2.UsageConstraintsTest.testFind":2,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":53,"org.easymock.tests.MockTypeTest.fromEasyMockClass":449,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":186,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":153,"org.easymock.tests.UsageExpectAndReturnTest.object":307,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":391,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":225,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":372,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":443,"org.easymock.tests.UsageTest.exactCallCountByLastCall":294,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":35,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":434,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":149,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":324,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":127,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":213,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":314,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":395,"org.easymock.tests.MockClassControlTest.testHashCode":349,"org.easymock.tests2.EasyMockSupportTest.testVerify":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":425,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":150,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":485,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":313,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":245,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":184,"org.easymock.tests.UsageVarargTest.varargCharAccepted":130,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":490,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":483,"org.easymock.tests2.UsageTest.openCallCountByLastCall":193,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":86,"org.easymock.tests.DefaultClassInstantiatorTest.object":355,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":484,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":441,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":339,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":386,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":394,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":242,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":348,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":60,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":214,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":264,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":347,"org.easymock.tests2.UsageTest.resumeIfFailure":194,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":406,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":415,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":298,"org.easymock.tests2.StubTest.stubWithReturnValue":16,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":321,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":91,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":208,"org.easymock.tests2.SerializationTest.testAllMockedMethod":95,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":477,"org.easymock.samples.SupportTest.voteForRemovals":119,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":438,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":397,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":66,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":482,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":429,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":436,"org.easymock.tests.UsageExpectAndThrowTest.object":64,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":180,"org.easymock.tests2.DelegateToTest.testWrongClass":253,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":30,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":31,"org.easymock.tests.UsageStrictMockTest.range":157,"org.easymock.samples.ConstructorCalledMockTest.testTax":18,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":418,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":224,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":275,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":65,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":228,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":462,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":301,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":465,"org.easymock.tests2.CaptureTest.testCaptureNone":101,"org.easymock.tests.UsageUnorderedTest.message":152,"org.easymock.tests.UsageVerifyTest.twoReturns":309,"org.easymock.tests.UsageVarargTest.varargByteAccepted":135,"org.easymock.tests2.ThreadingTest.testThreadSafe":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":340,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":146,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":444,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":114,"org.easymock.tests2.CaptureTest.testCapture_2617107":97,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":480,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":141,"org.easymock.tests2.UsageConstraintsTest.any":89,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":459,"org.easymock.tests2.StubTest.stub":103,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":481,"org.easymock.tests.UsageExpectAndThrowTest.longType":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":297,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":358,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":458,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":106,"org.easymock.tests2.SerializationTest.testClass":232,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":274,"org.easymock.tests.LimitationsTest.mockNativeMethod":287,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":439,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":216,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":385,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":109,"org.easymock.tests2.NameTest.nameForMocksControl":82,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":387,"org.easymock.tests2.MockedExceptionTest.testMockedException":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":335,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":75,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":431,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":58,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":312,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":234,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":229,"org.easymock.tests.MockingTest.testNicePartialClassMocking":311,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":239,"org.easymock.tests2.CaptureTest.testCaptureLast":100,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":383,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":365,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":175,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":281,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":181,"org.easymock.tests.MockingTest.testTwoMocks":362,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":202,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":62,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":112,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":13,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":367,"org.easymock.samples.ExampleTest.removeNonExistingDocument":433,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":389,"org.easymock.tests.UsageStrictMockTest.differentMethods":158,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":364,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":396,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":356,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":190,"org.easymock.tests2.ConstraintsToStringTest.andToString":326,"org.easymock.tests2.MockBuilderTest.testCreateMockString":231,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":344,"org.easymock.tests.UsageExpectAndThrowTest.floatType":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":336,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":378,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":271,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":422,"org.easymock.tests.UsageVerifyTest.twoThrows":77,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":263,"org.easymock.samples.ExampleTest.voteAgainstRemoval":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":473,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":151,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":243,"org.easymock.tests.LimitationsTest.privateConstructor":353,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":318,"org.easymock.tests2.UsageConstraintsTest.testNotNull":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":52,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":256,"org.easymock.tests2.UsageTest.defaultResetToNice":268,"org.easymock.samples.ExampleTest.voteAgainstRemovals":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":474,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":308,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":384,"org.easymock.tests.UsageVarargTest.differentLength":132,"org.easymock.tests2.CallbackTest.callback":195,"org.easymock.tests2.UsageConstraintsTest.equals":410,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":413,"org.easymock.tests.UsageTest.openCallCountByLastCall":201,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":140,"org.easymock.tests.UsageCallCountTest.tooFewCalls":144,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":278,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":303,"org.easymock.tests.UsageThrowableTest.throwCheckedException":49,"org.easymock.tests.MockingTest.testStrictClassMocking":360,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":187,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":280,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":388,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":277,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":461,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":279,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":273,"org.easymock.tests.ObjectMethodsTest.testHashCode":442,"org.easymock.tests2.NameTest.nameForNiceMock":81,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":250,"org.easymock.tests2.DependencyTest.testInterfaceMocking":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":373,"org.easymock.samples.ExampleTest.addDocument":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":427,"org.easymock.tests2.DelegateToTest.testStubDelegate":252,"org.easymock.tests2.AnswerTest.stubAnswer":272,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":38,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":412,"org.easymock.tests.UsageVarargTest.varargLongAccepted":134,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":472,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":215,"org.easymock.tests.UsageExpectAndReturnTest.floatType":304,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":260,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":19,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":499,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":402,"org.easymock.tests.UsageThrowableTest.noUpperLimit":126,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":10,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":332,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":98,"org.easymock.tests2.SerializationTest.test":233,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":166,"org.easymock.tests2.UsageConstraintsTest.testSame":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":203,"org.easymock.samples.SupportTest.addDocument":118,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":432,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":337,"org.easymock.tests.GenericTest.testPackageScope":138,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":34,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":401,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":496,"org.easymock.tests2.NameTest.nameForMock":79,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":210,"org.easymock.tests2.UsageStrictMockTest.differentMethods":108,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":323,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":329,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":204,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":68,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":440,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":199,"org.easymock.tests2.MockedExceptionTest.testRealException":259,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":451,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":475,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":17,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":463,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":28,"org.easymock.tests2.NameTest.nameForStrictMock":80,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":411,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":185,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":238,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":333,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":11,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":357,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":92,"org.easymock.tests2.UsageStrictMockTest.range":107,"org.easymock.tests2.UsageConstraintsTest.lessThan":14,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":471,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":424,"org.easymock.tests2.CaptureTest.testCaptureRightOne":171,"org.easymock.tests2.UsageConstraintsTest.testOr":5,"org.easymock.tests.UsageRangeTest.combination":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":235,"org.easymock.tests.UsageTest.wrongArguments":162,"org.easymock.tests2.MockBuilderTest.testWithConstructor":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":423,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":345,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":211,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":167,"org.easymock.tests.UsageVarargTest.varargShortAccepted":133,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":286,"org.easymock.tests2.UsageConstraintsTest.cmpTo":177,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":468,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":45,"org.easymock.tests2.CaptureTest.testCaptureFromStub":15,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":454,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":376,"org.easymock.tests.UsageTest.unexpectedCallWithArray":293,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":155,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":145,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":322,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":212,"org.easymock.tests2.UsageConstraintsTest.constraints":173,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":156,"org.easymock.samples.ExampleTest.addAndChangeDocument":125,"org.easymock.tests.UsageStrictMockTest.testVerify":160,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":117,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":154,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":289,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":22,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":205,"org.easymock.tests.LimitationsTest.abstractClass":352,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":500,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":23,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":128,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":223}}]
