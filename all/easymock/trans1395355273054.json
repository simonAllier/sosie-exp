[{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"expected"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[2,3,4,5,6,7,8,9,10],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,2,62,63,3,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,4,83,84,5,6,7,85,86,8,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,0,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,9,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,10,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,1,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[53,55,56,58,2,91,92,127,131,134,143,158,169,170,171,172,183,191,198,199,201,202,205,206,212,477,478,479,242,243,244,266,267,269,270,272,304,306,311,375,378,408,465,469,471,474,475],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[89],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[132,204],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[143],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:218","failures":[21,22,24,215,225],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[237],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,28,29,30,31,32,47,49,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,4,83,84,5,6,7,85,8,89,90,91,92,95,97,98,99,100,101,114,115,116,117,118,120,121,122,124,138,139,140,141,142,143,145,146,147,148,149,150,152,153,154,0,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,176,177,178,179,180,183,184,189,190,191,196,197,198,199,200,201,202,203,204,205,206,207,208,238,239,240,241,242,243,244,245,246,247,248,249,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,276,284,285,286,289,290,291,292,293,294,303,304,305,306,307,308,309,310,311,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,378,385,386,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,423,424,426,430,431,432,433,434,435,436,10,437,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[55,199,205,206,243,244,480,266,269,354,375,470,471,474,475],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[177,178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[53,55,56,169,170,171,172,198,199,205,206,477,478,479,242,243,244,266,267,269,270,375,469,471,474,475],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[55,479,243,244,269],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[21,22,49,50,63,67,68,481,482,483,484,485,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"length":"i","clazz":"paramType"}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[69,70,71,72,79,80,142,143,145,146,147,148,149,150,151,152,160,161,165,166],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[55,199,205,206,243,244,488,480,266,269,354,375,470,471,474,475],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[69,71,79,142,143,146,148,149,151,160,165],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[21,21,22,22,53,80,140,141,145,146,147,148,154,155,156,158,159,165,166,167,234,245,246,247,248,249,267,336,385,393,394,397,413,414,415,416,417,418,419],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[489],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[14,120,122,123,124,350,443],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[147],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":143,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":468,"org.easymock.tests2.UsageTest.argumentsOrdered":206,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":135,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":451,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":201,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":23,"org.easymock.tests2.DelegateToTest.testReturnException":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":290,"org.easymock.tests.MockingTest.testPartialClassMocking":423,"org.easymock.tests.MockClassControlTest.testToString":432,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":168,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":219,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":215,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":355,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":477,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":48,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":393,"org.easymock.tests2.UsageTest.wrongArguments":199,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":240,"org.easymock.samples.ExampleTest.answerVsDelegate":14,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":300,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":428,"org.easymock.tests2.UsageConstraintsTest.testNull":146,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":5,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":134,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":10,"org.easymock.tests2.CaptureTest.testPrimitive":72,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":397,"org.easymock.tests.UsageTest.moreThanOneArgument":469,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":374,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":417,"org.easymock.tests.UsageTest.argumentsOrdered":475,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":380,"org.easymock.tests.UsageVarargTest.varargIntAccepted":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":245,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":179,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":112,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":443,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":249,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":38,"org.easymock.tests.ReplayStateInvalidUsageTest.times":344,"org.easymock.tests2.DependencyTest.testClassMocking":45,"org.easymock.tests2.AnswerTest.answer":173,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":458,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":118,"org.easymock.tests2.CaptureTest.testAnd":69,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":297,"org.easymock.tests2.UsageTest.strictResetToDefault":197,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":416,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":129,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":384,"org.easymock.tests2.DelegateToTest.testDelegate":124,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":370,"org.easymock.tests.LimitationsTest.mockFinalMethod":379,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":392,"org.easymock.tests2.DependencyTest.testClassMockingSupport":46,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":253,"org.easymock.tests2.CaptureTest.testCapture1_2446744":73,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":86,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":368,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":116,"org.easymock.tests.UsageThrowableTest.throwError":256,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":338,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":299,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":419,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":233,"org.easymock.samples.PartialClassMockTest.testGetArea":24,"org.easymock.tests.MockingTest.testInterfaceMocking":425,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":246,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":236,"org.easymock.tests2.UsageTest.niceToStrict":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":220,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":183,"org.easymock.tests2.MockBuilderTest.testCreateMock":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":228,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":41,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":364,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":130,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":296,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":440,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":238,"org.easymock.tests.UsageOverloadedMethodTest.overloading":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":230,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":155,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":351,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":398,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":327,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":78,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":404,"org.easymock.tests.MockClassControlTest.testEquals":436,"org.easymock.tests2.EasyMockSupportClassTest.testAll":212,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":314,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":372,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":390,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":117,"org.easymock.tests2.CaptureTest.testCaptureAll":70,"org.easymock.tests.MockNameTest.defaultName":387,"org.easymock.tests2.UsageConstraintsTest.testMatches":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":418,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":336,"org.easymock.samples.ExampleTest.voteForRemovals":18,"org.easymock.tests.UsageVarargTest.allKinds":412,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":391,"org.easymock.samples.BasicClassMockTest.testPrintContent":26,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":262,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":51,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":123,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":294,"org.easymock.tests2.UsageConstraintsTest.greaterThan":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":213,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":465,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":92,"org.easymock.samples.ExampleTest.voteForRemoval":15,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":282,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":29,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":93,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":301,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":85,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":437,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":196,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":127,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":289,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":119,"org.easymock.tests2.CaptureTest.testCaptureFirst":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":128,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":208,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":354,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":323,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":31,"org.easymock.tests2.CaptureTest.testCapture2_2446744":81,"org.easymock.tests2.UsageTest.moreThanOneArgument":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":459,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":190,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":411,"org.easymock.tests.GenericTest.testBridgedEquals":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":310,"org.easymock.tests.UsageExpectAndReturnTest.longType":319,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":388,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":125,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":373,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":163,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":234,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":415,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":274,"org.easymock.tests.UsageCallCountTest.tooManyCalls":311,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":229,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":324,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":360,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":261,"org.easymock.tests.MockingTest.testNiceClassMocking":429,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":62,"org.easymock.tests.MockingTest.testClassMocking":421,"org.easymock.tests2.UsageConstraintsTest.testContains":154,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":304,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":100,"org.easymock.tests2.UsageConstraintsTest.testFind":145,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":400,"org.easymock.tests.MockTypeTest.fromEasyMockClass":298,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":97,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":264,"org.easymock.tests.UsageExpectAndReturnTest.object":326,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":8,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":133,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":406,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":286,"org.easymock.tests.UsageTest.exactCallCountByLastCall":476,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":250,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":381,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":50,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":401,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":332,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":350,"org.easymock.tests.MockClassControlTest.testHashCode":435,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":103,"org.easymock.tests2.EasyMockSupportTest.testVerify":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":222,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":382,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":439,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":348,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":488,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":115,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":114,"org.easymock.tests.UsageVarargTest.varargCharAccepted":405,"org.easymock.tests2.CaptureTest.testCaptureMultiple":489,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":463,"org.easymock.tests2.UsageTest.openCallCountByLastCall":202,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":136,"org.easymock.tests.DefaultClassInstantiatorTest.object":276,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":438,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":284,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":362,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":36,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":102,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":434,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":361,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":333,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":273,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":231,"org.easymock.tests2.UsageTest.resumeIfFailure":207,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":292,"org.easymock.tests2.StubTest.stubWithReturnValue":139,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":485,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":164,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":325,"org.easymock.tests2.SerializationTest.testAllMockedMethod":60,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":457,"org.easymock.samples.SupportTest.voteForRemovals":12,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":312,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":105,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":367,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":1,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":174,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":252,"org.easymock.tests.UsageExpectAndThrowTest.object":365,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":161,"org.easymock.tests2.DelegateToTest.testWrongClass":122,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":413,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":414,"org.easymock.samples.ConstructorCalledMockTest.testTax":21,"org.easymock.tests.UsageStrictMockTest.range":269,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":194,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":132,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":2,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":366,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":185,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":209,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":239,"org.easymock.tests2.CaptureTest.testCaptureNone":77,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":237,"org.easymock.tests.UsageUnorderedTest.message":375,"org.easymock.tests.UsageVerifyTest.twoReturns":244,"org.easymock.tests.UsageVarargTest.varargByteAccepted":410,"org.easymock.tests2.ThreadingTest.testThreadSafe":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":226,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":308,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":25,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":287,"org.easymock.tests2.CaptureTest.testCapture_2617107":71,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":461,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":396,"org.easymock.tests2.UsageConstraintsTest.any":152,"org.easymock.tests2.StubTest.stub":138,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":343,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":291,"org.easymock.tests.UsageExpectAndThrowTest.longType":358,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":280,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":342,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":54,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":107,"org.easymock.tests2.SerializationTest.testClass":58,"org.easymock.tests.LimitationsTest.mockNativeMethod":378,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":315,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":335,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":35,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":57,"org.easymock.tests2.NameTest.nameForMocksControl":172,"org.easymock.tests2.MockedExceptionTest.testMockedException":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":214,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":473,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":426,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":96,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":359,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":4,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":186,"org.easymock.tests.MockingTest.testNicePartialClassMocking":424,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":7,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":33,"org.easymock.tests2.CaptureTest.testCaptureLast":76,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":254,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":149,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":162,"org.easymock.tests.MockingTest.testTwoMocks":422,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":68,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":363,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":205,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":166,"org.easymock.samples.ExampleTest.removeNonExistingDocument":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":40,"org.easymock.tests.UsageStrictMockTest.differentMethods":270,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":340,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":104,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":278,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":30,"org.easymock.tests2.MockBuilderTest.testCreateMockString":191,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":216,"org.easymock.tests.UsageExpectAndThrowTest.floatType":357,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":211,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":176,"org.easymock.tests.UsageVerifyTest.twoThrows":243,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":225,"org.easymock.samples.ExampleTest.voteAgainstRemoval":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":452,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":235,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":91,"org.easymock.tests.LimitationsTest.privateConstructor":377,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":482,"org.easymock.tests2.UsageConstraintsTest.testNotNull":165,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":98,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":263,"org.easymock.tests2.UsageTest.defaultResetToNice":204,"org.easymock.samples.ExampleTest.voteAgainstRemovals":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":331,"org.easymock.tests.UsageVarargTest.differentLength":407,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":34,"org.easymock.tests2.CallbackTest.callback":61,"org.easymock.tests2.UsageConstraintsTest.equals":144,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":87,"org.easymock.tests.UsageTest.openCallCountByLastCall":472,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":140,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":395,"org.easymock.tests.UsageCallCountTest.tooFewCalls":306,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":3,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":241,"org.easymock.tests.UsageThrowableTest.throwCheckedException":260,"org.easymock.tests.MockingTest.testStrictClassMocking":420,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":386,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":39,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":63,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":345,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":65,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":178,"org.easymock.tests.ObjectMethodsTest.testHashCode":285,"org.easymock.tests2.NameTest.nameForNiceMock":171,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":32,"org.easymock.tests2.DependencyTest.testInterfaceMocking":47,"org.easymock.samples.ExampleTest.addDocument":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":227,"org.easymock.tests2.DelegateToTest.testStubDelegate":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":232,"org.easymock.tests2.AnswerTest.stubAnswer":177,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":267,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":187,"org.easymock.tests.UsageVarargTest.varargLongAccepted":409,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":450,"org.easymock.tests.UsageExpectAndReturnTest.floatType":318,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":334,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":49,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":22,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":159,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":111,"org.easymock.tests.UsageThrowableTest.noUpperLimit":257,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":141,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":192,"org.easymock.tests2.SerializationTest.test":59,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":74,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":277,"org.easymock.tests2.UsageConstraintsTest.testSame":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":317,"org.easymock.samples.SupportTest.addDocument":11,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":64,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":217,"org.easymock.tests.GenericTest.testPackageScope":313,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":110,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":427,"org.easymock.tests2.NameTest.nameForMock":169,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":328,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":487,"org.easymock.tests2.UsageStrictMockTest.differentMethods":56,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":88,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":320,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":369,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":283,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":467,"org.easymock.tests2.MockedExceptionTest.testRealException":101,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":454,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":394,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":347,"org.easymock.tests2.NameTest.nameForStrictMock":170,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":182,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":95,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":6,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":193,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":478,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":160,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":279,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":180,"org.easymock.tests2.UsageStrictMockTest.range":55,"org.easymock.tests2.UsageConstraintsTest.lessThan":167,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":126,"org.easymock.tests2.CaptureTest.testCaptureRightOne":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":221,"org.easymock.tests2.UsageConstraintsTest.testOr":148,"org.easymock.tests.UsageRangeTest.combination":464,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":83,"org.easymock.tests.UsageTest.wrongArguments":471,"org.easymock.tests2.MockBuilderTest.testWithConstructor":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":218,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":431,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":329,"org.easymock.tests.UsageVarargTest.varargShortAccepted":408,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":281,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":309,"org.easymock.tests2.UsageConstraintsTest.cmpTo":153,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":444,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":203,"org.easymock.tests2.CaptureTest.testCaptureFromStub":80,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":337,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":181,"org.easymock.tests.UsageTest.unexpectedCallWithArray":470,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":266,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":307,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":486,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":330,"org.easymock.tests2.UsageConstraintsTest.constraints":142,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":268,"org.easymock.samples.ExampleTest.addAndChangeDocument":20,"org.easymock.tests.UsageStrictMockTest.testVerify":272,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":27,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":389,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":75,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":247,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":322,"org.easymock.tests.LimitationsTest.abstractClass":376,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":248,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":353,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":479,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":402,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":131}}]
