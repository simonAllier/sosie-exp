[{"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:161","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[10,11,12,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[17,18,19],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[20,21,22,23,24,25],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[28,29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,12,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,28,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,13,195,16,0,196,1,197,3,4,198,199,5,6,200,201,202,203,204,205,206,207,26,27,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[171,233],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[234],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[235,236,10,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.ConstructorArgs:77","failures":[256],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[257,258],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[257,258],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[233,259],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[44,45,46,70,71,83,112,116,117,119,122,132,133,134,152,153,154,161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[39,42,44,260,45,50,51,52,53,54,55,58,59,61,62,63,65,66,67,68,69,73,74,75,76,77,94,95,96,103,104,128,129,130,131,139,140,141,142,144,145,146,148,261,262,150,263,152,264,153,265,157,158,266,267,159,160,268,173,269,179,270,271,272,273,274,275,276,181,277,182,183,184,185,186,278,188,279,195],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,6,207,26,208,210,211,280,222,226],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[281],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[44,45,46,71,83,132,133,134,152,153,154,161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[282,283],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[37,38,284,42,72,285,94,95,96,286,287,105,288,288,289,289,261,290,291,292,293,294,295,265,157,158,266,159,160,168,173,178,296,269,297,179,180,270,271,298,272,299,300,273,274,275,276,181,277,183,184,185,301,186,187,278,188,279,229,231],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[20,21,22,23,24,25],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[302],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:64","sourceCode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], int, int)","type":"CtInvocationImpl"},"failures":[84,85,86,87,88,303,89,90,91,92,93,144,148,262],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[304,12,189,305,190,192,193,194,232],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[30,306,307,308,309,31,32,33,34,35,36,310,311,312,39,40,313,314,41,315,316,317,43,20,44,318,260,45,46,47,319,48,49,320,321,322,323,324,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,325,283,326,327,71,23,328,329,330,331,332,333,334,335,336,337,338,73,74,75,76,77,78,79,80,81,82,304,339,11,340,341,83,342,84,85,86,87,88,303,89,90,91,92,93,343,344,345,346,347,348,97,98,99,100,101,102,349,350,351,281,352,353,354,355,356,103,104,357,358,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,12,145,146,147,148,149,359,360,361,262,362,363,150,263,364,151,152,365,264,153,154,155,156,267,366,28,161,367,162,163,368,369,164,370,371,165,372,166,167,168,169,170,171,233,268,172,173,174,175,176,177,182,189,373,305,190,191,192,193,194,374,13,195,14,15,16,0,196,1,197,2,3,4,198,199,5,6,7,8,200,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,201,202,203,204,205,206,207,26,27,208,209,210,211,212,280,213,214,215,216,217,218,219,220,221,222,223,224,390,225,226,227,228,229,230,232],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":26,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":327,"org.easymock.tests2.UsageTest.argumentsOrdered":371,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":385,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":244,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":163,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":359,"org.easymock.tests2.DelegateToTest.testReturnException":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":98,"org.easymock.tests.MockingTest.testPartialClassMocking":94,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":108,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":274,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":263,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":212,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":39,"org.easymock.tests2.UsageTest.wrongArguments":367,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":137,"org.easymock.samples.ExampleTest.answerVsDelegate":12,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":287,"org.easymock.tests2.UsageConstraintsTest.testNull":208,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":183,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":384,"org.easymock.tests2.CaptureTest.testPrimitive":197,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":41,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":127,"org.easymock.tests.UsageTest.moreThanOneArgument":71,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":182,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":141,"org.easymock.tests.UsageTest.argumentsOrdered":332,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":349,"org.easymock.tests.UsageVarargTest.varargIntAccepted":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":249,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":73,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":178,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":77,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":19,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":388,"org.easymock.tests2.AnswerTest.answer":189,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":250,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":204,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":28,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":140,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":130,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":379,"org.easymock.tests2.DelegateToTest.testDelegate":16,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":352,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":82,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":325,"org.easymock.tests2.CaptureTest.testCapture1_2446744":2,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":202,"org.easymock.tests.UsageThrowableTest.throwError":319,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":354,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":143,"org.easymock.samples.PartialClassMockTest.testGetArea":261,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":74,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":344,"org.easymock.tests2.UsageTest.niceToStrict":162,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":235,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":256,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":179,"org.easymock.tests2.MockBuilderTest.testCreateMock":298,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":117,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":24,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":380,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":309,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":135,"org.easymock.tests.UsageOverloadedMethodTest.overloading":106,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":217,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":340,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":61,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":358,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":216,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":5,"org.easymock.tests2.EasyMockSupportClassTest.testAll":273,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":38,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":125,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":292,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":80,"org.easymock.tests2.CaptureTest.testCaptureAll":196,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":203,"org.easymock.tests.MockNameTest.defaultName":357,"org.easymock.tests2.UsageConstraintsTest.testMatches":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":142,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":316,"org.easymock.samples.ExampleTest.voteForRemovals":148,"org.easymock.tests.UsageVarargTest.allKinds":93,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":81,"org.easymock.samples.BasicClassMockTest.testPrintContent":291,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":323,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":102,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":15,"org.easymock.tests2.UsageConstraintsTest.greaterThan":220,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":129,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":279,"org.easymock.samples.ExampleTest.voteForRemoval":145,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":171,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":259,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":355,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":301,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":72,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":241,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":377,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":97,"org.easymock.tests2.CaptureTest.testCaptureFirst":200,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":378,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":372,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":342,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":57,"org.easymock.tests2.UsageTest.moreThanOneArgument":161,"org.easymock.tests2.CaptureTest.testCapture2_2446744":8,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":251,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":272,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":92,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":311,"org.easymock.tests.UsageExpectAndReturnTest.longType":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":78,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":375,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":126,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":299,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":390,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":348,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":139,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":337,"org.easymock.tests.UsageCallCountTest.tooManyCalls":312,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":17,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":58,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":322,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":157,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":32,"org.easymock.tests2.UsageConstraintsTest.testContains":215,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":296,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":168,"org.easymock.tests2.UsageConstraintsTest.testFind":27,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":107,"org.easymock.tests.MockTypeTest.fromEasyMockClass":353,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":194,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":317,"org.easymock.tests.UsageExpectAndReturnTest.object":60,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":186,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":383,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":88,"org.easymock.tests.UsageTest.exactCallCountByLastCall":333,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":239,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":350,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":66,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":84,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":11,"org.easymock.tests2.EasyMockSupportTest.testVerify":387,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":18,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":351,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":304,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":308,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":201,"org.easymock.tests.UsageVarargTest.varargCharAccepted":87,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":255,"org.easymock.tests2.UsageTest.openCallCountByLastCall":368,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":386,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":307,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":346,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":115,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":295,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":320,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":278,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":114,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":67,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":276,"org.easymock.tests2.UsageTest.resumeIfFailure":165,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":100,"org.easymock.tests2.StubTest.stubWithReturnValue":156,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":59,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":225,"org.easymock.tests2.SerializationTest.testAllMockedMethod":231,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":334,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":25,"org.easymock.samples.SupportTest.voteForRemovals":262,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":120,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":335,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":373,"org.easymock.tests.UsageExpectAndThrowTest.object":118,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":223,"org.easymock.tests2.DelegateToTest.testWrongClass":14,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":103,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":104,"org.easymock.tests.UsageStrictMockTest.range":260,"org.easymock.samples.ConstructorCalledMockTest.testTax":288,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":382,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":265,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":270,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":136,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":21,"org.easymock.tests2.CaptureTest.testCaptureNone":199,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":345,"org.easymock.tests.UsageUnorderedTest.message":315,"org.easymock.tests.UsageVerifyTest.twoReturns":134,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":234,"org.easymock.tests.UsageVarargTest.varargByteAccepted":91,"org.easymock.tests2.ThreadingTest.testThreadSafe":170,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":36,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":290,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":347,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":253,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":314,"org.easymock.tests2.UsageConstraintsTest.any":213,"org.easymock.tests2.StubTest.stub":155,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":338,"org.easymock.tests.UsageExpectAndThrowTest.longType":111,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":254,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":365,"org.easymock.tests2.SerializationTest.testClass":229,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":362,"org.easymock.tests.LimitationsTest.mockNativeMethod":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":69,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":284,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":294,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":154,"org.easymock.tests2.NameTest.nameForMocksControl":177,"org.easymock.tests2.MockedExceptionTest.testMockedException":167,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":330,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":112,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":96,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":181,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":271,"org.easymock.tests.MockingTest.testNicePartialClassMocking":95,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":185,"org.easymock.tests2.CaptureTest.testCaptureLast":198,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":283,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":160,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":211,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":224,"org.easymock.tests.MockingTest.testTwoMocks":285,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":116,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":370,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":227,"org.easymock.tests.UsageStrictMockTest.differentMethods":45,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":282,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":233,"org.easymock.tests2.MockBuilderTest.testCreateMockString":300,"org.easymock.tests.UsageExpectAndThrowTest.floatType":110,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":219,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":190,"org.easymock.tests.UsageVerifyTest.twoThrows":133,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":275,"org.easymock.samples.ExampleTest.voteAgainstRemoval":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":245,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":343,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":188,"org.easymock.tests2.UsageConstraintsTest.testNotNull":226,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":166,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":324,"org.easymock.tests2.UsageTest.defaultResetToNice":164,"org.easymock.samples.ExampleTest.voteAgainstRemovals":144,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":246,"org.easymock.tests.UsageVarargTest.differentLength":303,"org.easymock.tests2.CallbackTest.callback":232,"org.easymock.tests2.UsageConstraintsTest.equals":302,"org.easymock.tests.UsageTest.openCallCountByLastCall":329,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":313,"org.easymock.tests.UsageCallCountTest.tooFewCalls":34,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":266,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":138,"org.easymock.tests.UsageThrowableTest.throwCheckedException":321,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":22,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":159,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":306,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":389,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":158,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":267,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":192,"org.easymock.tests2.NameTest.nameForNiceMock":176,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":172,"org.easymock.tests2.DependencyTest.testInterfaceMocking":150,"org.easymock.samples.ExampleTest.addDocument":147,"org.easymock.tests2.DelegateToTest.testStubDelegate":195,"org.easymock.tests2.AnswerTest.stubAnswer":191,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":44,"org.easymock.tests.UsageVarargTest.varargLongAccepted":90,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":243,"org.easymock.tests.UsageExpectAndReturnTest.floatType":52,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":68,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":173,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":289,"org.easymock.tests.UsageThrowableTest.noUpperLimit":48,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":221,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":206,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":3,"org.easymock.tests2.SerializationTest.test":230,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":257,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":51,"org.easymock.tests2.UsageConstraintsTest.testSame":209,"org.easymock.samples.SupportTest.addDocument":361,"org.easymock.tests.GenericTest.testPackageScope":37,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":238,"org.easymock.tests2.NameTest.nameForMock":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":62,"org.easymock.tests2.UsageStrictMockTest.differentMethods":153,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":29,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":54,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":122,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":131,"org.easymock.tests2.MockedExceptionTest.testRealException":169,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":248,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":247,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":40,"org.easymock.tests2.NameTest.nameForStrictMock":175,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":193,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":184,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":222,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":269,"org.easymock.tests2.UsageStrictMockTest.range":264,"org.easymock.tests2.UsageConstraintsTest.lessThan":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":242,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":376,"org.easymock.tests2.CaptureTest.testCaptureRightOne":6,"org.easymock.tests2.UsageConstraintsTest.testOr":210,"org.easymock.tests.UsageRangeTest.combination":128,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":277,"org.easymock.tests.UsageTest.wrongArguments":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":9,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":236,"org.easymock.tests.UsageVarargTest.varargShortAccepted":89,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":258,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":310,"org.easymock.tests2.UsageConstraintsTest.cmpTo":214,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":237,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":369,"org.easymock.tests2.CaptureTest.testCaptureFromStub":7,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":297,"org.easymock.tests.UsageTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":35,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":64,"org.easymock.tests2.UsageConstraintsTest.constraints":207,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":318,"org.easymock.samples.ExampleTest.addAndChangeDocument":149,"org.easymock.tests.UsageStrictMockTest.testVerify":47,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":360,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":79,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":75,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":293,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":76,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":83,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":85,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":381}}]
