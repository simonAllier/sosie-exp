[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[6,7,8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[50,51,52,53,54],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[55],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[57],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,14,74,75,76,77,78,79,80,81,82,83,32,33,34,35,36,39,40,41,43,45,46,47,84,85,86,11,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,55,121,122,12,123,124,57,125,126,127,128,129,130,131,9,132,133,134,135,136,137,138,139,140,30,141,142,143,144,145,146,147,148,149,150,151,152,153,19,154,155,156,157,158,159,160,161,162,163,164,165,166,167,22,168,51,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[218,14,74,6,219,220,96,100,101,104,137,30,221,22,168,222,201,202,223,224,225,209],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:145","sourceCode":"return java.lang.reflect.Method != null ? org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>) : false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[226],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[107,138,142,18,160,161,162,163,164,165,166,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,198,249,250,251,252,213,216],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[253,254],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[143],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[67,69,73,255,32,33,34,35,36,37,38,39,40,41,43,44,45,46,88,220,7,8,256,257,108,109,110,111,112,113,114,115,116,117,258,118,119,120,55,121,122,12,123,124,57,125,126,127,128,129,130,131,154,155,156,157,158,21,167,227,259,24,191,192,260,193,194,261,262,195,263,199,200,264],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[75,76,265,266],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":111,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":213,"org.easymock.tests2.UsageTest.argumentsOrdered":17,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":105,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":13,"org.easymock.tests2.StubTest.stubWithReturnValue":107,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":128,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":178,"org.easymock.tests2.SerializationTest.testAllMockedMethod":265,"org.easymock.tests.MockingTest.testPartialClassMocking":201,"org.easymock.samples.SupportTest.voteForRemovals":58,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":50,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":159,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":241,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":229,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":147,"org.easymock.tests.UsageExpectAndThrowTest.object":239,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":71,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":125,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":199,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":200,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":193,"org.easymock.tests2.UsageTest.wrongArguments":15,"org.easymock.tests.UsageStrictMockTest.range":22,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":102,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":77,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":224,"org.easymock.tests2.UsageConstraintsTest.testNull":113,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":240,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":86,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":104,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":135,"org.easymock.tests2.CaptureTest.testPrimitive":35,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":195,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":248,"org.easymock.tests.UsageTest.moreThanOneArgument":214,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":85,"org.easymock.tests2.CaptureTest.testCaptureNone":40,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":152,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":1,"org.easymock.tests.UsageUnorderedTest.message":24,"org.easymock.tests.UsageVerifyTest.twoReturns":19,"org.easymock.tests2.ThreadingTest.testThreadSafe":64,"org.easymock.tests.UsageTest.argumentsOrdered":28,"org.easymock.tests2.CaptureTest.testCapture_2617107":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":206,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":254,"org.easymock.tests2.UsageConstraintsTest.any":118,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":158,"org.easymock.tests.UsageExpectAndThrowTest.longType":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":207,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":255,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":93,"org.easymock.tests2.SerializationTest.testClass":75,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":69,"org.easymock.tests.LimitationsTest.mockNativeMethod":190,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":53,"org.easymock.tests2.AnswerTest.answer":9,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":188,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":258,"org.easymock.tests2.CaptureTest.testAnd":32,"org.easymock.tests2.UsageTest.strictResetToDefault":139,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":220,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":2,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":99,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":216,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":233,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":203,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":56,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":47,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":136,"org.easymock.tests.MockingTest.testNicePartialClassMocking":202,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":244,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":87,"org.easymock.tests2.CaptureTest.testCaptureLast":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":227,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":83,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":116,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":126,"org.easymock.tests2.CaptureTest.testCapture1_2446744":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":169,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":237,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":130,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":5,"org.easymock.tests.UsageThrowableTest.throwError":160,"org.easymock.tests.UsageStrictMockTest.differentMethods":168,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":4,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":66,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":49,"org.easymock.tests.UsageExpectAndThrowTest.floatType":231,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":12,"org.easymock.tests.UsageVerifyTest.twoThrows":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":148,"org.easymock.samples.PartialClassMockTest.testGetArea":63,"org.easymock.tests.MockingTest.testInterfaceMocking":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":155,"org.easymock.samples.ExampleTest.voteAgainstRemoval":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":205,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":151,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":90,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":230,"org.easymock.tests2.UsageTest.niceToStrict":30,"org.easymock.tests2.UsageConstraintsTest.testNotNull":129,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":166,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":134,"org.easymock.tests2.UsageTest.defaultResetToNice":143,"org.easymock.samples.ExampleTest.voteAgainstRemovals":59,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":184,"org.easymock.tests2.CallbackTest.callback":6,"org.easymock.tests.UsageTest.openCallCountByLastCall":215,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":238,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":100,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":108,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":251,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":261,"org.easymock.tests.UsageOverloadedMethodTest.overloading":197,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":228,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":121,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":196,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":180,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":55,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":41,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":3,"org.easymock.tests.UsageThrowableTest.throwCheckedException":163,"org.easymock.tests2.EasyMockSupportClassTest.testAll":146,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":52,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":246,"org.easymock.tests2.CaptureTest.testCaptureAll":33,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":192,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":82,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":79,"org.easymock.tests2.UsageConstraintsTest.testMatches":122,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":81,"org.easymock.samples.ExampleTest.voteForRemovals":62,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":68,"org.easymock.tests.UsageVarargTest.allKinds":263,"org.easymock.tests2.DependencyTest.testInterfaceMocking":70,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":153,"org.easymock.tests2.DelegateToTest.testStubDelegate":94,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":165,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":218,"org.easymock.tests2.AnswerTest.stubAnswer":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":259,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":167,"org.easymock.tests2.UsageConstraintsTest.greaterThan":123,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":210,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":204,"org.easymock.samples.ExampleTest.voteForRemoval":60,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":65,"org.easymock.tests.UsageExpectAndReturnTest.floatType":171,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":187,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":72,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":124,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":109,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":138,"org.easymock.tests2.SerializationTest.test":76,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":97,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":161,"org.easymock.tests2.UsageConstraintsTest.testSame":114,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":170,"org.easymock.tests2.CaptureTest.testCaptureFirst":46,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":219,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":98,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":145,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":23,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":176,"org.easymock.tests.GenericTest.testPackageScope":51,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":67,"org.easymock.tests2.CaptureTest.testCapture2_2446744":45,"org.easymock.tests2.UsageTest.moreThanOneArgument":140,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":137,"org.easymock.tests.GenericTest.testBridgedEquals":54,"org.easymock.tests.UsageExpectAndReturnTest.longType":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":260,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":95,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":247,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":181,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":127,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":245,"org.easymock.tests2.UsageStrictMockTest.differentMethods":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":264,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":173,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":243,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":212,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":177,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":234,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":164,"org.easymock.tests.MockingTest.testNiceClassMocking":225,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":78,"org.easymock.tests.MockingTest.testClassMocking":222,"org.easymock.tests2.UsageConstraintsTest.testContains":120,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":92,"org.easymock.tests2.UsageConstraintsTest.testFind":112,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":198,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":7,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":11,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":221,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":8,"org.easymock.tests.UsageExpectAndReturnTest.object":179,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":57,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":88,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":133,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":131,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":103,"org.easymock.tests.UsageTest.exactCallCountByLastCall":217,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":29,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":191,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":96,"org.easymock.tests2.CaptureTest.testCaptureRightOne":43,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":0,"org.easymock.tests2.UsageConstraintsTest.testOr":115,"org.easymock.tests.UsageRangeTest.combination":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":84,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":185,"org.easymock.tests.UsageTest.wrongArguments":26,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":182,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":250,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":257,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":256,"org.easymock.tests2.UsageConstraintsTest.cmpTo":119,"org.easymock.tests2.CaptureTest.testCaptureMultiple":31,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":208,"org.easymock.tests2.UsageTest.openCallCountByLastCall":141,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":142,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":106,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":249,"org.easymock.tests2.CaptureTest.testCaptureFromStub":44,"org.easymock.tests.UsageTest.unexpectedCallWithArray":25,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":20,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":236,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":21,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":162,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":183,"org.easymock.tests2.CaptureTest.testCapture":42,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":89,"org.easymock.tests2.UsageConstraintsTest.constraints":110,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":235,"org.easymock.tests.CapturesMatcherTest.test":48,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":149,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":38,"org.easymock.tests2.UsageTest.resumeIfFailure":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":156,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":157,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":101}}]
