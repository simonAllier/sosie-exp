[{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[2,3,4,5,6,7,8,9,253,254,255,256,257,258,259,260,261,262,14,15,16,17,18,19,20,263,264,21,26,27,30,32,33,34,35,37,38,39,40,42,43,44,45,265,266,267,46,268,47,48,269,270,53,55,56,57,59,69,71,72,73,74,75,79,271,272,273,83,84,85,86,89,91,92,93,94,96,97,98,99,101,102,103,104,106,107,108,111,112,113,114,115,116,117,118,129,133,134,136,137,138,139,140,142,143,146,147,148,151,152,153,154,155,274,156,157,275,276,160,277,278,161,279,162,163,280,165,169,170,177,178,181,189,190,191,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,281,216,217,218,219,221,224,227,228,229,232,282,233,234,283,284,235,236,237,238,240,241,245,248],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[285,2,4,5,6,7,286,8,287,9,288,289,10,11,12,253,254,255,290,256,257,291,258,259,260,261,262,292,13,14,15,16,17,18,293,294,19,20,263,264,21,295,22,296,297,298,299,300,301,302,303,304,305,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,265,266,267,46,268,47,48,269,270,49,50,51,306,52,307,53,54,55,56,57,58,59,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,60,324,61,62,325,63,326,64,65,66,67,68,69,70,71,72,73,74,75,327,328,329,330,331,76,77,78,332,333,79,271,334,272,335,336,273,80,337,338,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,339,340,105,341,106,107,108,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,109,366,367,368,369,370,110,371,372,373,374,375,376,377,378,379,380,381,382,383,384,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,385,134,135,136,137,138,139,141,142,144,146,147,148,386,387,388,149,150,151,152,153,154,389,155,274,156,157,158,275,276,159,160,277,278,161,279,162,163,280,165,166,167,168,169,170,390,391,392,393,172,394,395,173,396,397,398,399,400,401,185,186,189,190,191,192,193,194,195,196,197,402,198,199,200,201,202,203,403,204,205,206,207,208,209,210,211,212,213,214,215,281,216,217,218,219,220,221,222,223,224,225,404,226,405,406,229,407,408,409,410,411,231,232,282,233,234,283,284,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[197],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[316,362,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[197],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[310,365,110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[164,412,171,413,414,415,416,417,418,419,420,421,422,423,424],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[233],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[111,114],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[111,114],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:354","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[197,198],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[207],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"expected","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[15,17,20,54,57,58,62,65,66,67,68,69,70,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,113,114,115,116,117,118,136,152,157,249,250,251,252],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[202,203],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[76,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[267,46,47,48,270,161,162,163,223,225],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:323","sourceCode":"final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[15,115,116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[122],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:53","sourceCode":"throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[421],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"clazz"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[425,426],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[51],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[412,413,418,419,420,424],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:381","sourceCode":"while (java.lang.Class<?> != null) {\n    for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n        final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n        if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n            java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:734","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[203,403],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[233],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[427,285,2,3,428,4,5,6,7,286,8,287,9,288,289,10,11,12,253,254,255,290,256,257,291,258,259,260,261,262,292,13,14,15,16,17,18,293,294,19,20,263,264,21,295,22,296,429,297,430,431,432,298,299,300,301,302,303,304,305,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,265,266,267,46,268,47,48,269,270,49,50,51,306,52,307,53,54,55,56,57,58,59,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,60,324,61,62,325,63,326,64,65,66,67,68,69,70,71,72,73,74,75,327,328,329,330,331,76,77,78,332,333,79,271,334,272,335,336,273,433,80,337,81,338,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,339,340,105,341,106,107,108,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,109,366,367,368,369,370,110,371,434,372,373,374,375,376,377,435,378,379,380,381,382,383,384,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,385,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,386,387,388,149,150,151,152,153,154,389,155,274,156,157,158,275,276,159,160,277,278,161,279,162,163,280,436,437,438,439,440,165,166,167,168,169,170,390,391,392,393,172,394,395,441,173,396,174,442,397,443,398,175,444,399,445,446,400,176,447,177,448,449,178,450,179,180,451,181,452,401,182,183,185,186,453,189,190,191,192,193,194,195,196,197,402,198,199,200,201,202,203,403,204,205,206,207,208,209,210,211,212,213,214,215,281,216,217,218,219,220,221,222,223,224,225,454,404,226,405,406,227,228,229,407,455,456,457,458,425,459,230,460,461,462,463,464,465,408,409,410,411,231,232,282,233,234,283,284,235,236,237,238,239,240,241,466,467,468,426,469,242,470,471,472,473,474,475,243,244,245,246,247,248,249,250,251,252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[196,202,231,282,238],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":197,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":17,"org.easymock.tests2.UsageTest.argumentsOrdered":276,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":360,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":274,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":428,"org.easymock.tests2.DelegateToTest.testReturnException":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":66,"org.easymock.tests.MockingTest.testPartialClassMocking":23,"org.easymock.tests.MockClassControlTest.testToString":344,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":436,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":52,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":368,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":85,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":418,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":203,"org.easymock.tests2.UsageTest.wrongArguments":389,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":55,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":475,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":322,"org.easymock.samples.ExampleTest.answerVsDelegate":5,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":431,"org.easymock.tests2.UsageConstraintsTest.testNull":199,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":304,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":223,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":146,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":349,"org.easymock.tests2.CaptureTest.testPrimitive":233,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":59,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":104,"org.easymock.tests.UsageTest.moreThanOneArgument":18,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":126,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":119,"org.easymock.tests.UsageTest.argumentsOrdered":264,"org.easymock.tests.UsageVarargTest.varargIntAccepted":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":71,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":447,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":423,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":464,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":75,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":242,"org.easymock.tests.ReplayStateInvalidUsageTest.times":316,"org.easymock.tests2.DependencyTest.testClassMocking":387,"org.easymock.tests2.AnswerTest.answer":165,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":366,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":393,"org.easymock.tests2.CaptureTest.testAnd":231,"org.easymock.tests2.UsageTest.strictResetToDefault":153,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":406,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":141,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":131,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":123,"org.easymock.tests2.DelegateToTest.testDelegate":248,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":100,"org.easymock.tests.LimitationsTest.mockFinalMethod":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":69,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":331,"org.easymock.tests2.DependencyTest.testClassMockingSupport":388,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":295,"org.easymock.tests2.CaptureTest.testCapture1_2446744":234,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":404,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":98,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":391,"org.easymock.tests.UsageThrowableTest.throwError":111,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":310,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":430,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":465,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":128,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.MockingTest.testInterfaceMocking":302,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":72,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":443,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":384,"org.easymock.tests2.UsageTest.niceToStrict":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":350,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":178,"org.easymock.tests2.MockBuilderTest.testCreateMock":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":445,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":472,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":94,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":142,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":320,"org.easymock.tests.UsageOverloadedMethodTest.overloading":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":400,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":62,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":208,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":37,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":82,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":207,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":237,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":290,"org.easymock.tests2.EasyMockSupportClassTest.testAll":173,"org.easymock.tests.MockClassControlTest.testEquals":348,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":102,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":392,"org.easymock.tests2.CaptureTest.testCaptureAll":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":329,"org.easymock.tests.MockNameTest.defaultName":292,"org.easymock.tests2.UsageConstraintsTest.testMatches":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":127,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":308,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":262,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":14,"org.easymock.samples.BasicClassMockTest.testPrintContent":289,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":330,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":117,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":277,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":70,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":247,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":435,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":424,"org.easymock.tests2.UsageConstraintsTest.greaterThan":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":130,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":229,"org.easymock.samples.ExampleTest.voteForRemoval":6,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":378,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":407,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":190,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":432,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":454,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":152,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":64,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":139,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":65,"org.easymock.tests2.CaptureTest.testCaptureFirst":241,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":356,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":140,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":160,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":33,"org.easymock.tests2.UsageTest.moreThanOneArgument":154,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":192,"org.easymock.tests2.CaptureTest.testCapture2_2446744":240,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":367,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":261,"org.easymock.tests.GenericTest.testBridgedEquals":338,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":336,"org.easymock.tests.UsageExpectAndReturnTest.longType":29,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":327,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":103,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":13,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":281,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":101,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":124,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":77,"org.easymock.tests.UsageCallCountTest.tooManyCalls":273,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":446,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":474,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":90,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":116,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":183,"org.easymock.tests.MockingTest.testNiceClassMocking":305,"org.easymock.tests.MockingTest.testClassMocking":300,"org.easymock.tests2.UsageConstraintsTest.testContains":206,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":333,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":251,"org.easymock.tests2.UsageConstraintsTest.testFind":198,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":84,"org.easymock.tests.MockTypeTest.fromEasyMockClass":297,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":134,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":265,"org.easymock.tests.UsageExpectAndReturnTest.object":36,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":473,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":145,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":419,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":257,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":382,"org.easymock.tests.UsageTest.exactCallCountByLastCall":21,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":355,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":120,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":306,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":412,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":42,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":253,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":61,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":457,"org.easymock.tests.MockClassControlTest.testHashCode":347,"org.easymock.tests2.EasyMockSupportTest.testVerify":386,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":121,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":11,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":60,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":390,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":401,"org.easymock.tests.UsageVarargTest.varargCharAccepted":256,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":434,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":371,"org.easymock.tests2.UsageTest.openCallCountByLastCall":156,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":148,"org.easymock.tests.DefaultClassInstantiatorTest.object":372,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":10,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":398,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":92,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":426,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":456,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":227,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":346,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":91,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":43,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":176,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":345,"org.easymock.tests2.UsageTest.resumeIfFailure":159,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":68,"org.easymock.tests2.StubTest.stubWithReturnValue":136,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":413,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":35,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":216,"org.easymock.tests2.SerializationTest.testAllMockedMethod":394,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":109,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":416,"org.easymock.samples.SupportTest.voteForRemovals":2,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":433,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":425,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":97,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":110,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":166,"org.easymock.tests.UsageExpectAndThrowTest.object":95,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":307,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":214,"org.easymock.tests2.DelegateToTest.testWrongClass":246,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":106,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":107,"org.easymock.tests.UsageStrictMockTest.range":47,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":410,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":144,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":182,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":96,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":395,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":263,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":321,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":51,"org.easymock.tests2.CaptureTest.testCaptureNone":236,"org.easymock.tests.UsageUnorderedTest.message":108,"org.easymock.tests.UsageVerifyTest.twoReturns":16,"org.easymock.tests.UsageVarargTest.varargByteAccepted":260,"org.easymock.tests2.ThreadingTest.testThreadSafe":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":444,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":272,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":288,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":383,"org.easymock.tests2.CaptureTest.testCapture_2617107":282,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":369,"org.easymock.tests2.UsageConstraintsTest.any":204,"org.easymock.tests2.StubTest.stub":135,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":315,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":78,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":67,"org.easymock.tests.UsageExpectAndThrowTest.longType":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":370,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":376,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":314,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":279,"org.easymock.tests2.SerializationTest.testClass":171,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":230,"org.easymock.tests.LimitationsTest.mockNativeMethod":105,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":45,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":81,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":468,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":280,"org.easymock.tests2.NameTest.nameForMocksControl":440,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":469,"org.easymock.tests2.MockedExceptionTest.testMockedException":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":396,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":20,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":385,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":25,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":89,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":220,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":180,"org.easymock.tests.MockingTest.testNicePartialClassMocking":24,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":225,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":466,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":417,"org.easymock.tests2.CaptureTest.testCaptureLast":235,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":22,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":188,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":202,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":215,"org.easymock.tests.MockingTest.testTwoMocks":301,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":453,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":26,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":93,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":275,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":218,"org.easymock.samples.ExampleTest.removeNonExistingDocument":287,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":471,"org.easymock.tests.UsageStrictMockTest.differentMethods":48,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":458,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":374,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":191,"org.easymock.tests2.MockBuilderTest.testCreateMockString":452,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":442,"org.easymock.tests.UsageExpectAndThrowTest.floatType":87,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":210,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":168,"org.easymock.tests.UsageVerifyTest.twoThrows":15,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":175,"org.easymock.samples.ExampleTest.voteAgainstRemoval":7,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":361,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":228,"org.easymock.tests.LimitationsTest.privateConstructor":340,"org.easymock.tests2.UsageConstraintsTest.testNotNull":217,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":118,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":249,"org.easymock.tests2.UsageTest.defaultResetToNice":158,"org.easymock.samples.ExampleTest.voteAgainstRemovals":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":362,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":467,"org.easymock.tests.UsageVarargTest.differentLength":291,"org.easymock.tests2.CallbackTest.callback":151,"org.easymock.tests2.UsageConstraintsTest.equals":402,"org.easymock.tests.UsageTest.openCallCountByLastCall":19,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":194,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":57,"org.easymock.tests.UsageCallCountTest.tooFewCalls":271,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":185,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":323,"org.easymock.tests.UsageThrowableTest.throwCheckedException":115,"org.easymock.tests.MockingTest.testStrictClassMocking":299,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":470,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":184,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":186,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":170,"org.easymock.tests.ObjectMethodsTest.testHashCode":381,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":422,"org.easymock.tests2.NameTest.nameForNiceMock":439,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":193,"org.easymock.tests2.DependencyTest.testInterfaceMocking":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":420,"org.easymock.samples.ExampleTest.addDocument":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":399,"org.easymock.tests2.DelegateToTest.testStubDelegate":245,"org.easymock.tests2.AnswerTest.stubAnswer":169,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":46,"org.easymock.tests.UsageVarargTest.varargLongAccepted":259,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":359,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":44,"org.easymock.tests.UsageExpectAndReturnTest.floatType":28,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":164,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":463,"org.easymock.tests.UsageThrowableTest.noUpperLimit":112,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":212,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":325,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":195,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":408,"org.easymock.tests2.SerializationTest.test":172,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":283,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":373,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":27,"org.easymock.tests2.UsageConstraintsTest.testSame":200,"org.easymock.samples.SupportTest.addDocument":285,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":397,"org.easymock.tests.GenericTest.testPackageScope":80,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":354,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":462,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":303,"org.easymock.tests2.NameTest.nameForMock":437,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":38,"org.easymock.tests2.UsageStrictMockTest.differentMethods":163,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":405,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":30,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":99,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":379,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":132,"org.easymock.tests2.MockedExceptionTest.testRealException":252,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":415,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":363,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":56,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":319,"org.easymock.tests2.NameTest.nameForStrictMock":438,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":449,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":133,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":224,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":409,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":213,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":375,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":177,"org.easymock.tests2.UsageStrictMockTest.range":162,"org.easymock.tests2.UsageConstraintsTest.lessThan":219,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":459,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":421,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":358,"org.easymock.tests2.CaptureTest.testCaptureRightOne":238,"org.easymock.tests2.UsageConstraintsTest.testOr":201,"org.easymock.tests.UsageRangeTest.combination":129,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":221,"org.easymock.tests.UsageTest.wrongArguments":294,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":343,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":31,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":351,"org.easymock.tests.UsageVarargTest.varargShortAccepted":258,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":377,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":335,"org.easymock.tests2.UsageConstraintsTest.cmpTo":205,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":353,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":157,"org.easymock.tests2.CaptureTest.testCaptureFromStub":239,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":309,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":448,"org.easymock.tests.UsageTest.unexpectedCallWithArray":293,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":267,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":334,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":40,"org.easymock.tests2.UsageConstraintsTest.constraints":196,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":268,"org.easymock.samples.ExampleTest.addAndChangeDocument":9,"org.easymock.tests.UsageStrictMockTest.testVerify":270,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":427,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":328,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":73,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":32,"org.easymock.tests.LimitationsTest.abstractClass":339,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":143,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":254}}]
