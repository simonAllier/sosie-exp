[{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,4,5,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,4,5,5,6,7,8,9,10,11,12,13,14,15,297,298,299,300,301,21,22,302,23,24,25,26,27,28,29,30,32,33,34,35,303,304,36,305,43,44,45,46,47,48,306,49,50,307,51,52,54,55,56,57,58,59,60,61,308,309,310,62,63,64,65,66,67,68,69,311,312,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,313,106,107,108,109,110,314,112,113,114,115,116,117,118,119,120,315,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,316,142,143,317,318,319,320,321,144,322,323,324,325,149,150,151,152,153,154,155,156,157,326,327,328,329,330,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,331,185,186,187,188,189,190,191,192,193,194,195,196,332,197,198,199,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,333,228,229,230,334,231,232,335,237,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,336,337,258,259,260,261,262,263,264,265,266,267,268,338,269,270,339,271,340,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[341],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[342,330,279],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[279],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[343],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:280","failures":[10,319,333,228,229,230,334,231],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[332,198,261,262],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[344,225,226,227],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[345,343,256,346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[347],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[348],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[349,350,36,99,100,154,290],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer","i":"matches"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:90","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()))","type":"CtThrowImpl"},"failures":[351,352,353,354,355,356,357,358],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:180","sourceCode":"try {\n    java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[323,324,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[309,310,324,325],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1927","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))","type":"CtInvocationImpl"},"failures":[212],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:325","sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14,359,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,360,303,304,36,305,37,342,38,39,361,40,362,363,41,364,42,43,44,45,46,47,48,306,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,311,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,313,106,107,108,109,110,314,111,365,366,367,368,369,370,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,317,318,319,320,144,322,145,146,147,148,149,150,151,152,153,154,155,156,157,371,372,373,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,332,197,198,199,200,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,335,237,238,374,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,338,269,270,339,271,340,273,274,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[225,345,375,343,256,346,376,377,378,379,380,381,382],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":178,"org.easymock.tests2.UsageTest.argumentsOrdered":253,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":51,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":27,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":248,"org.easymock.tests2.StubTest.stubWithReturnValue":280,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":345,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":197,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":82,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":3,"org.easymock.tests2.SerializationTest.testAllMockedMethod":227,"org.easymock.tests2.DelegateToTest.testReturnException":228,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":25,"org.easymock.tests.MockingTest.testPartialClassMocking":70,"org.easymock.samples.SupportTest.voteForRemovals":8,"org.easymock.tests.MockClassControlTest.testToString":365,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":307,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":134,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":344,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":330,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":122,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":336,"org.easymock.tests.UsageExpectAndThrowTest.object":132,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":224,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":195,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":377,"org.easymock.tests2.DelegateToTest.testWrongClass":230,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":142,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":143,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":184,"org.easymock.tests2.UsageTest.wrongArguments":246,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":116,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests.UsageStrictMockTest.range":154,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":147,"org.easymock.samples.ExampleTest.answerVsDelegate":10,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":165,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":272,"org.easymock.tests2.UsageConstraintsTest.testNull":180,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":133,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":370,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":239,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":167,"org.easymock.tests2.CaptureTest.testPrimitive":212,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":120,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":364,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests.UsageTest.moreThanOneArgument":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":141,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":265,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":46,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":328,"org.easymock.tests2.CaptureTest.testCaptureNone":217,"org.easymock.tests.UsageUnorderedTest.message":36,"org.easymock.tests.UsageVerifyTest.twoReturns":100,"org.easymock.tests.UsageVarargTest.varargByteAccepted":108,"org.easymock.tests2.ThreadingTest.testThreadSafe":203,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":297,"org.easymock.tests.UsageTest.argumentsOrdered":58,"org.easymock.tests.UsageVarargTest.varargIntAccepted":103,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":35,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":1,"org.easymock.tests2.CaptureTest.testCapture_2617107":211,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":93,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":236,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":354,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":119,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":238,"org.easymock.tests2.UsageConstraintsTest.any":185,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":362,"org.easymock.tests2.StubTest.stub":279,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":26,"org.easymock.tests.UsageExpectAndThrowTest.longType":125,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":40,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":289,"org.easymock.tests2.SerializationTest.testClass":225,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":202,"org.easymock.tests.ReplayStateInvalidUsageTest.times":363,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":208,"org.easymock.tests.LimitationsTest.mockNativeMethod":23,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":302,"org.easymock.tests2.AnswerTest.answer":257,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":92,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":331,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":235,"org.easymock.tests2.CaptureTest.testAnd":209,"org.easymock.tests2.UsageTest.strictResetToDefault":244,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":292,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":270,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":347,"org.easymock.tests2.NameTest.nameForMocksControl":285,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":355,"org.easymock.tests2.MockedExceptionTest.testMockedException":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":45,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":114,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":162,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":56,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":301,"org.easymock.tests2.DelegateToTest.testDelegate":231,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":72,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":126,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":263,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":240,"org.easymock.tests.MockingTest.testNicePartialClassMocking":71,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":137,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":376,"org.easymock.tests2.CaptureTest.testCaptureLast":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":28,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":121,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":278,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":183,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":20,"org.easymock.tests.MockingTest.testTwoMocks":312,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":315,"org.easymock.tests2.CaptureTest.testCapture1_2446744":213,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":73,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":135,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":130,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":252,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":199,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":342,"org.easymock.tests.UsageThrowableTest.throwError":62,"org.easymock.samples.ExampleTest.removeNonExistingDocument":359,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":356,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":39,"org.easymock.tests.UsageStrictMockTest.differentMethods":155,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":205,"org.easymock.tests2.MockBuilderTest.testCreateMockString":242,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":48,"org.easymock.tests.UsageExpectAndThrowTest.floatType":124,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":191,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":258,"org.easymock.tests.UsageVerifyTest.twoThrows":99,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":295,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":38,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":94,"org.easymock.samples.ExampleTest.voteAgainstRemoval":12,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":327,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":326,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":271,"org.easymock.tests2.UsageTest.niceToStrict":247,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":123,"org.easymock.tests2.UsageConstraintsTest.testNotNull":198,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":69,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":171,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":237,"org.easymock.tests2.MockBuilderTest.testCreateMock":374,"org.easymock.tests2.UsageTest.defaultResetToNice":251,"org.easymock.samples.ExampleTest.voteAgainstRemovals":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":88,"org.easymock.tests.UsageVarargTest.differentLength":313,"org.easymock.tests2.CallbackTest.callback":281,"org.easymock.tests.UsageTest.openCallCountByLastCall":55,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":131,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":163,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":175,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":310,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":118,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":145,"org.easymock.tests.UsageCallCountTest.tooFewCalls":33,"org.easymock.tests.UsageOverloadedMethodTest.overloading":49,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":320,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":189,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":306,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":84,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":188,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":218,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":148,"org.easymock.tests.UsageThrowableTest.throwCheckedException":66,"org.easymock.tests.MockClassControlTest.testEquals":369,"org.easymock.tests2.EasyMockSupportClassTest.testAll":293,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":22,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":139,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":234,"org.easymock.tests2.CaptureTest.testCaptureAll":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":18,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":277,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":61,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":274,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":41,"org.easymock.tests2.UsageConstraintsTest.testMatches":190,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":276,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":260,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":305,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":47,"org.easymock.tests.ObjectMethodsTest.testHashCode":372,"org.easymock.samples.ExampleTest.voteForRemovals":14,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":381,"org.easymock.tests2.NameTest.nameForNiceMock":284,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":207,"org.easymock.tests.UsageVarargTest.allKinds":110,"org.easymock.tests2.DependencyTest.testInterfaceMocking":223,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":379,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":19,"org.easymock.samples.BasicClassMockTest.testPrintContent":2,"org.easymock.samples.ExampleTest.addDocument":13,"org.easymock.tests2.DelegateToTest.testStubDelegate":229,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":68,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":286,"org.easymock.tests2.AnswerTest.stubAnswer":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":352,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":29,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":382,"org.easymock.tests2.UsageConstraintsTest.greaterThan":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":341,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":113,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":340,"org.easymock.tests.UsageVarargTest.varargLongAccepted":107,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":156,"org.easymock.samples.ExampleTest.voteForRemoval":11,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":204,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":91,"org.easymock.tests.UsageExpectAndReturnTest.floatType":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":338,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":256,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":353,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":193,"org.easymock.tests.UsageThrowableTest.noUpperLimit":63,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":243,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":43,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":176,"org.easymock.tests2.SerializationTest.test":226,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":214,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":160,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":64,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":74,"org.easymock.tests2.UsageConstraintsTest.testSame":181,"org.easymock.samples.SupportTest.addDocument":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":24,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":333,"org.easymock.tests2.CaptureTest.testCaptureFirst":222,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":161,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":255,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":361,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":80,"org.easymock.tests.GenericTest.testPackageScope":21,"org.easymock.tests2.UsageTest.moreThanOneArgument":245,"org.easymock.tests2.CaptureTest.testCapture2_2446744":221,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":206,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":300,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":241,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":303,"org.easymock.tests2.NameTest.nameForMock":282,"org.easymock.tests.UsageExpectAndReturnTest.longType":76,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":16,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":140,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":332,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":316,"org.easymock.tests2.UsageStrictMockTest.differentMethods":291,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":138,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":44,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":77,"org.easymock.tests.UsageCallCountTest.tooManyCalls":304,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":136,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":115,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":32,"org.easymock.tests2.MockedExceptionTest.testRealException":174,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":358,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":343,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":288,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":67,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":117,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":273,"org.easymock.tests2.NameTest.nameForStrictMock":283,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":31,"org.easymock.tests2.UsageConstraintsTest.testContains":187,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":173,"org.easymock.tests2.UsageConstraintsTest.testFind":179,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":50,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":261,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":267,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":262,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":149,"org.easymock.tests.UsageExpectAndReturnTest.object":83,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":349,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":194,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":269,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":335,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":357,"org.easymock.tests2.UsageStrictMockTest.range":290,"org.easymock.tests2.UsageConstraintsTest.lessThan":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":378,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":351,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":373,"org.easymock.tests.UsageTest.exactCallCountByLastCall":59,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":60,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":380,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":159,"org.easymock.tests2.CaptureTest.testCaptureRightOne":219,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":298,"org.easymock.tests2.UsageConstraintsTest.testOr":182,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":346,"org.easymock.tests.UsageRangeTest.combination":112,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":264,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":89,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":101,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":319,"org.easymock.tests.UsageTest.wrongArguments":54,"org.easymock.tests.MockClassControlTest.testHashCode":368,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":111,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":78,"org.easymock.tests2.EasyMockSupportTest.testVerify":170,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":86,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":299,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":317,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":309,"org.easymock.tests.UsageVarargTest.varargShortAccepted":106,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":232,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":201,"org.easymock.tests2.UsageConstraintsTest.cmpTo":186,"org.easymock.tests.UsageVarargTest.varargCharAccepted":104,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":337,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":287,"org.easymock.tests2.UsageTest.openCallCountByLastCall":249,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":250,"org.easymock.tests.DefaultClassInstantiatorTest.object":311,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":169,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":308,"org.easymock.tests2.CaptureTest.testCaptureFromStub":220,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":37,"org.easymock.tests.UsageTest.unexpectedCallWithArray":53,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":371,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":129,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":65,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":151,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":34,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":87,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":367,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":339,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":153,"org.easymock.tests2.UsageConstraintsTest.constraints":177,"org.easymock.samples.ExampleTest.addAndChangeDocument":15,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":128,"org.easymock.tests.CapturesMatcherTest.test":348,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":90,"org.easymock.tests.UsageStrictMockTest.testVerify":157,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":323,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":6,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":296,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":17,"org.easymock.tests2.UsageTest.resumeIfFailure":254,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":95,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":79,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":96,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":144,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":350,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":164}}]
