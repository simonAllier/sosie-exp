[{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[35,36,37,38,39,40,41,42,43],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[31,44,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[61,62],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:142","sourceCode":"final java.lang.Long java.lang.Long = org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializableUID(java.lang.Class<?>)","type":"CtLocalVariableImpl"},"failures":[63],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[64,65,66,67,68,69,70,59,60],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[49,56,71,59,60],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[72,73,74,75,76,77,78,79,80,81,66,49,82,3,6,16,22,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,69,56,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[143,144,145,146,147],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[148],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[149,150,151,152,153,154],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[155],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[156,143,72,144,157,145,158,159,160,161,162,163,35,36,164,165,166,167,37,38,168,39,169,170,171,172,173,174,175,176,177,40,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,64,197,198,46,199,200,201,202,203,47,48,204,65,73,74,75,76,205,77,78,79,206,207,208,80,81,209,210,66,211,49,82,212,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,213,214,215,216,217,218,219,220,221,222,223,224,225,67,226,227,228,229,230,231,232,233,234,235,31,44,45,236,237,83,238,239,240,84,241,85,242,86,243,32,244,87,245,246,247,248,249,250,88,251,252,253,254,255,89,256,90,91,92,93,94,95,257,258,96,259,260,155,97,98,99,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,41,289,42,290,291,149,150,151,292,152,43,293,294,154,295,296,100,297,298,299,300,301,302,303,304,305,306,307,308,309,101,102,310,103,311,312,313,104,105,106,107,108,314,315,316,317,318,319,320,321,322,323,324,325,326,51,52,327,328,53,54,68,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,55,69,359,56,109,360,361,362,363,364,365,366,367,368,369,110,111,112,113,370,371,372,148,114,115,373,374,61,375,376,377,62,378,379,63,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,116,117,118,119,414,415,146,416,417,418,57,419,420,421,422,423,424,425,426,427,428,429,430,431,120,432,433,434,435,58,436,437,438,439,440,441,442,443,444,445,70,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,59,60,467,468,469,121,122,123,124,125,126,470,471,127,128,472,129,130,131,473,132,133,134,135,136,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,137,147,138,139,489,140,490,491,492,493,494,141,495,496,142,497,498],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:95","sourceCode":"int = java.lang.Integer.int","type":"CtAssignmentImpl"},"failures":[163,35,165,167,37,171,174,177,183,204,49,82,287,306,56,109,116,117,118,119,445,466,477],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[46,47,48,49,50,51,52,53,54,55,56,58,59,60],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[73,74,75,76,78,79,3,6,16,22,31,45,236,83,238,84,241,85,86,244,87,246,88,90,91,93,94,95,257,96,155,97,98,99,262,265,100,303,309,101,102,103,362,363,364,365,366,367,368,369,407,408,409,410,419,436,441,492,492,493,493,141,497,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[61,62],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[377,499,500],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.Capture:82","failures":[41,42,290,291,149,150,151,152,153,43,293,154],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[46,47,48,49,501,50,51,52,53,54,55,56,57,58,59,60],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[377,499,500],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[73,74,75,76,78,79,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,31,45,236,237,83,238,239,240,84,241,85,242,86,32,244,87,245,246,88,251,252,90,91,93,94,95,257,96,259,260,155,97,98,99,261,262,263,264,265,280,284,295,296,100,297,303,307,308,309,101,102,103,313,362,363,364,365,366,367,368,369,373,374,61,375,376,377,62,378,379,406,407,408,409,410,419,436,441,492,492,493,493,141,497,498],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"finalizeMethod"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:708","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[155],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[143,72,145,158,159,161,162,163,35,36,165,166,167,37,38,168,169,170,171,172,173,174,175,176,177,40,178,179,181,182,183,184,190,197,198,199,200,203,204,73,74,75,76,77,78,79,80,81,210,66,82,212,3,6,16,22,219,67,228,229,230,232,233,234,235,31,44,45,236,84,241,85,86,247,248,249,250,88,253,254,256,90,92,93,94,95,96,155,98,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,287,288,41,289,42,290,149,150,151,292,152,43,154,100,305,306,101,102,103,104,105,106,107,108,314,315,316,317,318,319,320,321,322,323,326,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,358,69,109,360,361,363,110,111,112,113,370,114,115,63,407,408,413,116,117,118,119,418,419,120,432,435,445,70,454,455,456,458,459,461,462,463,464,465,466,59,60,121,122,123,124,125,126,470,471,127,128,472,129,130,131,473,132,133,134,135,136,475,476,477,478,479,480,137,147,138,139,489,140,491,492,493,494,141,495,496,142,497,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":36,"org.easymock.tests2.UsageTest.argumentsOrdered":48,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":325,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":277,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":392,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":200,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":494,"org.easymock.tests2.DelegateToTest.testReturnException":143,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":319,"org.easymock.tests.MockingTest.testPartialClassMocking":101,"org.easymock.tests.MockClassControlTest.testToString":364,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":231,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":10,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":6,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":329,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":81,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":120,"org.easymock.tests2.UsageTest.wrongArguments":46,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":316,"org.easymock.samples.ExampleTest.answerVsDelegate":147,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":441,"org.easymock.tests2.UsageConstraintsTest.testNull":166,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":312,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":93,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":276,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":369,"org.easymock.tests2.CaptureTest.testPrimitive":290,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":435,"org.easymock.tests.UsageTest.moreThanOneArgument":326,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":348,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":92,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":112,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":484,"org.easymock.tests.UsageTest.argumentsOrdered":54,"org.easymock.tests.UsageVarargTest.varargIntAccepted":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":104,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":236,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":195,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":282,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":108,"org.easymock.tests.ReplayStateInvalidUsageTest.times":428,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":219,"org.easymock.tests2.DependencyTest.testClassMocking":207,"org.easymock.tests2.AnswerTest.answer":67,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":399,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":250,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":438,"org.easymock.tests2.CaptureTest.testAnd":41,"org.easymock.tests2.UsageTest.strictResetToDefault":197,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":111,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":271,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":488,"org.easymock.tests2.DelegateToTest.testDelegate":145,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":344,"org.easymock.tests.LimitationsTest.mockFinalMethod":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":322,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":353,"org.easymock.tests2.DependencyTest.testClassMockingSupport":208,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":411,"org.easymock.tests2.CaptureTest.testCapture1_2446744":291,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":258,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":342,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":248,"org.easymock.tests.UsageThrowableTest.throwError":444,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":422,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":440,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":196,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":381,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":24,"org.easymock.samples.PartialClassMockTest.testGetArea":141,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":423,"org.easymock.tests.MockingTest.testInterfaceMocking":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":105,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":11,"org.easymock.tests2.UsageTest.niceToStrict":199,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":330,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":84,"org.easymock.tests2.MockBuilderTest.testCreateMock":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":19,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":222,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":338,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":272,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":437,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":469,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":475,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":314,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":27,"org.easymock.tests.UsageOverloadedMethodTest.overloading":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":21,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":416,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":173,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":129,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":304,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":499,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":172,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":152,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":457,"org.easymock.tests2.EasyMockSupportClassTest.testAll":3,"org.easymock.tests.MockClassControlTest.testEquals":368,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":408,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":249,"org.easymock.tests2.CaptureTest.testCaptureAll":289,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":351,"org.easymock.tests.MockNameTest.defaultName":324,"org.easymock.tests2.UsageConstraintsTest.testMatches":174,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":420,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":113,"org.easymock.samples.ExampleTest.voteForRemovals":140,"org.easymock.tests.UsageVarargTest.allKinds":465,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":466,"org.easymock.samples.BasicClassMockTest.testPrintContent":498,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":352,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":449,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":209,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":323,"org.easymock.tests2.UsageConstraintsTest.greaterThan":176,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":4,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":117,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":99,"org.easymock.samples.ExampleTest.voteForRemoval":138,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":379,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":254,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":261,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":442,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":283,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":257,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":419,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":64,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":269,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":318,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":156,"org.easymock.tests2.CaptureTest.testCaptureFirst":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":270,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":65,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":57,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":471,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":89,"org.easymock.tests2.UsageTest.moreThanOneArgument":198,"org.easymock.tests2.CaptureTest.testCapture2_2446744":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":400,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":87,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":464,"org.easymock.tests.GenericTest.testBridgedEquals":410,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":28,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":482,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":25,"org.easymock.tests.UsageExpectAndReturnTest.longType":124,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":349,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":347,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":474,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":180,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":110,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":355,"org.easymock.tests.UsageCallCountTest.tooManyCalls":483,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":20,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":127,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":334,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":448,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":74,"org.easymock.tests.MockingTest.testNiceClassMocking":313,"org.easymock.tests.MockingTest.testClassMocking":308,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":476,"org.easymock.tests2.UsageConstraintsTest.testContains":171,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":265,"org.easymock.tests2.UsageConstraintsTest.testFind":165,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":306,"org.easymock.tests.MockTypeTest.fromEasyMockClass":439,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":161,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":357,"org.easymock.tests.UsageExpectAndReturnTest.object":472,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":275,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":459,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":301,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":29,"org.easymock.tests.UsageTest.exactCallCountByLastCall":68,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":485,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":451,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":251,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":454,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":133,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":146,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":186,"org.easymock.tests.MockClassControlTest.testHashCode":367,"org.easymock.tests2.EasyMockSupportTest.testVerify":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":13,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":486,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":468,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":414,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":501,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":247,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":213,"org.easymock.tests.UsageVarargTest.varargCharAccepted":458,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":373,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":405,"org.easymock.tests2.UsageTest.openCallCountByLastCall":201,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":33,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":278,"org.easymock.tests.DefaultClassInstantiatorTest.object":374,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":467,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":299,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":14,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":336,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":446,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":217,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":185,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":97,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":366,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":335,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":134,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":22,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":365,"org.easymock.tests2.UsageTest.resumeIfFailure":204,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":436,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":321,"org.easymock.tests2.StubTest.stubWithReturnValue":288,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":242,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":181,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":128,"org.easymock.tests2.SerializationTest.testAllMockedMethod":45,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":398,"org.easymock.samples.SupportTest.voteForRemovals":142,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":406,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":188,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":341,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":404,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":226,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":453,"org.easymock.tests.UsageExpectAndThrowTest.object":339,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":178,"org.easymock.tests2.DelegateToTest.testWrongClass":144,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":114,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":115,"org.easymock.samples.ConstructorCalledMockTest.testTax":492,"org.easymock.tests.UsageStrictMockTest.range":56,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":285,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":274,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":73,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":340,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":85,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":0,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":315,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":148,"org.easymock.tests2.CaptureTest.testCaptureNone":292,"org.easymock.tests.UsageUnorderedTest.message":58,"org.easymock.tests.UsageVerifyTest.twoReturns":60,"org.easymock.tests.UsageVarargTest.varargByteAccepted":463,"org.easymock.tests2.ThreadingTest.testThreadSafe":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":17,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":480,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":497,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":302,"org.easymock.tests2.CaptureTest.testCapture_2617107":42,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":413,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":402,"org.easymock.tests2.UsageConstraintsTest.any":169,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":427,"org.easymock.tests2.StubTest.stub":287,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":320,"org.easymock.tests.UsageExpectAndThrowTest.longType":332,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":377,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":426,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":211,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":190,"org.easymock.tests2.SerializationTest.testClass":31,"org.easymock.tests.LimitationsTest.mockNativeMethod":100,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":409,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":136,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":216,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":212,"org.easymock.tests2.NameTest.nameForMocksControl":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":218,"org.easymock.tests2.MockedExceptionTest.testMockedException":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":5,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":328,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":160,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":103,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":333,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":90,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":86,"org.easymock.tests.MockingTest.testNicePartialClassMocking":102,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":95,"org.easymock.tests2.CaptureTest.testCaptureLast":151,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":214,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":412,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":38,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":79,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":179,"org.easymock.tests.MockingTest.testTwoMocks":309,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":206,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":337,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":47,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":183,"org.easymock.samples.ExampleTest.removeNonExistingDocument":490,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":424,"org.easymock.tests.UsageStrictMockTest.differentMethods":109,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":221,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":187,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":375,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":255,"org.easymock.tests2.MockBuilderTest.testCreateMockString":246,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":7,"org.easymock.tests.UsageExpectAndThrowTest.floatType":331,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":2,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":228,"org.easymock.tests.UsageVerifyTest.twoThrows":59,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":252,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":16,"org.easymock.samples.ExampleTest.voteAgainstRemoval":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":393,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":371,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":98,"org.easymock.tests.LimitationsTest.privateConstructor":296,"org.easymock.tests2.UsageConstraintsTest.testNotNull":182,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":450,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":263,"org.easymock.tests2.UsageTest.defaultResetToNice":203,"org.easymock.samples.ExampleTest.voteAgainstRemovals":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":132,"org.easymock.tests.UsageVarargTest.differentLength":460,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":215,"org.easymock.tests2.CallbackTest.callback":158,"org.easymock.tests2.UsageConstraintsTest.equals":164,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":259,"org.easymock.tests.UsageTest.openCallCountByLastCall":327,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":433,"org.easymock.tests.UsageCallCountTest.tooFewCalls":478,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":317,"org.easymock.tests.UsageThrowableTest.throwCheckedException":447,"org.easymock.tests.MockingTest.testStrictClassMocking":307,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":78,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":380,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":220,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":429,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":77,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":230,"org.easymock.tests.ObjectMethodsTest.testHashCode":300,"org.easymock.tests2.NameTest.nameForNiceMock":234,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":256,"org.easymock.tests2.DependencyTest.testInterfaceMocking":80,"org.easymock.samples.ExampleTest.addDocument":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":23,"org.easymock.tests2.DelegateToTest.testStubDelegate":72,"org.easymock.tests2.AnswerTest.stubAnswer":229,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":69,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":243,"org.easymock.tests.UsageVarargTest.varargLongAccepted":462,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":391,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":135,"org.easymock.tests.UsageExpectAndReturnTest.floatType":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":88,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":493,"org.easymock.tests.UsageThrowableTest.noUpperLimit":445,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":417,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":194,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":163,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":280,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":149,"org.easymock.tests2.SerializationTest.test":44,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":500,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":61,"org.easymock.tests2.UsageConstraintsTest.testSame":167,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":122,"org.easymock.samples.SupportTest.addDocument":496,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":205,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":8,"org.easymock.tests.GenericTest.testPackageScope":407,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":193,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":311,"org.easymock.tests2.NameTest.nameForMock":232,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":130,"org.easymock.tests2.UsageStrictMockTest.differentMethods":82,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":245,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":260,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":125,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":343,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":298,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":119,"org.easymock.tests2.MockedExceptionTest.testRealException":266,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":395,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":66,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":432,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":431,"org.easymock.tests2.NameTest.nameForStrictMock":233,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":240,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":159,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":94,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":284,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":40,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":376,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":83,"org.easymock.tests2.UsageStrictMockTest.range":49,"org.easymock.tests2.UsageConstraintsTest.lessThan":184,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":268,"org.easymock.tests2.CaptureTest.testCaptureRightOne":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":12,"org.easymock.tests2.UsageConstraintsTest.testOr":37,"org.easymock.tests.UsageRangeTest.combination":116,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":91,"org.easymock.tests.UsageTest.wrongArguments":52,"org.easymock.tests2.MockBuilderTest.testWithConstructor":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":9,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":363,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":126,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":383,"org.easymock.tests.UsageVarargTest.varargShortAccepted":461,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":62,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":481,"org.easymock.tests2.UsageConstraintsTest.cmpTo":170,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":385,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":202,"org.easymock.tests2.CaptureTest.testCaptureFromStub":293,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":421,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":238,"org.easymock.tests.UsageTest.unexpectedCallWithArray":51,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":479,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":473,"org.easymock.tests2.CaptureTest.testCapture":153,"org.easymock.tests2.UsageConstraintsTest.constraints":35,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":359,"org.easymock.samples.ExampleTest.addAndChangeDocument":491,"org.easymock.tests.UsageStrictMockTest.testVerify":361,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":495,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":358,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":350,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":150,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":106,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":470,"org.easymock.tests.LimitationsTest.abstractClass":295,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":107,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":455,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":71,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":273}}]
