[{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[27,28,29,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[34,35],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[28,29,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:217","failures":[3,4,27,70,71,72,73,74,75,76,77,78,79,28,28,29,29,80,81,82,83,84,85,86,87,1,88,89,90,91,92,93,94,95,96,97,98,99,100,36,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,0,118,119,120,121,122,123,124,125,126,127,128,37,129,130,131,132,133,134,135,136,137,138,139,140,141,142,38,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,39,40,34,162,41,42,43,44,35,163,164,165,166,45,167,46,47,168,48,49,169,170,171,172,173,50,51,52,174,175,176,177,178,179,180,181,182,183,184,185,30,186,187,188,189,190,191,192,193,31,32,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,53,54,55,56,57,223,224,225,226,227,228,229,230,231,232,233,234,235,236,58,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,59,60,294,295,61,296,297,298,299,300,301,62,63,64,65,66,302,67,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,33,337,338,339,340,341,68,69,342,343,344,345,346,347,348,2,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:174","sourceCode":"try {\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n} catch (final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException) {\n    net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader());\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:278","sourceCode":"return net.sf.cglib.proxy.Enhancer","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[162],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[380,381],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[382,383],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[38,174,175,176,177,195,202,217,221,222,248,294,295,303,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,349,353,354,355,356,357,358,371,376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[82,83,84,85,36,102,103,197,198,204,205,236,58,238,239,242,282,283,284,351,372,374,377,378],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[384],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[36,119,120,125,126,130,131,44,35,165,166,58,242,243,59,60,294,295,61,62,63,64,65,66,302,67,303,68,69,342],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[36,102,103,385,386,387,388,389,390,391,392,393,394,395,168,197,198,204,205,236,58,238,239,242,280,281,282,283,284,396,397,398,399,400,401,402,372,373,374,377,378],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[163,46,52,403],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[54,253,259,266,267,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.ConstructorArgs:50","failures":[28,29,404,405,93,96,406,407,408,409,410,411,412,188,192,413,414,415,416,193,417,418,31,419,420,421,422,423,424,425,426,427,32,428,429,430,431,432,194,433,434],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[435,436,437],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[406,409,438,439,440,441,442],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"this.org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[443],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[387],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[50],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"message","key":"message"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":162,"org.easymock.tests2.UsageTest.argumentsOrdered":205,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":371,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":159,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":21,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":200,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":3,"org.easymock.tests2.DelegateToTest.testReturnException":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":354,"org.easymock.tests.MockingTest.testPartialClassMocking":33,"org.easymock.tests.MockClassControlTest.testToString":287,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":316,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":106,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":465,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":438,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":163,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":59,"org.easymock.tests2.UsageTest.wrongArguments":198,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":15,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":210,"org.easymock.samples.ExampleTest.answerVsDelegate":71,"org.easymock.tests2.UsageConstraintsTest.testNull":42,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":110,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":158,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":292,"org.easymock.tests2.CaptureTest.testPrimitive":121,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":61,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":335,"org.easymock.tests.UsageTest.moreThanOneArgument":372,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":55,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":342,"org.easymock.tests.UsageTest.argumentsOrdered":378,"org.easymock.tests.UsageVarargTest.varargIntAccepted":225,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":62,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":442,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":178,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":25,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":66,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":449,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":389,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":97,"org.easymock.tests.ReplayStateInvalidUsageTest.times":367,"org.easymock.tests2.AnswerTest.answer":131,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":164,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":146,"org.easymock.tests2.CaptureTest.testAnd":118,"org.easymock.tests2.UsageTest.strictResetToDefault":196,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":408,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":153,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":272,"org.easymock.tests2.DelegateToTest.testDelegate":91,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":346,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":448,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":331,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":357,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":279,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":280,"org.easymock.tests2.CaptureTest.testCapture1_2446744":122,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":436,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":329,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":144,"org.easymock.tests.UsageThrowableTest.throwError":215,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":361,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":57,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":434,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":452,"org.easymock.samples.PartialClassMockTest.testGetArea":27,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":63,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":423,"org.easymock.tests2.UsageTest.niceToStrict":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":317,"org.easymock.tests2.ThreadingTest.testChangeDefault":437,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":180,"org.easymock.tests2.MockBuilderTest.testCreateMock":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":430,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":12,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":386,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":325,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":154,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":341,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":208,"org.easymock.tests.UsageOverloadedMethodTest.overloading":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":427,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":46,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":349,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":261,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":167,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":127,"org.easymock.tests2.EasyMockSupportClassTest.testAll":193,"org.easymock.tests.MockClassControlTest.testEquals":291,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":244,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":391,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":333,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":145,"org.easymock.tests2.CaptureTest.testCaptureAll":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":277,"org.easymock.tests2.UsageConstraintsTest.testMatches":47,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":56,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":359,"org.easymock.samples.ExampleTest.voteForRemovals":75,"org.easymock.tests.UsageVarargTest.allKinds":233,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":282,"org.easymock.samples.BasicClassMockTest.testPrintContent":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":278,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":221,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":99,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":22,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":358,"org.easymock.tests2.UsageConstraintsTest.greaterThan":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":271,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":0,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":453,"org.easymock.samples.ExampleTest.voteForRemoval":72,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":138,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":113,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":445,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":195,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":249,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":151,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":415,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":353,"org.easymock.tests2.CaptureTest.testCaptureFirst":130,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":87,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":152,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":207,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":257,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":140,"org.easymock.tests2.CaptureTest.testCapture2_2446744":129,"org.easymock.tests2.UsageTest.moreThanOneArgument":197,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":185,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":232,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":311,"org.easymock.tests.UsageExpectAndReturnTest.longType":253,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":275,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":334,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":383,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":172,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":212,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":332,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":53,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":297,"org.easymock.tests.UsageCallCountTest.tooManyCalls":312,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":397,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":431,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":258,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":14,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":321,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":220,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":187,"org.easymock.tests2.UsageConstraintsTest.testContains":45,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":305,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":382,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":176,"org.easymock.tests2.UsageConstraintsTest.testFind":41,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":248,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":148,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":234,"org.easymock.tests.UsageExpectAndReturnTest.object":260,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":13,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":439,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":227,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":315,"org.easymock.tests.UsageTest.exactCallCountByLastCall":379,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":67,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":343,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":401,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":406,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":223,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":266,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":2,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":17,"org.easymock.tests.MockClassControlTest.testHashCode":290,"org.easymock.tests2.EasyMockSupportTest.testVerify":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":425,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":388,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":344,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":340,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":347,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":143,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":86,"org.easymock.tests.UsageVarargTest.varargCharAccepted":226,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":100,"org.easymock.tests2.UsageTest.openCallCountByLastCall":201,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":160,"org.easymock.tests.DefaultClassInstantiatorTest.object":293,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":339,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":313,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":426,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":323,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":8,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":16,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":451,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":116,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":289,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":322,"org.easymock.tests.ReplayStateInvalidCallsTest.times":457,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":267,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":296,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":458,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":194,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":288,"org.easymock.tests2.UsageTest.resumeIfFailure":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":356,"org.easymock.tests2.StubTest.stubWithReturnValue":38,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":409,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":173,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":259,"org.easymock.tests2.SerializationTest.testAllMockedMethod":95,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":213,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":393,"org.easymock.samples.SupportTest.voteForRemovals":79,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":19,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":328,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":214,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":132,"org.easymock.tests.UsageExpectAndThrowTest.object":326,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":170,"org.easymock.tests2.DelegateToTest.testWrongClass":89,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":455,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":68,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":69,"org.easymock.samples.ConstructorCalledMockTest.testTax":28,"org.easymock.tests.UsageStrictMockTest.range":238,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":156,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":186,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":327,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":414,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":369,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":209,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":396,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":447,"org.easymock.tests2.CaptureTest.testCaptureNone":126,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":301,"org.easymock.tests.UsageUnorderedTest.message":242,"org.easymock.tests.UsageVerifyTest.twoReturns":284,"org.easymock.tests.UsageVarargTest.varargByteAccepted":231,"org.easymock.tests2.ThreadingTest.testThreadSafe":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":428,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":309,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":80,"org.easymock.tests2.CaptureTest.testCapture_2617107":120,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":395,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":295,"org.easymock.tests2.UsageConstraintsTest.any":165,"org.easymock.tests2.StubTest.stub":142,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":366,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":298,"org.easymock.tests.UsageExpectAndThrowTest.longType":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":355,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":365,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":101,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":98,"org.easymock.tests2.SerializationTest.testClass":93,"org.easymock.tests.LimitationsTest.mockNativeMethod":302,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":245,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":269,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":7,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":463,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":104,"org.easymock.tests2.NameTest.nameForMocksControl":85,"org.easymock.tests2.MockedExceptionTest.testMockedException":175,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":418,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":376,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":320,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":338,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":107,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":183,"org.easymock.tests.MockingTest.testNicePartialClassMocking":337,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":112,"org.easymock.tests2.CaptureTest.testCaptureLast":125,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":5,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":281,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":462,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":35,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":192,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":171,"org.easymock.tests.MockingTest.testTwoMocks":336,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":459,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":250,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":324,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":204,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":51,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":435,"org.easymock.samples.ExampleTest.removeNonExistingDocument":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":11,"org.easymock.tests.UsageStrictMockTest.differentMethods":239,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":18,"org.easymock.tests2.ConstraintsToStringTest.andToString":392,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":139,"org.easymock.tests2.MockBuilderTest.testCreateMockString":30,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":419,"org.easymock.tests.UsageExpectAndThrowTest.floatType":318,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":416,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":134,"org.easymock.tests.UsageVerifyTest.twoThrows":283,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":32,"org.easymock.samples.ExampleTest.voteAgainstRemoval":73,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":299,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":117,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":405,"org.easymock.tests2.UsageConstraintsTest.testNotNull":50,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":174,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":222,"org.easymock.tests2.UsageTest.defaultResetToNice":203,"org.easymock.samples.ExampleTest.voteAgainstRemovals":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":265,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":6,"org.easymock.tests.UsageVarargTest.differentLength":228,"org.easymock.tests2.CallbackTest.callback":92,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":399,"org.easymock.tests.UsageTest.openCallCountByLastCall":375,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":294,"org.easymock.tests.UsageCallCountTest.tooFewCalls":307,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":189,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":211,"org.easymock.tests.UsageThrowableTest.throwCheckedException":219,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":398,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":191,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":303,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":188,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":10,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":368,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":190,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":136,"org.easymock.tests2.CompareToTest.testGreateOrEqual":403,"org.easymock.tests.ObjectMethodsTest.testHashCode":314,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":441,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":461,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":141,"org.easymock.tests2.NameTest.nameForNiceMock":84,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":456,"org.easymock.tests2.DependencyTest.testInterfaceMocking":105,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":440,"org.easymock.samples.ExampleTest.addDocument":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":433,"org.easymock.tests2.DelegateToTest.testStubDelegate":88,"org.easymock.tests2.AnswerTest.stubAnswer":135,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":58,"org.easymock.tests.UsageVarargTest.varargLongAccepted":230,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":240,"org.easymock.tests.UsageExpectAndReturnTest.floatType":252,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":268,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":96,"org.easymock.tests2.ConstraintsToStringTest.orToString":385,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":29,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":24,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":49,"org.easymock.tests.UsageThrowableTest.noUpperLimit":216,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":350,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":40,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":123,"org.easymock.tests2.SerializationTest.test":94,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":380,"org.easymock.tests2.UsageConstraintsTest.testSame":43,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":251,"org.easymock.samples.SupportTest.addDocument":78,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":446,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":420,"org.easymock.tests.GenericTest.testPackageScope":243,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":345,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":23,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":444,"org.easymock.tests2.NameTest.nameForMock":82,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":262,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":412,"org.easymock.tests2.UsageStrictMockTest.differentMethods":103,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":254,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":330,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":273,"org.easymock.tests2.MockedExceptionTest.testRealException":177,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":400,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":60,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":370,"org.easymock.tests2.NameTest.nameForStrictMock":83,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":147,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":111,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":169,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":179,"org.easymock.tests2.UsageStrictMockTest.range":102,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":450,"org.easymock.tests2.UsageConstraintsTest.lessThan":52,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":20,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":424,"org.easymock.tests2.CaptureTest.testCaptureRightOne":128,"org.easymock.tests2.UsageConstraintsTest.testOr":44,"org.easymock.tests.UsageRangeTest.combination":270,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":108,"org.easymock.tests.UsageTest.wrongArguments":374,"org.easymock.tests2.MockBuilderTest.testWithConstructor":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":421,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":255,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":263,"org.easymock.tests.UsageVarargTest.varargShortAccepted":229,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":381,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":310,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":464,"org.easymock.tests2.UsageConstraintsTest.cmpTo":166,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":133,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":454,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":202,"org.easymock.tests2.CaptureTest.testCaptureFromStub":37,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":360,"org.easymock.tests.UsageTest.unexpectedCallWithArray":373,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":460,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":236,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":308,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":411,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":264,"org.easymock.tests2.UsageConstraintsTest.constraints":34,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":237,"org.easymock.samples.ExampleTest.addAndChangeDocument":77,"org.easymock.tests2.ConstraintsToStringTest.notToString":387,"org.easymock.tests.UsageStrictMockTest.testVerify":241,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":4,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":276,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":124,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":64,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":65,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":155,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":224}}]
