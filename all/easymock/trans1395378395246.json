[{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:557","failures":[5,6,7,8,9,10,11,0,1,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,124,125,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,3,4,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[5,6,7,8,9,10,257,258,11,259,0,1,260,13,14,261,262,263,15,16,17,18,19,20,24,25,26,264,265,266,267,27,28,29,30,31,32,33,34,35,36,268,37,38,39,40,41,42,43,44,45,46,47,48,269,49,50,51,52,270,58,59,271,60,61,272,273,62,63,64,65,66,67,68,69,274,70,71,72,73,74,75,76,77,78,79,80,81,275,82,83,84,85,86,87,88,89,90,91,276,277,278,279,92,93,94,280,95,281,96,97,98,282,283,99,100,106,109,110,113,121,122,284,285,126,286,127,128,129,130,287,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,288,289,290,149,291,3,4,292,293,294,295,296,297,298,151,152,153,154,155,156,157,158,160,161,162,164,299,165,166,300,167,301,169,302,303,304,305,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,327,328,232,233,329,330,234,235,236,237,238,239,331,240,241,242,243,244,245,246,247,248,249,250,251,252,332,333,256,334,335,336,337,338,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[36],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[340],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1660","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:191","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>;\n    try {\n        java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n    }\n    T T;\n    try {\n        java.lang.reflect.Constructor<?>.setAccessible(true);\n        T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n    } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n    } catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n    }\n    return T;\n} else {\n    net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory;\n    try {\n        net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n    } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n    }\n    net.sf.cglib.proxy.Factory.getCallback(0);\n    return ((T)(net.sf.cglib.proxy.Factory));\n}","type":"CtIfImpl"},"failures":[12,341,342,343,344,20,345,346,21,347,348,349,350,351,352,353,354,355,22,356,357,358,359,360,23,361,362,270,363,53,364,365,366,54,367,55,368,56,369,370,57,371,372,82,83,84,373,374,101,375,376,102,103,104,105,107,108,111,112,114,115,116,377,117,378,379,2,118,119,120,380,381,123,284,124,124,125,125,382,383,150,384,385,386,387,388,389,390,391,392,393,163,394,395,396,187,397,188,398,399,400,332,253,254,255,401,402,403,404,405,406,407,408,409],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[410,209],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[411],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[412],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[413,414,415,416,417],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:81","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[418,419,420,421,261,422,423,424,425,426,427,428,274,429,430,431,284,286],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[396,398],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[368,432,101,375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[12,13,341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[109],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[9,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[412],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[12,13,341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,257,258,11,259,0,1,260,12,13,341,14,15,16,17,18,19,20,21,22,23,24,25,26,264,265,266,267,27,28,29,30,31,32,33,34,35,36,268,37,38,39,40,41,42,43,44,45,46,47,48,269,49,50,51,52,270,53,54,55,56,57,58,59,271,60,61,272,273,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,275,82,83,84,85,86,87,88,89,90,91,276,92,93,94,280,95,281,96,97,98,282,283,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,2,118,119,120,121,122,123,284,124,124,125,125,285,126,286,127,128,129,130,287,131,132,382,383,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,288,289,290,149,291,3,4,292,293,150,151,152,153,154,155,156,157,158,160,161,162,163,164,299,165,166,300,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,306,187,397,188,311,312,313,314,315,316,317,318,319,320,321,323,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,327,328,232,233,329,330,234,235,236,237,238,239,331,240,241,242,243,244,245,246,247,248,249,250,251,252,332,253,254,255,333,433,256,334,335,336,338,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[54,55,56,434,123],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":30,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":230,"org.easymock.tests2.UsageTest.argumentsOrdered":283,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":274,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":281,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":284,"org.easymock.tests2.DelegateToTest.testReturnException":87,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":139,"org.easymock.tests.MockingTest.testPartialClassMocking":253,"org.easymock.tests.MockClassControlTest.testToString":404,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":21,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":210,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":122,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":174,"org.easymock.tests2.UsageTest.wrongArguments":280,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":424,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":296,"org.easymock.samples.ExampleTest.answerVsDelegate":128,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":395,"org.easymock.tests2.UsageConstraintsTest.testNull":32,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":114,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":409,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":79,"org.easymock.tests2.CaptureTest.testPrimitive":60,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":178,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":229,"org.easymock.tests.UsageTest.moreThanOneArgument":231,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":184,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":235,"org.easymock.tests.UsageTest.argumentsOrdered":330,"org.easymock.tests.UsageVarargTest.varargIntAccepted":313,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":133,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":270,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":137,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":14,"org.easymock.tests2.AnswerTest.answer":5,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":268,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":279,"org.easymock.tests2.CaptureTest.testAnd":58,"org.easymock.tests2.UsageTest.strictResetToDefault":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":2,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":183,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":74,"org.easymock.tests2.DelegateToTest.testDelegate":91,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":310,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":331,"org.easymock.tests2.CaptureTest.testCapture1_2446744":61,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":223,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":277,"org.easymock.tests.UsageThrowableTest.throwError":243,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":303,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":362,"org.easymock.samples.PartialClassMockTest.testGetArea":123,"org.easymock.tests2.CompareToTest.testLessOrEqual":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":134,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":172,"org.easymock.tests2.UsageTest.niceToStrict":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":351,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":54,"org.easymock.tests2.MockBuilderTest.testCreateMock":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":423,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":219,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":75,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":158,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":333,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":294,"org.easymock.tests.UsageOverloadedMethodTest.overloading":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":360,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":166,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":41,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":200,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":40,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":64,"org.easymock.tests.MockClassControlTest.testEquals":408,"org.easymock.tests2.EasyMockSupportClassTest.testAll":20,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":397,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":227,"org.easymock.tests2.CaptureTest.testCaptureAll":59,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":278,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":308,"org.easymock.tests.MockNameTest.defaultName":298,"org.easymock.tests2.UsageConstraintsTest.testMatches":42,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":185,"org.easymock.samples.ExampleTest.voteForRemovals":131,"org.easymock.tests.UsageVarargTest.allKinds":321,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":309,"org.easymock.samples.BasicClassMockTest.testPrintContent":383,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":249,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":257,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":143,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":90,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":391,"org.easymock.tests2.UsageConstraintsTest.greaterThan":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":345,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":153,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":120,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":392,"org.easymock.samples.ExampleTest.voteForRemoval":129,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":16,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":380,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":377,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":150,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":92,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":72,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":138,"org.easymock.tests2.CaptureTest.testCaptureFirst":68,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":86,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":73,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":100,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":301,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":196,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":18,"org.easymock.tests2.CaptureTest.testCapture2_2446744":67,"org.easymock.tests2.UsageTest.moreThanOneArgument":94,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":57,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":320,"org.easymock.tests.GenericTest.testBridgedEquals":398,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":338,"org.easymock.tests.UsageExpectAndReturnTest.longType":192,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":70,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":306,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":434,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":228,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":151,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":269,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":182,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":161,"org.easymock.tests.UsageCallCountTest.tooManyCalls":339,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":359,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":197,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":215,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":248,"org.easymock.tests.MockingTest.testNiceClassMocking":401,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":103,"org.easymock.tests.MockingTest.testClassMocking":400,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":433,"org.easymock.tests2.UsageConstraintsTest.testContains":39,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":84,"org.easymock.tests2.UsageConstraintsTest.testFind":31,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":146,"org.easymock.tests.MockTypeTest.fromEasyMockClass":302,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":25,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":288,"org.easymock.tests.UsageExpectAndReturnTest.object":199,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":117,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":78,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":315,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":325,"org.easymock.tests.UsageTest.exactCallCountByLastCall":234,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":251,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":168,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":375,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":205,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":311,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":165,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":426,"org.easymock.tests.MockClassControlTest.testHashCode":407,"org.easymock.tests2.EasyMockSupportTest.testVerify":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":353,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":237,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":164,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":157,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":276,"org.easymock.tests.UsageVarargTest.varargCharAccepted":314,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":384,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":262,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":258,"org.easymock.tests2.UsageTest.openCallCountByLastCall":96,"org.easymock.tests.DefaultClassInstantiatorTest.object":385,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":81,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":156,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":323,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":246,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":425,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":406,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":118,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":216,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":206,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":160,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":23,"org.easymock.tests2.UsageTest.resumeIfFailure":99,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":141,"org.easymock.tests2.StubTest.stubWithReturnValue":110,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":368,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":49,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":198,"org.easymock.tests2.SerializationTest.testAllMockedMethod":341,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":147,"org.easymock.samples.SupportTest.voteForRemovals":126,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":396,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":222,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":148,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":6,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":170,"org.easymock.tests.UsageExpectAndThrowTest.object":220,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":47,"org.easymock.tests2.DelegateToTest.testWrongClass":89,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":241,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":242,"org.easymock.samples.ConstructorCalledMockTest.testTax":124,"org.easymock.tests.UsageStrictMockTest.range":3,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":77,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":102,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":221,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":55,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":295,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":173,"org.easymock.tests2.CaptureTest.testCaptureNone":63,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":412,"org.easymock.tests.UsageUnorderedTest.message":209,"org.easymock.tests.UsageVerifyTest.twoReturns":181,"org.easymock.tests.UsageVarargTest.varargByteAccepted":319,"org.easymock.tests2.ThreadingTest.testThreadSafe":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":356,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":336,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":326,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":382,"org.easymock.tests2.CaptureTest.testCapture_2617107":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":177,"org.easymock.tests2.UsageConstraintsTest.any":37,"org.easymock.tests2.StubTest.stub":109,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":140,"org.easymock.tests.UsageExpectAndThrowTest.longType":213,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":389,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":259,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":69,"org.easymock.tests.LimitationsTest.mockNativeMethod":163,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":188,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":208,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":420,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":260,"org.easymock.tests2.NameTest.nameForMocksControl":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":421,"org.easymock.tests2.MockedExceptionTest.testMockedException":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":346,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":233,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":214,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":255,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":340,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":111,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":56,"org.easymock.tests.MockingTest.testNicePartialClassMocking":254,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":116,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":418,"org.easymock.tests2.CompareToTest.testCompareEqual":415,"org.easymock.tests2.CaptureTest.testCaptureLast":62,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":240,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":108,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":35,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":48,"org.easymock.tests.MockingTest.testTwoMocks":332,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":218,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":282,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":51,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":422,"org.easymock.tests.UsageStrictMockTest.differentMethods":4,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":427,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":387,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":17,"org.easymock.tests2.MockBuilderTest.testCreateMockString":372,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":402,"org.easymock.tests.UsageExpectAndThrowTest.floatType":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":347,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":8,"org.easymock.tests.UsageVerifyTest.twoThrows":180,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":376,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":22,"org.easymock.samples.ExampleTest.voteAgainstRemoval":130,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":171,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":119,"org.easymock.tests2.UsageConstraintsTest.testNotNull":50,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":250,"org.easymock.tests2.UsageTest.defaultResetToNice":98,"org.easymock.samples.ExampleTest.voteAgainstRemovals":127,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":204,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":419,"org.easymock.tests.UsageVarargTest.differentLength":316,"org.easymock.tests2.CallbackTest.callback":26,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":378,"org.easymock.tests.UsageTest.openCallCountByLastCall":232,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":176,"org.easymock.tests.UsageCallCountTest.tooFewCalls":334,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":105,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":297,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":411,"org.easymock.tests.UsageThrowableTest.throwCheckedException":247,"org.easymock.tests.MockingTest.testStrictClassMocking":399,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":107,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":252,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":261,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":106,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":10,"org.easymock.tests2.CompareToTest.testGreateOrEqual":416,"org.easymock.tests.ObjectMethodsTest.testHashCode":324,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":19,"org.easymock.tests2.NameTest.nameForNiceMock":266,"org.easymock.tests2.DependencyTest.testInterfaceMocking":121,"org.easymock.samples.ExampleTest.addDocument":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":357,"org.easymock.tests2.DelegateToTest.testStubDelegate":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.AnswerTest.stubAnswer":9,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":149,"org.easymock.tests.UsageVarargTest.varargLongAccepted":318,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":292,"org.easymock.tests.UsageExpectAndReturnTest.floatType":191,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":207,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":101,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":125,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":45,"org.easymock.tests.UsageThrowableTest.noUpperLimit":244,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":28,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":373,"org.easymock.tests2.SerializationTest.test":13,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":272,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":386,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":190,"org.easymock.tests2.UsageConstraintsTest.testSame":33,"org.easymock.samples.SupportTest.addDocument":285,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":348,"org.easymock.tests.GenericTest.testPackageScope":187,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":238,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":430,"org.easymock.tests2.NameTest.nameForMock":264,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":201,"org.easymock.tests2.UsageStrictMockTest.differentMethods":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":371,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":379,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":193,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":224,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":322,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":155,"org.easymock.tests2.MockedExceptionTest.testRealException":85,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":305,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":432,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":175,"org.easymock.tests2.NameTest.nameForStrictMock":265,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":366,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":24,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":115,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":374,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":410,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":388,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":46,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":53,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":52,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":428,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":71,"org.easymock.tests2.CaptureTest.testCaptureRightOne":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":352,"org.easymock.tests2.UsageConstraintsTest.testOr":34,"org.easymock.tests.UsageRangeTest.combination":152,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":112,"org.easymock.tests.UsageTest.wrongArguments":328,"org.easymock.tests2.MockBuilderTest.testWithConstructor":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":349,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":194,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":202,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":390,"org.easymock.tests.UsageVarargTest.varargShortAccepted":317,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":337,"org.easymock.tests2.UsageConstraintsTest.cmpTo":38,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":7,"org.easymock.tests2.CompareToTest.testLessThan":413,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":97,"org.easymock.tests2.CaptureTest.testCaptureFromStub":66,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":364,"org.easymock.tests.UsageTest.unexpectedCallWithArray":327,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":290,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":335,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":203,"org.easymock.tests2.UsageConstraintsTest.constraints":29,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":291,"org.easymock.samples.ExampleTest.addAndChangeDocument":132,"org.easymock.tests.UsageStrictMockTest.testVerify":293,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":286,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":289,"org.easymock.tests2.CompareToTest.testGreateThan":414,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":307,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":273,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":135,"org.easymock.tests.LimitationsTest.abstractClass":393,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":195,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":167,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":76,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":312}}]
