[{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[7,8,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[11,11,12,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[52,53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:130","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, java.lang.Object);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[13,55,56,57,58,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[59],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[87,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[89,90,91,92,11,12,93,94,95,96,0,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,13,14,15,16,17,123,124,125,18,126,127,128,129,130,131,132,55,133,56,134,135,136,137,138,139,140,141,142,143,144,145,146,57,58,19,20,21,22,23,147,67,68,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,24,25,26,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,28,29,184,185,186,187,188,189,30,73,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,36,37,74,209,38,39,40,41,7,210,211,212,42,213,43,44,214,45,46,215,216,217,218,47,48,49,219,220,221,222,223,8,224,9,225,226,227,228,229,230,10,231,232,233,234,235,236,3,237,6,238,239,240,241,242,243,87,244,245,246,247,248,79,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,51,86,281,282,283,284,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[89,90,91,92,11,11,12,12,93,94,95,96,0,97,98,99,100,286,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,287,288,289,60,290,291,292,293,294,295,296,297,298,299,300,301,122,13,14,15,16,17,302,123,124,61,125,62,63,303,304,64,65,66,18,305,306,126,127,307,308,309,310,311,312,128,129,130,131,132,55,133,56,134,135,136,137,138,139,140,141,142,143,144,145,146,57,58,19,20,21,22,23,147,67,68,148,149,150,151,152,313,153,154,155,156,157,314,158,315,316,317,318,319,320,159,160,161,162,24,25,321,322,26,323,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,28,29,324,325,1,326,184,327,185,186,187,188,69,189,70,30,71,72,73,190,191,328,329,330,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,36,37,74,209,38,39,40,41,7,210,211,212,42,213,43,44,214,45,46,215,216,217,331,218,47,48,49,219,220,221,332,333,222,223,8,224,9,225,334,226,227,228,229,230,10,50,335,231,232,233,234,235,236,3,237,4,6,238,239,240,241,242,336,243,87,244,245,337,75,76,77,246,247,78,248,79,338,339,249,80,81,250,82,251,252,253,254,255,256,257,258,340,259,260,261,262,88,263,264,341,265,342,266,267,268,269,270,271,272,273,274,275,276,277,278,279,83,280,51,84,85,86,281,282,283,284,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[254,255],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[89,90,91,92,11,12,93,94,95,96,0,97,98,99,100,101,107,108,109,110,111,112,113,114,115,118,120,121,60,122,13,14,15,16,17,123,124,61,125,62,63,303,304,64,65,66,18,305,306,126,127,307,308,309,310,311,128,129,130,131,132,55,133,56,134,135,136,137,138,139,140,141,142,143,144,145,146,57,58,19,20,21,22,23,147,67,68,148,149,150,151,152,153,154,155,156,157,159,24,25,321,322,26,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,28,29,69,189,70,30,71,72,73,192,193,194,195,196,197,198,200,201,202,203,204,207,36,37,74,209,38,39,40,41,7,210,211,212,42,213,43,44,214,45,46,215,216,217,218,47,48,49,219,220,221,332,333,222,223,8,224,9,225,334,226,227,228,229,230,10,50,335,231,232,233,234,235,236,3,237,4,6,243,244,245,75,76,77,246,247,78,248,79,338,339,80,81,82,251,252,253,254,255,256,343,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,274,275,83,280,51,84,85,86,282,283,284,285],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[74,209,39,41,7,344,215,47,8,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"prefix","key":"prefix"}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[300,345,346,347,348],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"finalizeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:325","sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:41","sourceCode":"java.lang.StringBuffer.append(((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[349],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":209,"org.easymock.tests2.UsageTest.argumentsOrdered":81,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":113,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":79,"org.easymock.tests2.StubTest.stubWithReturnValue":274,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":218,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":92,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":138,"org.easymock.tests2.SerializationTest.testAllMockedMethod":236,"org.easymock.tests2.DelegateToTest.testReturnException":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":111,"org.easymock.tests.MockingTest.testPartialClassMocking":128,"org.easymock.samples.SupportTest.voteForRemovals":95,"org.easymock.tests.MockClassControlTest.testToString":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":35,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":176,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":283,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":164,"org.easymock.tests.UsageExpectAndThrowTest.object":174,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":233,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":216,"org.easymock.tests2.DelegateToTest.testWrongClass":4,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":28,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":29,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":210,"org.easymock.tests2.UsageTest.wrongArguments":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":24,"org.easymock.tests.UsageStrictMockTest.range":72,"org.easymock.samples.ConstructorCalledMockTest.testTax":11,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":187,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":199,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":266,"org.easymock.tests2.UsageConstraintsTest.testNull":39,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":260,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":175,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":320,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":244,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":201,"org.easymock.tests2.CaptureTest.testPrimitive":225,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":26,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":300,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":64,"org.easymock.tests.UsageTest.moreThanOneArgument":125,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":183,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":259,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":15,"org.easymock.tests2.CaptureTest.testCaptureNone":229,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":59,"org.easymock.tests.UsageUnorderedTest.message":60,"org.easymock.tests.UsageVerifyTest.twoReturns":68,"org.easymock.tests.UsageVarargTest.varargByteAccepted":155,"org.easymock.tests2.ThreadingTest.testThreadSafe":220,"org.easymock.tests.UsageTest.argumentsOrdered":65,"org.easymock.tests.UsageVarargTest.varargIntAccepted":150,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":121,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":90,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":19,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":242,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":163,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":322,"org.easymock.tests2.UsageConstraintsTest.any":211,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":87,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":297,"org.easymock.tests2.StubTest.stub":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":2,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":23,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":112,"org.easymock.tests.UsageExpectAndThrowTest.longType":167,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":296,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":84,"org.easymock.tests2.SerializationTest.testClass":234,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":219,"org.easymock.tests.ReplayStateInvalidUsageTest.times":298,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":223,"org.easymock.tests.LimitationsTest.mockNativeMethod":109,"org.easymock.tests2.AnswerTest.answer":252,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":58,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":344,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":241,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":246,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":281,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":264,"org.easymock.tests2.NameTest.nameForMocksControl":279,"org.easymock.tests2.MockedExceptionTest.testMockedException":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":14,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":196,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":161,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":304,"org.easymock.tests2.DelegateToTest.testDelegate":6,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":343,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":168,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":258,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":245,"org.easymock.tests.MockingTest.testNicePartialClassMocking":129,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":179,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":262,"org.easymock.tests2.CaptureTest.testCaptureLast":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":114,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":323,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":272,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":217,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":106,"org.easymock.tests2.CaptureTest.testCapture1_2446744":334,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":177,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":172,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":80,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":48,"org.easymock.tests.UsageThrowableTest.throwError":306,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":292,"org.easymock.samples.ExampleTest.removeNonExistingDocument":286,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":294,"org.easymock.tests.UsageStrictMockTest.differentMethods":73,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":53,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":332,"org.easymock.tests2.MockBuilderTest.testCreateMockString":76,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":17,"org.easymock.tests.UsageExpectAndThrowTest.floatType":166,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":214,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":253,"org.easymock.tests.UsageVerifyTest.twoThrows":67,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":284,"org.easymock.samples.PartialClassMockTest.testGetArea":89,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":20,"org.easymock.samples.ExampleTest.voteAgainstRemoval":98,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":265,"org.easymock.tests2.UsageTest.niceToStrict":248,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":165,"org.easymock.tests2.UsageConstraintsTest.testNotNull":47,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":311,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":31,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":243,"org.easymock.tests2.MockBuilderTest.testCreateMock":337,"org.easymock.tests2.UsageTest.defaultResetToNice":249,"org.easymock.samples.ExampleTest.voteAgainstRemovals":96,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":144,"org.easymock.tests.UsageVarargTest.differentLength":313,"org.easymock.tests2.CallbackTest.callback":275,"org.easymock.tests.UsageTest.openCallCountByLastCall":303,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":173,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":197,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":36,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":116,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":321,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":185,"org.easymock.tests.UsageCallCountTest.tooFewCalls":119,"org.easymock.tests.UsageOverloadedMethodTest.overloading":123,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":326,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":43,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":302,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":269,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":140,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":213,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":188,"org.easymock.tests.UsageThrowableTest.throwCheckedException":308,"org.easymock.tests.MockClassControlTest.testEquals":319,"org.easymock.tests2.EasyMockSupportClassTest.testAll":282,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":108,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":181,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":240,"org.easymock.tests2.CaptureTest.testCaptureAll":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":104,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":305,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":271,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":268,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":299,"org.easymock.tests2.UsageConstraintsTest.testMatches":44,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":270,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":255,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":16,"org.easymock.tests.ObjectMethodsTest.testHashCode":329,"org.easymock.samples.ExampleTest.voteForRemovals":100,"org.easymock.tests2.NameTest.nameForNiceMock":278,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":222,"org.easymock.tests.UsageVarargTest.allKinds":157,"org.easymock.tests2.DependencyTest.testInterfaceMocking":232,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":147,"org.easymock.samples.BasicClassMockTest.testPrintContent":91,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":105,"org.easymock.samples.ExampleTest.addDocument":99,"org.easymock.tests2.DelegateToTest.testStubDelegate":237,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":310,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":83,"org.easymock.tests2.AnswerTest.stubAnswer":254,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":5,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":115,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":30,"org.easymock.tests2.UsageConstraintsTest.greaterThan":45,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":160,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":342,"org.easymock.tests.UsageVarargTest.varargLongAccepted":154,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":190,"org.easymock.samples.ExampleTest.voteForRemoval":97,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":221,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":57,"org.easymock.tests.UsageExpectAndReturnTest.floatType":55,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":54,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":251,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":88,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":12,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":46,"org.easymock.tests.UsageThrowableTest.noUpperLimit":126,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":77,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":37,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":122,"org.easymock.tests2.SerializationTest.test":235,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":194,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":127,"org.easymock.tests2.UsageConstraintsTest.testSame":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":132,"org.easymock.samples.SupportTest.addDocument":94,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":110,"org.easymock.tests2.CaptureTest.testCaptureFirst":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":195,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":82,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":295,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":136,"org.easymock.tests.GenericTest.testPackageScope":107,"org.easymock.tests2.CaptureTest.testCapture2_2446744":335,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":333,"org.easymock.tests2.UsageTest.moreThanOneArgument":247,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":32,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":156,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":288,"org.easymock.tests2.NameTest.nameForMock":276,"org.easymock.tests.UsageExpectAndReturnTest.longType":133,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":182,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":331,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":27,"org.easymock.tests2.UsageStrictMockTest.differentMethods":86,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":180,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":13,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":56,"org.easymock.tests.UsageCallCountTest.tooManyCalls":289,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":178,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":162,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":118,"org.easymock.tests2.MockedExceptionTest.testRealException":208,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":34,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":51,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":169,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":309,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":301,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":25,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":267,"org.easymock.tests2.NameTest.nameForStrictMock":277,"org.easymock.tests2.UsageConstraintsTest.testContains":42,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":117,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":207,"org.easymock.tests2.UsageConstraintsTest.testFind":38,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":124,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":261,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":257,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":69,"org.easymock.tests.UsageExpectAndReturnTest.object":139,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":215,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":263,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":336,"org.easymock.tests2.UsageStrictMockTest.range":85,"org.easymock.tests2.UsageConstraintsTest.lessThan":49,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":200,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":152,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":330,"org.easymock.tests.UsageTest.exactCallCountByLastCall":66,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":33,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":193,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":52,"org.easymock.tests2.ConstraintsToStringTest.findToString":349,"org.easymock.tests2.UsageConstraintsTest.testOr":41,"org.easymock.tests.UsageRangeTest.combination":159,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":340,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":145,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":148,"org.easymock.tests.UsageTest.wrongArguments":63,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":1,"org.easymock.tests.MockClassControlTest.testHashCode":318,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":158,"org.easymock.tests2.EasyMockSupportTest.testVerify":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":134,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":142,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":324,"org.easymock.tests.UsageVarargTest.varargShortAccepted":153,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":238,"org.easymock.tests2.UsageConstraintsTest.cmpTo":212,"org.easymock.tests.UsageVarargTest.varargCharAccepted":151,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":280,"org.easymock.tests2.UsageTest.openCallCountByLastCall":338,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":339,"org.easymock.tests.DefaultClassInstantiatorTest.object":312,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":203,"org.easymock.tests2.CaptureTest.testCaptureFromStub":50,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":291,"org.easymock.tests.UsageTest.unexpectedCallWithArray":62,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":328,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":307,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":70,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":120,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":143,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":341,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":317,"org.easymock.tests2.UsageConstraintsTest.constraints":74,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":71,"org.easymock.samples.ExampleTest.addAndChangeDocument":101,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":170,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":146,"org.easymock.tests.UsageStrictMockTest.testVerify":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":345,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":93,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":285,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":103,"org.easymock.tests2.UsageTest.resumeIfFailure":250,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":227,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":21,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":135,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":22,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":198,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":149}}]
