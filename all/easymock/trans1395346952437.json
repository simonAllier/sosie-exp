[{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[30,32,34,35,36,39],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[204],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[205,206,207],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[208,209],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[2,21,96,210,98,157,211],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[212,0,1,2,3,4,213,5,214,215,216,217,6,218,219,220,7,8,9,10,11,12,13,14,15,221,222,16,223,17,18,224,19,20,225,21,22,23,24,25,26,27,28,29,30,31,32,33,226,227,34,35,36,37,228,38,39,40,41,42,43,44,45,229,46,230,47,48,49,231,232,233,234,50,235,51,236,237,238,239,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,240,241,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,242,97,98,243,99,100,244,101,102,245,103,246,104,105,106,247,107,248,108,109,110,249,250,111,112,113,114,115,116,251,252,253,254,117,118,119,120,121,122,123,124,125,255,126,127,128,129,130,131,256,257,258,132,259,133,134,260,261,262,263,264,135,265,266,267,268,269,270,271,272,136,273,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,274,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,275,181,182,183,276,277,278,279,280,184,185,281,282,186,187,188,189,283,284,285,286,287,288,289,290,291,292,293,190,191,294,295,296,297,298,192,193,194,299,299,300,195,197,198,199,200,301,302,201,202,303,304,203],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[10,16,29,30,31,32,33,226,227,34,35,36,37,228,38,39,46,231,232,69,70,71,72,73,74,75,76,77,78,305,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,120,121,122,123,124,258,132,135,275,182,183,184,185,281,282,186,293,190,191],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[215,215,216,216,6,218,219,15,19,225,22,23,24,25,27,28,40,41,43,44,45,229,46,230,47,48,49,50,243,99,100,244,101,102,245,103,246,113,114,115,116,136,273,306,181,307,192,193,194,308,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[55],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[241,309,282,310,311],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[79,135,182,183,185,186],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[29,30,31,32,37,228,71,72,73,74,75,76,77,78,305,79,88,89,93,94],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[313],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[212,0,1,2,3,4,213,5,314,214,215,215,216,216,217,6,218,219,220,7,8,9,10,11,12,13,14,15,221,222,16,223,17,18,224,19,20,225,21,22,23,24,25,26,27,28,29,30,31,32,33,226,227,34,35,36,37,228,38,39,40,41,42,43,44,45,229,46,230,47,48,49,231,232,233,234,50,235,51,236,237,238,239,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,240,241,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,315,316,317,318,96,242,97,98,243,99,100,244,101,102,245,103,246,104,105,106,247,107,248,108,109,110,249,250,111,112,113,114,115,116,251,252,253,254,117,118,119,120,121,122,123,124,319,125,255,126,127,128,129,130,131,256,257,258,132,259,133,134,260,320,321,322,323,324,261,262,263,264,135,265,325,326,266,267,268,269,270,271,272,136,273,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,327,328,309,329,330,331,332,333,334,335,336,337,157,338,158,159,160,274,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,275,181,182,183,276,277,278,279,280,184,185,281,282,186,187,188,189,283,284,285,286,287,288,289,290,291,292,293,190,191,294,295,296,297,298,192,193,194,339,308,340,341,342,343,344,345,300,195,196,197,198,199,200,301,302,201,202,303,304,203],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[41,230],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"suffix","key":"suffix"}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[7,8,9,16,17,18,30,33,34,35,38,39,53,68,69,70,71,73,74,75,76,79,81,83,84,85,86,87,93,94,95,96,97,103,104,106,108,109,111,112,117,119,126,132,133,134,137,138,141,143,144,145,146,148,149,150,151,153,154,155,156,160,185,186,189,346,347,348,349,350,195,196,197,198,199,200,201,202,203],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[215,215,216,216,6,218,219,15,351,19,225,22,23,24,25,27,28,352,353,354,355,356,357,40,41,43,44,45,229,46,358,359,230,47,48,49,360,361,233,234,50,362,243,363,99,364,204,100,244,101,102,365,245,103,366,367,246,368,369,370,371,372,113,373,374,114,375,376,377,378,379,380,381,382,383,115,384,385,386,387,388,116,389,390,321,391,392,393,205,394,395,396,397,398,399,136,273,306,400,401,402,181,403,404,405,307,192,193,194,406,339,308,340,341,342,343,344,345,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[407],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[72],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[6,19,355,229,243,363,99,364,100,244,101,102,245,103,367,246,397,398,306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[408,409],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[410],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":72,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":312,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":199,"org.easymock.tests2.UsageTest.argumentsOrdered":250,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":66,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":248,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":217,"org.easymock.tests2.DelegateToTest.testReturnException":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":262,"org.easymock.tests.MockingTest.testPartialClassMocking":192,"org.easymock.tests.MockClassControlTest.testToString":340,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":378,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":161,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":114,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":14,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":184,"org.easymock.tests2.UsageTest.wrongArguments":247,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":253,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":398,"org.easymock.tests2.UsageConstraintsTest.testNull":74,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":43,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":65,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":345,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":352,"org.easymock.tests2.CaptureTest.testPrimitive":32,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":186,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":180,"org.easymock.tests.UsageTest.moreThanOneArgument":200,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":42,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":296,"org.easymock.tests.UsageTest.argumentsOrdered":304,"org.easymock.tests.UsageVarargTest.varargIntAccepted":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":120,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":243,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":124,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":12,"org.easymock.tests.ReplayStateInvalidUsageTest.times":334,"org.easymock.tests2.AnswerTest.answer":96,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":305,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":239,"org.easymock.tests2.CaptureTest.testAnd":29,"org.easymock.tests2.UsageTest.strictResetToDefault":105,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":295,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":60,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":197,"org.easymock.tests2.DelegateToTest.testDelegate":55,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":176,"org.easymock.tests.LimitationsTest.mockFinalMethod":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":280,"org.easymock.tests2.CaptureTest.testCapture1_2446744":33,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":174,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":237,"org.easymock.tests.UsageThrowableTest.throwError":125,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":309,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":390,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":121,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":396,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":162,"org.easymock.tests2.UsageTest.niceToStrict":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":379,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":100,"org.easymock.tests2.MockBuilderTest.testCreateMock":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":386,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":170,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":61,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":325,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":251,"org.easymock.tests.UsageOverloadedMethodTest.overloading":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":383,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":159,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":83,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":187,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":148,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":82,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":206,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":36,"org.easymock.tests2.EasyMockSupportClassTest.testAll":113,"org.easymock.tests.MockClassControlTest.testEquals":344,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":273,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":178,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":353,"org.easymock.tests2.CaptureTest.testCaptureAll":30,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":238,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":278,"org.easymock.tests2.UsageConstraintsTest.testMatches":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":297,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":327,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":293,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":117,"org.easymock.samples.BasicClassMockTest.testPrintContent":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":279,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":130,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":221,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":265,"org.easymock.tests2.UsageConstraintsTest.greaterThan":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":196,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":49,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":395,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":8,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":360,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":366,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":229,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":104,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":300,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":58,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":371,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":261,"org.easymock.tests2.CaptureTest.testCaptureFirst":39,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":59,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":112,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":274,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":144,"org.easymock.tests2.UsageTest.moreThanOneArgument":106,"org.easymock.tests2.CaptureTest.testCapture2_2446744":38,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":10,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":103,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":292,"org.easymock.tests.GenericTest.testBridgedEquals":400,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":271,"org.easymock.tests.UsageExpectAndReturnTest.longType":140,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":56,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":276,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":179,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":367,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":91,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":177,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":408,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":294,"org.easymock.tests.UsageCallCountTest.tooManyCalls":272,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":166,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":129,"org.easymock.tests.MockingTest.testNiceClassMocking":406,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":23,"org.easymock.tests.MockingTest.testClassMocking":405,"org.easymock.tests2.UsageConstraintsTest.testContains":81,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":326,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":363,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":50,"org.easymock.tests2.UsageConstraintsTest.testFind":73,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":189,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":232,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":256,"org.easymock.tests.UsageExpectAndReturnTest.object":147,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":46,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":64,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":287,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":324,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":410,"org.easymock.tests.UsageTest.exactCallCountByLastCall":203,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":182,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":351,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":153,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":283,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":158,"org.easymock.tests.MockClassControlTest.testHashCode":343,"org.easymock.tests2.EasyMockSupportTest.testVerify":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":381,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":409,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":157,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":236,"org.easymock.tests.UsageVarargTest.varargCharAccepted":286,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":350,"org.easymock.tests2.UsageTest.openCallCountByLastCall":108,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":67,"org.easymock.tests.DefaultClassInstantiatorTest.object":321,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":322,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":382,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":127,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":357,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":47,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":342,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":167,"org.easymock.tests.CapturesMatcherTest.test":299,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":116,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":341,"org.easymock.tests2.UsageTest.resumeIfFailure":111,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":264,"org.easymock.tests2.StubTest.stubWithReturnValue":68,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":146,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":92,"org.easymock.tests2.SerializationTest.testAllMockedMethod":225,"org.easymock.samples.SupportTest.voteForRemovals":0,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":173,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":311,"org.easymock.tests.UsageExpectAndThrowTest.object":171,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":89,"org.easymock.tests2.DelegateToTest.testWrongClass":54,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":190,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":191,"org.easymock.tests.UsageStrictMockTest.range":133,"org.easymock.samples.ConstructorCalledMockTest.testTax":215,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":63,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":22,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":172,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":101,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":303,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":252,"org.easymock.tests2.CaptureTest.testCaptureNone":35,"org.easymock.tests.UsageUnorderedTest.message":275,"org.easymock.tests.UsageVerifyTest.twoReturns":119,"org.easymock.tests.UsageVarargTest.varargByteAccepted":291,"org.easymock.tests2.ThreadingTest.testThreadSafe":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":384,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":269,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":218,"org.easymock.tests2.CaptureTest.testCapture_2617107":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":348,"org.easymock.tests2.UsageConstraintsTest.any":79,"org.easymock.tests2.StubTest.stub":241,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":333,"org.easymock.tests.UsageExpectAndThrowTest.longType":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":349,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":205,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":332,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":223,"org.easymock.tests2.SerializationTest.testClass":19,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":51,"org.easymock.tests.LimitationsTest.mockNativeMethod":181,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":156,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":306,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":356,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":224,"org.easymock.tests2.NameTest.nameForMocksControl":318,"org.easymock.tests2.MockedExceptionTest.testMockedException":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":374,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":202,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":165,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":40,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":102,"org.easymock.tests.MockingTest.testNicePartialClassMocking":193,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":45,"org.easymock.tests2.CaptureTest.testCaptureLast":34,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":319,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":28,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":77,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":90,"org.easymock.tests.MockingTest.testTwoMocks":307,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":137,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":169,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":249,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":94,"org.easymock.samples.ExampleTest.removeNonExistingDocument":314,"org.easymock.tests.UsageStrictMockTest.differentMethods":134,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":330,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":392,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":9,"org.easymock.tests2.MockBuilderTest.testCreateMockString":246,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":339,"org.easymock.tests.UsageExpectAndThrowTest.floatType":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":375,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":242,"org.easymock.tests.UsageVerifyTest.twoThrows":118,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":115,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":347,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":48,"org.easymock.tests.LimitationsTest.privateConstructor":402,"org.easymock.tests2.UsageConstraintsTest.testNotNull":93,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":131,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":233,"org.easymock.tests2.UsageTest.defaultResetToNice":110,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":152,"org.easymock.tests.UsageVarargTest.differentLength":288,"org.easymock.tests2.CallbackTest.callback":21,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":358,"org.easymock.tests.UsageTest.openCallCountByLastCall":201,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":69,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":281,"org.easymock.tests.UsageCallCountTest.tooFewCalls":267,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":25,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":254,"org.easymock.tests.UsageThrowableTest.throwCheckedException":128,"org.easymock.tests.MockingTest.testStrictClassMocking":404,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":183,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":27,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":24,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":335,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":26,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":98,"org.easymock.tests.ObjectMethodsTest.testHashCode":323,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":11,"org.easymock.tests2.NameTest.nameForNiceMock":317,"org.easymock.tests2.DependencyTest.testInterfaceMocking":13,"org.easymock.samples.ExampleTest.addDocument":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":389,"org.easymock.tests2.DelegateToTest.testStubDelegate":53,"org.easymock.tests2.AnswerTest.stubAnswer":97,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":132,"org.easymock.tests.UsageVarargTest.varargLongAccepted":290,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":346,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":155,"org.easymock.tests.UsageExpectAndReturnTest.floatType":139,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":15,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":216,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":87,"org.easymock.tests.UsageThrowableTest.noUpperLimit":255,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":70,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":368,"org.easymock.tests2.SerializationTest.test":20,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":226,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":207,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":391,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":138,"org.easymock.tests2.UsageConstraintsTest.testSame":75,"org.easymock.samples.SupportTest.addDocument":212,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":376,"org.easymock.tests.GenericTest.testPackageScope":136,"org.easymock.tests2.NameTest.nameForMock":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":149,"org.easymock.tests2.UsageStrictMockTest.differentMethods":18,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":359,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":141,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":175,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":198,"org.easymock.tests2.MockedExceptionTest.testRealException":235,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":211,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":185,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":337,"org.easymock.tests2.NameTest.nameForStrictMock":316,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":204,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":44,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":369,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":393,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":88,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":99,"org.easymock.tests2.UsageStrictMockTest.range":17,"org.easymock.tests2.UsageConstraintsTest.lessThan":95,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":354,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":362,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":57,"org.easymock.tests2.CaptureTest.testCaptureRightOne":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":380,"org.easymock.tests2.UsageConstraintsTest.testOr":76,"org.easymock.tests.UsageRangeTest.combination":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":41,"org.easymock.tests.UsageTest.wrongArguments":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":377,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":150,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":394,"org.easymock.tests.UsageVarargTest.varargShortAccepted":289,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":270,"org.easymock.tests2.UsageConstraintsTest.cmpTo":80,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":210,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":109,"org.easymock.tests2.CaptureTest.testCaptureFromStub":228,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":328,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":364,"org.easymock.tests.UsageTest.unexpectedCallWithArray":301,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":258,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":268,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":151,"org.easymock.tests2.UsageConstraintsTest.constraints":71,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":259,"org.easymock.samples.ExampleTest.addAndChangeDocument":214,"org.easymock.tests.UsageStrictMockTest.testVerify":320,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":220,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":277,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":227,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":122,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":355,"org.easymock.tests.LimitationsTest.abstractClass":401,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":143,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":123,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":62,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":284}}]
