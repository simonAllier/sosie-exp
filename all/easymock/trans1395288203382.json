[{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[0,41,42,2,43,44,45,5,46,47,6,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,17,20,30,36,72,73,39,39,40,40,74,75,76,77,78,79,80,81,82,83,84,85,86],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[87,88,89,90,91,92],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[93,94,95,96],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[97,98,99,100,101],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[87,88,89,90,91,92],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[0,1,102,103,104,105,106,2,10,11],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[107,108,109,110,111,89,112,113,114,115,92,116,117,118],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[119,120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,98,140,99,141,142,143,144,145,146,94,147,148,149,150,151,95,152,153,100,154,155,156,157,158,101,159,160,96,54,111,89,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[178,96],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[179,180,181,182,183,107,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,122,199,0,200,2,201,43,44,45,5,46,202,47,6,125,126,127,128,130,131,132,133,134,135,138,203,108,204,205,109,110,206,207,208,141,146,94,148,149,151,153,155,156,157,158,101,48,49,209,50,51,52,54,57,63,65,66,210,71,17,20,30,36,211,72,73,212,213,214,215,216,217,218,219,220,74,111,75,76,221,89,222,112,223,224,225,226,227,228,229,162,163,164,165,230,231,232,233,234,79,81,82,83,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,174,256,114,257,258,116,117,118,259,260,261,262,263,264,86],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[0,1,102,103,104,106,2,10,11],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[265],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[97,98,100,101],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[125,127,135,99,141,143,145,146,147,155,159],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[266,267,268,269,179,180,270,271,272,181,273,274,275,182,121,183,107,184,185,276,277,278,279,280,186,281,282,283,284,285,286,187,188,189,190,191,192,193,287,194,195,196,197,198,288,289,265,122,199,200,123,290,124,201,291,292,202,293,294,125,126,127,128,129,130,131,132,133,134,135,136,137,138,295,203,296,108,204,205,297,298,299,109,110,300,301,302,206,303,207,304,208,139,98,140,99,141,305,142,143,144,145,146,94,147,148,149,150,151,95,152,153,100,154,155,156,157,158,101,159,160,96,306,307,308,309,310,209,311,312,313,314,315,210,316,317,318,319,320,321,322,323,71,324,211,212,325,213,214,215,216,326,217,218,219,220,327,328,329,330,331,332,111,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,221,89,161,222,112,223,224,357,358,359,360,361,362,363,225,226,227,364,228,229,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,162,163,164,165,166,389,390,391,392,393,394,395,230,231,396,232,397,398,399,400,233,401,402,403,404,234,405,406,407,408,409,410,411,412,235,236,413,237,238,239,240,241,414,415,242,243,416,244,417,418,419,420,245,421,422,423,424,246,425,426,427,428,167,168,429,430,431,432,433,434,435,436,169,170,171,172,173,247,248,249,437,250,251,438,252,253,254,255,174,256,439,440,441,442,114,115,443,257,258,444,445,446,92,116,447,448,117,118,449,450,451,452,453,259,260,454,455,456,457,458,175,176,261,459,262,263,460,264,461,462,463,464,465,177,466],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[266,267,268,269,467,468,179,180,270,271,272,181,273,274,275,182,121,183,107,184,185,276,277,278,279,280,186,281,282,283,284,285,286,187,188,189,190,191,192,193,287,194,195,196,197,198,288,289,265,122,199,0,1,469,200,123,290,124,2,201,43,291,292,44,45,5,46,470,202,47,6,7,471,472,473,474,475,293,294,125,126,127,128,129,130,131,132,133,134,135,136,137,138,295,203,296,108,204,205,297,298,299,109,110,300,301,302,206,303,207,304,208,139,98,140,99,141,305,142,143,144,145,146,94,147,148,149,150,151,95,152,153,100,154,155,156,157,158,101,159,160,96,306,307,308,309,310,48,49,209,50,51,52,53,476,54,477,478,55,56,57,58,479,480,59,8,61,62,9,481,63,64,65,10,66,482,11,67,68,13,70,311,312,313,314,315,210,316,317,318,319,320,321,322,323,71,324,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,211,72,73,212,325,213,214,215,216,326,217,39,40,218,219,220,74,327,328,329,330,331,332,483,484,485,486,487,488,489,490,491,111,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,119,75,76,77,120,492,78,493,494,495,496,497,498,356,221,89,161,222,112,223,224,357,358,359,360,361,362,363,225,226,227,364,228,229,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,162,163,164,165,166,389,390,391,392,393,394,395,230,231,396,232,397,398,399,400,233,401,402,403,404,234,405,406,407,408,499,500,79,501,502,409,503,504,80,81,82,410,83,411,412,505,235,236,413,237,238,239,240,241,414,415,242,243,416,244,417,418,419,420,245,421,422,423,424,246,425,426,427,428,167,168,429,430,431,432,433,434,435,436,169,170,171,172,173,247,248,249,437,250,251,438,252,253,254,255,174,256,439,440,441,442,114,115,443,257,258,444,445,446,92,116,447,448,117,118,449,450,451,452,453,259,260,454,84,506,507,455,456,85,457,458,175,176,261,459,262,263,460,264,461,86,462,463,464,465,177,466],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[266,267,268,269,179,180,270,181,273,274,275,182,121,183,107,184,185,186,187,188,189,190,191,192,193,287,194,195,196,197,198,288,289,265,122,199,0,200,123,290,124,2,201,43,291,292,44,45,5,46,202,47,6,125,126,127,128,129,130,131,132,133,134,135,136,137,138,295,203,296,108,204,205,297,298,299,109,110,300,301,206,303,207,208,98,140,99,141,142,143,144,145,146,94,148,149,150,151,95,152,153,100,154,155,156,157,158,101,159,160,96,48,49,209,50,51,52,53,54,55,56,57,58,59,61,63,64,65,66,67,68,70,210,322,323,71,324,17,20,30,36,211,72,73,212,325,213,214,215,216,217,39,40,218,219,220,74,111,348,349,350,351,352,75,76,356,221,89,161,222,112,223,224,363,225,226,227,364,228,229,162,163,164,165,166,394,395,230,231,396,232,397,398,399,400,233,401,402,403,404,234,405,406,407,408,79,81,82,83,235,236,413,237,238,239,240,241,414,415,242,243,416,244,417,418,419,420,245,421,422,423,424,246,425,426,427,428,167,168,432,433,434,435,436,169,170,171,172,173,247,248,249,250,251,438,252,253,254,255,174,256,440,441,442,114,115,257,258,444,445,446,92,116,447,448,117,118,449,450,451,452,453,175,176,261,262,263,461,86,462,463,464,465,177,466],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[508],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[119,120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[389],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[107,184,112,223,442],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[151],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[1,102,103,104,509,510,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[511,512,513],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[270,272,181,274,200,123,124,325,378,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[514,515,516],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[147],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":141,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":445,"org.easymock.tests2.UsageTest.argumentsOrdered":110,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":375,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":205,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":220,"org.easymock.tests2.DelegateToTest.testReturnException":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":463,"org.easymock.tests.MockingTest.testPartialClassMocking":81,"org.easymock.tests.MockClassControlTest.testToString":493,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":306,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":430,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":394,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":20,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":180,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":102,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":162,"org.easymock.tests2.UsageTest.wrongArguments":108,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":286,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":452,"org.easymock.samples.ExampleTest.answerVsDelegate":325,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":85,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":412,"org.easymock.tests2.UsageConstraintsTest.testNull":143,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":50,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":498,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":195,"org.easymock.tests2.CaptureTest.testPrimitive":128,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":166,"org.easymock.tests.UsageTest.moreThanOneArgument":446,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":408,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":350,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":389,"org.easymock.tests.UsageTest.argumentsOrdered":118,"org.easymock.tests.UsageVarargTest.varargIntAccepted":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":510,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":59,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":473,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":320,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":173,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":186,"org.easymock.tests.ReplayStateInvalidUsageTest.times":341,"org.easymock.tests2.DependencyTest.testClassMocking":467,"org.easymock.tests2.AnswerTest.answer":270,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":382,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":269,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":507,"org.easymock.tests2.CaptureTest.testAnd":125,"org.easymock.tests2.UsageTest.strictResetToDefault":203,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":9,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":55,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":349,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":191,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":393,"org.easymock.tests2.DelegateToTest.testDelegate":208,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":234,"org.easymock.tests.LimitationsTest.mockFinalMethod":501,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":436,"org.easymock.tests2.DependencyTest.testClassMockingSupport":468,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":259,"org.easymock.tests2.CaptureTest.testCapture1_2446744":129,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":476,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":403,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":267,"org.easymock.tests.UsageThrowableTest.throwError":235,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":335,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":456,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":502,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":352,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":38,"org.easymock.samples.PartialClassMockTest.testGetArea":74,"org.easymock.tests.MockingTest.testInterfaceMocking":410,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":336,"org.easymock.tests2.CompareToTest.testLessOrEqual":97,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":170,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":359,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":25,"org.easymock.tests2.UsageTest.niceToStrict":204,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":332,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":63,"org.easymock.tests2.MockBuilderTest.testCreateMock":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":33,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":283,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":400,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":87,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":192,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":506,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":347,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":450,"org.easymock.tests.UsageOverloadedMethodTest.overloading":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":29,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":95,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":421,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":257,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":151,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":134,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":437,"org.easymock.tests.MockClassControlTest.testEquals":497,"org.easymock.tests2.EasyMockSupportClassTest.testAll":17,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":76,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":406,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":434,"org.easymock.tests2.CaptureTest.testCaptureAll":126,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":268,"org.easymock.tests.MockNameTest.defaultName":409,"org.easymock.tests2.UsageConstraintsTest.testMatches":152,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":351,"org.easymock.samples.ExampleTest.voteForRemovals":216,"org.easymock.tests.UsageVarargTest.allKinds":174,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":442,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":435,"org.easymock.samples.BasicClassMockTest.testPrintContent":73,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":240,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":275,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":466,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":304,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":317,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":490,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":106,"org.easymock.tests2.UsageConstraintsTest.greaterThan":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":18,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":439,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":58,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":491,"org.easymock.samples.ExampleTest.voteForRemoval":213,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":479,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":289,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":508,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":457,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":474,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":53,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":86,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":295,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":189,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":15,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":462,"org.easymock.tests2.CaptureTest.testCaptureFirst":138,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":190,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":301,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":461,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":418,"org.easymock.tests2.CaptureTest.testCapture2_2446744":137,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":122,"org.easymock.tests2.UsageTest.moreThanOneArgument":296,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":383,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":255,"org.easymock.tests.GenericTest.testBridgedEquals":120,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":228,"org.easymock.tests.UsageExpectAndReturnTest.longType":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":432,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":187,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":407,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":69,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":443,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":158,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":405,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":348,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":354,"org.easymock.tests.UsageCallCountTest.tooManyCalls":229,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":419,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":285,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":239,"org.easymock.tests.MockingTest.testNiceClassMocking":505,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":45,"org.easymock.tests.MockingTest.testClassMocking":504,"org.easymock.tests2.UsageConstraintsTest.testContains":150,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":60,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":362,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":71,"org.easymock.tests2.UsageConstraintsTest.testFind":142,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":444,"org.easymock.tests.MockTypeTest.fromEasyMockClass":455,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":124,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":356,"org.easymock.tests.UsageExpectAndReturnTest.object":245,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":194,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":103,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":251,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":330,"org.easymock.tests.UsageTest.exactCallCountByLastCall":449,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":429,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":390,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":425,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":247,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":262,"org.easymock.tests.ResultTest.createThrowResultToString":513,"org.easymock.tests.MockClassControlTest.testHashCode":496,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":312,"org.easymock.tests2.EasyMockSupportTest.testVerify":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":27,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":391,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":261,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":266,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":139,"org.easymock.tests.UsageVarargTest.varargCharAccepted":250,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":483,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":388,"org.easymock.tests2.UsageTest.openCallCountByLastCall":297,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":514,"org.easymock.tests.DefaultClassInstantiatorTest.object":484,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":197,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":345,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":328,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":28,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":279,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":311,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":495,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":397,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":426,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":353,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":36,"org.easymock.tests2.UsageTest.resumeIfFailure":300,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":84,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":465,"org.easymock.tests2.StubTest.stubWithReturnValue":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":420,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":101,"org.easymock.tests2.SerializationTest.testAllMockedMethod":43,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":381,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":88,"org.easymock.samples.SupportTest.voteForRemovals":219,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":119,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":314,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":402,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":387,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":271,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":431,"org.easymock.tests.UsageExpectAndThrowTest.object":233,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":156,"org.easymock.tests2.DelegateToTest.testWrongClass":207,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":175,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":176,"org.easymock.tests.UsageStrictMockTest.range":112,"org.easymock.samples.ConstructorCalledMockTest.testTax":39,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":293,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":287,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":44,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":401,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":65,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":14,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":451,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":90,"org.easymock.tests2.CaptureTest.testCaptureNone":133,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":360,"org.easymock.tests.UsageUnorderedTest.message":111,"org.easymock.tests.UsageVerifyTest.twoReturns":115,"org.easymock.tests.UsageVarargTest.varargByteAccepted":254,"org.easymock.tests2.ThreadingTest.testThreadSafe":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":31,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":227,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":72,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":331,"org.easymock.tests2.CaptureTest.testCapture_2617107":127,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":385,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":165,"org.easymock.tests2.UsageConstraintsTest.any":148,"org.easymock.tests2.StubTest.stub":291,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":340,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":386,"org.easymock.tests.UsageExpectAndThrowTest.longType":231,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":488,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":339,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":183,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":210,"org.easymock.tests.LimitationsTest.mockNativeMethod":79,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":428,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":77,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":278,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":185,"org.easymock.tests2.NameTest.nameForMocksControl":310,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":280,"org.easymock.tests2.MockedExceptionTest.testMockedException":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":19,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":448,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":396,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":83,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":290,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":48,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":66,"org.easymock.tests.MockingTest.testNicePartialClassMocking":82,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":52,"org.easymock.tests2.CaptureTest.testCaptureLast":132,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":276,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":260,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":146,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":6,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":157,"org.easymock.tests.MockingTest.testTwoMocks":80,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":414,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":399,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":109,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":160,"org.easymock.samples.ExampleTest.removeNonExistingDocument":326,"org.easymock.tests.UsageStrictMockTest.differentMethods":223,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":282,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":337,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":313,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":486,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":265,"org.easymock.tests2.MockBuilderTest.testCreateMockString":70,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":21,"org.easymock.tests.UsageExpectAndThrowTest.floatType":230,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":16,"org.easymock.tests.ResultTest.createReturnResultToString":512,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":181,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":469,"org.easymock.tests.UsageVerifyTest.twoThrows":114,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":30,"org.easymock.tests.ResultTest.createDelegateResultToString":511,"org.easymock.samples.ExampleTest.voteAgainstRemoval":214,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":376,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":57,"org.easymock.tests.LimitationsTest.privateConstructor":500,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":4,"org.easymock.tests2.UsageConstraintsTest.testNotNull":159,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":241,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":322,"org.easymock.tests2.UsageTest.defaultResetToNice":299,"org.easymock.samples.ExampleTest.voteAgainstRemovals":212,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":377,"org.easymock.tests.UsageVarargTest.differentLength":438,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":277,"org.easymock.tests2.CallbackTest.callback":200,"org.easymock.tests2.UsageConstraintsTest.equals":305,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":477,"org.easymock.tests.UsageTest.openCallCountByLastCall":447,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":164,"org.easymock.tests.UsageCallCountTest.tooFewCalls":225,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":46,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":453,"org.easymock.tests.UsageThrowableTest.throwCheckedException":238,"org.easymock.tests.MockingTest.testStrictClassMocking":503,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":91,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":168,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":47,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":5,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":281,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":342,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":202,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":274,"org.easymock.tests2.CompareToTest.testGreateOrEqual":93,"org.easymock.tests.ObjectMethodsTest.testHashCode":329,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":509,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":199,"org.easymock.tests2.NameTest.nameForNiceMock":309,"org.easymock.tests2.DependencyTest.testInterfaceMocking":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":104,"org.easymock.samples.ExampleTest.addDocument":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":37,"org.easymock.tests2.DelegateToTest.testStubDelegate":303,"org.easymock.tests2.AnswerTest.stubAnswer":273,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":161,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":482,"org.easymock.tests.UsageVarargTest.varargLongAccepted":253,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":374,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":427,"org.easymock.tests.UsageExpectAndReturnTest.floatType":242,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":0,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":40,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":154,"org.easymock.tests.UsageThrowableTest.noUpperLimit":236,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":319,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":140,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":471,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":130,"org.easymock.tests2.SerializationTest.test":201,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":485,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":415,"org.easymock.tests2.UsageConstraintsTest.testSame":144,"org.easymock.samples.SupportTest.addDocument":218,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":470,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":22,"org.easymock.tests.GenericTest.testPackageScope":75,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":318,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":411,"org.easymock.tests2.NameTest.nameForMock":307,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":422,"org.easymock.tests2.UsageStrictMockTest.differentMethods":184,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":13,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":478,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":416,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":404,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":327,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":441,"org.easymock.tests2.MockedExceptionTest.testRealException":324,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":458,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":379,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":378,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":163,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":344,"org.easymock.tests2.NameTest.nameForStrictMock":308,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":481,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":515,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":123,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":51,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":475,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":487,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":155,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":61,"org.easymock.tests2.UsageStrictMockTest.range":107,"org.easymock.tests2.UsageConstraintsTest.lessThan":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":315,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":373,"org.easymock.tests2.CaptureTest.testCaptureRightOne":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":26,"org.easymock.tests2.UsageConstraintsTest.testOr":145,"org.easymock.tests.UsageRangeTest.combination":256,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":49,"org.easymock.tests.UsageTest.wrongArguments":116,"org.easymock.tests2.MockBuilderTest.testWithConstructor":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":23,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":78,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":366,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":489,"org.easymock.tests.UsageVarargTest.varargShortAccepted":252,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":364,"org.easymock.tests2.UsageConstraintsTest.cmpTo":149,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":272,"org.easymock.tests2.CompareToTest.testLessThan":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":368,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":298,"org.easymock.tests2.CaptureTest.testCaptureFromStub":136,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":334,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":62,"org.easymock.tests.UsageTest.unexpectedCallWithArray":92,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":89,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":226,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":12,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":424,"org.easymock.tests2.UsageConstraintsTest.constraints":99,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":222,"org.easymock.samples.ExampleTest.addAndChangeDocument":217,"org.easymock.tests.UsageStrictMockTest.testVerify":357,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":211,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":221,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":433,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":131,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":171,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":42,"org.easymock.tests.LimitationsTest.abstractClass":499,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":172,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":264,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":193,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":248}}]
