[{"transplant":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[5,6,7],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"potentialValue":"value","capture":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[9],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,5],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[23,52,53,54,55,56,57,58,59,60,61,29,62,63,64,65,66,67,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[68,69,70,71,72],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[68,72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[74],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[75,75,76,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,38,92,93,94,95,96,97,98,99,100,101,21,102,103,104,105,106,107,5,7,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,69,70,71,72,128],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[129],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:62","sourceCode":"throw new java.lang.RuntimeException(java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:33","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(boolean.boolean, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:46","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[130],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[75,76,77,131,78,79,132,133,134,135,136,137,138,139,140,141,142,80,81,35,82,83,84,85,143,86,144,145,87,88,89,90,146,91,36,37,38,39,147,148,23,149,0,52,150,151,53,54,55,56,152,153,154,155,156,157,158,159,160,161,162,163,164,8,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,24,181,57,58,182,183,25,26,184,59,60,185,27,186,187,188,189,190,191,192,193,194,195,196,197,198,92,199,93,94,200,201,95,96,97,10,98,202,11,99,100,203,101,21,22,204,102,103,104,105,205,40,106,107,206,207,208,209,210,211,212,213,28,214,215,216,217,218,219,5,6,7,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,108,235,236,109,237,238,239,240,241,242,243,244,245,110,246,247,248,249,250,111,251,252,253,254,255,41,42,43,44,45,46,256,257,258,47,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,130,283,284,285,286,287,288,289,290,291,292,9,293,294,295,296,297,298,299,300,301,302,112,113,114,303,115,304,305,306,307,308,61,29,309,1,62,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,48,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,30,63,372,64,31,32,65,66,33,116,373,374,375,376,117,377,378,379,380,381,382,383,118,119,120,121,122,123,124,125,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,126,420,421,49,422,423,424,50,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,67,34,3,4,444,445,446,447,448,449,450,451,452,453,454,455,456,457,51,458,459,460,127,68,69,70,71,72,461,462,463,464,465,466,467,468,469,470,471,128,472,129,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[0,58,59,60,61,1,372,64,65,66,500,67,3,4],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[217,218],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[424,501,502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[503],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,5],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:129","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[75,75,76,76,77,85,144,88,89,91,36,92,93,94,201,95,97,98,202,11,100,101,21,22,5,109,110,111,116,117,68,71],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:157","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass().getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[504],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:38","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(long.long, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[201],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[75,75,76,76,77,78,79,80,81,82,83,84,85,86,144,145,87,88,89,90,146,91,36,37,38,505,92,506,93,94,201,95,96,97,98,11,99,100,507,508,101,509,510,511,512,513,514,21,22,102,103,104,105,106,107,207,211,5,7,232,233,234,108,235,236,109,237,238,239,240,241,242,243,244,245,110,246,247,248,249,250,111,251,252,301,302,112,113,114,115,306,116,117,118,119,120,121,122,123,124,125,126,421,49,422,423,424,50,426,127,68,69,70,71,72,470,471,128,472],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.Capture:82","failures":[152,154,155,156,157,158,159,161,515,162,163,8],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[10,15,16,17,18,19,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[81,88,90,147,149,0,52,24,58,182,183,59,60,185,27,187,191,192,195,93,99,100,101,253,258,262,278,307,61,309,1,62,337,338,339,30,372,64,65,66,33,384,434,67,3,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:222","failures":[295,298,345,346],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":263,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":30,"org.easymock.tests2.UsageTest.argumentsOrdered":60,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":398,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":183,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":131,"org.easymock.tests2.DelegateToTest.testReturnException":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":465,"org.easymock.tests.MockingTest.testPartialClassMocking":113,"org.easymock.tests.MockClassControlTest.testToString":120,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":151,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":240,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":109,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":352,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":291,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":15,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":270,"org.easymock.tests2.UsageTest.wrongArguments":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":312,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":176,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":382,"org.easymock.samples.ExampleTest.answerVsDelegate":133,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":117,"org.easymock.tests2.UsageConstraintsTest.testNull":266,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":305,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":82,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":125,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":195,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":509,"org.easymock.tests2.CaptureTest.testPrimitive":155,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":316,"org.easymock.tests.UsageTest.moreThanOneArgument":63,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":371,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":454,"org.easymock.tests.UsageTest.argumentsOrdered":66,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":340,"org.easymock.tests.UsageVarargTest.varargIntAccepted":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":457,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":19,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":92,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":209,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":230,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":390,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":460,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":170,"org.easymock.tests.ReplayStateInvalidUsageTest.times":327,"org.easymock.tests2.DependencyTest.testClassMocking":288,"org.easymock.tests2.AnswerTest.answer":28,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":405,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":180,"org.easymock.tests2.CaptureTest.testAnd":152,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":374,"org.easymock.tests2.UsageTest.strictResetToDefault":181,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":87,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":453,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":386,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":190,"org.easymock.tests2.DelegateToTest.testDelegate":46,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":344,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":367,"org.easymock.tests.LimitationsTest.mockFinalMethod":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":468,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":351,"org.easymock.tests2.DependencyTest.testClassMockingSupport":289,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":345,"org.easymock.tests2.CaptureTest.testCapture1_2446744":156,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":143,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":365,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":178,"org.easymock.tests.UsageThrowableTest.throwError":444,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":321,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":376,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":443,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":252,"org.easymock.samples.PartialClassMockTest.testGetArea":77,"org.easymock.tests.MockingTest.testInterfaceMocking":303,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":51,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":473,"org.easymock.tests2.UsageTest.niceToStrict":182,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":241,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":388,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":95,"org.easymock.tests2.MockBuilderTest.testCreateMock":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":248,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":173,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":361,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":191,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":373,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":442,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":380,"org.easymock.tests.UsageOverloadedMethodTest.overloading":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":250,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":276,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":297,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":491,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":412,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":501,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":275,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":161,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":431,"org.easymock.tests.MockClassControlTest.testEquals":124,"org.easymock.tests2.EasyMockSupportClassTest.testAll":108,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":70,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":369,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":510,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":179,"org.easymock.tests2.CaptureTest.testCaptureAll":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":350,"org.easymock.tests.MockNameTest.defaultName":427,"org.easymock.tests2.UsageConstraintsTest.testMatches":277,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":455,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":319,"org.easymock.samples.ExampleTest.voteForRemovals":137,"org.easymock.tests.UsageVarargTest.allKinds":439,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":48,"org.easymock.samples.BasicClassMockTest.testPrintContent":79,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":450,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":469,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":227,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":425,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":20,"org.easymock.tests2.UsageConstraintsTest.greaterThan":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":235,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":385,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":90,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":426,"org.easymock.samples.ExampleTest.voteForRemoval":134,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":146,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":257,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":507,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":377,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":210,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":85,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":127,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":24,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":188,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":464,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":41,"org.easymock.tests2.CaptureTest.testCaptureFirst":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":394,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":189,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":27,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":487,"org.easymock.tests2.CaptureTest.testCapture2_2446744":164,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":47,"org.easymock.tests2.UsageTest.moreThanOneArgument":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":406,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":100,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":438,"org.easymock.tests.GenericTest.testBridgedEquals":72,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":338,"org.easymock.tests.UsageExpectAndReturnTest.longType":483,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":348,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":508,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":370,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":283,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":379,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":368,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":476,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":452,"org.easymock.tests.UsageCallCountTest.tooManyCalls":339,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":488,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":175,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":357,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":449,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":103,"org.easymock.tests.MockingTest.testNiceClassMocking":306,"org.easymock.tests.MockingTest.testClassMocking":302,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":506,"org.easymock.tests2.UsageConstraintsTest.testContains":274,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":332,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":38,"org.easymock.tests2.UsageConstraintsTest.testFind":265,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":414,"org.easymock.tests.MockTypeTest.fromEasyMockClass":375,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":293,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":307,"org.easymock.tests.UsageExpectAndReturnTest.object":490,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":86,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":174,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":194,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":433,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":16,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":418,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":503,"org.easymock.tests.UsageTest.exactCallCountByLastCall":33,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":341,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":22,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":496,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":428,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":296,"org.easymock.tests.MockClassControlTest.testHashCode":123,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":221,"org.easymock.tests2.EasyMockSupportTest.testVerify":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":243,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":342,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":441,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":177,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":219,"org.easymock.tests.UsageVarargTest.varargCharAccepted":432,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":420,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":411,"org.easymock.tests2.UsageTest.openCallCountByLastCall":25,"org.easymock.tests.DefaultClassInstantiatorTest.object":421,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":197,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":440,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":416,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":244,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":359,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":514,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":447,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":168,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":220,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":122,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":88,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":358,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":497,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":475,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":111,"org.easymock.tests2.UsageTest.resumeIfFailure":185,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":116,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":467,"org.easymock.tests2.StubTest.stubWithReturnValue":255,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":489,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":284,"org.easymock.tests2.SerializationTest.testAllMockedMethod":7,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":404,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":13,"org.easymock.samples.SupportTest.voteForRemovals":141,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":364,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":410,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":214,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":463,"org.easymock.tests.UsageExpectAndThrowTest.object":362,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":282,"org.easymock.tests2.DelegateToTest.testWrongClass":44,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":317,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":318,"org.easymock.tests.UsageStrictMockTest.range":1,"org.easymock.samples.ConstructorCalledMockTest.testTax":75,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":212,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":193,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":102,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":363,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":97,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":232,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":381,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":474,"org.easymock.tests2.CaptureTest.testCaptureNone":160,"org.easymock.tests.UsageUnorderedTest.message":67,"org.easymock.tests.UsageVerifyTest.twoReturns":4,"org.easymock.tests.UsageVarargTest.varargByteAccepted":437,"org.easymock.tests2.ThreadingTest.testThreadSafe":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":246,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":336,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":419,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":78,"org.easymock.tests2.CaptureTest.testCapture_2617107":154,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":408,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":315,"org.easymock.tests2.UsageConstraintsTest.any":272,"org.easymock.tests2.StubTest.stub":254,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":326,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":409,"org.easymock.tests.UsageExpectAndThrowTest.longType":355,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":424,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":325,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":149,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":225,"org.easymock.tests.LimitationsTest.mockNativeMethod":128,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":499,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":71,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":513,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":167,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":150,"org.easymock.tests2.NameTest.nameForMocksControl":56,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":169,"org.easymock.tests2.MockedExceptionTest.testMockedException":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":236,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":32,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":115,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":9,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":356,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":80,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":98,"org.easymock.tests.MockingTest.testNicePartialClassMocking":114,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":84,"org.easymock.tests2.CompareToTest.testNotComparable":504,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":165,"org.easymock.tests2.CaptureTest.testCaptureLast":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":14,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":346,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":107,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":269,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":130,"org.easymock.tests.MockingTest.testTwoMocks":112,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":206,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":480,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":360,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":59,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":286,"org.easymock.samples.ExampleTest.removeNonExistingDocument":138,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":172,"org.easymock.tests.UsageStrictMockTest.differentMethods":62,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":323,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":222,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":422,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":258,"org.easymock.tests2.MockBuilderTest.testCreateMockString":101,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":237,"org.easymock.tests.UsageExpectAndThrowTest.floatType":354,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":234,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":216,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":204,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":110,"org.easymock.samples.ExampleTest.voteAgainstRemoval":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":399,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":129,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":89,"org.easymock.tests.LimitationsTest.privateConstructor":471,"org.easymock.tests2.UsageConstraintsTest.testNotNull":285,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":451,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":36,"org.easymock.tests2.UsageTest.defaultResetToNice":184,"org.easymock.samples.ExampleTest.voteAgainstRemovals":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":400,"org.easymock.tests.UsageVarargTest.differentLength":434,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":166,"org.easymock.tests2.CallbackTest.callback":253,"org.easymock.tests2.UsageConstraintsTest.equals":264,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":144,"org.easymock.tests.UsageTest.openCallCountByLastCall":31,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":260,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":314,"org.easymock.tests.UsageCallCountTest.tooFewCalls":334,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":105,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":383,"org.easymock.tests.UsageThrowableTest.throwCheckedException":448,"org.easymock.tests.MockingTest.testStrictClassMocking":301,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":479,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":106,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":171,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":104,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":328,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":40,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":218,"org.easymock.tests.ObjectMethodsTest.testHashCode":417,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":18,"org.easymock.tests2.NameTest.nameForNiceMock":55,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":259,"org.easymock.tests2.DependencyTest.testInterfaceMocking":290,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":17,"org.easymock.samples.ExampleTest.addDocument":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":247,"org.easymock.tests2.DelegateToTest.testStubDelegate":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":251,"org.easymock.tests2.AnswerTest.stubAnswer":217,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":29,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":202,"org.easymock.tests.UsageVarargTest.varargLongAccepted":436,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":397,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":498,"org.easymock.tests.UsageExpectAndReturnTest.floatType":482,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":21,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":76,"org.easymock.tests.UsageThrowableTest.noUpperLimit":445,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":229,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":280,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":298,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":261,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":207,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":157,"org.easymock.tests2.SerializationTest.test":6,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":502,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":481,"org.easymock.tests2.UsageConstraintsTest.testSame":267,"org.easymock.samples.SupportTest.addDocument":140,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":205,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":238,"org.easymock.tests.GenericTest.testPackageScope":69,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":228,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":304,"org.easymock.tests2.NameTest.nameForMock":53,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":492,"org.easymock.tests2.UsageStrictMockTest.differentMethods":52,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":203,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":145,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":484,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":366,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":415,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":387,"org.easymock.tests2.MockedExceptionTest.testRealException":39,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":213,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":401,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":313,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":330,"org.easymock.tests2.NameTest.nameForStrictMock":54,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":201,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":292,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":83,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":211,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":423,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":281,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":93,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":287,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":511,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":224,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":396,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":187,"org.easymock.tests2.CaptureTest.testCaptureRightOne":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":242,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":73,"org.easymock.tests2.UsageConstraintsTest.testOr":268,"org.easymock.tests.UsageRangeTest.combination":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":81,"org.easymock.tests.UsageTest.wrongArguments":64,"org.easymock.tests2.MockBuilderTest.testWithConstructor":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":239,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":119,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":485,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":389,"org.easymock.tests.UsageVarargTest.varargShortAccepted":435,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":50,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":337,"org.easymock.tests2.UsageConstraintsTest.cmpTo":273,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":391,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":26,"org.easymock.tests2.CaptureTest.testCaptureFromStub":163,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":320,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":94,"org.easymock.tests.UsageTest.unexpectedCallWithArray":372,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":61,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":335,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":494,"org.easymock.tests2.CaptureTest.testCapture":515,"org.easymock.tests2.UsageConstraintsTest.constraints":262,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":309,"org.easymock.samples.ExampleTest.addAndChangeDocument":139,"org.easymock.tests.UsageStrictMockTest.testVerify":311,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":142,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":308,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":349,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":158,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":512,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":458,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":486,"org.easymock.tests.LimitationsTest.abstractClass":470,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":459,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":299,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":429,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":2,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":192}}]
