[{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:173","failures":[4],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:212","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[39,40,41,42,43,44],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:112","sourceCode":"if (!(org.easymock.Capture<T>.hasCaptured())) {\n    this.java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[45,46,47,48,49,50,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[52,53,54,55,56,57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"argType":"paramType","paramType":"paramType"}},{"position":"org.easymock.internal.MockBuilder:223","failures":[58],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[59,5,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[52,53,81],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[82,83],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[84,85],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[86,87,88,89,90,91,92],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[5,60,93,94,95,96,97,98,99,100,61,101,63,64,102,103,66,67,68,104,105,106,107,108,109,110,71,72,111,112,113,114,115,116,117,118,119,120,121,74,122,123,75,76,124,125,126,127,128],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[61,129],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[122],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[5,60,130,131,132,93,94,133,134,135,136,137,138,139,140,141,142,143,144,145,61,62,101,63,64,146,147,6,148,149,7,8,9,10,11,150,151,152,12,15,16,18,23,28,66,67,68,104,153,154,155,106,107,156,157,158,159,160,37,161,162,163,164,165,166,167,168,169,170,171,108,172,173,70,110,71,72,174,175,176,177,2,178,179,180,181,182,183,112,0,184,185,186,187,188,189,113,190,191,192,114,115,193,116,194,195,196,197,198,199,200,201,202,203,204,205,206,207,121,1,74,122,123,75,76,125,208,209,210,47,211,212,213,214,48,49,50,215,216,217,218,219,58,220,221,222,126,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:172","failures":[245,205],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[246,206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[247,248],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[46],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[249,175,176,177],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[250,251],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[159,160,168,169,208],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[252,253],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[111,2,178,254,179,255,0,188,210,211,215],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[59,5,60,256,257,94,133,142,143,258,61,62,63,64,149,102,65,66,259,260,67,68,104,153,155,107,170,70,71,72,178,261,181,182,188,262,121,73,74,263,264,75,76,125,208,77,78,79,80,238],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[265,266,267],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[268,130,131,132,269,147,156,157,270,271,246,245,158,272,273,274,275,276,277,278,279,171,175,177,197,198,199,200,202,203,280,117,281,204,250,205,206,118,119,120,207,219,58,220,221,222,126,224,225,226,251,227,282,127,228,128,283,233,234,91,91,92,92,236],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:305","failures":[59,5,60,130,131,132,93,284,285,286,287,288,289,143,144,258,62,63,64,290,291,292,293,294,6,149,7,8,9,10,11,150,151,295,296,297,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,102,65,259,260,104,156,298,299,158,33,159,160,37,161,300,301,162,163,302,164,303,304,305,306,165,307,308,309,310,166,311,312,313,314,167,168,4,169,170,171,108,172,70,71,72,175,176,315,316,111,2,317,178,261,254,179,180,181,182,318,183,319,320,112,248,321,0,184,185,186,187,188,262,85,189,113,190,191,192,114,115,322,193,116,194,195,197,198,199,200,201,202,203,117,204,205,206,119,207,121,1,73,122,263,264,323,124,125,208,324,325,210,47,211,212,326,48,49,50,215,51,216,38,327,328,329,217,218,219,58,220,221,222,126,223,224,225,226,227,127,228,128,229,230,232,236,237,238,239,240,242],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[268,130,131,132,147,156,157,270,246,245,158,273,330,331,171,175,177,197,198,199,200,202,203,280,332,117,281,204,250,205,206,118,119,333,120,207,219,58,220,221,222,126,224,225,226,251,227,282,127,228,128,233,234,91,91,92,92,236],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[334,335,190,116],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests2.UsageTest.argumentsOrdered":76,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":102,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":252,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":123,"org.easymock.tests2.StubTest.stubWithReturnValue":38,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":306,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":235,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":187,"org.easymock.tests2.SerializationTest.testAllMockedMethod":177,"org.easymock.tests2.DelegateToTest.testReturnException":168,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":287,"org.easymock.tests.MockingTest.testPartialClassMocking":130,"org.easymock.samples.SupportTest.voteForRemovals":232,"org.easymock.tests.MockClassControlTest.testToString":274,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":283,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":25,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":249,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":13,"org.easymock.tests.UsageExpectAndThrowTest.object":23,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":69,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":230,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":184,"org.easymock.tests2.DelegateToTest.testWrongClass":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":298,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":299,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":180,"org.easymock.tests2.UsageTest.wrongArguments":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":150,"org.easymock.samples.ConstructorCalledMockTest.testTax":91,"org.easymock.tests.UsageStrictMockTest.range":63,"org.easymock.samples.ExampleTest.answerVsDelegate":238,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":322,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":245,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":197,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":54,"org.easymock.tests2.UsageConstraintsTest.testNull":178,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":24,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":279,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":205,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":116,"org.easymock.tests2.CaptureTest.testPrimitive":212,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":295,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":67,"org.easymock.tests.UsageTest.moreThanOneArgument":65,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":32,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":223,"org.easymock.tests2.CaptureTest.testCaptureNone":49,"org.easymock.tests.UsageUnorderedTest.message":94,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":98,"org.easymock.tests.UsageVerifyTest.twoReturns":60,"org.easymock.tests.UsageVarargTest.varargByteAccepted":140,"org.easymock.tests2.ThreadingTest.testThreadSafe":327,"org.easymock.tests.UsageTest.argumentsOrdered":68,"org.easymock.tests.UsageVarargTest.varargIntAccepted":135,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":155,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":233,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":290,"org.easymock.tests2.CaptureTest.testCapture_2617107":211,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":280,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":12,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":250,"org.easymock.tests2.UsageConstraintsTest.any":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":294,"org.easymock.tests.UsageExpectAndThrowTest.longType":16,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":82,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":110,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":167,"org.easymock.tests2.SerializationTest.testClass":175,"org.easymock.tests.LimitationsTest.mockNativeMethod":158,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":314,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":270,"org.easymock.tests2.AnswerTest.answer":208,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":255,"org.easymock.tests2.CaptureTest.testAnd":210,"org.easymock.tests2.UsageTest.strictResetToDefault":1,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":282,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":174,"org.easymock.tests2.NameTest.nameForMocksControl":80,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":192,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":260,"org.easymock.tests2.DelegateToTest.testDelegate":170,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":17,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":132,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":222,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":206,"org.easymock.tests.MockingTest.testNicePartialClassMocking":131,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":28,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":226,"org.easymock.tests2.CompareToTest.testNotComparable":3,"org.easymock.tests2.CaptureTest.testCaptureLast":48,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":33,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":297,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":203,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":179,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":185,"org.easymock.tests.MockingTest.testTwoMocks":268,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":296,"org.easymock.tests2.CaptureTest.testCapture1_2446744":326,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":26,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":21,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":75,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":262,"org.easymock.tests.UsageThrowableTest.throwError":6,"org.easymock.tests.UsageStrictMockTest.differentMethods":64,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":41,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":329,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":99,"org.easymock.tests2.MockBuilderTest.testCreateMockString":120,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":272,"org.easymock.tests.UsageExpectAndThrowTest.floatType":15,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":112,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":209,"org.easymock.tests.UsageVerifyTest.twoThrows":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":220,"org.easymock.samples.PartialClassMockTest.testGetArea":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":291,"org.easymock.samples.ExampleTest.voteAgainstRemoval":240,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":265,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":228,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":269,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":14,"org.easymock.tests2.UsageTest.niceToStrict":122,"org.easymock.tests2.UsageConstraintsTest.testNotNull":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":11,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":81,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":204,"org.easymock.tests2.UsageTest.defaultResetToNice":323,"org.easymock.tests2.MockBuilderTest.testCreateMock":118,"org.easymock.samples.ExampleTest.voteAgainstRemovals":237,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":166,"org.easymock.tests.UsageVarargTest.differentLength":97,"org.easymock.tests2.CallbackTest.callback":108,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":90,"org.easymock.tests.UsageTest.openCallCountByLastCall":259,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":22,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":129,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":114,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":315,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":152,"org.easymock.tests.UsageCallCountTest.tooFewCalls":153,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":55,"org.easymock.tests.UsageOverloadedMethodTest.overloading":144,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":319,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":37,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":307,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":200,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":143,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":183,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":50,"org.easymock.tests.UsageThrowableTest.throwCheckedException":8,"org.easymock.tests.MockClassControlTest.testEquals":278,"org.easymock.tests2.EasyMockSupportClassTest.testAll":219,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":157,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":30,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":330,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":88,"org.easymock.tests2.CaptureTest.testCaptureAll":47,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":289,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":202,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":199,"org.easymock.tests2.UsageConstraintsTest.testMatches":320,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":201,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":325,"org.easymock.samples.ExampleTest.voteForRemovals":242,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":218,"org.easymock.tests2.NameTest.nameForNiceMock":79,"org.easymock.tests.UsageVarargTest.allKinds":142,"org.easymock.tests2.DependencyTest.testInterfaceMocking":229,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":59,"org.easymock.samples.BasicClassMockTest.testPrintContent":234,"org.easymock.samples.ExampleTest.addDocument":241,"org.easymock.tests2.DelegateToTest.testStubDelegate":4,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":10,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":109,"org.easymock.tests2.AnswerTest.stubAnswer":324,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":62,"org.easymock.tests2.UsageConstraintsTest.greaterThan":248,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":284,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":128,"org.easymock.tests.UsageVarargTest.varargLongAccepted":139,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":146,"org.easymock.samples.ExampleTest.voteForRemoval":239,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":44,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":328,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":313,"org.easymock.tests.UsageExpectAndReturnTest.floatType":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":251,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":171,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":92,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":321,"org.easymock.tests.UsageThrowableTest.noUpperLimit":148,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":316,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":121,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":147,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":213,"org.easymock.tests2.SerializationTest.test":176,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":83,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":190,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":301,"org.easymock.tests2.UsageConstraintsTest.testSame":261,"org.easymock.samples.SupportTest.addDocument":231,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":253,"org.easymock.tests2.CaptureTest.testCaptureFirst":216,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":191,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":125,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":304,"org.easymock.tests.GenericTest.testPackageScope":156,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":217,"org.easymock.tests2.UsageTest.moreThanOneArgument":73,"org.easymock.tests2.CaptureTest.testCapture2_2446744":51,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":119,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":141,"org.easymock.tests.GenericTest.testBridgedEquals":271,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":56,"org.easymock.tests2.NameTest.nameForMock":77,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":106,"org.easymock.tests.UsageExpectAndReturnTest.longType":163,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":189,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":333,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":308,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":31,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":266,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":186,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":89,"org.easymock.tests2.UsageStrictMockTest.differentMethods":72,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":29,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":302,"org.easymock.tests.UsageCallCountTest.tooManyCalls":107,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":27,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":334,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":286,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":305,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":70,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":9,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":151,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":198,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":332,"org.easymock.tests2.UsageConstraintsTest.testContains":318,"org.easymock.tests2.NameTest.nameForStrictMock":78,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":207,"org.easymock.tests2.UsageConstraintsTest.testFind":317,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":53,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":225,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":100,"org.easymock.tests.UsageExpectAndReturnTest.object":165,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":42,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":227,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":117,"org.easymock.tests2.UsageStrictMockTest.range":71,"org.easymock.tests2.UsageConstraintsTest.lessThan":85,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":193,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":137,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":335,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":57,"org.easymock.tests.UsageTest.exactCallCountByLastCall":104,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":288,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":113,"org.easymock.tests2.CaptureTest.testCaptureRightOne":215,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":256,"org.easymock.tests2.UsageConstraintsTest.testOr":254,"org.easymock.tests.UsageRangeTest.combination":93,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":311,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":126,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":133,"org.easymock.tests.UsageTest.wrongArguments":66,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":160,"org.easymock.tests2.MockBuilderTest.testWithConstructor":86,"org.easymock.tests.MockClassControlTest.testHashCode":277,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":273,"org.easymock.tests2.EasyMockSupportTest.testVerify":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":164,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":309,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":257,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":35,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":43,"org.easymock.tests.UsageVarargTest.varargShortAccepted":138,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":159,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":95,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":105,"org.easymock.tests2.UsageConstraintsTest.cmpTo":182,"org.easymock.tests.UsageVarargTest.varargCharAccepted":136,"org.easymock.tests2.CaptureTest.testCaptureMultiple":46,"org.easymock.tests2.CompareToTest.testLessThan":84,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":173,"org.easymock.tests2.UsageTest.openCallCountByLastCall":263,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":264,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":195,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":52,"org.easymock.tests.DefaultClassInstantiatorTest.object":39,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":34,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":281,"org.easymock.tests.UsageTest.unexpectedCallWithArray":103,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":96,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":20,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":154,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":87,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":310,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":276,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":101,"org.easymock.tests2.UsageConstraintsTest.constraints":111,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":127,"org.easymock.samples.ExampleTest.addAndChangeDocument":243,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":19,"org.easymock.tests.CapturesMatcherTest.test":45,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":312,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":244,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":221,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":145,"org.easymock.tests2.CompareToTest.testGreateThan":247,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":214,"org.easymock.tests2.UsageTest.resumeIfFailure":124,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":292,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":303,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":293,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":115,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":134}}]
