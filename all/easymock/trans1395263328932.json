[{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:175","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Constructor<?>.getModifiers())) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[7,8,9,10,11,12,13,0,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,3,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,257,258,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,14,17,18,446,97,104,111,112,3,218,266,272,273,422],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[12,16,111,135,263,270],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[14,17,18,99,105,108,111,133,134,136,137,138,139,140,214,216,266,267,268,272,273,308,321,333,351,376,377,378,379,447,448,381,418,420,426,442],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[366],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[174,178],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[267],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"transplant":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[315],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[173,174,178],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[445],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[246,248,352,353,354,355,356,357,358,359,360,361,362,363,406,407,408,409,410,411,412,413,414,415,416,417],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[12,0,14,17,18,19,449,446,58,71,72,73,87,104,111,112,214,3,217,218,219,450,451,263,266,267,268,272,273,274,275,276,282,452,453,286,296,298,302,318,351,376,379,447,381,418,421,422,423],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[12,15,16,19,110,112,216,263,269,270,275,329,420],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[454,455],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[177,456,457],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,94,108,111,133,136,137,138,139,140,155,183,426],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[167],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[12,0,14,17,18,19,446,58,97,104,111,112,214,3,217,218,263,266,267,268,272,273,275,286,296,298,302,318,351,376,379,447,381,418,421,422],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:88","sourceCode":"if (org.easymock.internal.Result != null) {\n    return org.easymock.internal.Result;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:41","sourceCode":"return org.easymock.internal.Result","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[311],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[279,291],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[454,24,64,79,80,81,83,147,148,149,159,234,247,257,257,258,258,259,260,458,459,276,460,278,279,280,455,282,452,461,453,285,286,288,289,290,291,292,295,296,297,298,341,462,463,464,370,372,373,391,393,400,403,465,466,428,429,431,467],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[309],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:37","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(int.int, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[468,469,470,471,472,473,6,474,374],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[0,14,17,18,446,104,111,112,3,218,266,272,273,422],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[146,150],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[13,0,14,17,18,1,2,475,3,4,476,5,477,265,266,272,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.Range:44","failures":[7,8,9,10,11,12,13,0,14,15,16,17,18,19,20,21,22,454,478,479,23,480,24,481,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,482,173,174,175,176,177,178,483,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,3,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,451,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,458,484,276,460,485,277,278,279,280,468,455,486,281,282,452,487,453,488,489,283,284,285,286,287,288,289,290,291,490,292,293,294,295,296,297,298,299,491,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,492,375,376,377,493,378,379,447,380,448,381,382,383,384,385,494,495,496,497,386,498,499,500,387,388,389,390,501,502,391,503,392,393,504,394,395,505,506,396,397,398,399,400,507,401,508,509,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,465,466,428,429,510,430,431,467,511,432,433,434,435,436,437,438,439,440,441,442,443,444,445],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[186,330,333,334],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[512,93,250,329,332,333,343,345,365,366,367,369,432,433,434,435,436,437,438,439,440,441,442,443,444,445],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1080","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[505],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[321,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[101],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[321],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":303,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":12,"org.easymock.tests2.UsageTest.argumentsOrdered":273,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":382,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":190,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":268,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":248,"org.easymock.tests2.DelegateToTest.testReturnException":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":152,"org.easymock.tests.MockingTest.testPartialClassMocking":80,"org.easymock.tests.MockClassControlTest.testToString":235,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":385,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":21,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":505,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":393,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":32,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":284,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":470,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":310,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":105,"org.easymock.tests2.UsageTest.wrongArguments":266,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":417,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":206,"org.easymock.samples.ExampleTest.answerVsDelegate":250,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":24,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":85,"org.easymock.tests2.UsageConstraintsTest.testNull":306,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":288,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":240,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":381,"org.easymock.tests2.CaptureTest.testPrimitive":435,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":109,"org.easymock.tests.UsageTest.moreThanOneArgument":13,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":51,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":9,"org.easymock.tests.UsageTest.argumentsOrdered":18,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":228,"org.easymock.tests.UsageVarargTest.varargIntAccepted":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":195,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":241,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":458,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":6,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":499,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":362,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":245,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":411,"org.easymock.tests.ReplayStateInvalidUsageTest.times":169,"org.easymock.tests2.DependencyTest.testClassMocking":488,"org.easymock.tests2.AnswerTest.answer":329,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":197,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":338,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":479,"org.easymock.tests2.CaptureTest.testAnd":432,"org.easymock.tests2.UsageTest.strictResetToDefault":264,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":8,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":378,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":232,"org.easymock.tests2.DelegateToTest.testDelegate":369,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":47,"org.easymock.tests.LimitationsTest.mockFinalMethod":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":145,"org.easymock.tests2.DependencyTest.testClassMockingSupport":489,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":101,"org.easymock.tests2.CaptureTest.testCapture1_2446744":436,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":490,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":45,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":336,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":163,"org.easymock.tests.UsageThrowableTest.throwError":133,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":480,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":451,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":405,"org.easymock.samples.PartialClassMockTest.testGetArea":247,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":164,"org.easymock.tests.MockingTest.testInterfaceMocking":82,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":242,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":506,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":33,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":213,"org.easymock.tests2.UsageTest.niceToStrict":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":180,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":278,"org.easymock.tests2.MockBuilderTest.testCreateMock":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":508,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":414,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":41,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":379,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":478,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":31,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":65,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":204,"org.easymock.tests.UsageOverloadedMethodTest.overloading":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":399,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":94,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":316,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":124,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":98,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":456,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":315,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":441,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":55,"org.easymock.tests2.EasyMockSupportClassTest.testAll":391,"org.easymock.tests.MockClassControlTest.testEquals":239,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":148,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":476,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":49,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":462,"org.easymock.tests2.CaptureTest.testCaptureAll":433,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":143,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":337,"org.easymock.tests.MockNameTest.defaultName":74,"org.easymock.tests2.UsageConstraintsTest.testMatches":317,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":161,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":10,"org.easymock.samples.ExampleTest.voteForRemovals":254,"org.easymock.tests.UsageVarargTest.allKinds":63,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":144,"org.easymock.samples.BasicClassMockTest.testPrintContent":260,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":139,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":359,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":368,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":483,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":474,"org.easymock.tests2.UsageConstraintsTest.greaterThan":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":503,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":298,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":179,"org.easymock.samples.ExampleTest.voteForRemoval":251,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":299,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":347,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":481,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":500,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":291,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":64,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":263,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":377,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":501,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":151,"org.easymock.tests2.CaptureTest.testCaptureFirst":445,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":186,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":493,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":275,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":120,"org.easymock.tests2.CaptureTest.testCapture2_2446744":444,"org.easymock.tests2.UsageTest.moreThanOneArgument":265,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":349,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":198,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":62,"org.easymock.tests.GenericTest.testBridgedEquals":150,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":72,"org.easymock.tests.UsageExpectAndReturnTest.longType":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":141,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":375,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":461,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":50,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":227,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":324,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":48,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":7,"org.easymock.tests.UsageCallCountTest.tooManyCalls":73,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":509,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":416,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":37,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":138,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":466,"org.easymock.tests.MockingTest.testNiceClassMocking":86,"org.easymock.tests.MockingTest.testClassMocking":78,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":459,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":66,"org.easymock.tests2.UsageConstraintsTest.testContains":314,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":341,"org.easymock.tests2.UsageConstraintsTest.testFind":305,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":100,"org.easymock.tests.MockTypeTest.fromEasyMockClass":23,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":214,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":345,"org.easymock.tests.UsageExpectAndReturnTest.object":123,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":292,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":448,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":471,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":57,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":211,"org.easymock.tests.UsageTest.exactCallCountByLastCall":19,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":185,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":20,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":229,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":475,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":374,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":129,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":52,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":93,"org.easymock.tests.MockClassControlTest.testHashCode":238,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":353,"org.easymock.tests2.EasyMockSupportTest.testVerify":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":397,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":230,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":30,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":91,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":449,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":335,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":427,"org.easymock.tests.UsageVarargTest.varargCharAccepted":56,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":482,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":203,"org.easymock.tests2.UsageTest.openCallCountByLastCall":269,"org.easymock.tests.DefaultClassInstantiatorTest.object":173,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":383,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":29,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":209,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":398,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":39,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":136,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":409,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":352,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":237,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":296,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":38,"org.easymock.tests.CapturesMatcherTest.test":512,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":130,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":403,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":236,"org.easymock.tests2.UsageTest.resumeIfFailure":274,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":454,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":498,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":154,"org.easymock.tests2.StubTest.stubWithReturnValue":426,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":468,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":122,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":325,"org.easymock.tests2.SerializationTest.testAllMockedMethod":372,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":196,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.samples.SupportTest.voteForRemovals":262,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":146,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":355,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":44,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":202,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":330,"org.easymock.tests.UsageExpectAndThrowTest.object":42,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":22,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":322,"org.easymock.tests2.DelegateToTest.testWrongClass":367,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":222,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":223,"org.easymock.tests.UsageStrictMockTest.range":218,"org.easymock.samples.ConstructorCalledMockTest.testTax":257,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":388,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":380,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":465,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":43,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":390,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":171,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":205,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":1,"org.easymock.tests2.CaptureTest.testCaptureNone":440,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":226,"org.easymock.tests.UsageUnorderedTest.message":104,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":450,"org.easymock.tests.UsageVerifyTest.twoReturns":112,"org.easymock.tests.UsageVarargTest.varargByteAccepted":61,"org.easymock.tests2.ThreadingTest.testThreadSafe":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":507,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":70,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":212,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":259,"org.easymock.tests2.CaptureTest.testCapture_2617107":434,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":477,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":103,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":200,"org.easymock.tests2.UsageConstraintsTest.any":312,"org.easymock.tests2.StubTest.stub":425,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":168,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":153,"org.easymock.tests.UsageExpectAndThrowTest.longType":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":201,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":177,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":167,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":421,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":357,"org.easymock.tests2.SerializationTest.testClass":370,"org.easymock.tests.LimitationsTest.mockNativeMethod":159,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":132,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":464,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":408,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":424,"org.easymock.tests2.NameTest.nameForMocksControl":497,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":410,"org.easymock.tests2.MockedExceptionTest.testMockedException":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":392,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":36,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":83,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":344,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":285,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":455,"org.easymock.tests.MockingTest.testNicePartialClassMocking":81,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":290,"org.easymock.tests2.CaptureTest.testCaptureLast":439,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":406,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":102,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":467,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":309,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":323,"org.easymock.tests.MockingTest.testTwoMocks":79,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":511,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":113,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":40,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":272,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":327,"org.easymock.samples.ExampleTest.removeNonExistingDocument":255,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":413,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":165,"org.easymock.tests.UsageStrictMockTest.differentMethods":219,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":354,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":175,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":348,"org.easymock.tests2.MockBuilderTest.testCreateMockString":453,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":504,"org.easymock.tests.UsageExpectAndThrowTest.floatType":34,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":502,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":332,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":492,"org.easymock.tests.UsageVerifyTest.twoThrows":111,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":400,"org.easymock.samples.ExampleTest.voteAgainstRemoval":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":191,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":224,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":297,"org.easymock.tests.LimitationsTest.privateConstructor":158,"org.easymock.tests2.UsageConstraintsTest.testNotNull":326,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":140,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":339,"org.easymock.tests2.UsageTest.defaultResetToNice":271,"org.easymock.samples.ExampleTest.voteAgainstRemovals":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":192,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":407,"org.easymock.tests.UsageVarargTest.differentLength":58,"org.easymock.tests2.CallbackTest.callback":351,"org.easymock.tests2.UsageConstraintsTest.equals":304,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":293,"org.easymock.tests.UsageTest.openCallCountByLastCall":15,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":107,"org.easymock.tests.UsageCallCountTest.tooFewCalls":68,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":429,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":207,"org.easymock.tests.UsageThrowableTest.throwCheckedException":137,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":2,"org.easymock.tests.MockingTest.testStrictClassMocking":77,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":431,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":76,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":428,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":412,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":170,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":430,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":334,"org.easymock.tests.ObjectMethodsTest.testHashCode":210,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":473,"org.easymock.tests2.NameTest.nameForNiceMock":496,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":350,"org.easymock.tests2.DependencyTest.testInterfaceMocking":283,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":472,"org.easymock.samples.ExampleTest.addDocument":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":404,"org.easymock.tests2.DelegateToTest.testStubDelegate":366,"org.easymock.tests2.AnswerTest.stubAnswer":333,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":216,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":486,"org.easymock.tests.UsageVarargTest.varargLongAccepted":60,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":189,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":131,"org.easymock.tests.UsageExpectAndReturnTest.floatType":115,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":373,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":258,"org.easymock.tests.UsageThrowableTest.noUpperLimit":134,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":95,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":320,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":361,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":301,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":386,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":437,"org.easymock.tests2.SerializationTest.test":371,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":457,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":174,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":114,"org.easymock.tests2.UsageConstraintsTest.testSame":307,"org.easymock.samples.SupportTest.addDocument":261,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":510,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":394,"org.easymock.tests.GenericTest.testPackageScope":147,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":184,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":360,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":84,"org.easymock.tests2.NameTest.nameForMock":494,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":125,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":487,"org.easymock.tests2.UsageStrictMockTest.differentMethods":423,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":294,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":117,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":46,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":208,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":90,"org.easymock.tests2.MockedExceptionTest.testRealException":342,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":25,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":194,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":469,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":193,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":172,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":106,"org.easymock.tests2.NameTest.nameForStrictMock":495,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":277,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":343,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":289,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":387,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":176,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":321,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":276,"org.easymock.tests2.UsageStrictMockTest.range":422,"org.easymock.tests2.UsageConstraintsTest.lessThan":328,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":376,"org.easymock.tests2.CaptureTest.testCaptureRightOne":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":396,"org.easymock.tests2.UsageConstraintsTest.testOr":308,"org.easymock.tests.UsageRangeTest.combination":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":286,"org.easymock.tests.UsageTest.wrongArguments":14,"org.easymock.tests2.MockBuilderTest.testWithConstructor":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":395,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":181,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":126,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":178,"org.easymock.tests.UsageVarargTest.varargShortAccepted":59,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":71,"org.easymock.tests2.UsageConstraintsTest.cmpTo":313,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":183,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":270,"org.easymock.tests2.CaptureTest.testCaptureFromStub":443,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":162,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":460,"org.easymock.tests.UsageTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":69,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":127,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":217,"org.easymock.tests2.UsageConstraintsTest.constraints":302,"org.easymock.samples.ExampleTest.addAndChangeDocument":256,"org.easymock.tests.UsageStrictMockTest.testVerify":221,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":246,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":142,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":438,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":463,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":243,"org.easymock.tests.LimitationsTest.abstractClass":157,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":119,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":96,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":447,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":53}}]
