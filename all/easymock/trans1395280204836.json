[{"position":"org.easymock.internal.LastControl:92","failures":[0,1,2,3,4,5,6,7,8],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[11,12],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[12,13,14,15,16],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[17,18,19,20,21,22],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1726","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:71","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[26],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[43,0,44,45,46,28,47,48,29,30,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,31,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,34,35,36,37,99,100,38,39,101,102,103,104,105,106,107,108,109,110,40,111,41,112,113,42,114,115,116,117,118,119,120,121],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[122,123,124,125,34,41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[126,126,127,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,43,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,25,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,0,1,179,180,181,182,2,3,183,4,184,185,186,187,188,189,44,190,191,5,192,193,194,195,196,197,11,198,199,200,201,202,203,204,205,206,207,6,208,7,209,210,211,212,213,214,215,8,216,217,218,219,220,221,222,223,224,225,226,227,228,229,45,230,46,28,47,48,231,232,233,29,30,49,50,234,51,235,52,236,53,54,237,55,56,238,239,240,241,57,58,59,242,243,244,60,61,245,62,63,64,246,65,247,248,249,250,251,252,253,254,66,255,256,67,257,68,258,69,70,259,260,71,72,261,262,263,264,265,266,267,73,74,268,269,270,271,272,75,76,77,78,273,274,275,276,277,278,279,79,80,280,281,282,283,284,285,286,287,288,81,289,82,83,31,84,85,290,291,292,293,294,295,86,296,297,17,18,19,20,298,21,22,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,87,88,329,330,89,331,332,90,91,92,333,334,335,336,337,93,94,95,338,339,340,9,341,342,343,10,344,345,346,347,348,349,350,351,352,96,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,97,98,34,35,379,380,36,37,99,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,100,38,39,404,405,406,101,102,103,104,105,106,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,107,423,424,108,109,110,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,27,452,453,454,455,456,457,458,459,460,40,111,461,41,112,113,42,114,115,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,116,479,117,118,480,481,119,120,121],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[126,127,482,273],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[425,455],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[483,484,485,486,487,488,489,490,491,274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[128,129,130,131,132,133,135,138,139,141,142,43,144,174,176,177,178,0,1,180,181,182,2,3,183,4,184,185,186,187,188,189,44,190,191,5,192,193,194,195,196,197,11,198,199,200,201,202,203,204,205,206,207,6,208,7,209,210,211,212,213,214,215,8,216,217,218,219,220,221,222,223,224,225,226,227,228,229,45,230,46,28,47,48,231,232,233,29,30,49,50,234,51,235,52,236,53,54,237,55,56,238,239,240,247,260,261,262,73,74,492,493,75,76,77,78,79,80,285,286,287,288,81,289,82,83,31,84,85,290,291,292,293,294,295,86,296,297,17,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,87,88,330,89,331,332,90,92,333,334,335,345,347,348,349,351,352,96,353,354,355,356,357,358,359,360,361,374,375,376,377,378,97,98,34,35,379,380,36,37,99,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,100,38,39,404,405,406,102,103,105,106,407,408,409,410,411,412,413,414,415,416,417,422,107,423,424,108,109,110,425,426,427,428,429,446,27,453,454,455,456,457,458,459,460,40,111,461,41,112,113,42,114,115,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,116,479,117,118,480,481,119,120,121],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[11,12],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[177,190,195,16],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[101],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[11,12],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[38,414,415],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:210","failures":[126,126,127,127,143,494,245,253,273,274],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[177,0,16],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[143,144,145,495],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[28,29,30,31,33,34,35,36,37,38,39,110,40,41,42],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[143,144,145,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[143,144,145,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests2.UsageTest.argumentsOrdered":30,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":440,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":48,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":139,"org.easymock.tests2.DelegateToTest.testReturnException":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":464,"org.easymock.tests.MockingTest.testPartialClassMocking":302,"org.easymock.tests.MockClassControlTest.testToString":93,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":160,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":156,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":381,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":262,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":485,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":183,"org.easymock.tests2.UsageTest.wrongArguments":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":374,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":272,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":294,"org.easymock.samples.ExampleTest.answerVsDelegate":129,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":104,"org.easymock.tests2.UsageConstraintsTest.testNull":181,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":307,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":248,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":56,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":340,"org.easymock.tests2.CaptureTest.testPrimitive":209,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":378,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":400,"org.easymock.tests.UsageTest.moreThanOneArgument":98,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":476,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":469,"org.easymock.tests.UsageTest.argumentsOrdered":37,"org.easymock.tests.UsageVarargTest.varargIntAccepted":349,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":445,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":425,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":490,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":57,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":283,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":432,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":429,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":73,"org.easymock.tests.ReplayStateInvalidUsageTest.times":370,"org.easymock.tests2.AnswerTest.answer":198,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":447,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":207,"org.easymock.tests2.CaptureTest.testAnd":6,"org.easymock.tests2.UsageTest.strictResetToDefault":230,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":66,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":236,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":334,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":473,"org.easymock.tests2.DelegateToTest.testDelegate":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":396,"org.easymock.tests.LimitationsTest.mockFinalMethod":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":467,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":457,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":87,"org.easymock.tests2.CaptureTest.testCapture1_2446744":210,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":394,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":205,"org.easymock.tests.UsageThrowableTest.throwError":410,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":364,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":103,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":478,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":173,"org.easymock.samples.PartialClassMockTest.testGetArea":140,"org.easymock.tests.MockingTest.testInterfaceMocking":304,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":365,"org.easymock.tests2.CompareToTest.testLessOrEqual":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":426,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":161,"org.easymock.tests2.UsageTest.niceToStrict":47,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":91,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":243,"org.easymock.tests2.MockBuilderTest.testCreateMock":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":168,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":269,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":390,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":122,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":53,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":460,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":116,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":292,"org.easymock.tests.UsageOverloadedMethodTest.overloading":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":164,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":424,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":188,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":401,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":320,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":187,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":26,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":215,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":350,"org.easymock.tests2.EasyMockSupportClassTest.testAll":153,"org.easymock.tests.MockClassControlTest.testEquals":339,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":342,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":398,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":455,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":206,"org.easymock.tests2.CaptureTest.testCaptureAll":208,"org.easymock.tests.MockNameTest.defaultName":86,"org.easymock.tests2.UsageConstraintsTest.testMatches":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":477,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":362,"org.easymock.samples.ExampleTest.voteForRemovals":133,"org.easymock.tests.UsageVarargTest.allKinds":357,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":100,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":456,"org.easymock.samples.BasicClassMockTest.testPrintContent":137,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":416,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":468,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":228,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":491,"org.easymock.tests2.UsageConstraintsTest.greaterThan":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":154,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":333,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":67,"org.easymock.samples.ExampleTest.voteForRemoval":130,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":22,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":220,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":257,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":105,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":251,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":45,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":361,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":437,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":235,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":463,"org.easymock.tests2.CaptureTest.testCaptureFirst":218,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":436,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":52,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":50,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":110,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":316,"org.easymock.tests2.UsageTest.moreThanOneArgument":46,"org.easymock.tests2.CaptureTest.testCapture2_2446744":217,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":448,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":63,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":356,"org.easymock.tests.GenericTest.testBridgedEquals":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":120,"org.easymock.tests.UsageExpectAndReturnTest.longType":312,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":453,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":234,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":399,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":194,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":360,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":397,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":474,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":408,"org.easymock.tests.UsageCallCountTest.tooManyCalls":121,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":169,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":317,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":271,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":386,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":415,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":69,"org.easymock.tests.MockingTest.testNiceClassMocking":308,"org.easymock.tests.MockingTest.testClassMocking":300,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":479,"org.easymock.tests2.UsageConstraintsTest.testContains":186,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":287,"org.easymock.tests2.UsageConstraintsTest.testFind":180,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":403,"org.easymock.tests.MockTypeTest.fromEasyMockClass":102,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":176,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":111,"org.easymock.tests.UsageExpectAndReturnTest.object":319,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":55,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":486,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":352,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":332,"org.easymock.tests.UsageTest.exactCallCountByLastCall":99,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":470,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":344,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":274,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":325,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":347,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":423,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":276,"org.easymock.tests.MockClassControlTest.testHashCode":338,"org.easymock.tests2.EasyMockSupportTest.testVerify":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":162,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":471,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":459,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":422,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":204,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":241,"org.easymock.tests.UsageVarargTest.varargCharAccepted":351,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":492,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":452,"org.easymock.tests2.UsageTest.openCallCountByLastCall":231,"org.easymock.tests.DefaultClassInstantiatorTest.object":17,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":239,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":458,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":89,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":33,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":163,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":413,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":266,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":275,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":95,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":255,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":387,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":326,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":171,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":94,"org.easymock.tests2.UsageTest.resumeIfFailure":49,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":466,"org.easymock.tests2.StubTest.stubWithReturnValue":291,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":483,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":195,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":318,"org.easymock.tests2.SerializationTest.testAllMockedMethod":145,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":446,"org.easymock.samples.SupportTest.voteForRemovals":142,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":123,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":278,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":393,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":495,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":27,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":199,"org.easymock.tests.UsageExpectAndThrowTest.object":391,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":346,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":192,"org.easymock.tests2.DelegateToTest.testWrongClass":227,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":358,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":359,"org.easymock.samples.ConstructorCalledMockTest.testTax":126,"org.easymock.tests.UsageStrictMockTest.range":42,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":148,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":237,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":258,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":392,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":150,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":36,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":293,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":124,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":406,"org.easymock.tests2.CaptureTest.testCaptureNone":214,"org.easymock.tests.UsageUnorderedTest.message":40,"org.easymock.tests.UsageVerifyTest.twoReturns":39,"org.easymock.tests.UsageVarargTest.varargByteAccepted":355,"org.easymock.tests2.ThreadingTest.testThreadSafe":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":166,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":481,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":136,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":90,"org.easymock.tests2.CaptureTest.testCapture_2617107":7,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":450,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":377,"org.easymock.tests2.UsageConstraintsTest.any":184,"org.easymock.tests2.StubTest.stub":290,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":369,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":409,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndThrowTest.longType":384,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":298,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":368,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":83,"org.easymock.tests2.SerializationTest.testClass":143,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":79,"org.easymock.tests.LimitationsTest.mockNativeMethod":420,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":328,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":343,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":265,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":85,"org.easymock.tests2.NameTest.nameForMocksControl":78,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":267,"org.easymock.tests2.MockedExceptionTest.testMockedException":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":155,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":380,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":385,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":175,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":305,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":246,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":61,"org.easymock.tests.MockingTest.testNicePartialClassMocking":303,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":250,"org.easymock.tests2.CompareToTest.testCompareEqual":14,"org.easymock.tests2.CaptureTest.testCaptureLast":213,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":263,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":88,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":3,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":72,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":193,"org.easymock.tests.MockingTest.testTwoMocks":301,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":309,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":389,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":197,"org.easymock.samples.ExampleTest.removeNonExistingDocument":134,"org.easymock.tests.UsageStrictMockTest.differentMethods":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":268,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":366,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":277,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":19,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":221,"org.easymock.tests2.MockBuilderTest.testCreateMockString":64,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":157,"org.easymock.tests.UsageExpectAndThrowTest.floatType":383,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":152,"org.easymock.tests.ResultTest.createReturnResultToString":23,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":201,"org.easymock.tests.UsageVerifyTest.twoThrows":38,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":165,"org.easymock.samples.ExampleTest.voteAgainstRemoval":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":441,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":404,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":256,"org.easymock.tests.LimitationsTest.privateConstructor":419,"org.easymock.tests2.UsageConstraintsTest.testNotNull":196,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":417,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":285,"org.easymock.tests2.UsageTest.defaultResetToNice":233,"org.easymock.samples.ExampleTest.voteAgainstRemovals":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":324,"org.easymock.tests.UsageVarargTest.differentLength":96,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":264,"org.easymock.tests2.CallbackTest.callback":43,"org.easymock.tests2.UsageConstraintsTest.equals":179,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":253,"org.easymock.tests.UsageTest.openCallCountByLastCall":379,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":177,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":376,"org.easymock.tests.UsageCallCountTest.tooFewCalls":118,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":259,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":295,"org.easymock.tests.UsageThrowableTest.throwCheckedException":414,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":125,"org.easymock.tests.MockingTest.testStrictClassMocking":299,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":71,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":297,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":74,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":371,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":260,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":203,"org.easymock.tests2.CompareToTest.testGreateOrEqual":15,"org.easymock.tests.ObjectMethodsTest.testHashCode":331,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":489,"org.easymock.tests2.NameTest.nameForNiceMock":77,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":223,"org.easymock.tests2.DependencyTest.testInterfaceMocking":261,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":487,"org.easymock.samples.ExampleTest.addDocument":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":172,"org.easymock.tests2.DelegateToTest.testStubDelegate":226,"org.easymock.tests2.AnswerTest.stubAnswer":202,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":112,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":494,"org.easymock.tests.UsageVarargTest.varargLongAccepted":354,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndReturnTest.floatType":311,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":327,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":273,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":127,"org.easymock.tests.UsageThrowableTest.noUpperLimit":411,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":191,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":282,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":178,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":146,"org.easymock.tests2.SerializationTest.test":144,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":211,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":18,"org.easymock.tests2.UsageConstraintsTest.testSame":182,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":310,"org.easymock.samples.SupportTest.addDocument":141,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":158,"org.easymock.tests.GenericTest.testPackageScope":341,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":281,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":306,"org.easymock.tests2.NameTest.nameForMock":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":321,"org.easymock.tests2.UsageStrictMockTest.differentMethods":84,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":254,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":313,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":395,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":330,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":335,"org.easymock.tests2.MockedExceptionTest.testRealException":288,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":149,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":32,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":443,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":82,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":373,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":375,"org.easymock.tests2.NameTest.nameForStrictMock":76,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":242,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":174,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":249,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":147,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":5,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":20,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":58,"org.easymock.tests2.UsageStrictMockTest.range":31,"org.easymock.tests2.UsageConstraintsTest.lessThan":11,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":25,"org.easymock.tests2.CaptureTest.testCaptureRightOne":8,"org.easymock.tests2.UsageConstraintsTest.testOr":2,"org.easymock.tests.UsageRangeTest.combination":92,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":65,"org.easymock.tests.UsageTest.wrongArguments":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":159,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":337,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":322,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":21,"org.easymock.tests.UsageVarargTest.varargShortAccepted":353,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":119,"org.easymock.tests2.UsageConstraintsTest.cmpTo":185,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":200,"org.easymock.tests2.CompareToTest.testLessThan":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":433,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":232,"org.easymock.tests2.CaptureTest.testCaptureFromStub":216,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":363,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":59,"org.easymock.tests.UsageTest.unexpectedCallWithArray":34,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":41,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":480,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":323,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":113,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.samples.ExampleTest.addAndChangeDocument":135,"org.easymock.tests.UsageStrictMockTest.testVerify":462,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":138,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":461,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":454,"org.easymock.tests2.CompareToTest.testGreateThan":13,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":427,"org.easymock.tests.LimitationsTest.abstractClass":418,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":428,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":54,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":348}}]
