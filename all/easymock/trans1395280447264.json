[{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[30,31,32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + (org.easymock.internal.Range.toString())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[45,86],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[87],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[88,89,90,91],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[25],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[92,93,94],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:172","failures":[95],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[96,97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[31],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[15,98,99,100],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:773","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[101],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[102,103],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[104,105,106,107,108,109,110,111,112,113,114,115,15,98,99,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,33,133,34,35,36,37,134,135,136,38,39,137,40,138,139,140,141,142,41,143,144,145,42,43,146,147,44,148,149,150,45,151,152,153,154,155,156,157,16,17,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,0,46,47,48,49,183,184,185,50,186,187,188,189,95,96,21,190,51,191,1,2,3,4,5,6,7,8,192,9,10,11,12,13,193,194,195,196,197,198,199,200,201,27,202,203,52,204,53,205,206,207,208,54,209,210,211,88,212,213,214,101,215,216,217,218,219,220,221,55,222,223,224,225,226,89,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,90,256,56,257,57,58,59,60,61,258,259,260,261,262,263,264,265,266,267,268,269,28,28,29,29,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,97,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,62,63,317,64,318,319,65,66,67,320,321,322,68,323,69,70,324,325,326,71,72,327,328,329,330,331,73,332,333,334,335,30,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,102,378,379,103,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,86,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,74,430,431,432,433,91,434,435,436,437,438,439,440,441,442,443,444,445,446,75,76,77,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,78,467,468,469,79,470,80,81,82,83,84,85,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[184,231,232,233,234,277,288,418,419,420,421,422,423],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:362","sourceCode":"return this","type":"CtReturnImpl"},"failures":[134,135,208,54,211,88,212,213,218,219,221,55,223,224,229,230,59,60,280,318,319,69,378,75,78,83,84,483,484],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[1,2,3,4,10,11,54,209,211,88,212,213,214,101,215,216,224,225,228,229],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[109,110,33,34,35,36,37,38,39,137,40,41,144,42,43,147,44,45,152,153,156,157,46,47,48,49,185,50,186,95,96,190,51,191,194,203,53,206,54,55,240,241,56,57,58,59,60,61,97,291,292,293,294,295,62,63,317,64,65,66,67,68,69,70,326,71,72,73,338,375,376,413,416,417,74,441,442,443,75,76,77,453,456,457,458,78,79,80,81,82,83,84,85],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl() : org.easymock.EasyMockSupport.createNiceControl()","type":"CtLocalVariableImpl"},"failures":[164,185,189,199,207,231],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:39","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(float.float, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[487],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:243","failures":[128,129,151,152,153,154,155,156,157,16,161,164,174,180,50,188,95,96,51,193,194,195,196,197,198,201,52,204,53,249,90,57,59,60,259,261,263,264,266,270,274,275,278,285,286,296,297,298,299,300,301,304,305,307,308,309,311,312,313,314,315,327,328,329,330,331,353,384,385,410,435,437,447,448,449,450,78,467,468,469,81,83,84,475,476,478],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[33,135,184,231,232,233,234,277,280,288,289,62,319,320,321,322,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,102,379,103,380,381,382,383,418,419,420,421,422,423,76,455,459,460,461],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[15,98,99,116,117,118,119,120,123,124,125,128,130,132,133,34,36,37,136,137,45,152,153,156,157,16,46,47,48,49,183,184,185,188,189,1,2,3,4,6,7,8,192,9,10,13,193,195,196,197,198,201,203,204,207,208,54,209,211,88,212,213,214,101,216,217,218,219,220,221,55,222,223,224,225,226,227,228,229,230,231,232,233,234,248,249,252,253,254,256,257,57,60,61,261,262,263,264,265,266,268,276,279,280,281,282,283,284,286,287,290,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,63,68,323,69,70,324,325,327,328,329,330,331,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,378,379,384,385,418,419,420,421,422,423,424,425,426,428,429,430,431,432,433,91,435,436,440,75,76,77,447,448,449,450,451,457,462,463,464,465,466,78,467,468,469,470,81,84,85,471,475,476,478],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.RecordState:173","failures":[249],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:135","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[488,489,490],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[400],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[491,207,222,227],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1764","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[104,105,106,108,109,110,111,112,115,15,98,99,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,33,133,34,35,36,37,134,135,136,38,39,137,40,138,139,140,141,142,41,143,144,145,42,43,146,147,44,148,149,150,45,151,152,153,154,155,156,157,16,17,492,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,0,46,47,48,49,183,184,185,18,50,186,19,187,188,189,95,20,96,21,190,51,23,191,493,1,2,3,4,5,6,7,8,192,9,10,11,12,13,193,194,195,196,197,198,199,200,201,27,202,203,52,204,53,205,206,207,208,54,209,211,88,212,213,214,101,215,216,217,218,219,220,221,55,222,223,224,225,226,89,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,246,247,248,249,250,251,252,253,254,255,90,256,56,257,57,58,59,60,61,258,259,260,261,262,263,264,265,266,267,268,269,28,28,29,29,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,97,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,62,63,317,64,318,319,65,66,67,320,321,322,68,323,69,70,324,325,326,71,72,327,328,329,330,331,73,93,332,333,334,335,30,336,94,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,102,378,379,103,380,381,382,383,384,385,401,407,410,412,413,414,415,416,418,419,420,421,422,423,424,425,426,428,429,74,430,431,432,433,91,434,435,436,437,438,439,440,441,442,443,444,445,446,75,76,77,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,78,467,468,469,79,470,80,81,82,83,84,85,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[102,103],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[203,59,60,83,84],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[104,105,106,107,108,109,110,111,112,113,114,115,15,98,99,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,33,133,34,35,36,37,134,135,136,38,39,137,40,138,494,495,496,139,140,141,142,41,143,144,145,42,43,146,147,44,148,149,150,45,151,152,153,154,497,155,156,157,498,16,17,492,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,0,46,47,48,49,183,184,185,18,50,186,19,187,188,189,95,20,96,499,21,190,51,23,191,493,1,2,3,4,5,6,7,8,192,9,10,11,12,13,193,194,195,196,197,198,199,200,201,27,202,203,52,204,53,205,206,207,208,54,209,210,211,88,212,213,214,101,215,216,217,218,219,220,221,55,222,223,224,225,226,89,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,90,256,56,257,57,58,59,60,61,258,259,260,261,262,263,264,265,266,267,268,269,28,29,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,97,500,501,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,62,63,317,64,318,319,65,66,67,320,321,322,68,323,69,70,324,325,326,71,72,327,328,329,330,331,73,93,332,333,334,335,30,336,94,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,102,378,379,103,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,86,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,74,430,431,432,433,91,434,435,436,437,438,439,440,441,442,443,444,445,446,75,76,77,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,502,462,463,464,465,466,78,467,468,469,79,470,80,81,82,83,84,85,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[333,336],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[109,15,98,120,124,128,129,33,133,34,36,134,135,136,137,40,142,41,143,144,145,42,43,146,147,44,148,149,151,152,153,154,155,156,157,16,161,164,174,180,184,50,188,95,96,51,1,2,4,5,8,192,9,10,12,13,193,194,195,196,197,198,201,52,204,53,207,208,54,209,211,88,212,213,214,101,216,217,218,219,220,221,55,222,223,224,225,226,227,228,229,230,233,240,249,253,254,255,90,256,57,59,60,259,261,263,264,266,270,273,274,275,276,278,279,280,286,287,290,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,62,63,318,319,67,327,328,329,330,331,353,102,379,103,380,381,382,383,384,385,410,435,439,75,77,457,78,467,468,469,81,83,84,475,476,478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[341],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[109,15,98,99,116,117,118,119,120,121,122,123,124,125,128,129,130,132,33,133,34,35,36,37,134,135,136,38,39,137,40,142,41,143,144,145,42,43,146,147,44,148,149,150,45,151,152,153,154,155,156,157,16,161,164,174,180,46,47,48,49,183,184,185,50,188,189,95,96,190,51,191,1,2,3,4,5,6,7,8,192,9,10,11,12,13,193,194,195,196,197,198,199,201,203,52,204,53,207,208,54,209,211,88,212,213,214,101,215,216,217,218,219,220,221,55,222,223,224,225,226,89,227,228,229,230,231,232,233,234,240,247,248,249,250,251,252,253,254,255,90,256,56,257,57,58,59,60,61,258,259,260,261,262,263,264,265,266,268,269,28,28,29,29,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,62,63,317,64,318,319,65,66,67,320,321,322,68,69,70,324,325,326,71,72,327,328,329,330,331,73,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,102,378,379,103,380,381,382,383,384,385,401,407,410,418,419,420,421,422,423,424,425,426,428,429,74,430,431,432,433,91,435,436,437,75,76,77,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,78,467,468,469,79,470,80,81,82,83,84,85,471,474,475,476,478,482,483,484,485,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":209,"org.easymock.tests2.UsageTest.argumentsOrdered":39,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":62,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":148,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":396,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":37,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":260,"org.easymock.tests2.DelegateToTest.testReturnException":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":419,"org.easymock.tests.MockingTest.testPartialClassMocking":475,"org.easymock.tests.MockClassControlTest.testToString":441,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":0,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":168,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":164,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":355,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":129,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":101,"org.easymock.tests2.UsageTest.wrongArguments":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":286,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":115,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":283,"org.easymock.samples.ExampleTest.answerVsDelegate":262,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":293,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":480,"org.easymock.tests2.UsageConstraintsTest.testNull":88,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":196,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":446,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":44,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":290,"org.easymock.tests.UsageTest.moreThanOneArgument":63,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":374,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":449,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":482,"org.easymock.tests.UsageTest.argumentsOrdered":66,"org.easymock.tests.UsageVarargTest.varargIntAccepted":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":400,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":327,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":185,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":495,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":245,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":331,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":109,"org.easymock.tests.ReplayStateInvalidUsageTest.times":347,"org.easymock.tests2.DependencyTest.testClassMocking":126,"org.easymock.tests2.AnswerTest.answer":120,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":402,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":119,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":501,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":19,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":448,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":468,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":145,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":486,"org.easymock.tests2.DelegateToTest.testDelegate":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":370,"org.easymock.tests.LimitationsTest.mockFinalMethod":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":422,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":466,"org.easymock.tests2.DependencyTest.testClassMockingSupport":127,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":375,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":368,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":117,"org.easymock.tests.UsageThrowableTest.throwError":102,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":341,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":292,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":502,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":451,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":182,"org.easymock.samples.PartialClassMockTest.testGetArea":270,"org.easymock.tests.MockingTest.testInterfaceMocking":477,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":342,"org.easymock.tests2.CompareToTest.testLessOrEqual":491,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":328,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":274,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":169,"org.easymock.tests2.UsageTest.niceToStrict":36,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":356,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":188,"org.easymock.tests2.MockBuilderTest.testCreateMock":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":177,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":112,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":364,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":42,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":500,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":461,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":281,"org.easymock.tests.UsageOverloadedMethodTest.overloading":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":173,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":455,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":220,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":307,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":31,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":219,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":9,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":427,"org.easymock.tests.MockClassControlTest.testEquals":445,"org.easymock.tests2.EasyMockSupportClassTest.testAll":161,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":436,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":372,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":464,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":118,"org.easymock.tests2.CaptureTest.testCaptureAll":2,"org.easymock.tests.MockNameTest.defaultName":338,"org.easymock.tests2.UsageConstraintsTest.testMatches":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":450,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":339,"org.easymock.samples.ExampleTest.voteForRemovals":266,"org.easymock.tests.UsageVarargTest.allKinds":91,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":465,"org.easymock.samples.BasicClassMockTest.testPrintContent":272,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":382,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":423,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":242,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":251,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":487,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":94,"org.easymock.tests2.UsageConstraintsTest.greaterThan":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":162,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":467,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":53,"org.easymock.samples.ExampleTest.voteForRemoval":263,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":337,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":205,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":254,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":294,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":496,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":199,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":33,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":316,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":143,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":418,"org.easymock.tests2.CaptureTest.testCaptureFirst":13,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":144,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":40,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":458,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":303,"org.easymock.tests2.UsageTest.moreThanOneArgument":34,"org.easymock.tests2.CaptureTest.testCapture2_2446744":12,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":403,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":51,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":433,"org.easymock.tests.GenericTest.testBridgedEquals":438,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":71,"org.easymock.tests.UsageExpectAndReturnTest.longType":299,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":462,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":142,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":373,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":89,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":285,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":447,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":321,"org.easymock.tests.UsageCallCountTest.tooManyCalls":72,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":178,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":304,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":114,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":360,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":381,"org.easymock.tests.MockingTest.testNiceClassMocking":481,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":152,"org.easymock.tests.MockingTest.testClassMocking":473,"org.easymock.tests2.UsageConstraintsTest.testContains":218,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":323,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":233,"org.easymock.tests2.UsageConstraintsTest.testFind":211,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":280,"org.easymock.tests.MockTypeTest.fromEasyMockClass":291,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":132,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":79,"org.easymock.tests.UsageExpectAndReturnTest.object":306,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":113,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":147,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":429,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":415,"org.easymock.tests.UsageTest.exactCallCountByLastCall":67,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":483,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":409,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":17,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":424,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":312,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":454,"org.easymock.tests.MockClassControlTest.testHashCode":444,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":236,"org.easymock.tests2.EasyMockSupportTest.testVerify":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":171,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":484,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":460,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":452,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":116,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":493,"org.easymock.tests.UsageVarargTest.varargCharAccepted":428,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":93,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":408,"org.easymock.tests2.UsageTest.openCallCountByLastCall":134,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":488,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":149,"org.easymock.tests.DefaultClassInstantiatorTest.object":332,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":459,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":172,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":362,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":107,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":235,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":443,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":52,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":361,"org.easymock.tests.CapturesMatcherTest.test":14,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":313,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":320,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":180,"org.easymock.tests2.UsageTest.resumeIfFailure":137,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":97,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":494,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":421,"org.easymock.tests2.StubTest.stubWithReturnValue":184,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":20,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":227,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":305,"org.easymock.tests2.SerializationTest.testAllMockedMethod":99,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":401,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":26,"org.easymock.samples.SupportTest.voteForRemovals":259,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":434,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":238,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":367,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":100,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":407,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":121,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":411,"org.easymock.tests.UsageExpectAndThrowTest.object":365,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":225,"org.easymock.tests2.DelegateToTest.testWrongClass":250,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":384,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":385,"org.easymock.samples.ConstructorCalledMockTest.testTax":28,"org.easymock.tests.UsageStrictMockTest.range":83,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":140,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":146,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":151,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":366,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":158,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":65,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":282,"org.easymock.tests2.CaptureTest.testCaptureNone":192,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":275,"org.easymock.tests.UsageUnorderedTest.message":73,"org.easymock.tests.UsageVerifyTest.twoReturns":77,"org.easymock.tests.UsageVarargTest.varargByteAccepted":432,"org.easymock.tests2.ThreadingTest.testThreadSafe":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":175,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":325,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":416,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":271,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":405,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":289,"org.easymock.tests2.UsageConstraintsTest.any":216,"org.easymock.tests2.StubTest.stub":183,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":346,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":406,"org.easymock.tests.UsageExpectAndThrowTest.longType":358,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":30,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":345,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":58,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":240,"org.easymock.tests.LimitationsTest.mockNativeMethod":353,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":437,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":315,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":106,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":61,"org.easymock.tests2.NameTest.nameForMocksControl":49,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":87,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":108,"org.easymock.tests2.MockedExceptionTest.testMockedException":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":163,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":319,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":478,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":131,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":359,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":193,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":96,"org.easymock.tests.MockingTest.testNicePartialClassMocking":476,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":198,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":104,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":376,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":157,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":214,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":226,"org.easymock.tests.MockingTest.testTwoMocks":474,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":498,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":296,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":363,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":38,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":229,"org.easymock.samples.ExampleTest.removeNonExistingDocument":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":111,"org.easymock.tests.UsageStrictMockTest.differentMethods":84,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":237,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":334,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":255,"org.easymock.tests2.MockBuilderTest.testCreateMockString":191,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":165,"org.easymock.tests.UsageExpectAndThrowTest.floatType":357,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":160,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":492,"org.easymock.tests.UsageVerifyTest.twoThrows":76,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":174,"org.easymock.samples.ExampleTest.voteAgainstRemoval":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":397,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":273,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":204,"org.easymock.tests.LimitationsTest.privateConstructor":352,"org.easymock.tests2.UsageConstraintsTest.testNotNull":228,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":231,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":383,"org.easymock.tests2.UsageTest.defaultResetToNice":136,"org.easymock.samples.ExampleTest.voteAgainstRemovals":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":311,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":105,"org.easymock.tests.UsageVarargTest.differentLength":74,"org.easymock.tests2.CallbackTest.callback":45,"org.easymock.tests2.UsageConstraintsTest.equals":210,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":27,"org.easymock.tests.UsageTest.openCallCountByLastCall":318,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":207,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":288,"org.easymock.tests.UsageCallCountTest.tooFewCalls":70,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":154,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":284,"org.easymock.tests.UsageThrowableTest.throwCheckedException":380,"org.easymock.tests.MockingTest.testStrictClassMocking":472,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":156,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":277,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":110,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":348,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":155,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":125,"org.easymock.tests.ObjectMethodsTest.testHashCode":414,"org.easymock.tests2.NameTest.nameForNiceMock":48,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":256,"org.easymock.tests2.DependencyTest.testInterfaceMocking":128,"org.easymock.samples.ExampleTest.addDocument":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":181,"org.easymock.tests2.DelegateToTest.testStubDelegate":249,"org.easymock.tests2.AnswerTest.stubAnswer":124,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":81,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":499,"org.easymock.tests.UsageVarargTest.varargLongAccepted":431,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":395,"org.easymock.tests.UsageExpectAndReturnTest.floatType":298,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":314,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":16,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":29,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":456,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":223,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":244,"org.easymock.tests.UsageThrowableTest.noUpperLimit":378,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":208,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":138,"org.easymock.tests2.SerializationTest.test":98,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":6,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":32,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":333,"org.easymock.tests2.UsageConstraintsTest.testSame":212,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":297,"org.easymock.samples.SupportTest.addDocument":258,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":92,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":497,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":166,"org.easymock.tests.GenericTest.testPackageScope":435,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":390,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":243,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":479,"org.easymock.tests2.NameTest.nameForMock":46,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":308,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":23,"org.easymock.tests2.UsageStrictMockTest.differentMethods":60,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":202,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":300,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":369,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":412,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":469,"org.easymock.tests2.MockedExceptionTest.testRealException":234,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":141,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":25,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":287,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":350,"org.easymock.tests2.NameTest.nameForStrictMock":47,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":187,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":489,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":130,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":197,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":139,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":224,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":335,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":50,"org.easymock.tests2.UsageStrictMockTest.range":59,"org.easymock.tests2.UsageConstraintsTest.lessThan":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":394,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":170,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.UsageConstraintsTest.testOr":213,"org.easymock.tests.UsageRangeTest.combination":78,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":194,"org.easymock.tests.UsageTest.wrongArguments":64,"org.easymock.tests2.MockBuilderTest.testWithConstructor":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":167,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":440,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":387,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":309,"org.easymock.tests.UsageVarargTest.varargShortAccepted":430,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":336,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":326,"org.easymock.tests2.UsageConstraintsTest.cmpTo":217,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":389,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":135,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":340,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":186,"org.easymock.tests.UsageTest.unexpectedCallWithArray":317,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":80,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":324,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":22,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":310,"org.easymock.tests2.UsageConstraintsTest.constraints":54,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":82,"org.easymock.samples.ExampleTest.addAndChangeDocument":268,"org.easymock.tests.UsageStrictMockTest.testVerify":471,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":269,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":470,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":463,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":329,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":302,"org.easymock.tests.LimitationsTest.abstractClass":351,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":457,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":330,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":425,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":43}}]
